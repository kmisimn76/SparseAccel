-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv_sysarr_runWeight2Reg is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    weight_l2_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_0_ce0 : OUT STD_LOGIC;
    weight_l2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_0_ce1 : OUT STD_LOGIC;
    weight_l2_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_1_ce0 : OUT STD_LOGIC;
    weight_l2_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_1_ce1 : OUT STD_LOGIC;
    weight_l2_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_2_ce0 : OUT STD_LOGIC;
    weight_l2_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_2_ce1 : OUT STD_LOGIC;
    weight_l2_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_3_ce0 : OUT STD_LOGIC;
    weight_l2_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_3_ce1 : OUT STD_LOGIC;
    weight_l2_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_4_ce0 : OUT STD_LOGIC;
    weight_l2_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_4_ce1 : OUT STD_LOGIC;
    weight_l2_4_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_5_ce0 : OUT STD_LOGIC;
    weight_l2_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_5_ce1 : OUT STD_LOGIC;
    weight_l2_5_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_6_ce0 : OUT STD_LOGIC;
    weight_l2_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_6_ce1 : OUT STD_LOGIC;
    weight_l2_6_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_7_ce0 : OUT STD_LOGIC;
    weight_l2_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_7_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_7_ce1 : OUT STD_LOGIC;
    weight_l2_7_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_8_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_8_ce0 : OUT STD_LOGIC;
    weight_l2_8_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_8_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_8_ce1 : OUT STD_LOGIC;
    weight_l2_8_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_9_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_9_ce0 : OUT STD_LOGIC;
    weight_l2_9_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_9_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_9_ce1 : OUT STD_LOGIC;
    weight_l2_9_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_10_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_10_ce0 : OUT STD_LOGIC;
    weight_l2_10_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_10_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_10_ce1 : OUT STD_LOGIC;
    weight_l2_10_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_11_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_11_ce0 : OUT STD_LOGIC;
    weight_l2_11_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_11_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_11_ce1 : OUT STD_LOGIC;
    weight_l2_11_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_12_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_12_ce0 : OUT STD_LOGIC;
    weight_l2_12_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_12_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_12_ce1 : OUT STD_LOGIC;
    weight_l2_12_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_13_ce0 : OUT STD_LOGIC;
    weight_l2_13_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_13_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_13_ce1 : OUT STD_LOGIC;
    weight_l2_13_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_14_ce0 : OUT STD_LOGIC;
    weight_l2_14_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_14_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_14_ce1 : OUT STD_LOGIC;
    weight_l2_14_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_15_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_15_ce0 : OUT STD_LOGIC;
    weight_l2_15_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_15_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_15_ce1 : OUT STD_LOGIC;
    weight_l2_15_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    C_L2_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    C_L2_empty_n : IN STD_LOGIC;
    C_L2_read : OUT STD_LOGIC;
    R_L2_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    R_L2_empty_n : IN STD_LOGIC;
    R_L2_read : OUT STD_LOGIC;
    S_L2_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    S_L2_empty_n : IN STD_LOGIC;
    S_L2_read : OUT STD_LOGIC;
    ko_3_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    ko_3_empty_n : IN STD_LOGIC;
    ko_3_read : OUT STD_LOGIC;
    co_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    co_empty_n : IN STD_LOGIC;
    co_read : OUT STD_LOGIC;
    ro_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ro_empty_n : IN STD_LOGIC;
    ro_read : OUT STD_LOGIC;
    so_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    so_empty_n : IN STD_LOGIC;
    so_read : OUT STD_LOGIC;
    ko_3_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    ko_3_out_full_n : IN STD_LOGIC;
    ko_3_out_write : OUT STD_LOGIC;
    co_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    co_out_full_n : IN STD_LOGIC;
    co_out_write : OUT STD_LOGIC;
    ro_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ro_out_full_n : IN STD_LOGIC;
    ro_out_write : OUT STD_LOGIC;
    so_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    so_out_full_n : IN STD_LOGIC;
    so_out_write : OUT STD_LOGIC;
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_32 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_33 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_34 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_35 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_36 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_37 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_38 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_39 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_40 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_41 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_42 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_43 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_44 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_45 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_46 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_47 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_48 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_49 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_50 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_51 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_52 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_53 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_54 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_55 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_56 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_57 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_58 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_59 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_60 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_61 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_62 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_63 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_64 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_65 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_66 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_67 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_68 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_69 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_70 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_71 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_72 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_73 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_74 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_75 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_76 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_77 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_78 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_79 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_80 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_81 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_82 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_83 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_84 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_85 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_86 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_87 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_88 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_89 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_90 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_91 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_92 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_93 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_94 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_95 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_96 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_97 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_98 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_99 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_100 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_101 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_102 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_103 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_104 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_105 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_106 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_107 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_108 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_109 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_110 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_111 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_112 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_113 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_114 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_115 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_116 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_117 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_118 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_119 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_120 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_121 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_122 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_123 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_124 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_125 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_126 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_127 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_128 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_129 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_130 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_131 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_132 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_133 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_134 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_135 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_136 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_137 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_138 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_139 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_140 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_141 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_142 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_143 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_144 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_145 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_146 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_147 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_148 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_149 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_150 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_151 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_152 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_153 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_154 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_155 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_156 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_157 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_158 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_159 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_160 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_161 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_162 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_163 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_164 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_165 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_166 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_167 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_168 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_169 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_170 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_171 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_172 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_173 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_174 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_175 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_176 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_177 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_178 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_179 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_180 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_181 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_182 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_183 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_184 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_185 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_186 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_187 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_188 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_189 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_190 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_191 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_192 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_193 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_194 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_195 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_196 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_197 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_198 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_199 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_200 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_201 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_202 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_203 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_204 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_205 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_206 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_207 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_208 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_209 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_210 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_211 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_212 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_213 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_214 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_215 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_216 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_217 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_218 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_219 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_220 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_221 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_222 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_223 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_224 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_225 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_226 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_227 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_228 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_229 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_230 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_231 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_232 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_233 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_234 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_235 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_236 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_237 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_238 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_239 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_240 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_241 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_242 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_243 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_244 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_245 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_246 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_247 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_248 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_249 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_250 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_251 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_252 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_253 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_254 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_255 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of Conv_sysarr_runWeight2Reg is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv12_A : STD_LOGIC_VECTOR (11 downto 0) := "000000001010";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv12_C : STD_LOGIC_VECTOR (11 downto 0) := "000000001100";
    constant ap_const_lv12_D : STD_LOGIC_VECTOR (11 downto 0) := "000000001101";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_F : STD_LOGIC_VECTOR (11 downto 0) := "000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal C_L2_blk_n : STD_LOGIC;
    signal R_L2_blk_n : STD_LOGIC;
    signal S_L2_blk_n : STD_LOGIC;
    signal ko_3_blk_n : STD_LOGIC;
    signal co_blk_n : STD_LOGIC;
    signal ro_blk_n : STD_LOGIC;
    signal so_blk_n : STD_LOGIC;
    signal ko_3_out_blk_n : STD_LOGIC;
    signal co_out_blk_n : STD_LOGIC;
    signal ro_out_blk_n : STD_LOGIC;
    signal so_out_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal R_L2_read_reg_4396 : STD_LOGIC_VECTOR (11 downto 0);
    signal S_L2_read_reg_4416 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln879_fu_2388_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln879_reg_4441 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln881_fu_2392_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln881_reg_4461 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_fu_2396_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_reg_4481 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_fu_2400_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_reg_4486 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_4179_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul4_i_i_reg_4504 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul52_i_i_fu_2407_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of mul52_i_i_fu_2407_p2 : signal is "no";
    signal mul58_i_i_fu_2418_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul58_i_i_fu_2418_p2 : signal is "no";
    signal mul512_i_i_fu_2428_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul512_i_i_fu_2428_p2 : signal is "no";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal mul516_i_i_fu_2438_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul516_i_i_fu_2438_p2 : signal is "no";
    signal mul520_i_i_fu_2448_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul520_i_i_fu_2448_p2 : signal is "no";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal mul524_i_i_fu_2458_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul524_i_i_fu_2458_p2 : signal is "no";
    signal mul528_i_i_fu_2468_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul528_i_i_fu_2468_p2 : signal is "no";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal mul532_i_i_fu_2478_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul532_i_i_fu_2478_p2 : signal is "no";
    signal mul536_i_i_fu_2488_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul536_i_i_fu_2488_p2 : signal is "no";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal mul540_i_i_fu_2498_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul540_i_i_fu_2498_p2 : signal is "no";
    signal mul544_i_i_fu_2508_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul544_i_i_fu_2508_p2 : signal is "no";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal mul548_i_i_fu_2518_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul548_i_i_fu_2518_p2 : signal is "no";
    signal mul552_i_i_fu_2528_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul552_i_i_fu_2528_p2 : signal is "no";
    signal mul556_i_i_fu_2538_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul556_i_i_fu_2538_p2 : signal is "no";
    signal mul560_i_i_fu_2548_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul560_i_i_fu_2548_p2 : signal is "no";
    signal mul564_i_i_fu_2558_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of mul564_i_i_fu_2558_p2 : signal is "no";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal weight_l2_0_load_reg_4762 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal weight_l2_1_load_reg_4767 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_reg_4772 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_reg_4777 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_reg_4782 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_reg_4787 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_reg_4792 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_reg_4797 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_reg_4802 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_reg_4807 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_reg_4812 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_reg_4817 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_reg_4822 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_reg_4827 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_reg_4832 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_reg_4837 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_1_reg_4842 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_load_1_reg_4847 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_1_reg_4852 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_1_reg_4857 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_1_reg_4862 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_1_reg_4867 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_1_reg_4872 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_1_reg_4877 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_1_reg_4882 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_1_reg_4887 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_1_reg_4892 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_1_reg_4897 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_1_reg_4902 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_1_reg_4907 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_1_reg_4912 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_1_reg_4917 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_2_reg_5082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal weight_l2_1_load_2_reg_5087 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_2_reg_5092 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_2_reg_5097 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_2_reg_5102 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_2_reg_5107 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_2_reg_5112 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_2_reg_5117 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_2_reg_5122 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_2_reg_5127 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_2_reg_5132 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_2_reg_5137 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_2_reg_5142 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_2_reg_5147 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_2_reg_5152 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_2_reg_5157 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_3_reg_5162 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_load_3_reg_5167 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_3_reg_5172 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_3_reg_5177 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_3_reg_5182 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_3_reg_5187 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_3_reg_5192 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_3_reg_5197 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_3_reg_5202 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_3_reg_5207 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_3_reg_5212 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_3_reg_5217 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_3_reg_5222 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_3_reg_5227 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_3_reg_5232 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_3_reg_5237 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_4_reg_5402 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal weight_l2_1_load_4_reg_5407 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_4_reg_5412 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_4_reg_5417 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_4_reg_5422 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_4_reg_5427 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_4_reg_5432 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_4_reg_5437 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_4_reg_5442 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_4_reg_5447 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_4_reg_5452 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_4_reg_5457 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_4_reg_5462 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_4_reg_5467 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_4_reg_5472 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_4_reg_5477 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_5_reg_5482 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_load_5_reg_5487 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_5_reg_5492 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_5_reg_5497 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_5_reg_5502 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_5_reg_5507 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_5_reg_5512 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_5_reg_5517 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_5_reg_5522 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_5_reg_5527 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_5_reg_5532 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_5_reg_5537 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_5_reg_5542 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_5_reg_5547 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_5_reg_5552 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_5_reg_5557 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_6_reg_5722 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal weight_l2_1_load_6_reg_5727 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_6_reg_5732 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_6_reg_5737 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_6_reg_5742 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_6_reg_5747 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_6_reg_5752 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_6_reg_5757 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_6_reg_5762 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_6_reg_5767 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_6_reg_5772 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_6_reg_5777 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_6_reg_5782 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_6_reg_5787 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_6_reg_5792 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_6_reg_5797 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_7_reg_5802 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_load_7_reg_5807 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_7_reg_5812 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_7_reg_5817 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_7_reg_5822 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_7_reg_5827 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_7_reg_5832 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_7_reg_5837 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_7_reg_5842 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_7_reg_5847 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_7_reg_5852 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_7_reg_5857 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_7_reg_5862 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_7_reg_5867 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_7_reg_5872 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_7_reg_5877 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_8_reg_6042 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal weight_l2_1_load_8_reg_6047 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_8_reg_6052 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_8_reg_6057 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_8_reg_6062 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_8_reg_6067 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_8_reg_6072 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_8_reg_6077 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_8_reg_6082 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_8_reg_6087 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_8_reg_6092 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_8_reg_6097 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_8_reg_6102 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_8_reg_6107 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_8_reg_6112 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_8_reg_6117 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_9_reg_6122 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_load_9_reg_6127 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_9_reg_6132 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_9_reg_6137 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_9_reg_6142 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_9_reg_6147 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_9_reg_6152 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_9_reg_6157 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_9_reg_6162 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_9_reg_6167 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_9_reg_6172 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_9_reg_6177 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_9_reg_6182 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_9_reg_6187 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_9_reg_6192 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_9_reg_6197 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_4363_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add12_12_i_i_reg_6362 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4370_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add12_13_i_i_reg_6367 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4377_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add12_14_i_i_reg_6372 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4384_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add12_15_i_i_reg_6377 : STD_LOGIC_VECTOR (11 downto 0);
    signal weight_l2_0_load_10_reg_6382 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal weight_l2_1_load_10_reg_6387 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_10_reg_6392 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_10_reg_6397 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_10_reg_6402 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_10_reg_6407 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_10_reg_6412 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_10_reg_6417 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_10_reg_6422 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_10_reg_6427 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_10_reg_6432 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_10_reg_6437 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_10_reg_6442 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_10_reg_6447 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_10_reg_6452 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_10_reg_6457 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_11_reg_6462 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_load_11_reg_6467 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_11_reg_6472 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_11_reg_6477 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_11_reg_6482 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_11_reg_6487 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_11_reg_6492 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_11_reg_6497 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_11_reg_6502 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_11_reg_6507 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_11_reg_6512 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_11_reg_6517 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_11_reg_6522 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_11_reg_6527 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_11_reg_6532 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_11_reg_6537 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_12_reg_6702 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal weight_l2_1_load_12_reg_6707 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_12_reg_6712 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_12_reg_6717 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_12_reg_6722 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_12_reg_6727 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_12_reg_6732 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_12_reg_6737 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_12_reg_6742 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_12_reg_6747 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_12_reg_6752 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_12_reg_6757 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_12_reg_6762 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_12_reg_6767 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_12_reg_6772 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_12_reg_6777 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_load_13_reg_6782 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_load_13_reg_6787 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_load_13_reg_6792 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_load_13_reg_6797 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_4_load_13_reg_6802 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_5_load_13_reg_6807 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_6_load_13_reg_6812 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_7_load_13_reg_6817 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_8_load_13_reg_6822 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_9_load_13_reg_6827 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_10_load_13_reg_6832 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_11_load_13_reg_6837 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_12_load_13_reg_6842 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_13_load_13_reg_6847 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_14_load_13_reg_6852 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_15_load_13_reg_6857 : STD_LOGIC_VECTOR (7 downto 0);
    signal idxprom13_i_i_fu_2563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_1_i_i_fu_2582_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_2_i_i_fu_2601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_3_i_i_fu_2620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_4_i_i_fu_2639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_5_i_i_fu_2658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_6_i_i_fu_2677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_7_i_i_fu_2696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_8_i_i_fu_2715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_9_i_i_fu_2734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_10_i_i_fu_2753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_11_i_i_fu_2772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_12_i_i_fu_2791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_13_i_i_fu_2810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_14_i_i_fu_2829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom13_15_i_i_fu_2848_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln873_fu_2383_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln873_fu_2383_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_1_fu_2412_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_2_fu_2423_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_3_fu_2433_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_4_fu_2443_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_5_fu_2453_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_6_fu_2463_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_7_fu_2473_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_8_fu_2483_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_9_fu_2493_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_10_fu_2503_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_11_fu_2513_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_12_fu_2523_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_13_fu_2533_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_14_fu_2543_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_15_fu_2553_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4217_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4225_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4243_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4251_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4269_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4277_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4315_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4323_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4331_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4339_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4347_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4355_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_4187_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4192_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4197_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4202_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4207_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4212_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4233_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4238_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4259_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4264_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4285_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4290_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4295_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4300_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4305_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4310_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_4179_ce : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component Conv_sysarr_mul_mul_12s_12s_12_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    mul_mul_12s_12s_12_4_1_U183 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ko_3_dout,
        din1 => C_L2_dout,
        ce => grp_fu_4179_ce,
        dout => grp_fu_4179_p2);

    mul_mul_12s_12s_12_4_1_U184 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul52_i_i_fu_2407_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4187_p2);

    mul_mul_12s_12s_12_4_1_U185 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul58_i_i_fu_2418_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4192_p2);

    mul_mul_12s_12s_12_4_1_U186 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul512_i_i_fu_2428_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4197_p2);

    mul_mul_12s_12s_12_4_1_U187 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul516_i_i_fu_2438_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4202_p2);

    mul_mul_12s_12s_12_4_1_U188 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul520_i_i_fu_2448_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4207_p2);

    mul_mul_12s_12s_12_4_1_U189 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul524_i_i_fu_2458_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4212_p2);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U190 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4187_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4217_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U191 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4192_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4225_p4);

    mul_mul_12s_12s_12_4_1_U192 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul528_i_i_fu_2468_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4233_p2);

    mul_mul_12s_12s_12_4_1_U193 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul532_i_i_fu_2478_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4238_p2);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U194 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4197_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4243_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U195 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4202_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4251_p4);

    mul_mul_12s_12s_12_4_1_U196 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul536_i_i_fu_2488_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4259_p2);

    mul_mul_12s_12s_12_4_1_U197 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul540_i_i_fu_2498_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4264_p2);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U198 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4207_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4269_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U199 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4212_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4277_p4);

    mul_mul_12s_12s_12_4_1_U200 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul544_i_i_fu_2508_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4285_p2);

    mul_mul_12s_12s_12_4_1_U201 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul548_i_i_fu_2518_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4290_p2);

    mul_mul_12s_12s_12_4_1_U202 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul552_i_i_fu_2528_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4295_p2);

    mul_mul_12s_12s_12_4_1_U203 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul556_i_i_fu_2538_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4300_p2);

    mul_mul_12s_12s_12_4_1_U204 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul560_i_i_fu_2548_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4305_p2);

    mul_mul_12s_12s_12_4_1_U205 : component Conv_sysarr_mul_mul_12s_12s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => R_L2_read_reg_4396,
        din1 => mul564_i_i_fu_2558_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_4310_p2);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U206 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4233_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4315_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U207 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4238_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4323_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U208 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4259_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4331_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U209 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4264_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4339_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U210 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4285_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4347_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U211 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4290_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4355_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U212 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4295_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4363_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U213 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4300_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4370_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U214 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4305_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4377_p4);

    ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U215 : component Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln879_reg_4441,
        din1 => grp_fu_4310_p2,
        din2 => S_L2_read_reg_4416,
        din3 => trunc_ln881_reg_4461,
        ce => ap_const_logic_1,
        dout => grp_fu_4384_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                R_L2_read_reg_4396 <= R_L2_dout;
                S_L2_read_reg_4416 <= S_L2_dout;
                empty_reg_4481 <= empty_fu_2396_p1;
                trunc_ln879_reg_4441 <= trunc_ln879_fu_2388_p1;
                trunc_ln881_reg_4461 <= trunc_ln881_fu_2392_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                add12_12_i_i_reg_6362 <= grp_fu_4363_p4;
                add12_13_i_i_reg_6367 <= grp_fu_4370_p4;
                add12_14_i_i_reg_6372 <= grp_fu_4377_p4;
                add12_15_i_i_reg_6377 <= grp_fu_4384_p4;
                weight_l2_0_load_8_reg_6042 <= weight_l2_0_q1;
                weight_l2_0_load_9_reg_6122 <= weight_l2_0_q0;
                weight_l2_10_load_8_reg_6092 <= weight_l2_10_q1;
                weight_l2_10_load_9_reg_6172 <= weight_l2_10_q0;
                weight_l2_11_load_8_reg_6097 <= weight_l2_11_q1;
                weight_l2_11_load_9_reg_6177 <= weight_l2_11_q0;
                weight_l2_12_load_8_reg_6102 <= weight_l2_12_q1;
                weight_l2_12_load_9_reg_6182 <= weight_l2_12_q0;
                weight_l2_13_load_8_reg_6107 <= weight_l2_13_q1;
                weight_l2_13_load_9_reg_6187 <= weight_l2_13_q0;
                weight_l2_14_load_8_reg_6112 <= weight_l2_14_q1;
                weight_l2_14_load_9_reg_6192 <= weight_l2_14_q0;
                weight_l2_15_load_8_reg_6117 <= weight_l2_15_q1;
                weight_l2_15_load_9_reg_6197 <= weight_l2_15_q0;
                weight_l2_1_load_8_reg_6047 <= weight_l2_1_q1;
                weight_l2_1_load_9_reg_6127 <= weight_l2_1_q0;
                weight_l2_2_load_8_reg_6052 <= weight_l2_2_q1;
                weight_l2_2_load_9_reg_6132 <= weight_l2_2_q0;
                weight_l2_3_load_8_reg_6057 <= weight_l2_3_q1;
                weight_l2_3_load_9_reg_6137 <= weight_l2_3_q0;
                weight_l2_4_load_8_reg_6062 <= weight_l2_4_q1;
                weight_l2_4_load_9_reg_6142 <= weight_l2_4_q0;
                weight_l2_5_load_8_reg_6067 <= weight_l2_5_q1;
                weight_l2_5_load_9_reg_6147 <= weight_l2_5_q0;
                weight_l2_6_load_8_reg_6072 <= weight_l2_6_q1;
                weight_l2_6_load_9_reg_6152 <= weight_l2_6_q0;
                weight_l2_7_load_8_reg_6077 <= weight_l2_7_q1;
                weight_l2_7_load_9_reg_6157 <= weight_l2_7_q0;
                weight_l2_8_load_8_reg_6082 <= weight_l2_8_q1;
                weight_l2_8_load_9_reg_6162 <= weight_l2_8_q0;
                weight_l2_9_load_8_reg_6087 <= weight_l2_9_q1;
                weight_l2_9_load_9_reg_6167 <= weight_l2_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    c_reg_4486(11 downto 4) <= c_fu_2400_p3(11 downto 4);
                mul4_i_i_reg_4504 <= grp_fu_4179_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                weight_l2_0_load_10_reg_6382 <= weight_l2_0_q1;
                weight_l2_0_load_11_reg_6462 <= weight_l2_0_q0;
                weight_l2_10_load_10_reg_6432 <= weight_l2_10_q1;
                weight_l2_10_load_11_reg_6512 <= weight_l2_10_q0;
                weight_l2_11_load_10_reg_6437 <= weight_l2_11_q1;
                weight_l2_11_load_11_reg_6517 <= weight_l2_11_q0;
                weight_l2_12_load_10_reg_6442 <= weight_l2_12_q1;
                weight_l2_12_load_11_reg_6522 <= weight_l2_12_q0;
                weight_l2_13_load_10_reg_6447 <= weight_l2_13_q1;
                weight_l2_13_load_11_reg_6527 <= weight_l2_13_q0;
                weight_l2_14_load_10_reg_6452 <= weight_l2_14_q1;
                weight_l2_14_load_11_reg_6532 <= weight_l2_14_q0;
                weight_l2_15_load_10_reg_6457 <= weight_l2_15_q1;
                weight_l2_15_load_11_reg_6537 <= weight_l2_15_q0;
                weight_l2_1_load_10_reg_6387 <= weight_l2_1_q1;
                weight_l2_1_load_11_reg_6467 <= weight_l2_1_q0;
                weight_l2_2_load_10_reg_6392 <= weight_l2_2_q1;
                weight_l2_2_load_11_reg_6472 <= weight_l2_2_q0;
                weight_l2_3_load_10_reg_6397 <= weight_l2_3_q1;
                weight_l2_3_load_11_reg_6477 <= weight_l2_3_q0;
                weight_l2_4_load_10_reg_6402 <= weight_l2_4_q1;
                weight_l2_4_load_11_reg_6482 <= weight_l2_4_q0;
                weight_l2_5_load_10_reg_6407 <= weight_l2_5_q1;
                weight_l2_5_load_11_reg_6487 <= weight_l2_5_q0;
                weight_l2_6_load_10_reg_6412 <= weight_l2_6_q1;
                weight_l2_6_load_11_reg_6492 <= weight_l2_6_q0;
                weight_l2_7_load_10_reg_6417 <= weight_l2_7_q1;
                weight_l2_7_load_11_reg_6497 <= weight_l2_7_q0;
                weight_l2_8_load_10_reg_6422 <= weight_l2_8_q1;
                weight_l2_8_load_11_reg_6502 <= weight_l2_8_q0;
                weight_l2_9_load_10_reg_6427 <= weight_l2_9_q1;
                weight_l2_9_load_11_reg_6507 <= weight_l2_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                weight_l2_0_load_12_reg_6702 <= weight_l2_0_q1;
                weight_l2_0_load_13_reg_6782 <= weight_l2_0_q0;
                weight_l2_10_load_12_reg_6752 <= weight_l2_10_q1;
                weight_l2_10_load_13_reg_6832 <= weight_l2_10_q0;
                weight_l2_11_load_12_reg_6757 <= weight_l2_11_q1;
                weight_l2_11_load_13_reg_6837 <= weight_l2_11_q0;
                weight_l2_12_load_12_reg_6762 <= weight_l2_12_q1;
                weight_l2_12_load_13_reg_6842 <= weight_l2_12_q0;
                weight_l2_13_load_12_reg_6767 <= weight_l2_13_q1;
                weight_l2_13_load_13_reg_6847 <= weight_l2_13_q0;
                weight_l2_14_load_12_reg_6772 <= weight_l2_14_q1;
                weight_l2_14_load_13_reg_6852 <= weight_l2_14_q0;
                weight_l2_15_load_12_reg_6777 <= weight_l2_15_q1;
                weight_l2_15_load_13_reg_6857 <= weight_l2_15_q0;
                weight_l2_1_load_12_reg_6707 <= weight_l2_1_q1;
                weight_l2_1_load_13_reg_6787 <= weight_l2_1_q0;
                weight_l2_2_load_12_reg_6712 <= weight_l2_2_q1;
                weight_l2_2_load_13_reg_6792 <= weight_l2_2_q0;
                weight_l2_3_load_12_reg_6717 <= weight_l2_3_q1;
                weight_l2_3_load_13_reg_6797 <= weight_l2_3_q0;
                weight_l2_4_load_12_reg_6722 <= weight_l2_4_q1;
                weight_l2_4_load_13_reg_6802 <= weight_l2_4_q0;
                weight_l2_5_load_12_reg_6727 <= weight_l2_5_q1;
                weight_l2_5_load_13_reg_6807 <= weight_l2_5_q0;
                weight_l2_6_load_12_reg_6732 <= weight_l2_6_q1;
                weight_l2_6_load_13_reg_6812 <= weight_l2_6_q0;
                weight_l2_7_load_12_reg_6737 <= weight_l2_7_q1;
                weight_l2_7_load_13_reg_6817 <= weight_l2_7_q0;
                weight_l2_8_load_12_reg_6742 <= weight_l2_8_q1;
                weight_l2_8_load_13_reg_6822 <= weight_l2_8_q0;
                weight_l2_9_load_12_reg_6747 <= weight_l2_9_q1;
                weight_l2_9_load_13_reg_6827 <= weight_l2_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                weight_l2_0_load_1_reg_4842 <= weight_l2_0_q0;
                weight_l2_0_load_reg_4762 <= weight_l2_0_q1;
                weight_l2_10_load_1_reg_4892 <= weight_l2_10_q0;
                weight_l2_10_load_reg_4812 <= weight_l2_10_q1;
                weight_l2_11_load_1_reg_4897 <= weight_l2_11_q0;
                weight_l2_11_load_reg_4817 <= weight_l2_11_q1;
                weight_l2_12_load_1_reg_4902 <= weight_l2_12_q0;
                weight_l2_12_load_reg_4822 <= weight_l2_12_q1;
                weight_l2_13_load_1_reg_4907 <= weight_l2_13_q0;
                weight_l2_13_load_reg_4827 <= weight_l2_13_q1;
                weight_l2_14_load_1_reg_4912 <= weight_l2_14_q0;
                weight_l2_14_load_reg_4832 <= weight_l2_14_q1;
                weight_l2_15_load_1_reg_4917 <= weight_l2_15_q0;
                weight_l2_15_load_reg_4837 <= weight_l2_15_q1;
                weight_l2_1_load_1_reg_4847 <= weight_l2_1_q0;
                weight_l2_1_load_reg_4767 <= weight_l2_1_q1;
                weight_l2_2_load_1_reg_4852 <= weight_l2_2_q0;
                weight_l2_2_load_reg_4772 <= weight_l2_2_q1;
                weight_l2_3_load_1_reg_4857 <= weight_l2_3_q0;
                weight_l2_3_load_reg_4777 <= weight_l2_3_q1;
                weight_l2_4_load_1_reg_4862 <= weight_l2_4_q0;
                weight_l2_4_load_reg_4782 <= weight_l2_4_q1;
                weight_l2_5_load_1_reg_4867 <= weight_l2_5_q0;
                weight_l2_5_load_reg_4787 <= weight_l2_5_q1;
                weight_l2_6_load_1_reg_4872 <= weight_l2_6_q0;
                weight_l2_6_load_reg_4792 <= weight_l2_6_q1;
                weight_l2_7_load_1_reg_4877 <= weight_l2_7_q0;
                weight_l2_7_load_reg_4797 <= weight_l2_7_q1;
                weight_l2_8_load_1_reg_4882 <= weight_l2_8_q0;
                weight_l2_8_load_reg_4802 <= weight_l2_8_q1;
                weight_l2_9_load_1_reg_4887 <= weight_l2_9_q0;
                weight_l2_9_load_reg_4807 <= weight_l2_9_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                weight_l2_0_load_2_reg_5082 <= weight_l2_0_q1;
                weight_l2_0_load_3_reg_5162 <= weight_l2_0_q0;
                weight_l2_10_load_2_reg_5132 <= weight_l2_10_q1;
                weight_l2_10_load_3_reg_5212 <= weight_l2_10_q0;
                weight_l2_11_load_2_reg_5137 <= weight_l2_11_q1;
                weight_l2_11_load_3_reg_5217 <= weight_l2_11_q0;
                weight_l2_12_load_2_reg_5142 <= weight_l2_12_q1;
                weight_l2_12_load_3_reg_5222 <= weight_l2_12_q0;
                weight_l2_13_load_2_reg_5147 <= weight_l2_13_q1;
                weight_l2_13_load_3_reg_5227 <= weight_l2_13_q0;
                weight_l2_14_load_2_reg_5152 <= weight_l2_14_q1;
                weight_l2_14_load_3_reg_5232 <= weight_l2_14_q0;
                weight_l2_15_load_2_reg_5157 <= weight_l2_15_q1;
                weight_l2_15_load_3_reg_5237 <= weight_l2_15_q0;
                weight_l2_1_load_2_reg_5087 <= weight_l2_1_q1;
                weight_l2_1_load_3_reg_5167 <= weight_l2_1_q0;
                weight_l2_2_load_2_reg_5092 <= weight_l2_2_q1;
                weight_l2_2_load_3_reg_5172 <= weight_l2_2_q0;
                weight_l2_3_load_2_reg_5097 <= weight_l2_3_q1;
                weight_l2_3_load_3_reg_5177 <= weight_l2_3_q0;
                weight_l2_4_load_2_reg_5102 <= weight_l2_4_q1;
                weight_l2_4_load_3_reg_5182 <= weight_l2_4_q0;
                weight_l2_5_load_2_reg_5107 <= weight_l2_5_q1;
                weight_l2_5_load_3_reg_5187 <= weight_l2_5_q0;
                weight_l2_6_load_2_reg_5112 <= weight_l2_6_q1;
                weight_l2_6_load_3_reg_5192 <= weight_l2_6_q0;
                weight_l2_7_load_2_reg_5117 <= weight_l2_7_q1;
                weight_l2_7_load_3_reg_5197 <= weight_l2_7_q0;
                weight_l2_8_load_2_reg_5122 <= weight_l2_8_q1;
                weight_l2_8_load_3_reg_5202 <= weight_l2_8_q0;
                weight_l2_9_load_2_reg_5127 <= weight_l2_9_q1;
                weight_l2_9_load_3_reg_5207 <= weight_l2_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                weight_l2_0_load_4_reg_5402 <= weight_l2_0_q1;
                weight_l2_0_load_5_reg_5482 <= weight_l2_0_q0;
                weight_l2_10_load_4_reg_5452 <= weight_l2_10_q1;
                weight_l2_10_load_5_reg_5532 <= weight_l2_10_q0;
                weight_l2_11_load_4_reg_5457 <= weight_l2_11_q1;
                weight_l2_11_load_5_reg_5537 <= weight_l2_11_q0;
                weight_l2_12_load_4_reg_5462 <= weight_l2_12_q1;
                weight_l2_12_load_5_reg_5542 <= weight_l2_12_q0;
                weight_l2_13_load_4_reg_5467 <= weight_l2_13_q1;
                weight_l2_13_load_5_reg_5547 <= weight_l2_13_q0;
                weight_l2_14_load_4_reg_5472 <= weight_l2_14_q1;
                weight_l2_14_load_5_reg_5552 <= weight_l2_14_q0;
                weight_l2_15_load_4_reg_5477 <= weight_l2_15_q1;
                weight_l2_15_load_5_reg_5557 <= weight_l2_15_q0;
                weight_l2_1_load_4_reg_5407 <= weight_l2_1_q1;
                weight_l2_1_load_5_reg_5487 <= weight_l2_1_q0;
                weight_l2_2_load_4_reg_5412 <= weight_l2_2_q1;
                weight_l2_2_load_5_reg_5492 <= weight_l2_2_q0;
                weight_l2_3_load_4_reg_5417 <= weight_l2_3_q1;
                weight_l2_3_load_5_reg_5497 <= weight_l2_3_q0;
                weight_l2_4_load_4_reg_5422 <= weight_l2_4_q1;
                weight_l2_4_load_5_reg_5502 <= weight_l2_4_q0;
                weight_l2_5_load_4_reg_5427 <= weight_l2_5_q1;
                weight_l2_5_load_5_reg_5507 <= weight_l2_5_q0;
                weight_l2_6_load_4_reg_5432 <= weight_l2_6_q1;
                weight_l2_6_load_5_reg_5512 <= weight_l2_6_q0;
                weight_l2_7_load_4_reg_5437 <= weight_l2_7_q1;
                weight_l2_7_load_5_reg_5517 <= weight_l2_7_q0;
                weight_l2_8_load_4_reg_5442 <= weight_l2_8_q1;
                weight_l2_8_load_5_reg_5522 <= weight_l2_8_q0;
                weight_l2_9_load_4_reg_5447 <= weight_l2_9_q1;
                weight_l2_9_load_5_reg_5527 <= weight_l2_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                weight_l2_0_load_6_reg_5722 <= weight_l2_0_q1;
                weight_l2_0_load_7_reg_5802 <= weight_l2_0_q0;
                weight_l2_10_load_6_reg_5772 <= weight_l2_10_q1;
                weight_l2_10_load_7_reg_5852 <= weight_l2_10_q0;
                weight_l2_11_load_6_reg_5777 <= weight_l2_11_q1;
                weight_l2_11_load_7_reg_5857 <= weight_l2_11_q0;
                weight_l2_12_load_6_reg_5782 <= weight_l2_12_q1;
                weight_l2_12_load_7_reg_5862 <= weight_l2_12_q0;
                weight_l2_13_load_6_reg_5787 <= weight_l2_13_q1;
                weight_l2_13_load_7_reg_5867 <= weight_l2_13_q0;
                weight_l2_14_load_6_reg_5792 <= weight_l2_14_q1;
                weight_l2_14_load_7_reg_5872 <= weight_l2_14_q0;
                weight_l2_15_load_6_reg_5797 <= weight_l2_15_q1;
                weight_l2_15_load_7_reg_5877 <= weight_l2_15_q0;
                weight_l2_1_load_6_reg_5727 <= weight_l2_1_q1;
                weight_l2_1_load_7_reg_5807 <= weight_l2_1_q0;
                weight_l2_2_load_6_reg_5732 <= weight_l2_2_q1;
                weight_l2_2_load_7_reg_5812 <= weight_l2_2_q0;
                weight_l2_3_load_6_reg_5737 <= weight_l2_3_q1;
                weight_l2_3_load_7_reg_5817 <= weight_l2_3_q0;
                weight_l2_4_load_6_reg_5742 <= weight_l2_4_q1;
                weight_l2_4_load_7_reg_5822 <= weight_l2_4_q0;
                weight_l2_5_load_6_reg_5747 <= weight_l2_5_q1;
                weight_l2_5_load_7_reg_5827 <= weight_l2_5_q0;
                weight_l2_6_load_6_reg_5752 <= weight_l2_6_q1;
                weight_l2_6_load_7_reg_5832 <= weight_l2_6_q0;
                weight_l2_7_load_6_reg_5757 <= weight_l2_7_q1;
                weight_l2_7_load_7_reg_5837 <= weight_l2_7_q0;
                weight_l2_8_load_6_reg_5762 <= weight_l2_8_q1;
                weight_l2_8_load_7_reg_5842 <= weight_l2_8_q0;
                weight_l2_9_load_6_reg_5767 <= weight_l2_9_q1;
                weight_l2_9_load_7_reg_5847 <= weight_l2_9_q0;
            end if;
        end if;
    end process;
    c_reg_4486(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    C_L2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            C_L2_blk_n <= C_L2_empty_n;
        else 
            C_L2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_L2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            C_L2_read <= ap_const_logic_1;
        else 
            C_L2_read <= ap_const_logic_0;
        end if; 
    end process;


    R_L2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, R_L2_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R_L2_blk_n <= R_L2_empty_n;
        else 
            R_L2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    R_L2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R_L2_read <= ap_const_logic_1;
        else 
            R_L2_read <= ap_const_logic_0;
        end if; 
    end process;


    S_L2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, S_L2_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            S_L2_blk_n <= S_L2_empty_n;
        else 
            S_L2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    S_L2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            S_L2_read <= ap_const_logic_1;
        else 
            S_L2_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= weight_l2_0_load_reg_4762;
    ap_return_1 <= weight_l2_0_load_1_reg_4842;
    ap_return_10 <= weight_l2_0_load_10_reg_6382;
    ap_return_100 <= weight_l2_6_load_4_reg_5432;
    ap_return_101 <= weight_l2_6_load_5_reg_5512;
    ap_return_102 <= weight_l2_6_load_6_reg_5752;
    ap_return_103 <= weight_l2_6_load_7_reg_5832;
    ap_return_104 <= weight_l2_6_load_8_reg_6072;
    ap_return_105 <= weight_l2_6_load_9_reg_6152;
    ap_return_106 <= weight_l2_6_load_10_reg_6412;
    ap_return_107 <= weight_l2_6_load_11_reg_6492;
    ap_return_108 <= weight_l2_6_load_12_reg_6732;
    ap_return_109 <= weight_l2_6_load_13_reg_6812;
    ap_return_11 <= weight_l2_0_load_11_reg_6462;
    ap_return_110 <= weight_l2_6_q1;
    ap_return_111 <= weight_l2_6_q0;
    ap_return_112 <= weight_l2_7_load_reg_4797;
    ap_return_113 <= weight_l2_7_load_1_reg_4877;
    ap_return_114 <= weight_l2_7_load_2_reg_5117;
    ap_return_115 <= weight_l2_7_load_3_reg_5197;
    ap_return_116 <= weight_l2_7_load_4_reg_5437;
    ap_return_117 <= weight_l2_7_load_5_reg_5517;
    ap_return_118 <= weight_l2_7_load_6_reg_5757;
    ap_return_119 <= weight_l2_7_load_7_reg_5837;
    ap_return_12 <= weight_l2_0_load_12_reg_6702;
    ap_return_120 <= weight_l2_7_load_8_reg_6077;
    ap_return_121 <= weight_l2_7_load_9_reg_6157;
    ap_return_122 <= weight_l2_7_load_10_reg_6417;
    ap_return_123 <= weight_l2_7_load_11_reg_6497;
    ap_return_124 <= weight_l2_7_load_12_reg_6737;
    ap_return_125 <= weight_l2_7_load_13_reg_6817;
    ap_return_126 <= weight_l2_7_q1;
    ap_return_127 <= weight_l2_7_q0;
    ap_return_128 <= weight_l2_8_load_reg_4802;
    ap_return_129 <= weight_l2_8_load_1_reg_4882;
    ap_return_13 <= weight_l2_0_load_13_reg_6782;
    ap_return_130 <= weight_l2_8_load_2_reg_5122;
    ap_return_131 <= weight_l2_8_load_3_reg_5202;
    ap_return_132 <= weight_l2_8_load_4_reg_5442;
    ap_return_133 <= weight_l2_8_load_5_reg_5522;
    ap_return_134 <= weight_l2_8_load_6_reg_5762;
    ap_return_135 <= weight_l2_8_load_7_reg_5842;
    ap_return_136 <= weight_l2_8_load_8_reg_6082;
    ap_return_137 <= weight_l2_8_load_9_reg_6162;
    ap_return_138 <= weight_l2_8_load_10_reg_6422;
    ap_return_139 <= weight_l2_8_load_11_reg_6502;
    ap_return_14 <= weight_l2_0_q1;
    ap_return_140 <= weight_l2_8_load_12_reg_6742;
    ap_return_141 <= weight_l2_8_load_13_reg_6822;
    ap_return_142 <= weight_l2_8_q1;
    ap_return_143 <= weight_l2_8_q0;
    ap_return_144 <= weight_l2_9_load_reg_4807;
    ap_return_145 <= weight_l2_9_load_1_reg_4887;
    ap_return_146 <= weight_l2_9_load_2_reg_5127;
    ap_return_147 <= weight_l2_9_load_3_reg_5207;
    ap_return_148 <= weight_l2_9_load_4_reg_5447;
    ap_return_149 <= weight_l2_9_load_5_reg_5527;
    ap_return_15 <= weight_l2_0_q0;
    ap_return_150 <= weight_l2_9_load_6_reg_5767;
    ap_return_151 <= weight_l2_9_load_7_reg_5847;
    ap_return_152 <= weight_l2_9_load_8_reg_6087;
    ap_return_153 <= weight_l2_9_load_9_reg_6167;
    ap_return_154 <= weight_l2_9_load_10_reg_6427;
    ap_return_155 <= weight_l2_9_load_11_reg_6507;
    ap_return_156 <= weight_l2_9_load_12_reg_6747;
    ap_return_157 <= weight_l2_9_load_13_reg_6827;
    ap_return_158 <= weight_l2_9_q1;
    ap_return_159 <= weight_l2_9_q0;
    ap_return_16 <= weight_l2_1_load_reg_4767;
    ap_return_160 <= weight_l2_10_load_reg_4812;
    ap_return_161 <= weight_l2_10_load_1_reg_4892;
    ap_return_162 <= weight_l2_10_load_2_reg_5132;
    ap_return_163 <= weight_l2_10_load_3_reg_5212;
    ap_return_164 <= weight_l2_10_load_4_reg_5452;
    ap_return_165 <= weight_l2_10_load_5_reg_5532;
    ap_return_166 <= weight_l2_10_load_6_reg_5772;
    ap_return_167 <= weight_l2_10_load_7_reg_5852;
    ap_return_168 <= weight_l2_10_load_8_reg_6092;
    ap_return_169 <= weight_l2_10_load_9_reg_6172;
    ap_return_17 <= weight_l2_1_load_1_reg_4847;
    ap_return_170 <= weight_l2_10_load_10_reg_6432;
    ap_return_171 <= weight_l2_10_load_11_reg_6512;
    ap_return_172 <= weight_l2_10_load_12_reg_6752;
    ap_return_173 <= weight_l2_10_load_13_reg_6832;
    ap_return_174 <= weight_l2_10_q1;
    ap_return_175 <= weight_l2_10_q0;
    ap_return_176 <= weight_l2_11_load_reg_4817;
    ap_return_177 <= weight_l2_11_load_1_reg_4897;
    ap_return_178 <= weight_l2_11_load_2_reg_5137;
    ap_return_179 <= weight_l2_11_load_3_reg_5217;
    ap_return_18 <= weight_l2_1_load_2_reg_5087;
    ap_return_180 <= weight_l2_11_load_4_reg_5457;
    ap_return_181 <= weight_l2_11_load_5_reg_5537;
    ap_return_182 <= weight_l2_11_load_6_reg_5777;
    ap_return_183 <= weight_l2_11_load_7_reg_5857;
    ap_return_184 <= weight_l2_11_load_8_reg_6097;
    ap_return_185 <= weight_l2_11_load_9_reg_6177;
    ap_return_186 <= weight_l2_11_load_10_reg_6437;
    ap_return_187 <= weight_l2_11_load_11_reg_6517;
    ap_return_188 <= weight_l2_11_load_12_reg_6757;
    ap_return_189 <= weight_l2_11_load_13_reg_6837;
    ap_return_19 <= weight_l2_1_load_3_reg_5167;
    ap_return_190 <= weight_l2_11_q1;
    ap_return_191 <= weight_l2_11_q0;
    ap_return_192 <= weight_l2_12_load_reg_4822;
    ap_return_193 <= weight_l2_12_load_1_reg_4902;
    ap_return_194 <= weight_l2_12_load_2_reg_5142;
    ap_return_195 <= weight_l2_12_load_3_reg_5222;
    ap_return_196 <= weight_l2_12_load_4_reg_5462;
    ap_return_197 <= weight_l2_12_load_5_reg_5542;
    ap_return_198 <= weight_l2_12_load_6_reg_5782;
    ap_return_199 <= weight_l2_12_load_7_reg_5862;
    ap_return_2 <= weight_l2_0_load_2_reg_5082;
    ap_return_20 <= weight_l2_1_load_4_reg_5407;
    ap_return_200 <= weight_l2_12_load_8_reg_6102;
    ap_return_201 <= weight_l2_12_load_9_reg_6182;
    ap_return_202 <= weight_l2_12_load_10_reg_6442;
    ap_return_203 <= weight_l2_12_load_11_reg_6522;
    ap_return_204 <= weight_l2_12_load_12_reg_6762;
    ap_return_205 <= weight_l2_12_load_13_reg_6842;
    ap_return_206 <= weight_l2_12_q1;
    ap_return_207 <= weight_l2_12_q0;
    ap_return_208 <= weight_l2_13_load_reg_4827;
    ap_return_209 <= weight_l2_13_load_1_reg_4907;
    ap_return_21 <= weight_l2_1_load_5_reg_5487;
    ap_return_210 <= weight_l2_13_load_2_reg_5147;
    ap_return_211 <= weight_l2_13_load_3_reg_5227;
    ap_return_212 <= weight_l2_13_load_4_reg_5467;
    ap_return_213 <= weight_l2_13_load_5_reg_5547;
    ap_return_214 <= weight_l2_13_load_6_reg_5787;
    ap_return_215 <= weight_l2_13_load_7_reg_5867;
    ap_return_216 <= weight_l2_13_load_8_reg_6107;
    ap_return_217 <= weight_l2_13_load_9_reg_6187;
    ap_return_218 <= weight_l2_13_load_10_reg_6447;
    ap_return_219 <= weight_l2_13_load_11_reg_6527;
    ap_return_22 <= weight_l2_1_load_6_reg_5727;
    ap_return_220 <= weight_l2_13_load_12_reg_6767;
    ap_return_221 <= weight_l2_13_load_13_reg_6847;
    ap_return_222 <= weight_l2_13_q1;
    ap_return_223 <= weight_l2_13_q0;
    ap_return_224 <= weight_l2_14_load_reg_4832;
    ap_return_225 <= weight_l2_14_load_1_reg_4912;
    ap_return_226 <= weight_l2_14_load_2_reg_5152;
    ap_return_227 <= weight_l2_14_load_3_reg_5232;
    ap_return_228 <= weight_l2_14_load_4_reg_5472;
    ap_return_229 <= weight_l2_14_load_5_reg_5552;
    ap_return_23 <= weight_l2_1_load_7_reg_5807;
    ap_return_230 <= weight_l2_14_load_6_reg_5792;
    ap_return_231 <= weight_l2_14_load_7_reg_5872;
    ap_return_232 <= weight_l2_14_load_8_reg_6112;
    ap_return_233 <= weight_l2_14_load_9_reg_6192;
    ap_return_234 <= weight_l2_14_load_10_reg_6452;
    ap_return_235 <= weight_l2_14_load_11_reg_6532;
    ap_return_236 <= weight_l2_14_load_12_reg_6772;
    ap_return_237 <= weight_l2_14_load_13_reg_6852;
    ap_return_238 <= weight_l2_14_q1;
    ap_return_239 <= weight_l2_14_q0;
    ap_return_24 <= weight_l2_1_load_8_reg_6047;
    ap_return_240 <= weight_l2_15_load_reg_4837;
    ap_return_241 <= weight_l2_15_load_1_reg_4917;
    ap_return_242 <= weight_l2_15_load_2_reg_5157;
    ap_return_243 <= weight_l2_15_load_3_reg_5237;
    ap_return_244 <= weight_l2_15_load_4_reg_5477;
    ap_return_245 <= weight_l2_15_load_5_reg_5557;
    ap_return_246 <= weight_l2_15_load_6_reg_5797;
    ap_return_247 <= weight_l2_15_load_7_reg_5877;
    ap_return_248 <= weight_l2_15_load_8_reg_6117;
    ap_return_249 <= weight_l2_15_load_9_reg_6197;
    ap_return_25 <= weight_l2_1_load_9_reg_6127;
    ap_return_250 <= weight_l2_15_load_10_reg_6457;
    ap_return_251 <= weight_l2_15_load_11_reg_6537;
    ap_return_252 <= weight_l2_15_load_12_reg_6777;
    ap_return_253 <= weight_l2_15_load_13_reg_6857;
    ap_return_254 <= weight_l2_15_q1;
    ap_return_255 <= weight_l2_15_q0;
    ap_return_26 <= weight_l2_1_load_10_reg_6387;
    ap_return_27 <= weight_l2_1_load_11_reg_6467;
    ap_return_28 <= weight_l2_1_load_12_reg_6707;
    ap_return_29 <= weight_l2_1_load_13_reg_6787;
    ap_return_3 <= weight_l2_0_load_3_reg_5162;
    ap_return_30 <= weight_l2_1_q1;
    ap_return_31 <= weight_l2_1_q0;
    ap_return_32 <= weight_l2_2_load_reg_4772;
    ap_return_33 <= weight_l2_2_load_1_reg_4852;
    ap_return_34 <= weight_l2_2_load_2_reg_5092;
    ap_return_35 <= weight_l2_2_load_3_reg_5172;
    ap_return_36 <= weight_l2_2_load_4_reg_5412;
    ap_return_37 <= weight_l2_2_load_5_reg_5492;
    ap_return_38 <= weight_l2_2_load_6_reg_5732;
    ap_return_39 <= weight_l2_2_load_7_reg_5812;
    ap_return_4 <= weight_l2_0_load_4_reg_5402;
    ap_return_40 <= weight_l2_2_load_8_reg_6052;
    ap_return_41 <= weight_l2_2_load_9_reg_6132;
    ap_return_42 <= weight_l2_2_load_10_reg_6392;
    ap_return_43 <= weight_l2_2_load_11_reg_6472;
    ap_return_44 <= weight_l2_2_load_12_reg_6712;
    ap_return_45 <= weight_l2_2_load_13_reg_6792;
    ap_return_46 <= weight_l2_2_q1;
    ap_return_47 <= weight_l2_2_q0;
    ap_return_48 <= weight_l2_3_load_reg_4777;
    ap_return_49 <= weight_l2_3_load_1_reg_4857;
    ap_return_5 <= weight_l2_0_load_5_reg_5482;
    ap_return_50 <= weight_l2_3_load_2_reg_5097;
    ap_return_51 <= weight_l2_3_load_3_reg_5177;
    ap_return_52 <= weight_l2_3_load_4_reg_5417;
    ap_return_53 <= weight_l2_3_load_5_reg_5497;
    ap_return_54 <= weight_l2_3_load_6_reg_5737;
    ap_return_55 <= weight_l2_3_load_7_reg_5817;
    ap_return_56 <= weight_l2_3_load_8_reg_6057;
    ap_return_57 <= weight_l2_3_load_9_reg_6137;
    ap_return_58 <= weight_l2_3_load_10_reg_6397;
    ap_return_59 <= weight_l2_3_load_11_reg_6477;
    ap_return_6 <= weight_l2_0_load_6_reg_5722;
    ap_return_60 <= weight_l2_3_load_12_reg_6717;
    ap_return_61 <= weight_l2_3_load_13_reg_6797;
    ap_return_62 <= weight_l2_3_q1;
    ap_return_63 <= weight_l2_3_q0;
    ap_return_64 <= weight_l2_4_load_reg_4782;
    ap_return_65 <= weight_l2_4_load_1_reg_4862;
    ap_return_66 <= weight_l2_4_load_2_reg_5102;
    ap_return_67 <= weight_l2_4_load_3_reg_5182;
    ap_return_68 <= weight_l2_4_load_4_reg_5422;
    ap_return_69 <= weight_l2_4_load_5_reg_5502;
    ap_return_7 <= weight_l2_0_load_7_reg_5802;
    ap_return_70 <= weight_l2_4_load_6_reg_5742;
    ap_return_71 <= weight_l2_4_load_7_reg_5822;
    ap_return_72 <= weight_l2_4_load_8_reg_6062;
    ap_return_73 <= weight_l2_4_load_9_reg_6142;
    ap_return_74 <= weight_l2_4_load_10_reg_6402;
    ap_return_75 <= weight_l2_4_load_11_reg_6482;
    ap_return_76 <= weight_l2_4_load_12_reg_6722;
    ap_return_77 <= weight_l2_4_load_13_reg_6802;
    ap_return_78 <= weight_l2_4_q1;
    ap_return_79 <= weight_l2_4_q0;
    ap_return_8 <= weight_l2_0_load_8_reg_6042;
    ap_return_80 <= weight_l2_5_load_reg_4787;
    ap_return_81 <= weight_l2_5_load_1_reg_4867;
    ap_return_82 <= weight_l2_5_load_2_reg_5107;
    ap_return_83 <= weight_l2_5_load_3_reg_5187;
    ap_return_84 <= weight_l2_5_load_4_reg_5427;
    ap_return_85 <= weight_l2_5_load_5_reg_5507;
    ap_return_86 <= weight_l2_5_load_6_reg_5747;
    ap_return_87 <= weight_l2_5_load_7_reg_5827;
    ap_return_88 <= weight_l2_5_load_8_reg_6067;
    ap_return_89 <= weight_l2_5_load_9_reg_6147;
    ap_return_9 <= weight_l2_0_load_9_reg_6122;
    ap_return_90 <= weight_l2_5_load_10_reg_6407;
    ap_return_91 <= weight_l2_5_load_11_reg_6487;
    ap_return_92 <= weight_l2_5_load_12_reg_6727;
    ap_return_93 <= weight_l2_5_load_13_reg_6807;
    ap_return_94 <= weight_l2_5_q1;
    ap_return_95 <= weight_l2_5_q0;
    ap_return_96 <= weight_l2_6_load_reg_4792;
    ap_return_97 <= weight_l2_6_load_1_reg_4872;
    ap_return_98 <= weight_l2_6_load_2_reg_5112;
    ap_return_99 <= weight_l2_6_load_3_reg_5192;
    c_10_fu_2503_p2 <= (c_reg_4486 or ap_const_lv12_A);
    c_11_fu_2513_p2 <= (c_reg_4486 or ap_const_lv12_B);
    c_12_fu_2523_p2 <= (c_reg_4486 or ap_const_lv12_C);
    c_13_fu_2533_p2 <= (c_reg_4486 or ap_const_lv12_D);
    c_14_fu_2543_p2 <= (c_reg_4486 or ap_const_lv12_E);
    c_15_fu_2553_p2 <= (c_reg_4486 or ap_const_lv12_F);
    c_1_fu_2412_p2 <= (c_fu_2400_p3 or ap_const_lv12_1);
    c_2_fu_2423_p2 <= (c_reg_4486 or ap_const_lv12_2);
    c_3_fu_2433_p2 <= (c_reg_4486 or ap_const_lv12_3);
    c_4_fu_2443_p2 <= (c_reg_4486 or ap_const_lv12_4);
    c_5_fu_2453_p2 <= (c_reg_4486 or ap_const_lv12_5);
    c_6_fu_2463_p2 <= (c_reg_4486 or ap_const_lv12_6);
    c_7_fu_2473_p2 <= (c_reg_4486 or ap_const_lv12_7);
    c_8_fu_2483_p2 <= (c_reg_4486 or ap_const_lv12_8);
    c_9_fu_2493_p2 <= (c_reg_4486 or ap_const_lv12_9);
    c_fu_2400_p3 <= (empty_reg_4481 & ap_const_lv4_0);

    co_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, co_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_blk_n <= co_empty_n;
        else 
            co_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    co_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, co_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_out_blk_n <= co_out_full_n;
        else 
            co_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    co_out_din <= co_dout;

    co_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_out_write <= ap_const_logic_1;
        else 
            co_out_write <= ap_const_logic_0;
        end if; 
    end process;


    co_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_read <= ap_const_logic_1;
        else 
            co_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_2396_p1 <= co_dout(8 - 1 downto 0);

    grp_fu_4179_ce_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_fu_4179_ce <= ap_const_logic_1;
        else 
            grp_fu_4179_ce <= ap_const_logic_0;
        end if; 
    end process;

    idxprom13_10_i_i_fu_2753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4347_p4),64));
    idxprom13_11_i_i_fu_2772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4355_p4),64));
    idxprom13_12_i_i_fu_2791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add12_12_i_i_reg_6362),64));
    idxprom13_13_i_i_fu_2810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add12_13_i_i_reg_6367),64));
    idxprom13_14_i_i_fu_2829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add12_14_i_i_reg_6372),64));
    idxprom13_15_i_i_fu_2848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add12_15_i_i_reg_6377),64));
    idxprom13_1_i_i_fu_2582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4225_p4),64));
    idxprom13_2_i_i_fu_2601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4243_p4),64));
    idxprom13_3_i_i_fu_2620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4251_p4),64));
    idxprom13_4_i_i_fu_2639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4269_p4),64));
    idxprom13_5_i_i_fu_2658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4277_p4),64));
    idxprom13_6_i_i_fu_2677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4315_p4),64));
    idxprom13_7_i_i_fu_2696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4323_p4),64));
    idxprom13_8_i_i_fu_2715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4331_p4),64));
    idxprom13_9_i_i_fu_2734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4339_p4),64));
    idxprom13_i_i_fu_2563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_4217_p4),64));

    ko_3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ko_3_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ko_3_blk_n <= ko_3_empty_n;
        else 
            ko_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ko_3_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ko_3_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ko_3_out_blk_n <= ko_3_out_full_n;
        else 
            ko_3_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ko_3_out_din <= trunc_ln873_fu_2383_p1;

    ko_3_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ko_3_out_write <= ap_const_logic_1;
        else 
            ko_3_out_write <= ap_const_logic_0;
        end if; 
    end process;


    ko_3_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ko_3_read <= ap_const_logic_1;
        else 
            ko_3_read <= ap_const_logic_0;
        end if; 
    end process;

    mul512_i_i_fu_2428_p2 <= std_logic_vector(unsigned(c_2_fu_2423_p2) + unsigned(mul4_i_i_reg_4504));
    mul516_i_i_fu_2438_p2 <= std_logic_vector(unsigned(c_3_fu_2433_p2) + unsigned(mul4_i_i_reg_4504));
    mul520_i_i_fu_2448_p2 <= std_logic_vector(unsigned(c_4_fu_2443_p2) + unsigned(mul4_i_i_reg_4504));
    mul524_i_i_fu_2458_p2 <= std_logic_vector(unsigned(c_5_fu_2453_p2) + unsigned(mul4_i_i_reg_4504));
    mul528_i_i_fu_2468_p2 <= std_logic_vector(unsigned(c_6_fu_2463_p2) + unsigned(mul4_i_i_reg_4504));
    mul52_i_i_fu_2407_p2 <= std_logic_vector(unsigned(c_fu_2400_p3) + unsigned(grp_fu_4179_p2));
    mul532_i_i_fu_2478_p2 <= std_logic_vector(unsigned(c_7_fu_2473_p2) + unsigned(mul4_i_i_reg_4504));
    mul536_i_i_fu_2488_p2 <= std_logic_vector(unsigned(c_8_fu_2483_p2) + unsigned(mul4_i_i_reg_4504));
    mul540_i_i_fu_2498_p2 <= std_logic_vector(unsigned(c_9_fu_2493_p2) + unsigned(mul4_i_i_reg_4504));
    mul544_i_i_fu_2508_p2 <= std_logic_vector(unsigned(c_10_fu_2503_p2) + unsigned(mul4_i_i_reg_4504));
    mul548_i_i_fu_2518_p2 <= std_logic_vector(unsigned(c_11_fu_2513_p2) + unsigned(mul4_i_i_reg_4504));
    mul552_i_i_fu_2528_p2 <= std_logic_vector(unsigned(c_12_fu_2523_p2) + unsigned(mul4_i_i_reg_4504));
    mul556_i_i_fu_2538_p2 <= std_logic_vector(unsigned(c_13_fu_2533_p2) + unsigned(mul4_i_i_reg_4504));
    mul560_i_i_fu_2548_p2 <= std_logic_vector(unsigned(c_14_fu_2543_p2) + unsigned(mul4_i_i_reg_4504));
    mul564_i_i_fu_2558_p2 <= std_logic_vector(unsigned(c_15_fu_2553_p2) + unsigned(mul4_i_i_reg_4504));
    mul58_i_i_fu_2418_p2 <= std_logic_vector(unsigned(c_1_fu_2412_p2) + unsigned(grp_fu_4179_p2));

    ro_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ro_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ro_blk_n <= ro_empty_n;
        else 
            ro_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ro_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ro_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ro_out_blk_n <= ro_out_full_n;
        else 
            ro_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ro_out_din <= ro_dout;

    ro_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ro_out_write <= ap_const_logic_1;
        else 
            ro_out_write <= ap_const_logic_0;
        end if; 
    end process;


    ro_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ro_read <= ap_const_logic_1;
        else 
            ro_read <= ap_const_logic_0;
        end if; 
    end process;


    so_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, so_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            so_blk_n <= so_empty_n;
        else 
            so_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    so_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, so_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            so_out_blk_n <= so_out_full_n;
        else 
            so_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    so_out_din <= so_dout;

    so_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            so_out_write <= ap_const_logic_1;
        else 
            so_out_write <= ap_const_logic_0;
        end if; 
    end process;


    so_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_L2_empty_n, R_L2_empty_n, S_L2_empty_n, ko_3_empty_n, co_empty_n, ro_empty_n, so_empty_n, ko_3_out_full_n, co_out_full_n, ro_out_full_n, so_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = S_L2_empty_n) or (ap_const_logic_0 = R_L2_empty_n) or (ap_const_logic_0 = C_L2_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (so_out_full_n = ap_const_logic_0) or (ro_out_full_n = ap_const_logic_0) or (co_out_full_n = ap_const_logic_0) or (ko_3_out_full_n = ap_const_logic_0) or (so_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ko_3_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            so_read <= ap_const_logic_1;
        else 
            so_read <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln873_fu_2383_p0 <= ko_3_dout;
    trunc_ln873_fu_2383_p1 <= trunc_ln873_fu_2383_p0(8 - 1 downto 0);
    trunc_ln879_fu_2388_p1 <= ro_dout(12 - 1 downto 0);
    trunc_ln881_fu_2392_p1 <= so_dout(12 - 1 downto 0);

    weight_l2_0_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_0_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_0_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_0_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_0_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_0_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_0_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_0_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_0_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_0_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_0_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_0_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_0_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_0_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_0_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_0_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_0_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_0_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_0_ce0 <= ap_const_logic_1;
        else 
            weight_l2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_0_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_0_ce1 <= ap_const_logic_1;
        else 
            weight_l2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_10_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_10_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_10_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_10_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_10_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_10_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_10_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_10_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_10_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_10_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_10_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_10_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_10_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_10_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_10_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_10_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_10_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_10_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_10_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_10_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_10_ce0 <= ap_const_logic_1;
        else 
            weight_l2_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_10_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_10_ce1 <= ap_const_logic_1;
        else 
            weight_l2_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_11_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_11_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_11_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_11_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_11_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_11_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_11_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_11_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_11_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_11_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_11_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_11_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_11_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_11_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_11_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_11_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_11_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_11_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_11_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_11_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_11_ce0 <= ap_const_logic_1;
        else 
            weight_l2_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_11_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_11_ce1 <= ap_const_logic_1;
        else 
            weight_l2_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_12_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_12_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_12_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_12_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_12_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_12_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_12_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_12_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_12_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_12_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_12_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_12_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_12_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_12_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_12_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_12_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_12_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_12_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_12_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_12_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_12_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_12_ce0 <= ap_const_logic_1;
        else 
            weight_l2_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_12_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_12_ce1 <= ap_const_logic_1;
        else 
            weight_l2_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_13_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_13_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_13_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_13_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_13_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_13_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_13_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_13_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_13_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_13_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_13_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_13_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_13_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_13_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_13_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_13_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_13_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_13_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_13_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_13_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_13_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_13_ce0 <= ap_const_logic_1;
        else 
            weight_l2_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_13_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_13_ce1 <= ap_const_logic_1;
        else 
            weight_l2_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_14_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_14_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_14_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_14_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_14_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_14_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_14_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_14_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_14_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_14_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_14_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_14_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_14_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_14_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_14_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_14_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_14_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_14_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_14_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_14_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_14_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_14_ce0 <= ap_const_logic_1;
        else 
            weight_l2_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_14_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_14_ce1 <= ap_const_logic_1;
        else 
            weight_l2_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_15_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_15_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_15_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_15_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_15_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_15_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_15_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_15_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_15_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_15_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_15_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_15_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_15_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_15_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_15_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_15_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_15_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_15_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_15_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_15_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_15_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_15_ce0 <= ap_const_logic_1;
        else 
            weight_l2_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_15_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_15_ce1 <= ap_const_logic_1;
        else 
            weight_l2_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_1_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_1_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_1_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_1_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_1_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_1_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_1_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_1_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_1_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_1_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_1_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_1_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_1_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_1_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_1_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_1_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_1_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_1_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_1_ce0 <= ap_const_logic_1;
        else 
            weight_l2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_1_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_1_ce1 <= ap_const_logic_1;
        else 
            weight_l2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_2_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_2_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_2_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_2_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_2_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_2_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_2_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_2_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_2_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_2_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_2_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_2_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_2_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_2_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_2_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_2_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_2_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_2_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_2_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_2_ce0 <= ap_const_logic_1;
        else 
            weight_l2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_2_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_2_ce1 <= ap_const_logic_1;
        else 
            weight_l2_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_3_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_3_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_3_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_3_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_3_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_3_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_3_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_3_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_3_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_3_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_3_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_3_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_3_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_3_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_3_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_3_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_3_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_3_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_3_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_3_ce0 <= ap_const_logic_1;
        else 
            weight_l2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_3_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_3_ce1 <= ap_const_logic_1;
        else 
            weight_l2_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_4_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_4_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_4_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_4_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_4_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_4_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_4_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_4_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_4_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_4_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_4_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_4_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_4_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_4_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_4_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_4_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_4_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_4_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_4_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_4_ce0 <= ap_const_logic_1;
        else 
            weight_l2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_4_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_4_ce1 <= ap_const_logic_1;
        else 
            weight_l2_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_5_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_5_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_5_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_5_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_5_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_5_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_5_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_5_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_5_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_5_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_5_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_5_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_5_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_5_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_5_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_5_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_5_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_5_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_5_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_5_ce0 <= ap_const_logic_1;
        else 
            weight_l2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_5_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_5_ce1 <= ap_const_logic_1;
        else 
            weight_l2_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_6_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_6_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_6_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_6_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_6_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_6_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_6_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_6_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_6_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_6_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_6_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_6_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_6_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_6_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_6_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_6_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_6_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_6_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_6_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_6_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_6_ce0 <= ap_const_logic_1;
        else 
            weight_l2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_6_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_6_ce1 <= ap_const_logic_1;
        else 
            weight_l2_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_7_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_7_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_7_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_7_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_7_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_7_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_7_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_7_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_7_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_7_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_7_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_7_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_7_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_7_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_7_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_7_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_7_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_7_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_7_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_7_ce0 <= ap_const_logic_1;
        else 
            weight_l2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_7_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_7_ce1 <= ap_const_logic_1;
        else 
            weight_l2_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_8_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_8_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_8_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_8_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_8_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_8_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_8_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_8_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_8_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_8_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_8_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_8_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_8_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_8_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_8_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_8_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_8_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_8_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_8_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_8_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_8_ce0 <= ap_const_logic_1;
        else 
            weight_l2_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_8_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_8_ce1 <= ap_const_logic_1;
        else 
            weight_l2_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_9_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_1_i_i_fu_2582_p1, idxprom13_3_i_i_fu_2620_p1, idxprom13_5_i_i_fu_2658_p1, idxprom13_7_i_i_fu_2696_p1, idxprom13_9_i_i_fu_2734_p1, idxprom13_11_i_i_fu_2772_p1, idxprom13_13_i_i_fu_2810_p1, idxprom13_15_i_i_fu_2848_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_9_address0 <= idxprom13_15_i_i_fu_2848_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_9_address0 <= idxprom13_13_i_i_fu_2810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_9_address0 <= idxprom13_11_i_i_fu_2772_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_9_address0 <= idxprom13_9_i_i_fu_2734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_9_address0 <= idxprom13_7_i_i_fu_2696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_9_address0 <= idxprom13_5_i_i_fu_2658_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_9_address0 <= idxprom13_3_i_i_fu_2620_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_9_address0 <= idxprom13_1_i_i_fu_2582_p1(12 - 1 downto 0);
        else 
            weight_l2_9_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_9_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, idxprom13_i_i_fu_2563_p1, idxprom13_2_i_i_fu_2601_p1, idxprom13_4_i_i_fu_2639_p1, idxprom13_6_i_i_fu_2677_p1, idxprom13_8_i_i_fu_2715_p1, idxprom13_10_i_i_fu_2753_p1, idxprom13_12_i_i_fu_2791_p1, idxprom13_14_i_i_fu_2829_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_l2_9_address1 <= idxprom13_14_i_i_fu_2829_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_l2_9_address1 <= idxprom13_12_i_i_fu_2791_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_l2_9_address1 <= idxprom13_10_i_i_fu_2753_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_l2_9_address1 <= idxprom13_8_i_i_fu_2715_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_l2_9_address1 <= idxprom13_6_i_i_fu_2677_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_l2_9_address1 <= idxprom13_4_i_i_fu_2639_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_l2_9_address1 <= idxprom13_2_i_i_fu_2601_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_l2_9_address1 <= idxprom13_i_i_fu_2563_p1(12 - 1 downto 0);
        else 
            weight_l2_9_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_l2_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_9_ce0 <= ap_const_logic_1;
        else 
            weight_l2_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_9_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            weight_l2_9_ce1 <= ap_const_logic_1;
        else 
            weight_l2_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
