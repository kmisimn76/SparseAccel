-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    param : IN STD_LOGIC_VECTOR (1183 downto 0);
    ko_1 : IN STD_LOGIC_VECTOR (11 downto 0);
    co : IN STD_LOGIC_VECTOR (31 downto 0);
    ro : IN STD_LOGIC_VECTOR (31 downto 0);
    so : IN STD_LOGIC_VECTOR (31 downto 0);
    ho : IN STD_LOGIC_VECTOR (10 downto 0);
    wo : IN STD_LOGIC_VECTOR (10 downto 0);
    data_l2_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    data_l2_0_ce0 : OUT STD_LOGIC;
    data_l2_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    data_l2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    data_l2_0_we0 : OUT STD_LOGIC;
    data_l2_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    data_l2_0_ce1 : OUT STD_LOGIC;
    data_l2_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    data_l2_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    data_l2_0_we1 : OUT STD_LOGIC;
    data_l2_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    data_l2_1_ce0 : OUT STD_LOGIC;
    data_l2_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    data_l2_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    data_l2_1_we0 : OUT STD_LOGIC;
    data_l2_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    data_l2_1_ce1 : OUT STD_LOGIC;
    data_l2_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    data_l2_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    data_l2_1_we1 : OUT STD_LOGIC;
    data_l2_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    data_l2_2_ce0 : OUT STD_LOGIC;
    data_l2_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    data_l2_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    data_l2_2_we0 : OUT STD_LOGIC;
    data_l2_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    data_l2_2_ce1 : OUT STD_LOGIC;
    data_l2_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    data_l2_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    data_l2_2_we1 : OUT STD_LOGIC;
    data_l2_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    data_l2_3_ce0 : OUT STD_LOGIC;
    data_l2_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    data_l2_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    data_l2_3_we0 : OUT STD_LOGIC;
    data_l2_3_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    data_l2_3_ce1 : OUT STD_LOGIC;
    data_l2_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    data_l2_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    data_l2_3_we1 : OUT STD_LOGIC;
    output_l2_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_l2_0_ce0 : OUT STD_LOGIC;
    output_l2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_l2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_l2_0_we0 : OUT STD_LOGIC;
    output_l2_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_l2_0_ce1 : OUT STD_LOGIC;
    output_l2_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_l2_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_l2_0_we1 : OUT STD_LOGIC;
    output_l2_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_l2_1_ce0 : OUT STD_LOGIC;
    output_l2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_l2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_l2_1_we0 : OUT STD_LOGIC;
    output_l2_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_l2_1_ce1 : OUT STD_LOGIC;
    output_l2_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_l2_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_l2_1_we1 : OUT STD_LOGIC;
    output_l2_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_l2_2_ce0 : OUT STD_LOGIC;
    output_l2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_l2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_l2_2_we0 : OUT STD_LOGIC;
    output_l2_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_l2_2_ce1 : OUT STD_LOGIC;
    output_l2_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_l2_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_l2_2_we1 : OUT STD_LOGIC;
    output_l2_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_l2_3_ce0 : OUT STD_LOGIC;
    output_l2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_l2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_l2_3_we0 : OUT STD_LOGIC;
    output_l2_3_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_l2_3_ce1 : OUT STD_LOGIC;
    output_l2_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_l2_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_l2_3_we1 : OUT STD_LOGIC;
    weight_l2_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_0_ce0 : OUT STD_LOGIC;
    weight_l2_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_0_we0 : OUT STD_LOGIC;
    weight_l2_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_0_ce1 : OUT STD_LOGIC;
    weight_l2_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_0_we1 : OUT STD_LOGIC;
    weight_l2_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_1_ce0 : OUT STD_LOGIC;
    weight_l2_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_1_we0 : OUT STD_LOGIC;
    weight_l2_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_1_ce1 : OUT STD_LOGIC;
    weight_l2_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_1_we1 : OUT STD_LOGIC;
    weight_l2_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_2_ce0 : OUT STD_LOGIC;
    weight_l2_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_2_we0 : OUT STD_LOGIC;
    weight_l2_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_2_ce1 : OUT STD_LOGIC;
    weight_l2_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_2_we1 : OUT STD_LOGIC;
    weight_l2_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_3_ce0 : OUT STD_LOGIC;
    weight_l2_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_3_we0 : OUT STD_LOGIC;
    weight_l2_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_l2_3_ce1 : OUT STD_LOGIC;
    weight_l2_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_l2_3_we1 : OUT STD_LOGIC;
    param_ap_vld : IN STD_LOGIC;
    ko_1_ap_vld : IN STD_LOGIC;
    co_ap_vld : IN STD_LOGIC;
    ro_ap_vld : IN STD_LOGIC;
    so_ap_vld : IN STD_LOGIC;
    ho_ap_vld : IN STD_LOGIC;
    wo_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    weight_l2_0_empty_n : IN STD_LOGIC;
    weight_l2_0_read : OUT STD_LOGIC;
    weight_l2_1_empty_n : IN STD_LOGIC;
    weight_l2_1_read : OUT STD_LOGIC;
    weight_l2_2_empty_n : IN STD_LOGIC;
    weight_l2_2_read : OUT STD_LOGIC;
    weight_l2_3_empty_n : IN STD_LOGIC;
    weight_l2_3_read : OUT STD_LOGIC;
    data_l2_0_empty_n : IN STD_LOGIC;
    data_l2_0_read : OUT STD_LOGIC;
    data_l2_1_empty_n : IN STD_LOGIC;
    data_l2_1_read : OUT STD_LOGIC;
    data_l2_2_empty_n : IN STD_LOGIC;
    data_l2_2_read : OUT STD_LOGIC;
    data_l2_3_empty_n : IN STD_LOGIC;
    data_l2_3_read : OUT STD_LOGIC;
    output_l2_0_full_n : IN STD_LOGIC;
    output_l2_0_write : OUT STD_LOGIC;
    output_l2_1_full_n : IN STD_LOGIC;
    output_l2_1_write : OUT STD_LOGIC;
    output_l2_2_full_n : IN STD_LOGIC;
    output_l2_2_write : OUT STD_LOGIC;
    output_l2_3_full_n : IN STD_LOGIC;
    output_l2_3_write : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal data_l1_0_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l1_0_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l1_1_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l1_1_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l1_2_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l1_2_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l1_3_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l1_3_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l1_4_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_4_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_5_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_5_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_6_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_6_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_7_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_7_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_8_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_8_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_9_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_9_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_10_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_10_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_11_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_11_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_12_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_12_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_13_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_13_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_14_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_14_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_15_i_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_l1_15_t_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_l1_0_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_0_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_1_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_1_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_2_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_2_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_3_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_3_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_4_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_4_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_5_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_5_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_6_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_6_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_7_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_7_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_8_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_8_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_9_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_9_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_10_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_10_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_11_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_11_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_12_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_12_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_13_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_13_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_14_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_14_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_15_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_15_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_continue : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out_din : STD_LOGIC_VECTOR (1183 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out1_din : STD_LOGIC_VECTOR (1119 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out1_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ko_1_out_din : STD_LOGIC_VECTOR (11 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ko_1_out_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out2_din : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out2_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out3_din : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out3_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out4_din : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out4_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out5_din : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out5_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out_write : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out6_din : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out6_write : STD_LOGIC;
    signal runWeight2Reg_U0_ap_start : STD_LOGIC;
    signal runWeight2Reg_U0_ap_done : STD_LOGIC;
    signal runWeight2Reg_U0_ap_continue : STD_LOGIC;
    signal runWeight2Reg_U0_ap_idle : STD_LOGIC;
    signal runWeight2Reg_U0_ap_ready : STD_LOGIC;
    signal runWeight2Reg_U0_param_read : STD_LOGIC;
    signal runWeight2Reg_U0_ko_1_read : STD_LOGIC;
    signal runWeight2Reg_U0_co_read : STD_LOGIC;
    signal runWeight2Reg_U0_ro_read : STD_LOGIC;
    signal runWeight2Reg_U0_so_read : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runWeight2Reg_U0_weight_l2_0_ce0 : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runWeight2Reg_U0_weight_l2_1_ce0 : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runWeight2Reg_U0_weight_l2_2_ce0 : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runWeight2Reg_U0_weight_l2_3_ce0 : STD_LOGIC;
    signal runWeight2Reg_U0_param_out_din : STD_LOGIC_VECTOR (1183 downto 0);
    signal runWeight2Reg_U0_param_out_write : STD_LOGIC;
    signal runWeight2Reg_U0_ko_1_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal runWeight2Reg_U0_ko_1_out_write : STD_LOGIC;
    signal runWeight2Reg_U0_co_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal runWeight2Reg_U0_co_out_write : STD_LOGIC;
    signal runWeight2Reg_U0_ro_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal runWeight2Reg_U0_ro_out_write : STD_LOGIC;
    signal runWeight2Reg_U0_so_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal runWeight2Reg_U0_so_out_write : STD_LOGIC;
    signal runWeight2Reg_U0_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_15 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_16 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_17 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_18 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_19 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_20 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_21 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_22 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_23 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_24 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_25 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_26 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_27 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_28 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_29 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_30 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_31 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_32 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_33 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_34 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_35 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_36 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_37 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_38 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_39 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_40 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_41 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_42 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_43 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_44 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_45 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_46 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_47 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_48 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_49 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_50 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_51 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_52 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_53 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_54 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_55 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_56 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_57 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_58 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_59 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_60 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_61 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_62 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_63 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_64 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_65 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_66 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_67 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_68 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_69 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_70 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_71 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_72 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_73 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_74 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_75 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_76 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_77 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_78 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_79 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_80 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_81 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_82 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_83 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_84 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_85 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_86 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_87 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_88 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_89 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_90 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_91 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_92 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_93 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_94 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_95 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_96 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_97 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_98 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_99 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_100 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_101 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_102 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_103 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_104 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_105 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_106 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_107 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_109 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_110 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_111 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_112 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_113 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_114 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_115 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_116 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_117 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_119 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_120 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_121 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_123 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_125 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_127 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_129 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_131 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_133 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_135 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_137 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_139 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_141 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_143 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_145 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_147 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_149 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_151 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_153 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_155 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_157 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_159 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_161 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_163 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_165 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_167 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_169 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_171 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_175 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_177 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_179 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_181 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_183 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_185 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_187 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_189 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_191 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_193 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_195 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_197 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_199 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_201 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_203 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_205 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_207 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_209 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_210 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_211 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_213 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_214 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_215 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_217 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_218 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_219 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_220 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_221 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_223 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_225 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_226 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_227 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_228 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_229 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_230 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_231 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_233 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_234 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_235 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_236 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_237 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_238 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_239 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_240 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_241 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_242 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_243 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_245 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_246 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_247 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_248 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_249 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_250 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_251 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_252 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_253 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_254 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_ap_return_255 : STD_LOGIC_VECTOR (7 downto 0);
    signal runWeight2Reg_U0_weight_l2_0_full_n : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_0_write : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_1_full_n : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_1_write : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_2_full_n : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_2_write : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_3_full_n : STD_LOGIC;
    signal runWeight2Reg_U0_weight_l2_3_write : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_15 : STD_LOGIC;
    signal weight_regfile_15_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_14 : STD_LOGIC;
    signal weight_regfile_15_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_13 : STD_LOGIC;
    signal weight_regfile_15_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_12 : STD_LOGIC;
    signal weight_regfile_15_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_11 : STD_LOGIC;
    signal weight_regfile_15_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_10 : STD_LOGIC;
    signal weight_regfile_15_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_9 : STD_LOGIC;
    signal weight_regfile_15_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_8 : STD_LOGIC;
    signal weight_regfile_15_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_7 : STD_LOGIC;
    signal weight_regfile_15_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_6 : STD_LOGIC;
    signal weight_regfile_15_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_5 : STD_LOGIC;
    signal weight_regfile_15_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_4 : STD_LOGIC;
    signal weight_regfile_15_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_3 : STD_LOGIC;
    signal weight_regfile_15_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_2 : STD_LOGIC;
    signal weight_regfile_15_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_1 : STD_LOGIC;
    signal weight_regfile_15_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_15_0 : STD_LOGIC;
    signal weight_regfile_15_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_15_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_15_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_15 : STD_LOGIC;
    signal weight_regfile_14_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_14 : STD_LOGIC;
    signal weight_regfile_14_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_13 : STD_LOGIC;
    signal weight_regfile_14_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_12 : STD_LOGIC;
    signal weight_regfile_14_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_11 : STD_LOGIC;
    signal weight_regfile_14_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_10 : STD_LOGIC;
    signal weight_regfile_14_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_9 : STD_LOGIC;
    signal weight_regfile_14_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_8 : STD_LOGIC;
    signal weight_regfile_14_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_7 : STD_LOGIC;
    signal weight_regfile_14_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_6 : STD_LOGIC;
    signal weight_regfile_14_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_5 : STD_LOGIC;
    signal weight_regfile_14_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_4 : STD_LOGIC;
    signal weight_regfile_14_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_3 : STD_LOGIC;
    signal weight_regfile_14_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_2 : STD_LOGIC;
    signal weight_regfile_14_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_1 : STD_LOGIC;
    signal weight_regfile_14_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_14_0 : STD_LOGIC;
    signal weight_regfile_14_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_14_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_14_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_15 : STD_LOGIC;
    signal weight_regfile_13_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_14 : STD_LOGIC;
    signal weight_regfile_13_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_13 : STD_LOGIC;
    signal weight_regfile_13_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_12 : STD_LOGIC;
    signal weight_regfile_13_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_11 : STD_LOGIC;
    signal weight_regfile_13_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_10 : STD_LOGIC;
    signal weight_regfile_13_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_9 : STD_LOGIC;
    signal weight_regfile_13_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_8 : STD_LOGIC;
    signal weight_regfile_13_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_7 : STD_LOGIC;
    signal weight_regfile_13_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_6 : STD_LOGIC;
    signal weight_regfile_13_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_5 : STD_LOGIC;
    signal weight_regfile_13_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_4 : STD_LOGIC;
    signal weight_regfile_13_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_3 : STD_LOGIC;
    signal weight_regfile_13_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_2 : STD_LOGIC;
    signal weight_regfile_13_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_1 : STD_LOGIC;
    signal weight_regfile_13_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_13_0 : STD_LOGIC;
    signal weight_regfile_13_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_13_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_13_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_15 : STD_LOGIC;
    signal weight_regfile_12_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_14 : STD_LOGIC;
    signal weight_regfile_12_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_13 : STD_LOGIC;
    signal weight_regfile_12_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_12 : STD_LOGIC;
    signal weight_regfile_12_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_11 : STD_LOGIC;
    signal weight_regfile_12_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_10 : STD_LOGIC;
    signal weight_regfile_12_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_9 : STD_LOGIC;
    signal weight_regfile_12_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_8 : STD_LOGIC;
    signal weight_regfile_12_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_7 : STD_LOGIC;
    signal weight_regfile_12_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_6 : STD_LOGIC;
    signal weight_regfile_12_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_5 : STD_LOGIC;
    signal weight_regfile_12_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_4 : STD_LOGIC;
    signal weight_regfile_12_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_3 : STD_LOGIC;
    signal weight_regfile_12_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_2 : STD_LOGIC;
    signal weight_regfile_12_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_1 : STD_LOGIC;
    signal weight_regfile_12_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_12_0 : STD_LOGIC;
    signal weight_regfile_12_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_12_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_12_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_15 : STD_LOGIC;
    signal weight_regfile_11_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_14 : STD_LOGIC;
    signal weight_regfile_11_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_13 : STD_LOGIC;
    signal weight_regfile_11_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_12 : STD_LOGIC;
    signal weight_regfile_11_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_11 : STD_LOGIC;
    signal weight_regfile_11_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_10 : STD_LOGIC;
    signal weight_regfile_11_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_9 : STD_LOGIC;
    signal weight_regfile_11_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_8 : STD_LOGIC;
    signal weight_regfile_11_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_7 : STD_LOGIC;
    signal weight_regfile_11_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_6 : STD_LOGIC;
    signal weight_regfile_11_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_5 : STD_LOGIC;
    signal weight_regfile_11_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_4 : STD_LOGIC;
    signal weight_regfile_11_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_3 : STD_LOGIC;
    signal weight_regfile_11_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_2 : STD_LOGIC;
    signal weight_regfile_11_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_1 : STD_LOGIC;
    signal weight_regfile_11_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_11_0 : STD_LOGIC;
    signal weight_regfile_11_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_11_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_11_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_15 : STD_LOGIC;
    signal weight_regfile_10_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_14 : STD_LOGIC;
    signal weight_regfile_10_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_13 : STD_LOGIC;
    signal weight_regfile_10_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_12 : STD_LOGIC;
    signal weight_regfile_10_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_11 : STD_LOGIC;
    signal weight_regfile_10_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_10 : STD_LOGIC;
    signal weight_regfile_10_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_9 : STD_LOGIC;
    signal weight_regfile_10_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_8 : STD_LOGIC;
    signal weight_regfile_10_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_7 : STD_LOGIC;
    signal weight_regfile_10_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_6 : STD_LOGIC;
    signal weight_regfile_10_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_5 : STD_LOGIC;
    signal weight_regfile_10_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_4 : STD_LOGIC;
    signal weight_regfile_10_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_3 : STD_LOGIC;
    signal weight_regfile_10_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_2 : STD_LOGIC;
    signal weight_regfile_10_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_1 : STD_LOGIC;
    signal weight_regfile_10_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_10_0 : STD_LOGIC;
    signal weight_regfile_10_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_10_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_10_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_15 : STD_LOGIC;
    signal weight_regfile_9_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_14 : STD_LOGIC;
    signal weight_regfile_9_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_13 : STD_LOGIC;
    signal weight_regfile_9_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_12 : STD_LOGIC;
    signal weight_regfile_9_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_11 : STD_LOGIC;
    signal weight_regfile_9_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_10 : STD_LOGIC;
    signal weight_regfile_9_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_9 : STD_LOGIC;
    signal weight_regfile_9_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_8 : STD_LOGIC;
    signal weight_regfile_9_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_7 : STD_LOGIC;
    signal weight_regfile_9_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_6 : STD_LOGIC;
    signal weight_regfile_9_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_5 : STD_LOGIC;
    signal weight_regfile_9_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_4 : STD_LOGIC;
    signal weight_regfile_9_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_3 : STD_LOGIC;
    signal weight_regfile_9_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_2 : STD_LOGIC;
    signal weight_regfile_9_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_1 : STD_LOGIC;
    signal weight_regfile_9_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_9_0 : STD_LOGIC;
    signal weight_regfile_9_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_9_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_9_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_15 : STD_LOGIC;
    signal weight_regfile_8_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_14 : STD_LOGIC;
    signal weight_regfile_8_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_13 : STD_LOGIC;
    signal weight_regfile_8_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_12 : STD_LOGIC;
    signal weight_regfile_8_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_11 : STD_LOGIC;
    signal weight_regfile_8_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_10 : STD_LOGIC;
    signal weight_regfile_8_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_9 : STD_LOGIC;
    signal weight_regfile_8_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_8 : STD_LOGIC;
    signal weight_regfile_8_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_7 : STD_LOGIC;
    signal weight_regfile_8_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_6 : STD_LOGIC;
    signal weight_regfile_8_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_5 : STD_LOGIC;
    signal weight_regfile_8_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_4 : STD_LOGIC;
    signal weight_regfile_8_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_3 : STD_LOGIC;
    signal weight_regfile_8_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_2 : STD_LOGIC;
    signal weight_regfile_8_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_1 : STD_LOGIC;
    signal weight_regfile_8_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_8_0 : STD_LOGIC;
    signal weight_regfile_8_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_8_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_8_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_15 : STD_LOGIC;
    signal weight_regfile_7_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_14 : STD_LOGIC;
    signal weight_regfile_7_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_13 : STD_LOGIC;
    signal weight_regfile_7_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_12 : STD_LOGIC;
    signal weight_regfile_7_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_11 : STD_LOGIC;
    signal weight_regfile_7_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_10 : STD_LOGIC;
    signal weight_regfile_7_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_9 : STD_LOGIC;
    signal weight_regfile_7_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_8 : STD_LOGIC;
    signal weight_regfile_7_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_7 : STD_LOGIC;
    signal weight_regfile_7_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_6 : STD_LOGIC;
    signal weight_regfile_7_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_5 : STD_LOGIC;
    signal weight_regfile_7_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_4 : STD_LOGIC;
    signal weight_regfile_7_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_3 : STD_LOGIC;
    signal weight_regfile_7_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_2 : STD_LOGIC;
    signal weight_regfile_7_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_1 : STD_LOGIC;
    signal weight_regfile_7_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_7_0 : STD_LOGIC;
    signal weight_regfile_7_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_7_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_7_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_15 : STD_LOGIC;
    signal weight_regfile_6_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_14 : STD_LOGIC;
    signal weight_regfile_6_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_13 : STD_LOGIC;
    signal weight_regfile_6_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_12 : STD_LOGIC;
    signal weight_regfile_6_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_11 : STD_LOGIC;
    signal weight_regfile_6_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_10 : STD_LOGIC;
    signal weight_regfile_6_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_9 : STD_LOGIC;
    signal weight_regfile_6_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_8 : STD_LOGIC;
    signal weight_regfile_6_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_7 : STD_LOGIC;
    signal weight_regfile_6_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_6 : STD_LOGIC;
    signal weight_regfile_6_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_5 : STD_LOGIC;
    signal weight_regfile_6_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_4 : STD_LOGIC;
    signal weight_regfile_6_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_3 : STD_LOGIC;
    signal weight_regfile_6_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_2 : STD_LOGIC;
    signal weight_regfile_6_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_1 : STD_LOGIC;
    signal weight_regfile_6_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_6_0 : STD_LOGIC;
    signal weight_regfile_6_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_6_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_6_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_15 : STD_LOGIC;
    signal weight_regfile_5_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_14 : STD_LOGIC;
    signal weight_regfile_5_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_13 : STD_LOGIC;
    signal weight_regfile_5_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_12 : STD_LOGIC;
    signal weight_regfile_5_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_11 : STD_LOGIC;
    signal weight_regfile_5_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_10 : STD_LOGIC;
    signal weight_regfile_5_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_9 : STD_LOGIC;
    signal weight_regfile_5_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_8 : STD_LOGIC;
    signal weight_regfile_5_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_7 : STD_LOGIC;
    signal weight_regfile_5_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_6 : STD_LOGIC;
    signal weight_regfile_5_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_5 : STD_LOGIC;
    signal weight_regfile_5_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_4 : STD_LOGIC;
    signal weight_regfile_5_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_3 : STD_LOGIC;
    signal weight_regfile_5_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_2 : STD_LOGIC;
    signal weight_regfile_5_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_1 : STD_LOGIC;
    signal weight_regfile_5_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_5_0 : STD_LOGIC;
    signal weight_regfile_5_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_5_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_5_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_15 : STD_LOGIC;
    signal weight_regfile_4_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_14 : STD_LOGIC;
    signal weight_regfile_4_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_13 : STD_LOGIC;
    signal weight_regfile_4_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_12 : STD_LOGIC;
    signal weight_regfile_4_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_11 : STD_LOGIC;
    signal weight_regfile_4_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_10 : STD_LOGIC;
    signal weight_regfile_4_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_9 : STD_LOGIC;
    signal weight_regfile_4_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_8 : STD_LOGIC;
    signal weight_regfile_4_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_7 : STD_LOGIC;
    signal weight_regfile_4_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_6 : STD_LOGIC;
    signal weight_regfile_4_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_5 : STD_LOGIC;
    signal weight_regfile_4_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_4 : STD_LOGIC;
    signal weight_regfile_4_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_3 : STD_LOGIC;
    signal weight_regfile_4_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_2 : STD_LOGIC;
    signal weight_regfile_4_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_1 : STD_LOGIC;
    signal weight_regfile_4_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_4_0 : STD_LOGIC;
    signal weight_regfile_4_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_4_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_4_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_15 : STD_LOGIC;
    signal weight_regfile_3_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_14 : STD_LOGIC;
    signal weight_regfile_3_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_13 : STD_LOGIC;
    signal weight_regfile_3_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_12 : STD_LOGIC;
    signal weight_regfile_3_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_11 : STD_LOGIC;
    signal weight_regfile_3_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_10 : STD_LOGIC;
    signal weight_regfile_3_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_9 : STD_LOGIC;
    signal weight_regfile_3_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_8 : STD_LOGIC;
    signal weight_regfile_3_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_7 : STD_LOGIC;
    signal weight_regfile_3_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_6 : STD_LOGIC;
    signal weight_regfile_3_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_5 : STD_LOGIC;
    signal weight_regfile_3_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_4 : STD_LOGIC;
    signal weight_regfile_3_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_3 : STD_LOGIC;
    signal weight_regfile_3_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_2 : STD_LOGIC;
    signal weight_regfile_3_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_1 : STD_LOGIC;
    signal weight_regfile_3_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_3_0 : STD_LOGIC;
    signal weight_regfile_3_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_3_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_3_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_15 : STD_LOGIC;
    signal weight_regfile_2_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_14 : STD_LOGIC;
    signal weight_regfile_2_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_13 : STD_LOGIC;
    signal weight_regfile_2_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_12 : STD_LOGIC;
    signal weight_regfile_2_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_11 : STD_LOGIC;
    signal weight_regfile_2_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_10 : STD_LOGIC;
    signal weight_regfile_2_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_9 : STD_LOGIC;
    signal weight_regfile_2_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_8 : STD_LOGIC;
    signal weight_regfile_2_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_7 : STD_LOGIC;
    signal weight_regfile_2_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_6 : STD_LOGIC;
    signal weight_regfile_2_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_5 : STD_LOGIC;
    signal weight_regfile_2_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_4 : STD_LOGIC;
    signal weight_regfile_2_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_3 : STD_LOGIC;
    signal weight_regfile_2_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_2 : STD_LOGIC;
    signal weight_regfile_2_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_1 : STD_LOGIC;
    signal weight_regfile_2_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_2_0 : STD_LOGIC;
    signal weight_regfile_2_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_2_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_2_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_15 : STD_LOGIC;
    signal weight_regfile_1_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_14 : STD_LOGIC;
    signal weight_regfile_1_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_13 : STD_LOGIC;
    signal weight_regfile_1_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_12 : STD_LOGIC;
    signal weight_regfile_1_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_11 : STD_LOGIC;
    signal weight_regfile_1_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_10 : STD_LOGIC;
    signal weight_regfile_1_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_9 : STD_LOGIC;
    signal weight_regfile_1_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_8 : STD_LOGIC;
    signal weight_regfile_1_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_7 : STD_LOGIC;
    signal weight_regfile_1_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_6 : STD_LOGIC;
    signal weight_regfile_1_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_5 : STD_LOGIC;
    signal weight_regfile_1_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_4 : STD_LOGIC;
    signal weight_regfile_1_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_3 : STD_LOGIC;
    signal weight_regfile_1_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_2 : STD_LOGIC;
    signal weight_regfile_1_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_1 : STD_LOGIC;
    signal weight_regfile_1_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_1_0 : STD_LOGIC;
    signal weight_regfile_1_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_1_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_1_0 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_15 : STD_LOGIC;
    signal weight_regfile_0_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_15 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_14 : STD_LOGIC;
    signal weight_regfile_0_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_14 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_13 : STD_LOGIC;
    signal weight_regfile_0_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_13 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_12 : STD_LOGIC;
    signal weight_regfile_0_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_12 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_11 : STD_LOGIC;
    signal weight_regfile_0_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_11 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_10 : STD_LOGIC;
    signal weight_regfile_0_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_10 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_9 : STD_LOGIC;
    signal weight_regfile_0_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_9 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_8 : STD_LOGIC;
    signal weight_regfile_0_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_8 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_7 : STD_LOGIC;
    signal weight_regfile_0_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_7 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_6 : STD_LOGIC;
    signal weight_regfile_0_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_6 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_5 : STD_LOGIC;
    signal weight_regfile_0_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_5 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_4 : STD_LOGIC;
    signal weight_regfile_0_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_4 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_3 : STD_LOGIC;
    signal weight_regfile_0_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_3 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_2 : STD_LOGIC;
    signal weight_regfile_0_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_2 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_1 : STD_LOGIC;
    signal weight_regfile_0_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_1 : STD_LOGIC;
    signal ap_channel_done_weight_regfile_0_0 : STD_LOGIC;
    signal weight_regfile_0_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_weight_regfile_0_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_weight_regfile_0_0 : STD_LOGIC;
    signal runDataL2toL1_U0_ap_start : STD_LOGIC;
    signal runDataL2toL1_U0_ap_done : STD_LOGIC;
    signal runDataL2toL1_U0_ap_continue : STD_LOGIC;
    signal runDataL2toL1_U0_ap_idle : STD_LOGIC;
    signal runDataL2toL1_U0_ap_ready : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_0257_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_0257_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_0257_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_0257_i_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal runDataL2toL1_U0_data_l1_1258_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_1258_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_1258_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_1258_i_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal runDataL2toL1_U0_data_l1_2259_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_2259_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_2259_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_2259_i_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal runDataL2toL1_U0_data_l1_3260_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_3260_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_3260_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_3260_i_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal runDataL2toL1_U0_data_l1_4261_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_4261_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_4261_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_4261_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_5262_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_5262_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_5262_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_5262_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_6263_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_6263_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_6263_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_6263_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_7264_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_7264_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_7264_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_7264_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_8265_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_8265_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_8265_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_8265_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_9266_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_9266_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_9266_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_9266_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_10267_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_10267_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_10267_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_10267_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_11268_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_11268_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_11268_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_11268_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_12269_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_12269_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_12269_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_12269_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_13270_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_13270_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_13270_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_13270_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_14271_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_14271_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_14271_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_14271_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_data_l1_15272_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runDataL2toL1_U0_data_l1_15272_i_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_15272_i_we0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_15272_i_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runDataL2toL1_U0_param_read : STD_LOGIC;
    signal runDataL2toL1_U0_co_read : STD_LOGIC;
    signal runDataL2toL1_U0_ho_read : STD_LOGIC;
    signal runDataL2toL1_U0_wo_read : STD_LOGIC;
    signal runDataL2toL1_U0_ro_read : STD_LOGIC;
    signal runDataL2toL1_U0_so_read : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal runDataL2toL1_U0_data_l2_0_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal runDataL2toL1_U0_data_l2_1_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal runDataL2toL1_U0_data_l2_2_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal runDataL2toL1_U0_data_l2_3_ce0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_0_full_n : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_0_write : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_1_full_n : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_1_write : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_2_full_n : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_2_write : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_3_full_n : STD_LOGIC;
    signal runDataL2toL1_U0_data_l2_3_write : STD_LOGIC;
    signal ap_channel_done_data_l1_15 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_15272_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_15 : STD_LOGIC;
    signal ap_channel_done_data_l1_14 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_14271_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_14 : STD_LOGIC;
    signal ap_channel_done_data_l1_13 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_13270_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_13 : STD_LOGIC;
    signal ap_channel_done_data_l1_12 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_12269_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_12 : STD_LOGIC;
    signal ap_channel_done_data_l1_11 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_11268_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_11 : STD_LOGIC;
    signal ap_channel_done_data_l1_10 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_10267_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_10 : STD_LOGIC;
    signal ap_channel_done_data_l1_9 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_9266_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_9 : STD_LOGIC;
    signal ap_channel_done_data_l1_8 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_8265_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_8 : STD_LOGIC;
    signal ap_channel_done_data_l1_7 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_7264_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_7 : STD_LOGIC;
    signal ap_channel_done_data_l1_6 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_6263_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_6 : STD_LOGIC;
    signal ap_channel_done_data_l1_5 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_5262_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_5 : STD_LOGIC;
    signal ap_channel_done_data_l1_4 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_4261_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_4 : STD_LOGIC;
    signal ap_channel_done_data_l1_3 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_3260_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_3 : STD_LOGIC;
    signal ap_channel_done_data_l1_2 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_2259_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_2 : STD_LOGIC;
    signal ap_channel_done_data_l1_1 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_1258_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_1 : STD_LOGIC;
    signal ap_channel_done_data_l1_0 : STD_LOGIC;
    signal runDataL2toL1_U0_data_l1_0257_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_data_l1_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_data_l1_0 : STD_LOGIC;
    signal runSysArr_U0_ap_start : STD_LOGIC;
    signal runSysArr_U0_ap_done : STD_LOGIC;
    signal runSysArr_U0_ap_continue : STD_LOGIC;
    signal runSysArr_U0_ap_idle : STD_LOGIC;
    signal runSysArr_U0_ap_ready : STD_LOGIC;
    signal runSysArr_U0_data_l1_0257_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_0257_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_1258_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_1258_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_2259_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_2259_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_3260_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_3260_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_4261_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_4261_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_5262_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_5262_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_6263_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_6263_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_7264_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_7264_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_8265_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_8265_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_9266_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_9266_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_10267_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_10267_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_11268_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_11268_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_12269_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_12269_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_13270_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_13270_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_14271_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_14271_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_data_l1_15272_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_data_l1_15272_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_0273_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_0273_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_0273_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_0273_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_1274_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_1274_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_1274_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_1274_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_2275_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_2275_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_2275_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_2275_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_3276_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_3276_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_3276_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_3276_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_4277_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_4277_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_4277_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_4277_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_5278_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_5278_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_5278_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_5278_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_6279_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_6279_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_6279_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_6279_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_7280_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_7280_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_7280_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_7280_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_8281_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_8281_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_8281_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_8281_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_9282_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_9282_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_9282_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_9282_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_10283_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_10283_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_10283_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_10283_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_11284_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_11284_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_11284_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_11284_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_12285_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_12285_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_12285_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_12285_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_13286_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_13286_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_13286_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_13286_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_14287_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_14287_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_14287_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_14287_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_output_l1_15288_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runSysArr_U0_output_l1_15288_i_ce0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_15288_i_we0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_15288_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runSysArr_U0_param_read : STD_LOGIC;
    signal runSysArr_U0_param_out_din : STD_LOGIC_VECTOR (1119 downto 0);
    signal runSysArr_U0_param_out_write : STD_LOGIC;
    signal ap_channel_done_output_l1_15 : STD_LOGIC;
    signal runSysArr_U0_output_l1_15288_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_15 : STD_LOGIC;
    signal ap_channel_done_output_l1_14 : STD_LOGIC;
    signal runSysArr_U0_output_l1_14287_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_14 : STD_LOGIC;
    signal ap_channel_done_output_l1_13 : STD_LOGIC;
    signal runSysArr_U0_output_l1_13286_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_13 : STD_LOGIC;
    signal ap_channel_done_output_l1_12 : STD_LOGIC;
    signal runSysArr_U0_output_l1_12285_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_12 : STD_LOGIC;
    signal ap_channel_done_output_l1_11 : STD_LOGIC;
    signal runSysArr_U0_output_l1_11284_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_11 : STD_LOGIC;
    signal ap_channel_done_output_l1_10 : STD_LOGIC;
    signal runSysArr_U0_output_l1_10283_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_10 : STD_LOGIC;
    signal ap_channel_done_output_l1_9 : STD_LOGIC;
    signal runSysArr_U0_output_l1_9282_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_9 : STD_LOGIC;
    signal ap_channel_done_output_l1_8 : STD_LOGIC;
    signal runSysArr_U0_output_l1_8281_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_8 : STD_LOGIC;
    signal ap_channel_done_output_l1_7 : STD_LOGIC;
    signal runSysArr_U0_output_l1_7280_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_7 : STD_LOGIC;
    signal ap_channel_done_output_l1_6 : STD_LOGIC;
    signal runSysArr_U0_output_l1_6279_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_6 : STD_LOGIC;
    signal ap_channel_done_output_l1_5 : STD_LOGIC;
    signal runSysArr_U0_output_l1_5278_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_5 : STD_LOGIC;
    signal ap_channel_done_output_l1_4 : STD_LOGIC;
    signal runSysArr_U0_output_l1_4277_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_4 : STD_LOGIC;
    signal ap_channel_done_output_l1_3 : STD_LOGIC;
    signal runSysArr_U0_output_l1_3276_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_3 : STD_LOGIC;
    signal ap_channel_done_output_l1_2 : STD_LOGIC;
    signal runSysArr_U0_output_l1_2275_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_2 : STD_LOGIC;
    signal ap_channel_done_output_l1_1 : STD_LOGIC;
    signal runSysArr_U0_output_l1_1274_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_1 : STD_LOGIC;
    signal ap_channel_done_output_l1_0 : STD_LOGIC;
    signal runSysArr_U0_output_l1_0273_i_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_output_l1_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_output_l1_0 : STD_LOGIC;
    signal runOutputL1toL2_U0_ap_start : STD_LOGIC;
    signal runOutputL1toL2_U0_ap_done : STD_LOGIC;
    signal runOutputL1toL2_U0_ap_continue : STD_LOGIC;
    signal runOutputL1toL2_U0_ap_idle : STD_LOGIC;
    signal runOutputL1toL2_U0_ap_ready : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_0273_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_0273_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_1274_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_1274_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_2275_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_2275_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_3276_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_3276_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_4277_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_4277_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_5278_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_5278_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_6279_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_6279_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_7280_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_7280_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_8281_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_8281_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_9282_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_9282_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_10283_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_10283_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_11284_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_11284_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_12285_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_12285_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_13286_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_13286_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_14287_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_14287_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l1_15288_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runOutputL1toL2_U0_output_l1_15288_i_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_param_read : STD_LOGIC;
    signal runOutputL1toL2_U0_ko_1_read : STD_LOGIC;
    signal runOutputL1toL2_U0_ho_read : STD_LOGIC;
    signal runOutputL1toL2_U0_wo_read : STD_LOGIC;
    signal runOutputL1toL2_U0_ro_read : STD_LOGIC;
    signal runOutputL1toL2_U0_co_read : STD_LOGIC;
    signal runOutputL1toL2_U0_so_read : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal runOutputL1toL2_U0_output_l2_0_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_0_we0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runOutputL1toL2_U0_output_l2_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal runOutputL1toL2_U0_output_l2_1_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_1_we0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runOutputL1toL2_U0_output_l2_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal runOutputL1toL2_U0_output_l2_2_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_2_we0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runOutputL1toL2_U0_output_l2_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal runOutputL1toL2_U0_output_l2_3_ce0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_3_we0 : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runOutputL1toL2_U0_output_l2_0_full_n : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_0_write : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_1_full_n : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_1_write : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_2_full_n : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_2_write : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_3_full_n : STD_LOGIC;
    signal runOutputL1toL2_U0_output_l2_3_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal data_l1_0_i_full_n : STD_LOGIC;
    signal data_l1_0_t_empty_n : STD_LOGIC;
    signal data_l1_1_i_full_n : STD_LOGIC;
    signal data_l1_1_t_empty_n : STD_LOGIC;
    signal data_l1_2_i_full_n : STD_LOGIC;
    signal data_l1_2_t_empty_n : STD_LOGIC;
    signal data_l1_3_i_full_n : STD_LOGIC;
    signal data_l1_3_t_empty_n : STD_LOGIC;
    signal data_l1_4_i_full_n : STD_LOGIC;
    signal data_l1_4_t_empty_n : STD_LOGIC;
    signal data_l1_5_i_full_n : STD_LOGIC;
    signal data_l1_5_t_empty_n : STD_LOGIC;
    signal data_l1_6_i_full_n : STD_LOGIC;
    signal data_l1_6_t_empty_n : STD_LOGIC;
    signal data_l1_7_i_full_n : STD_LOGIC;
    signal data_l1_7_t_empty_n : STD_LOGIC;
    signal data_l1_8_i_full_n : STD_LOGIC;
    signal data_l1_8_t_empty_n : STD_LOGIC;
    signal data_l1_9_i_full_n : STD_LOGIC;
    signal data_l1_9_t_empty_n : STD_LOGIC;
    signal data_l1_10_i_full_n : STD_LOGIC;
    signal data_l1_10_t_empty_n : STD_LOGIC;
    signal data_l1_11_i_full_n : STD_LOGIC;
    signal data_l1_11_t_empty_n : STD_LOGIC;
    signal data_l1_12_i_full_n : STD_LOGIC;
    signal data_l1_12_t_empty_n : STD_LOGIC;
    signal data_l1_13_i_full_n : STD_LOGIC;
    signal data_l1_13_t_empty_n : STD_LOGIC;
    signal data_l1_14_i_full_n : STD_LOGIC;
    signal data_l1_14_t_empty_n : STD_LOGIC;
    signal data_l1_15_i_full_n : STD_LOGIC;
    signal data_l1_15_t_empty_n : STD_LOGIC;
    signal output_l1_0_i_full_n : STD_LOGIC;
    signal output_l1_0_t_empty_n : STD_LOGIC;
    signal output_l1_1_i_full_n : STD_LOGIC;
    signal output_l1_1_t_empty_n : STD_LOGIC;
    signal output_l1_2_i_full_n : STD_LOGIC;
    signal output_l1_2_t_empty_n : STD_LOGIC;
    signal output_l1_3_i_full_n : STD_LOGIC;
    signal output_l1_3_t_empty_n : STD_LOGIC;
    signal output_l1_4_i_full_n : STD_LOGIC;
    signal output_l1_4_t_empty_n : STD_LOGIC;
    signal output_l1_5_i_full_n : STD_LOGIC;
    signal output_l1_5_t_empty_n : STD_LOGIC;
    signal output_l1_6_i_full_n : STD_LOGIC;
    signal output_l1_6_t_empty_n : STD_LOGIC;
    signal output_l1_7_i_full_n : STD_LOGIC;
    signal output_l1_7_t_empty_n : STD_LOGIC;
    signal output_l1_8_i_full_n : STD_LOGIC;
    signal output_l1_8_t_empty_n : STD_LOGIC;
    signal output_l1_9_i_full_n : STD_LOGIC;
    signal output_l1_9_t_empty_n : STD_LOGIC;
    signal output_l1_10_i_full_n : STD_LOGIC;
    signal output_l1_10_t_empty_n : STD_LOGIC;
    signal output_l1_11_i_full_n : STD_LOGIC;
    signal output_l1_11_t_empty_n : STD_LOGIC;
    signal output_l1_12_i_full_n : STD_LOGIC;
    signal output_l1_12_t_empty_n : STD_LOGIC;
    signal output_l1_13_i_full_n : STD_LOGIC;
    signal output_l1_13_t_empty_n : STD_LOGIC;
    signal output_l1_14_i_full_n : STD_LOGIC;
    signal output_l1_14_t_empty_n : STD_LOGIC;
    signal output_l1_15_i_full_n : STD_LOGIC;
    signal output_l1_15_t_empty_n : STD_LOGIC;
    signal param_c_full_n : STD_LOGIC;
    signal param_c_dout : STD_LOGIC_VECTOR (1183 downto 0);
    signal param_c_empty_n : STD_LOGIC;
    signal param_c1_full_n : STD_LOGIC;
    signal param_c1_dout : STD_LOGIC_VECTOR (1119 downto 0);
    signal param_c1_empty_n : STD_LOGIC;
    signal ko_1_c_full_n : STD_LOGIC;
    signal ko_1_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ko_1_c_empty_n : STD_LOGIC;
    signal co_c_full_n : STD_LOGIC;
    signal co_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal co_c_empty_n : STD_LOGIC;
    signal co_c2_full_n : STD_LOGIC;
    signal co_c2_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal co_c2_empty_n : STD_LOGIC;
    signal ro_c_full_n : STD_LOGIC;
    signal ro_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ro_c_empty_n : STD_LOGIC;
    signal ro_c3_full_n : STD_LOGIC;
    signal ro_c3_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal ro_c3_empty_n : STD_LOGIC;
    signal so_c_full_n : STD_LOGIC;
    signal so_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal so_c_empty_n : STD_LOGIC;
    signal so_c4_full_n : STD_LOGIC;
    signal so_c4_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal so_c4_empty_n : STD_LOGIC;
    signal ho_c_full_n : STD_LOGIC;
    signal ho_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal ho_c_empty_n : STD_LOGIC;
    signal ho_c5_full_n : STD_LOGIC;
    signal ho_c5_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal ho_c5_empty_n : STD_LOGIC;
    signal wo_c_full_n : STD_LOGIC;
    signal wo_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal wo_c_empty_n : STD_LOGIC;
    signal wo_c6_full_n : STD_LOGIC;
    signal wo_c6_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal wo_c6_empty_n : STD_LOGIC;
    signal param_c7_full_n : STD_LOGIC;
    signal param_c7_dout : STD_LOGIC_VECTOR (1183 downto 0);
    signal param_c7_empty_n : STD_LOGIC;
    signal ko_1_c8_full_n : STD_LOGIC;
    signal ko_1_c8_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal ko_1_c8_empty_n : STD_LOGIC;
    signal co_c9_full_n : STD_LOGIC;
    signal co_c9_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal co_c9_empty_n : STD_LOGIC;
    signal ro_c10_full_n : STD_LOGIC;
    signal ro_c10_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ro_c10_empty_n : STD_LOGIC;
    signal so_c11_full_n : STD_LOGIC;
    signal so_c11_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal so_c11_empty_n : STD_LOGIC;
    signal weight_regfile_0_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_0_empty_n : STD_LOGIC;
    signal weight_regfile_0_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_1_empty_n : STD_LOGIC;
    signal weight_regfile_0_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_2_empty_n : STD_LOGIC;
    signal weight_regfile_0_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_3_empty_n : STD_LOGIC;
    signal weight_regfile_0_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_4_empty_n : STD_LOGIC;
    signal weight_regfile_0_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_5_empty_n : STD_LOGIC;
    signal weight_regfile_0_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_6_empty_n : STD_LOGIC;
    signal weight_regfile_0_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_7_empty_n : STD_LOGIC;
    signal weight_regfile_0_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_8_empty_n : STD_LOGIC;
    signal weight_regfile_0_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_9_empty_n : STD_LOGIC;
    signal weight_regfile_0_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_10_empty_n : STD_LOGIC;
    signal weight_regfile_0_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_11_empty_n : STD_LOGIC;
    signal weight_regfile_0_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_12_empty_n : STD_LOGIC;
    signal weight_regfile_0_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_13_empty_n : STD_LOGIC;
    signal weight_regfile_0_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_14_empty_n : STD_LOGIC;
    signal weight_regfile_0_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_0_15_empty_n : STD_LOGIC;
    signal weight_regfile_1_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_0_empty_n : STD_LOGIC;
    signal weight_regfile_1_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_1_empty_n : STD_LOGIC;
    signal weight_regfile_1_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_2_empty_n : STD_LOGIC;
    signal weight_regfile_1_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_3_empty_n : STD_LOGIC;
    signal weight_regfile_1_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_4_empty_n : STD_LOGIC;
    signal weight_regfile_1_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_5_empty_n : STD_LOGIC;
    signal weight_regfile_1_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_6_empty_n : STD_LOGIC;
    signal weight_regfile_1_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_7_empty_n : STD_LOGIC;
    signal weight_regfile_1_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_8_empty_n : STD_LOGIC;
    signal weight_regfile_1_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_9_empty_n : STD_LOGIC;
    signal weight_regfile_1_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_10_empty_n : STD_LOGIC;
    signal weight_regfile_1_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_11_empty_n : STD_LOGIC;
    signal weight_regfile_1_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_12_empty_n : STD_LOGIC;
    signal weight_regfile_1_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_13_empty_n : STD_LOGIC;
    signal weight_regfile_1_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_14_empty_n : STD_LOGIC;
    signal weight_regfile_1_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_1_15_empty_n : STD_LOGIC;
    signal weight_regfile_2_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_0_empty_n : STD_LOGIC;
    signal weight_regfile_2_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_1_empty_n : STD_LOGIC;
    signal weight_regfile_2_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_2_empty_n : STD_LOGIC;
    signal weight_regfile_2_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_3_empty_n : STD_LOGIC;
    signal weight_regfile_2_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_4_empty_n : STD_LOGIC;
    signal weight_regfile_2_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_5_empty_n : STD_LOGIC;
    signal weight_regfile_2_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_6_empty_n : STD_LOGIC;
    signal weight_regfile_2_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_7_empty_n : STD_LOGIC;
    signal weight_regfile_2_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_8_empty_n : STD_LOGIC;
    signal weight_regfile_2_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_9_empty_n : STD_LOGIC;
    signal weight_regfile_2_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_10_empty_n : STD_LOGIC;
    signal weight_regfile_2_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_11_empty_n : STD_LOGIC;
    signal weight_regfile_2_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_12_empty_n : STD_LOGIC;
    signal weight_regfile_2_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_13_empty_n : STD_LOGIC;
    signal weight_regfile_2_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_14_empty_n : STD_LOGIC;
    signal weight_regfile_2_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_2_15_empty_n : STD_LOGIC;
    signal weight_regfile_3_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_0_empty_n : STD_LOGIC;
    signal weight_regfile_3_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_1_empty_n : STD_LOGIC;
    signal weight_regfile_3_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_2_empty_n : STD_LOGIC;
    signal weight_regfile_3_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_3_empty_n : STD_LOGIC;
    signal weight_regfile_3_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_4_empty_n : STD_LOGIC;
    signal weight_regfile_3_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_5_empty_n : STD_LOGIC;
    signal weight_regfile_3_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_6_empty_n : STD_LOGIC;
    signal weight_regfile_3_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_7_empty_n : STD_LOGIC;
    signal weight_regfile_3_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_8_empty_n : STD_LOGIC;
    signal weight_regfile_3_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_9_empty_n : STD_LOGIC;
    signal weight_regfile_3_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_10_empty_n : STD_LOGIC;
    signal weight_regfile_3_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_11_empty_n : STD_LOGIC;
    signal weight_regfile_3_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_12_empty_n : STD_LOGIC;
    signal weight_regfile_3_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_13_empty_n : STD_LOGIC;
    signal weight_regfile_3_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_14_empty_n : STD_LOGIC;
    signal weight_regfile_3_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_3_15_empty_n : STD_LOGIC;
    signal weight_regfile_4_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_0_empty_n : STD_LOGIC;
    signal weight_regfile_4_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_1_empty_n : STD_LOGIC;
    signal weight_regfile_4_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_2_empty_n : STD_LOGIC;
    signal weight_regfile_4_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_3_empty_n : STD_LOGIC;
    signal weight_regfile_4_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_4_empty_n : STD_LOGIC;
    signal weight_regfile_4_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_5_empty_n : STD_LOGIC;
    signal weight_regfile_4_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_6_empty_n : STD_LOGIC;
    signal weight_regfile_4_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_7_empty_n : STD_LOGIC;
    signal weight_regfile_4_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_8_empty_n : STD_LOGIC;
    signal weight_regfile_4_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_9_empty_n : STD_LOGIC;
    signal weight_regfile_4_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_10_empty_n : STD_LOGIC;
    signal weight_regfile_4_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_11_empty_n : STD_LOGIC;
    signal weight_regfile_4_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_12_empty_n : STD_LOGIC;
    signal weight_regfile_4_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_13_empty_n : STD_LOGIC;
    signal weight_regfile_4_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_14_empty_n : STD_LOGIC;
    signal weight_regfile_4_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_4_15_empty_n : STD_LOGIC;
    signal weight_regfile_5_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_0_empty_n : STD_LOGIC;
    signal weight_regfile_5_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_1_empty_n : STD_LOGIC;
    signal weight_regfile_5_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_2_empty_n : STD_LOGIC;
    signal weight_regfile_5_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_3_empty_n : STD_LOGIC;
    signal weight_regfile_5_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_4_empty_n : STD_LOGIC;
    signal weight_regfile_5_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_5_empty_n : STD_LOGIC;
    signal weight_regfile_5_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_6_empty_n : STD_LOGIC;
    signal weight_regfile_5_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_7_empty_n : STD_LOGIC;
    signal weight_regfile_5_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_8_empty_n : STD_LOGIC;
    signal weight_regfile_5_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_9_empty_n : STD_LOGIC;
    signal weight_regfile_5_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_10_empty_n : STD_LOGIC;
    signal weight_regfile_5_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_11_empty_n : STD_LOGIC;
    signal weight_regfile_5_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_12_empty_n : STD_LOGIC;
    signal weight_regfile_5_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_13_empty_n : STD_LOGIC;
    signal weight_regfile_5_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_14_empty_n : STD_LOGIC;
    signal weight_regfile_5_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_5_15_empty_n : STD_LOGIC;
    signal weight_regfile_6_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_0_empty_n : STD_LOGIC;
    signal weight_regfile_6_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_1_empty_n : STD_LOGIC;
    signal weight_regfile_6_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_2_empty_n : STD_LOGIC;
    signal weight_regfile_6_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_3_empty_n : STD_LOGIC;
    signal weight_regfile_6_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_4_empty_n : STD_LOGIC;
    signal weight_regfile_6_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_5_empty_n : STD_LOGIC;
    signal weight_regfile_6_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_6_empty_n : STD_LOGIC;
    signal weight_regfile_6_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_7_empty_n : STD_LOGIC;
    signal weight_regfile_6_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_8_empty_n : STD_LOGIC;
    signal weight_regfile_6_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_9_empty_n : STD_LOGIC;
    signal weight_regfile_6_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_10_empty_n : STD_LOGIC;
    signal weight_regfile_6_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_11_empty_n : STD_LOGIC;
    signal weight_regfile_6_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_12_empty_n : STD_LOGIC;
    signal weight_regfile_6_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_13_empty_n : STD_LOGIC;
    signal weight_regfile_6_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_14_empty_n : STD_LOGIC;
    signal weight_regfile_6_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_6_15_empty_n : STD_LOGIC;
    signal weight_regfile_7_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_0_empty_n : STD_LOGIC;
    signal weight_regfile_7_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_1_empty_n : STD_LOGIC;
    signal weight_regfile_7_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_2_empty_n : STD_LOGIC;
    signal weight_regfile_7_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_3_empty_n : STD_LOGIC;
    signal weight_regfile_7_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_4_empty_n : STD_LOGIC;
    signal weight_regfile_7_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_5_empty_n : STD_LOGIC;
    signal weight_regfile_7_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_6_empty_n : STD_LOGIC;
    signal weight_regfile_7_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_7_empty_n : STD_LOGIC;
    signal weight_regfile_7_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_8_empty_n : STD_LOGIC;
    signal weight_regfile_7_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_9_empty_n : STD_LOGIC;
    signal weight_regfile_7_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_10_empty_n : STD_LOGIC;
    signal weight_regfile_7_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_11_empty_n : STD_LOGIC;
    signal weight_regfile_7_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_12_empty_n : STD_LOGIC;
    signal weight_regfile_7_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_13_empty_n : STD_LOGIC;
    signal weight_regfile_7_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_14_empty_n : STD_LOGIC;
    signal weight_regfile_7_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_7_15_empty_n : STD_LOGIC;
    signal weight_regfile_8_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_0_empty_n : STD_LOGIC;
    signal weight_regfile_8_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_1_empty_n : STD_LOGIC;
    signal weight_regfile_8_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_2_empty_n : STD_LOGIC;
    signal weight_regfile_8_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_3_empty_n : STD_LOGIC;
    signal weight_regfile_8_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_4_empty_n : STD_LOGIC;
    signal weight_regfile_8_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_5_empty_n : STD_LOGIC;
    signal weight_regfile_8_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_6_empty_n : STD_LOGIC;
    signal weight_regfile_8_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_7_empty_n : STD_LOGIC;
    signal weight_regfile_8_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_8_empty_n : STD_LOGIC;
    signal weight_regfile_8_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_9_empty_n : STD_LOGIC;
    signal weight_regfile_8_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_10_empty_n : STD_LOGIC;
    signal weight_regfile_8_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_11_empty_n : STD_LOGIC;
    signal weight_regfile_8_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_12_empty_n : STD_LOGIC;
    signal weight_regfile_8_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_13_empty_n : STD_LOGIC;
    signal weight_regfile_8_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_14_empty_n : STD_LOGIC;
    signal weight_regfile_8_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_8_15_empty_n : STD_LOGIC;
    signal weight_regfile_9_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_0_empty_n : STD_LOGIC;
    signal weight_regfile_9_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_1_empty_n : STD_LOGIC;
    signal weight_regfile_9_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_2_empty_n : STD_LOGIC;
    signal weight_regfile_9_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_3_empty_n : STD_LOGIC;
    signal weight_regfile_9_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_4_empty_n : STD_LOGIC;
    signal weight_regfile_9_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_5_empty_n : STD_LOGIC;
    signal weight_regfile_9_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_6_empty_n : STD_LOGIC;
    signal weight_regfile_9_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_7_empty_n : STD_LOGIC;
    signal weight_regfile_9_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_8_empty_n : STD_LOGIC;
    signal weight_regfile_9_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_9_empty_n : STD_LOGIC;
    signal weight_regfile_9_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_10_empty_n : STD_LOGIC;
    signal weight_regfile_9_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_11_empty_n : STD_LOGIC;
    signal weight_regfile_9_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_12_empty_n : STD_LOGIC;
    signal weight_regfile_9_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_13_empty_n : STD_LOGIC;
    signal weight_regfile_9_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_14_empty_n : STD_LOGIC;
    signal weight_regfile_9_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_9_15_empty_n : STD_LOGIC;
    signal weight_regfile_10_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_0_empty_n : STD_LOGIC;
    signal weight_regfile_10_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_1_empty_n : STD_LOGIC;
    signal weight_regfile_10_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_2_empty_n : STD_LOGIC;
    signal weight_regfile_10_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_3_empty_n : STD_LOGIC;
    signal weight_regfile_10_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_4_empty_n : STD_LOGIC;
    signal weight_regfile_10_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_5_empty_n : STD_LOGIC;
    signal weight_regfile_10_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_6_empty_n : STD_LOGIC;
    signal weight_regfile_10_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_7_empty_n : STD_LOGIC;
    signal weight_regfile_10_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_8_empty_n : STD_LOGIC;
    signal weight_regfile_10_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_9_empty_n : STD_LOGIC;
    signal weight_regfile_10_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_10_empty_n : STD_LOGIC;
    signal weight_regfile_10_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_11_empty_n : STD_LOGIC;
    signal weight_regfile_10_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_12_empty_n : STD_LOGIC;
    signal weight_regfile_10_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_13_empty_n : STD_LOGIC;
    signal weight_regfile_10_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_14_empty_n : STD_LOGIC;
    signal weight_regfile_10_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_10_15_empty_n : STD_LOGIC;
    signal weight_regfile_11_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_0_empty_n : STD_LOGIC;
    signal weight_regfile_11_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_1_empty_n : STD_LOGIC;
    signal weight_regfile_11_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_2_empty_n : STD_LOGIC;
    signal weight_regfile_11_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_3_empty_n : STD_LOGIC;
    signal weight_regfile_11_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_4_empty_n : STD_LOGIC;
    signal weight_regfile_11_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_5_empty_n : STD_LOGIC;
    signal weight_regfile_11_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_6_empty_n : STD_LOGIC;
    signal weight_regfile_11_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_7_empty_n : STD_LOGIC;
    signal weight_regfile_11_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_8_empty_n : STD_LOGIC;
    signal weight_regfile_11_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_9_empty_n : STD_LOGIC;
    signal weight_regfile_11_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_10_empty_n : STD_LOGIC;
    signal weight_regfile_11_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_11_empty_n : STD_LOGIC;
    signal weight_regfile_11_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_12_empty_n : STD_LOGIC;
    signal weight_regfile_11_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_13_empty_n : STD_LOGIC;
    signal weight_regfile_11_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_14_empty_n : STD_LOGIC;
    signal weight_regfile_11_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_11_15_empty_n : STD_LOGIC;
    signal weight_regfile_12_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_0_empty_n : STD_LOGIC;
    signal weight_regfile_12_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_1_empty_n : STD_LOGIC;
    signal weight_regfile_12_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_2_empty_n : STD_LOGIC;
    signal weight_regfile_12_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_3_empty_n : STD_LOGIC;
    signal weight_regfile_12_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_4_empty_n : STD_LOGIC;
    signal weight_regfile_12_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_5_empty_n : STD_LOGIC;
    signal weight_regfile_12_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_6_empty_n : STD_LOGIC;
    signal weight_regfile_12_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_7_empty_n : STD_LOGIC;
    signal weight_regfile_12_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_8_empty_n : STD_LOGIC;
    signal weight_regfile_12_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_9_empty_n : STD_LOGIC;
    signal weight_regfile_12_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_10_empty_n : STD_LOGIC;
    signal weight_regfile_12_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_11_empty_n : STD_LOGIC;
    signal weight_regfile_12_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_12_empty_n : STD_LOGIC;
    signal weight_regfile_12_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_13_empty_n : STD_LOGIC;
    signal weight_regfile_12_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_14_empty_n : STD_LOGIC;
    signal weight_regfile_12_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_12_15_empty_n : STD_LOGIC;
    signal weight_regfile_13_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_0_empty_n : STD_LOGIC;
    signal weight_regfile_13_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_1_empty_n : STD_LOGIC;
    signal weight_regfile_13_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_2_empty_n : STD_LOGIC;
    signal weight_regfile_13_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_3_empty_n : STD_LOGIC;
    signal weight_regfile_13_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_4_empty_n : STD_LOGIC;
    signal weight_regfile_13_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_5_empty_n : STD_LOGIC;
    signal weight_regfile_13_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_6_empty_n : STD_LOGIC;
    signal weight_regfile_13_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_7_empty_n : STD_LOGIC;
    signal weight_regfile_13_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_8_empty_n : STD_LOGIC;
    signal weight_regfile_13_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_9_empty_n : STD_LOGIC;
    signal weight_regfile_13_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_10_empty_n : STD_LOGIC;
    signal weight_regfile_13_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_11_empty_n : STD_LOGIC;
    signal weight_regfile_13_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_12_empty_n : STD_LOGIC;
    signal weight_regfile_13_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_13_empty_n : STD_LOGIC;
    signal weight_regfile_13_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_14_empty_n : STD_LOGIC;
    signal weight_regfile_13_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_13_15_empty_n : STD_LOGIC;
    signal weight_regfile_14_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_0_empty_n : STD_LOGIC;
    signal weight_regfile_14_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_1_empty_n : STD_LOGIC;
    signal weight_regfile_14_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_2_empty_n : STD_LOGIC;
    signal weight_regfile_14_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_3_empty_n : STD_LOGIC;
    signal weight_regfile_14_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_4_empty_n : STD_LOGIC;
    signal weight_regfile_14_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_5_empty_n : STD_LOGIC;
    signal weight_regfile_14_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_6_empty_n : STD_LOGIC;
    signal weight_regfile_14_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_7_empty_n : STD_LOGIC;
    signal weight_regfile_14_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_8_empty_n : STD_LOGIC;
    signal weight_regfile_14_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_9_empty_n : STD_LOGIC;
    signal weight_regfile_14_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_10_empty_n : STD_LOGIC;
    signal weight_regfile_14_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_11_empty_n : STD_LOGIC;
    signal weight_regfile_14_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_12_empty_n : STD_LOGIC;
    signal weight_regfile_14_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_13_empty_n : STD_LOGIC;
    signal weight_regfile_14_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_14_empty_n : STD_LOGIC;
    signal weight_regfile_14_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_14_15_empty_n : STD_LOGIC;
    signal weight_regfile_15_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_0_empty_n : STD_LOGIC;
    signal weight_regfile_15_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_1_empty_n : STD_LOGIC;
    signal weight_regfile_15_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_2_empty_n : STD_LOGIC;
    signal weight_regfile_15_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_3_empty_n : STD_LOGIC;
    signal weight_regfile_15_4_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_4_empty_n : STD_LOGIC;
    signal weight_regfile_15_5_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_5_empty_n : STD_LOGIC;
    signal weight_regfile_15_6_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_6_empty_n : STD_LOGIC;
    signal weight_regfile_15_7_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_7_empty_n : STD_LOGIC;
    signal weight_regfile_15_8_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_8_empty_n : STD_LOGIC;
    signal weight_regfile_15_9_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_9_empty_n : STD_LOGIC;
    signal weight_regfile_15_10_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_10_empty_n : STD_LOGIC;
    signal weight_regfile_15_11_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_11_empty_n : STD_LOGIC;
    signal weight_regfile_15_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_12_empty_n : STD_LOGIC;
    signal weight_regfile_15_13_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_13_empty_n : STD_LOGIC;
    signal weight_regfile_15_14_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_14_empty_n : STD_LOGIC;
    signal weight_regfile_15_15_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_regfile_15_15_empty_n : STD_LOGIC;
    signal param_c12_full_n : STD_LOGIC;
    signal param_c12_dout : STD_LOGIC_VECTOR (1119 downto 0);
    signal param_c12_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_runWeight2Reg_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_runWeight2Reg_U0_ap_ready : STD_LOGIC;
    signal runWeight2Reg_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_runDataL2toL1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_runDataL2toL1_U0_ap_ready : STD_LOGIC;
    signal runDataL2toL1_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_start_full_n : STD_LOGIC;
    signal dataflow_in_loop_LOOP_S_OUTER_entry28_U0_start_write : STD_LOGIC;
    signal runWeight2Reg_U0_start_full_n : STD_LOGIC;
    signal runWeight2Reg_U0_start_write : STD_LOGIC;
    signal runDataL2toL1_U0_start_full_n : STD_LOGIC;
    signal runDataL2toL1_U0_start_write : STD_LOGIC;
    signal runSysArr_U0_start_full_n : STD_LOGIC;
    signal runSysArr_U0_start_write : STD_LOGIC;
    signal runOutputL1toL2_U0_start_full_n : STD_LOGIC;
    signal runOutputL1toL2_U0_start_write : STD_LOGIC;

    component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_entry28 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        param : IN STD_LOGIC_VECTOR (1183 downto 0);
        ko_1 : IN STD_LOGIC_VECTOR (11 downto 0);
        co : IN STD_LOGIC_VECTOR (31 downto 0);
        ro : IN STD_LOGIC_VECTOR (31 downto 0);
        so : IN STD_LOGIC_VECTOR (31 downto 0);
        ho : IN STD_LOGIC_VECTOR (10 downto 0);
        wo : IN STD_LOGIC_VECTOR (10 downto 0);
        param_out_din : OUT STD_LOGIC_VECTOR (1183 downto 0);
        param_out_full_n : IN STD_LOGIC;
        param_out_write : OUT STD_LOGIC;
        param_out1_din : OUT STD_LOGIC_VECTOR (1119 downto 0);
        param_out1_full_n : IN STD_LOGIC;
        param_out1_write : OUT STD_LOGIC;
        ko_1_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        ko_1_out_full_n : IN STD_LOGIC;
        ko_1_out_write : OUT STD_LOGIC;
        co_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        co_out_full_n : IN STD_LOGIC;
        co_out_write : OUT STD_LOGIC;
        co_out2_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        co_out2_full_n : IN STD_LOGIC;
        co_out2_write : OUT STD_LOGIC;
        ro_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ro_out_full_n : IN STD_LOGIC;
        ro_out_write : OUT STD_LOGIC;
        ro_out3_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        ro_out3_full_n : IN STD_LOGIC;
        ro_out3_write : OUT STD_LOGIC;
        so_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        so_out_full_n : IN STD_LOGIC;
        so_out_write : OUT STD_LOGIC;
        so_out4_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        so_out4_full_n : IN STD_LOGIC;
        so_out4_write : OUT STD_LOGIC;
        ho_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        ho_out_full_n : IN STD_LOGIC;
        ho_out_write : OUT STD_LOGIC;
        ho_out5_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        ho_out5_full_n : IN STD_LOGIC;
        ho_out5_write : OUT STD_LOGIC;
        wo_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        wo_out_full_n : IN STD_LOGIC;
        wo_out_write : OUT STD_LOGIC;
        wo_out6_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        wo_out6_full_n : IN STD_LOGIC;
        wo_out6_write : OUT STD_LOGIC );
    end component;


    component Conv_sysarr_runWeight2Reg IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        param_dout : IN STD_LOGIC_VECTOR (1183 downto 0);
        param_empty_n : IN STD_LOGIC;
        param_read : OUT STD_LOGIC;
        ko_1_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        ko_1_empty_n : IN STD_LOGIC;
        ko_1_read : OUT STD_LOGIC;
        co_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        co_empty_n : IN STD_LOGIC;
        co_read : OUT STD_LOGIC;
        ro_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ro_empty_n : IN STD_LOGIC;
        ro_read : OUT STD_LOGIC;
        so_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        so_empty_n : IN STD_LOGIC;
        so_read : OUT STD_LOGIC;
        weight_l2_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_l2_0_ce0 : OUT STD_LOGIC;
        weight_l2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_l2_1_ce0 : OUT STD_LOGIC;
        weight_l2_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_l2_2_ce0 : OUT STD_LOGIC;
        weight_l2_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_l2_3_ce0 : OUT STD_LOGIC;
        weight_l2_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        param_out_din : OUT STD_LOGIC_VECTOR (1183 downto 0);
        param_out_full_n : IN STD_LOGIC;
        param_out_write : OUT STD_LOGIC;
        ko_1_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        ko_1_out_full_n : IN STD_LOGIC;
        ko_1_out_write : OUT STD_LOGIC;
        co_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        co_out_full_n : IN STD_LOGIC;
        co_out_write : OUT STD_LOGIC;
        ro_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ro_out_full_n : IN STD_LOGIC;
        ro_out_write : OUT STD_LOGIC;
        so_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        so_out_full_n : IN STD_LOGIC;
        so_out_write : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_50 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_51 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_52 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_53 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_54 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_55 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_56 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_57 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_58 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_59 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_60 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_61 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_62 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_63 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_64 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_65 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_66 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_67 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_68 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_69 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_70 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_71 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_72 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_73 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_74 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_75 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_76 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_77 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_78 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_79 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_80 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_81 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_82 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_83 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_84 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_85 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_86 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_87 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_88 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_89 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_90 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_91 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_92 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_93 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_94 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_95 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_96 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_97 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_98 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_99 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_100 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_101 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_102 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_103 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_104 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_105 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_106 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_107 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_108 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_109 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_110 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_111 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_112 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_113 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_114 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_115 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_116 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_117 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_118 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_119 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_120 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_121 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_122 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_123 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_124 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_125 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_126 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_127 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_128 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_129 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_130 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_131 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_132 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_133 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_134 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_135 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_136 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_137 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_138 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_139 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_140 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_141 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_142 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_143 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_144 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_145 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_146 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_147 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_148 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_149 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_150 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_151 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_152 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_153 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_154 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_155 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_156 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_157 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_158 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_159 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_160 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_161 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_162 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_163 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_164 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_165 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_166 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_167 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_168 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_169 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_170 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_171 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_172 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_173 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_174 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_175 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_176 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_177 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_178 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_179 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_180 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_181 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_182 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_183 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_184 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_185 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_186 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_187 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_188 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_189 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_190 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_191 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_192 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_193 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_194 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_195 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_196 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_197 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_198 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_199 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_200 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_201 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_202 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_203 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_204 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_205 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_206 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_207 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_208 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_209 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_210 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_211 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_212 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_213 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_214 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_215 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_216 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_217 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_218 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_219 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_220 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_221 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_222 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_223 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_224 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_225 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_226 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_227 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_228 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_229 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_230 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_231 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_232 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_233 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_234 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_235 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_236 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_237 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_238 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_239 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_240 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_241 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_242 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_243 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_244 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_245 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_246 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_247 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_248 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_249 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_250 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_251 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_252 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_253 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_254 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_255 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Conv_sysarr_runDataL2toL1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_l1_0257_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_0257_i_ce0 : OUT STD_LOGIC;
        data_l1_0257_i_we0 : OUT STD_LOGIC;
        data_l1_0257_i_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l1_1258_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_1258_i_ce0 : OUT STD_LOGIC;
        data_l1_1258_i_we0 : OUT STD_LOGIC;
        data_l1_1258_i_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l1_2259_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_2259_i_ce0 : OUT STD_LOGIC;
        data_l1_2259_i_we0 : OUT STD_LOGIC;
        data_l1_2259_i_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l1_3260_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_3260_i_ce0 : OUT STD_LOGIC;
        data_l1_3260_i_we0 : OUT STD_LOGIC;
        data_l1_3260_i_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l1_4261_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_4261_i_ce0 : OUT STD_LOGIC;
        data_l1_4261_i_we0 : OUT STD_LOGIC;
        data_l1_4261_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_5262_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_5262_i_ce0 : OUT STD_LOGIC;
        data_l1_5262_i_we0 : OUT STD_LOGIC;
        data_l1_5262_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_6263_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_6263_i_ce0 : OUT STD_LOGIC;
        data_l1_6263_i_we0 : OUT STD_LOGIC;
        data_l1_6263_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_7264_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_7264_i_ce0 : OUT STD_LOGIC;
        data_l1_7264_i_we0 : OUT STD_LOGIC;
        data_l1_7264_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_8265_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_8265_i_ce0 : OUT STD_LOGIC;
        data_l1_8265_i_we0 : OUT STD_LOGIC;
        data_l1_8265_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_9266_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_9266_i_ce0 : OUT STD_LOGIC;
        data_l1_9266_i_we0 : OUT STD_LOGIC;
        data_l1_9266_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_10267_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_10267_i_ce0 : OUT STD_LOGIC;
        data_l1_10267_i_we0 : OUT STD_LOGIC;
        data_l1_10267_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_11268_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_11268_i_ce0 : OUT STD_LOGIC;
        data_l1_11268_i_we0 : OUT STD_LOGIC;
        data_l1_11268_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_12269_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_12269_i_ce0 : OUT STD_LOGIC;
        data_l1_12269_i_we0 : OUT STD_LOGIC;
        data_l1_12269_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_13270_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_13270_i_ce0 : OUT STD_LOGIC;
        data_l1_13270_i_we0 : OUT STD_LOGIC;
        data_l1_13270_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_14271_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_14271_i_ce0 : OUT STD_LOGIC;
        data_l1_14271_i_we0 : OUT STD_LOGIC;
        data_l1_14271_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_l1_15272_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_15272_i_ce0 : OUT STD_LOGIC;
        data_l1_15272_i_we0 : OUT STD_LOGIC;
        data_l1_15272_i_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        param_dout : IN STD_LOGIC_VECTOR (1119 downto 0);
        param_empty_n : IN STD_LOGIC;
        param_read : OUT STD_LOGIC;
        co_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        co_empty_n : IN STD_LOGIC;
        co_read : OUT STD_LOGIC;
        ho_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        ho_empty_n : IN STD_LOGIC;
        ho_read : OUT STD_LOGIC;
        wo_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        wo_empty_n : IN STD_LOGIC;
        wo_read : OUT STD_LOGIC;
        ro_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        ro_empty_n : IN STD_LOGIC;
        ro_read : OUT STD_LOGIC;
        so_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        so_empty_n : IN STD_LOGIC;
        so_read : OUT STD_LOGIC;
        data_l2_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        data_l2_0_ce0 : OUT STD_LOGIC;
        data_l2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        data_l2_1_ce0 : OUT STD_LOGIC;
        data_l2_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        data_l2_2_ce0 : OUT STD_LOGIC;
        data_l2_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        data_l2_3_ce0 : OUT STD_LOGIC;
        data_l2_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Conv_sysarr_runSysArr IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read32 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read33 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read34 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read35 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read36 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read37 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read38 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read39 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read40 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read41 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read42 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read43 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read44 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read45 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read46 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read47 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read48 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read49 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read50 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read51 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read52 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read53 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read54 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read55 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read56 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read57 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read58 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read59 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read60 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read61 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read62 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read63 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read64 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read65 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read66 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read67 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read68 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read69 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read70 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read71 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read72 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read73 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read74 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read75 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read76 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read77 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read78 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read79 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read80 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read81 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read82 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read83 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read84 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read85 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read86 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read87 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read88 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read89 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read90 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read91 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read92 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read93 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read94 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read95 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read96 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read97 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read98 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read99 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read100 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read101 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read102 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read103 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read104 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read105 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read106 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read107 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read108 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read109 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read110 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read111 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read112 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read113 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read114 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read115 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read116 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read117 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read118 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read119 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read120 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read121 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read122 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read123 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read124 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read125 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read126 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read127 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read128 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read129 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read130 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read131 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read132 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read133 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read134 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read135 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read136 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read137 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read138 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read139 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read140 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read141 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read142 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read143 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read144 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read145 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read146 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read147 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read148 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read149 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read150 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read151 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read152 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read153 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read154 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read155 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read156 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read157 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read158 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read159 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read160 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read161 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read162 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read163 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read164 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read165 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read166 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read167 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read168 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read169 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read170 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read171 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read172 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read173 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read174 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read175 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read176 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read177 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read178 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read179 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read180 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read181 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read182 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read183 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read184 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read185 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read186 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read187 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read188 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read189 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read190 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read191 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read192 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read193 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read194 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read195 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read196 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read197 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read198 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read199 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read200 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read201 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read202 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read203 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read204 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read205 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read206 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read207 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read208 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read209 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read210 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read211 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read212 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read213 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read214 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read215 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read216 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read217 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read218 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read219 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read220 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read221 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read222 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read223 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read224 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read225 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read226 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read227 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read228 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read229 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read230 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read231 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read232 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read233 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read234 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read235 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read236 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read237 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read238 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read239 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read240 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read241 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read242 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read243 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read244 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read245 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read246 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read247 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read248 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read249 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read250 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read251 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read252 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read253 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read254 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read255 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l1_0257_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_0257_i_ce0 : OUT STD_LOGIC;
        data_l1_0257_i_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l1_1258_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_1258_i_ce0 : OUT STD_LOGIC;
        data_l1_1258_i_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l1_2259_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_2259_i_ce0 : OUT STD_LOGIC;
        data_l1_2259_i_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l1_3260_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_3260_i_ce0 : OUT STD_LOGIC;
        data_l1_3260_i_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l1_4261_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_4261_i_ce0 : OUT STD_LOGIC;
        data_l1_4261_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_5262_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_5262_i_ce0 : OUT STD_LOGIC;
        data_l1_5262_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_6263_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_6263_i_ce0 : OUT STD_LOGIC;
        data_l1_6263_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_7264_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_7264_i_ce0 : OUT STD_LOGIC;
        data_l1_7264_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_8265_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_8265_i_ce0 : OUT STD_LOGIC;
        data_l1_8265_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_9266_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_9266_i_ce0 : OUT STD_LOGIC;
        data_l1_9266_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_10267_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_10267_i_ce0 : OUT STD_LOGIC;
        data_l1_10267_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_11268_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_11268_i_ce0 : OUT STD_LOGIC;
        data_l1_11268_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_12269_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_12269_i_ce0 : OUT STD_LOGIC;
        data_l1_12269_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_13270_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_13270_i_ce0 : OUT STD_LOGIC;
        data_l1_13270_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_14271_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_14271_i_ce0 : OUT STD_LOGIC;
        data_l1_14271_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_l1_15272_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_l1_15272_i_ce0 : OUT STD_LOGIC;
        data_l1_15272_i_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        output_l1_0273_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_0273_i_ce0 : OUT STD_LOGIC;
        output_l1_0273_i_we0 : OUT STD_LOGIC;
        output_l1_0273_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1274_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_1274_i_ce0 : OUT STD_LOGIC;
        output_l1_1274_i_we0 : OUT STD_LOGIC;
        output_l1_1274_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2275_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_2275_i_ce0 : OUT STD_LOGIC;
        output_l1_2275_i_we0 : OUT STD_LOGIC;
        output_l1_2275_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3276_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_3276_i_ce0 : OUT STD_LOGIC;
        output_l1_3276_i_we0 : OUT STD_LOGIC;
        output_l1_3276_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_4277_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_4277_i_ce0 : OUT STD_LOGIC;
        output_l1_4277_i_we0 : OUT STD_LOGIC;
        output_l1_4277_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_5278_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_5278_i_ce0 : OUT STD_LOGIC;
        output_l1_5278_i_we0 : OUT STD_LOGIC;
        output_l1_5278_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_6279_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_6279_i_ce0 : OUT STD_LOGIC;
        output_l1_6279_i_we0 : OUT STD_LOGIC;
        output_l1_6279_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_7280_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_7280_i_ce0 : OUT STD_LOGIC;
        output_l1_7280_i_we0 : OUT STD_LOGIC;
        output_l1_7280_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_8281_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_8281_i_ce0 : OUT STD_LOGIC;
        output_l1_8281_i_we0 : OUT STD_LOGIC;
        output_l1_8281_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_9282_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_9282_i_ce0 : OUT STD_LOGIC;
        output_l1_9282_i_we0 : OUT STD_LOGIC;
        output_l1_9282_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_10283_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_10283_i_ce0 : OUT STD_LOGIC;
        output_l1_10283_i_we0 : OUT STD_LOGIC;
        output_l1_10283_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_11284_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_11284_i_ce0 : OUT STD_LOGIC;
        output_l1_11284_i_we0 : OUT STD_LOGIC;
        output_l1_11284_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_12285_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_12285_i_ce0 : OUT STD_LOGIC;
        output_l1_12285_i_we0 : OUT STD_LOGIC;
        output_l1_12285_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_13286_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_13286_i_ce0 : OUT STD_LOGIC;
        output_l1_13286_i_we0 : OUT STD_LOGIC;
        output_l1_13286_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_14287_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_14287_i_ce0 : OUT STD_LOGIC;
        output_l1_14287_i_we0 : OUT STD_LOGIC;
        output_l1_14287_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_15288_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_15288_i_ce0 : OUT STD_LOGIC;
        output_l1_15288_i_we0 : OUT STD_LOGIC;
        output_l1_15288_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        param_dout : IN STD_LOGIC_VECTOR (1183 downto 0);
        param_empty_n : IN STD_LOGIC;
        param_read : OUT STD_LOGIC;
        param_out_din : OUT STD_LOGIC_VECTOR (1119 downto 0);
        param_out_full_n : IN STD_LOGIC;
        param_out_write : OUT STD_LOGIC );
    end component;


    component Conv_sysarr_runOutputL1toL2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_l1_0273_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_0273_i_ce0 : OUT STD_LOGIC;
        output_l1_0273_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1274_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_1274_i_ce0 : OUT STD_LOGIC;
        output_l1_1274_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2275_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_2275_i_ce0 : OUT STD_LOGIC;
        output_l1_2275_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3276_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_3276_i_ce0 : OUT STD_LOGIC;
        output_l1_3276_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_4277_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_4277_i_ce0 : OUT STD_LOGIC;
        output_l1_4277_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_5278_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_5278_i_ce0 : OUT STD_LOGIC;
        output_l1_5278_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_6279_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_6279_i_ce0 : OUT STD_LOGIC;
        output_l1_6279_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_7280_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_7280_i_ce0 : OUT STD_LOGIC;
        output_l1_7280_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_8281_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_8281_i_ce0 : OUT STD_LOGIC;
        output_l1_8281_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_9282_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_9282_i_ce0 : OUT STD_LOGIC;
        output_l1_9282_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_10283_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_10283_i_ce0 : OUT STD_LOGIC;
        output_l1_10283_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_11284_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_11284_i_ce0 : OUT STD_LOGIC;
        output_l1_11284_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_12285_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_12285_i_ce0 : OUT STD_LOGIC;
        output_l1_12285_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_13286_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_13286_i_ce0 : OUT STD_LOGIC;
        output_l1_13286_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_14287_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_14287_i_ce0 : OUT STD_LOGIC;
        output_l1_14287_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_15288_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_l1_15288_i_ce0 : OUT STD_LOGIC;
        output_l1_15288_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        param_dout : IN STD_LOGIC_VECTOR (1119 downto 0);
        param_empty_n : IN STD_LOGIC;
        param_read : OUT STD_LOGIC;
        ko_1_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        ko_1_empty_n : IN STD_LOGIC;
        ko_1_read : OUT STD_LOGIC;
        ho_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        ho_empty_n : IN STD_LOGIC;
        ho_read : OUT STD_LOGIC;
        wo_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        wo_empty_n : IN STD_LOGIC;
        wo_read : OUT STD_LOGIC;
        ro_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ro_empty_n : IN STD_LOGIC;
        ro_read : OUT STD_LOGIC;
        co_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        co_empty_n : IN STD_LOGIC;
        co_read : OUT STD_LOGIC;
        so_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        so_empty_n : IN STD_LOGIC;
        so_read : OUT STD_LOGIC;
        output_l2_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        output_l2_0_ce0 : OUT STD_LOGIC;
        output_l2_0_we0 : OUT STD_LOGIC;
        output_l2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l2_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        output_l2_1_ce0 : OUT STD_LOGIC;
        output_l2_1_we0 : OUT STD_LOGIC;
        output_l2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l2_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        output_l2_2_ce0 : OUT STD_LOGIC;
        output_l2_2_we0 : OUT STD_LOGIC;
        output_l2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l2_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        output_l2_3_ce0 : OUT STD_LOGIC;
        output_l2_3_we0 : OUT STD_LOGIC;
        output_l2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_fifo_w1184_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1183 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1183 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_fifo_w1120_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1119 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1119 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_fifo_w12_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_fifo_w11_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_fifo_w11_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_fifo_w11_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_fifo_w32_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Conv_sysarr_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    data_l1_0_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_0
    generic map (
        DataWidth => 8,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_0257_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_0257_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_0257_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_0257_i_d0,
        i_q0 => data_l1_0_i_q0,
        t_address0 => runSysArr_U0_data_l1_0257_i_address0,
        t_ce0 => runSysArr_U0_data_l1_0257_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => data_l1_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_0_i_full_n,
        i_write => ap_channel_done_data_l1_0,
        t_empty_n => data_l1_0_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_1_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_0
    generic map (
        DataWidth => 8,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_1258_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_1258_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_1258_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_1258_i_d0,
        i_q0 => data_l1_1_i_q0,
        t_address0 => runSysArr_U0_data_l1_1258_i_address0,
        t_ce0 => runSysArr_U0_data_l1_1258_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => data_l1_1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_1_i_full_n,
        i_write => ap_channel_done_data_l1_1,
        t_empty_n => data_l1_1_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_2_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_0
    generic map (
        DataWidth => 8,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_2259_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_2259_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_2259_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_2259_i_d0,
        i_q0 => data_l1_2_i_q0,
        t_address0 => runSysArr_U0_data_l1_2259_i_address0,
        t_ce0 => runSysArr_U0_data_l1_2259_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => data_l1_2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_2_i_full_n,
        i_write => ap_channel_done_data_l1_2,
        t_empty_n => data_l1_2_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_3_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_0
    generic map (
        DataWidth => 8,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_3260_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_3260_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_3260_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_3260_i_d0,
        i_q0 => data_l1_3_i_q0,
        t_address0 => runSysArr_U0_data_l1_3260_i_address0,
        t_ce0 => runSysArr_U0_data_l1_3260_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => data_l1_3_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_3_i_full_n,
        i_write => ap_channel_done_data_l1_3,
        t_empty_n => data_l1_3_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_4_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_4261_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_4261_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_4261_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_4261_i_d0,
        i_q0 => data_l1_4_i_q0,
        t_address0 => runSysArr_U0_data_l1_4261_i_address0,
        t_ce0 => runSysArr_U0_data_l1_4261_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_4_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_4_i_full_n,
        i_write => ap_channel_done_data_l1_4,
        t_empty_n => data_l1_4_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_5_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_5262_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_5262_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_5262_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_5262_i_d0,
        i_q0 => data_l1_5_i_q0,
        t_address0 => runSysArr_U0_data_l1_5262_i_address0,
        t_ce0 => runSysArr_U0_data_l1_5262_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_5_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_5_i_full_n,
        i_write => ap_channel_done_data_l1_5,
        t_empty_n => data_l1_5_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_6_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_6263_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_6263_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_6263_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_6263_i_d0,
        i_q0 => data_l1_6_i_q0,
        t_address0 => runSysArr_U0_data_l1_6263_i_address0,
        t_ce0 => runSysArr_U0_data_l1_6263_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_6_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_6_i_full_n,
        i_write => ap_channel_done_data_l1_6,
        t_empty_n => data_l1_6_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_7_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_7264_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_7264_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_7264_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_7264_i_d0,
        i_q0 => data_l1_7_i_q0,
        t_address0 => runSysArr_U0_data_l1_7264_i_address0,
        t_ce0 => runSysArr_U0_data_l1_7264_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_7_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_7_i_full_n,
        i_write => ap_channel_done_data_l1_7,
        t_empty_n => data_l1_7_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_8_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_8265_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_8265_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_8265_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_8265_i_d0,
        i_q0 => data_l1_8_i_q0,
        t_address0 => runSysArr_U0_data_l1_8265_i_address0,
        t_ce0 => runSysArr_U0_data_l1_8265_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_8_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_8_i_full_n,
        i_write => ap_channel_done_data_l1_8,
        t_empty_n => data_l1_8_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_9_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_9266_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_9266_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_9266_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_9266_i_d0,
        i_q0 => data_l1_9_i_q0,
        t_address0 => runSysArr_U0_data_l1_9266_i_address0,
        t_ce0 => runSysArr_U0_data_l1_9266_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_9_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_9_i_full_n,
        i_write => ap_channel_done_data_l1_9,
        t_empty_n => data_l1_9_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_10_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_10267_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_10267_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_10267_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_10267_i_d0,
        i_q0 => data_l1_10_i_q0,
        t_address0 => runSysArr_U0_data_l1_10267_i_address0,
        t_ce0 => runSysArr_U0_data_l1_10267_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_10_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_10_i_full_n,
        i_write => ap_channel_done_data_l1_10,
        t_empty_n => data_l1_10_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_11_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_11268_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_11268_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_11268_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_11268_i_d0,
        i_q0 => data_l1_11_i_q0,
        t_address0 => runSysArr_U0_data_l1_11268_i_address0,
        t_ce0 => runSysArr_U0_data_l1_11268_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_11_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_11_i_full_n,
        i_write => ap_channel_done_data_l1_11,
        t_empty_n => data_l1_11_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_12_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_12269_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_12269_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_12269_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_12269_i_d0,
        i_q0 => data_l1_12_i_q0,
        t_address0 => runSysArr_U0_data_l1_12269_i_address0,
        t_ce0 => runSysArr_U0_data_l1_12269_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_12_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_12_i_full_n,
        i_write => ap_channel_done_data_l1_12,
        t_empty_n => data_l1_12_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_13_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_13270_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_13270_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_13270_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_13270_i_d0,
        i_q0 => data_l1_13_i_q0,
        t_address0 => runSysArr_U0_data_l1_13270_i_address0,
        t_ce0 => runSysArr_U0_data_l1_13270_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_13_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_13_i_full_n,
        i_write => ap_channel_done_data_l1_13,
        t_empty_n => data_l1_13_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_14_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_14271_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_14271_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_14271_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_14271_i_d0,
        i_q0 => data_l1_14_i_q0,
        t_address0 => runSysArr_U0_data_l1_14271_i_address0,
        t_ce0 => runSysArr_U0_data_l1_14271_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_14_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_14_i_full_n,
        i_write => ap_channel_done_data_l1_14,
        t_empty_n => data_l1_14_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    data_l1_15_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_data_l1_4
    generic map (
        DataWidth => 1,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runDataL2toL1_U0_data_l1_15272_i_address0,
        i_ce0 => runDataL2toL1_U0_data_l1_15272_i_ce0,
        i_we0 => runDataL2toL1_U0_data_l1_15272_i_we0,
        i_d0 => runDataL2toL1_U0_data_l1_15272_i_d0,
        i_q0 => data_l1_15_i_q0,
        t_address0 => runSysArr_U0_data_l1_15272_i_address0,
        t_ce0 => runSysArr_U0_data_l1_15272_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv1_0,
        t_q0 => data_l1_15_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => data_l1_15_i_full_n,
        i_write => ap_channel_done_data_l1_15,
        t_empty_n => data_l1_15_t_empty_n,
        t_read => runSysArr_U0_ap_ready);

    output_l1_0_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_0273_i_address0,
        i_ce0 => runSysArr_U0_output_l1_0273_i_ce0,
        i_we0 => runSysArr_U0_output_l1_0273_i_we0,
        i_d0 => runSysArr_U0_output_l1_0273_i_d0,
        i_q0 => output_l1_0_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_0273_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_0273_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_0_i_full_n,
        i_write => ap_channel_done_output_l1_0,
        t_empty_n => output_l1_0_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_1_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_1274_i_address0,
        i_ce0 => runSysArr_U0_output_l1_1274_i_ce0,
        i_we0 => runSysArr_U0_output_l1_1274_i_we0,
        i_d0 => runSysArr_U0_output_l1_1274_i_d0,
        i_q0 => output_l1_1_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_1274_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_1274_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_1_i_full_n,
        i_write => ap_channel_done_output_l1_1,
        t_empty_n => output_l1_1_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_2_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_2275_i_address0,
        i_ce0 => runSysArr_U0_output_l1_2275_i_ce0,
        i_we0 => runSysArr_U0_output_l1_2275_i_we0,
        i_d0 => runSysArr_U0_output_l1_2275_i_d0,
        i_q0 => output_l1_2_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_2275_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_2275_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_2_i_full_n,
        i_write => ap_channel_done_output_l1_2,
        t_empty_n => output_l1_2_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_3_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_3276_i_address0,
        i_ce0 => runSysArr_U0_output_l1_3276_i_ce0,
        i_we0 => runSysArr_U0_output_l1_3276_i_we0,
        i_d0 => runSysArr_U0_output_l1_3276_i_d0,
        i_q0 => output_l1_3_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_3276_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_3276_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_3_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_3_i_full_n,
        i_write => ap_channel_done_output_l1_3,
        t_empty_n => output_l1_3_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_4_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_4277_i_address0,
        i_ce0 => runSysArr_U0_output_l1_4277_i_ce0,
        i_we0 => runSysArr_U0_output_l1_4277_i_we0,
        i_d0 => runSysArr_U0_output_l1_4277_i_d0,
        i_q0 => output_l1_4_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_4277_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_4277_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_4_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_4_i_full_n,
        i_write => ap_channel_done_output_l1_4,
        t_empty_n => output_l1_4_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_5_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_5278_i_address0,
        i_ce0 => runSysArr_U0_output_l1_5278_i_ce0,
        i_we0 => runSysArr_U0_output_l1_5278_i_we0,
        i_d0 => runSysArr_U0_output_l1_5278_i_d0,
        i_q0 => output_l1_5_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_5278_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_5278_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_5_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_5_i_full_n,
        i_write => ap_channel_done_output_l1_5,
        t_empty_n => output_l1_5_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_6_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_6279_i_address0,
        i_ce0 => runSysArr_U0_output_l1_6279_i_ce0,
        i_we0 => runSysArr_U0_output_l1_6279_i_we0,
        i_d0 => runSysArr_U0_output_l1_6279_i_d0,
        i_q0 => output_l1_6_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_6279_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_6279_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_6_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_6_i_full_n,
        i_write => ap_channel_done_output_l1_6,
        t_empty_n => output_l1_6_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_7_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_7280_i_address0,
        i_ce0 => runSysArr_U0_output_l1_7280_i_ce0,
        i_we0 => runSysArr_U0_output_l1_7280_i_we0,
        i_d0 => runSysArr_U0_output_l1_7280_i_d0,
        i_q0 => output_l1_7_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_7280_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_7280_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_7_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_7_i_full_n,
        i_write => ap_channel_done_output_l1_7,
        t_empty_n => output_l1_7_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_8_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_8281_i_address0,
        i_ce0 => runSysArr_U0_output_l1_8281_i_ce0,
        i_we0 => runSysArr_U0_output_l1_8281_i_we0,
        i_d0 => runSysArr_U0_output_l1_8281_i_d0,
        i_q0 => output_l1_8_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_8281_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_8281_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_8_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_8_i_full_n,
        i_write => ap_channel_done_output_l1_8,
        t_empty_n => output_l1_8_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_9_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_9282_i_address0,
        i_ce0 => runSysArr_U0_output_l1_9282_i_ce0,
        i_we0 => runSysArr_U0_output_l1_9282_i_we0,
        i_d0 => runSysArr_U0_output_l1_9282_i_d0,
        i_q0 => output_l1_9_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_9282_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_9282_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_9_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_9_i_full_n,
        i_write => ap_channel_done_output_l1_9,
        t_empty_n => output_l1_9_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_10_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_10283_i_address0,
        i_ce0 => runSysArr_U0_output_l1_10283_i_ce0,
        i_we0 => runSysArr_U0_output_l1_10283_i_we0,
        i_d0 => runSysArr_U0_output_l1_10283_i_d0,
        i_q0 => output_l1_10_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_10283_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_10283_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_10_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_10_i_full_n,
        i_write => ap_channel_done_output_l1_10,
        t_empty_n => output_l1_10_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_11_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_11284_i_address0,
        i_ce0 => runSysArr_U0_output_l1_11284_i_ce0,
        i_we0 => runSysArr_U0_output_l1_11284_i_we0,
        i_d0 => runSysArr_U0_output_l1_11284_i_d0,
        i_q0 => output_l1_11_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_11284_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_11284_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_11_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_11_i_full_n,
        i_write => ap_channel_done_output_l1_11,
        t_empty_n => output_l1_11_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_12_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_12285_i_address0,
        i_ce0 => runSysArr_U0_output_l1_12285_i_ce0,
        i_we0 => runSysArr_U0_output_l1_12285_i_we0,
        i_d0 => runSysArr_U0_output_l1_12285_i_d0,
        i_q0 => output_l1_12_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_12285_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_12285_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_12_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_12_i_full_n,
        i_write => ap_channel_done_output_l1_12,
        t_empty_n => output_l1_12_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_13_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_13286_i_address0,
        i_ce0 => runSysArr_U0_output_l1_13286_i_ce0,
        i_we0 => runSysArr_U0_output_l1_13286_i_we0,
        i_d0 => runSysArr_U0_output_l1_13286_i_d0,
        i_q0 => output_l1_13_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_13286_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_13286_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_13_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_13_i_full_n,
        i_write => ap_channel_done_output_l1_13,
        t_empty_n => output_l1_13_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_14_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_14287_i_address0,
        i_ce0 => runSysArr_U0_output_l1_14287_i_ce0,
        i_we0 => runSysArr_U0_output_l1_14287_i_we0,
        i_d0 => runSysArr_U0_output_l1_14287_i_d0,
        i_q0 => output_l1_14_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_14287_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_14287_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_14_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_14_i_full_n,
        i_write => ap_channel_done_output_l1_14,
        t_empty_n => output_l1_14_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    output_l1_15_U : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 49,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => runSysArr_U0_output_l1_15288_i_address0,
        i_ce0 => runSysArr_U0_output_l1_15288_i_ce0,
        i_we0 => runSysArr_U0_output_l1_15288_i_we0,
        i_d0 => runSysArr_U0_output_l1_15288_i_d0,
        i_q0 => output_l1_15_i_q0,
        t_address0 => runOutputL1toL2_U0_output_l1_15288_i_address0,
        t_ce0 => runOutputL1toL2_U0_output_l1_15288_i_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => output_l1_15_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_l1_15_i_full_n,
        i_write => ap_channel_done_output_l1_15,
        t_empty_n => output_l1_15_t_empty_n,
        t_read => runOutputL1toL2_U0_ap_ready);

    dataflow_in_loop_LOOP_S_OUTER_entry28_U0 : component Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER_entry28
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_start,
        ap_done => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_done,
        ap_continue => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_continue,
        ap_idle => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_idle,
        ap_ready => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready,
        param => param,
        ko_1 => ko_1,
        co => co,
        ro => ro,
        so => so,
        ho => ho,
        wo => wo,
        param_out_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out_din,
        param_out_full_n => param_c_full_n,
        param_out_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out_write,
        param_out1_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out1_din,
        param_out1_full_n => param_c1_full_n,
        param_out1_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out1_write,
        ko_1_out_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ko_1_out_din,
        ko_1_out_full_n => ko_1_c_full_n,
        ko_1_out_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ko_1_out_write,
        co_out_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out_din,
        co_out_full_n => co_c_full_n,
        co_out_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out_write,
        co_out2_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out2_din,
        co_out2_full_n => co_c2_full_n,
        co_out2_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out2_write,
        ro_out_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out_din,
        ro_out_full_n => ro_c_full_n,
        ro_out_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out_write,
        ro_out3_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out3_din,
        ro_out3_full_n => ro_c3_full_n,
        ro_out3_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out3_write,
        so_out_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out_din,
        so_out_full_n => so_c_full_n,
        so_out_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out_write,
        so_out4_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out4_din,
        so_out4_full_n => so_c4_full_n,
        so_out4_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out4_write,
        ho_out_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out_din,
        ho_out_full_n => ho_c_full_n,
        ho_out_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out_write,
        ho_out5_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out5_din,
        ho_out5_full_n => ho_c5_full_n,
        ho_out5_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out5_write,
        wo_out_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out_din,
        wo_out_full_n => wo_c_full_n,
        wo_out_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out_write,
        wo_out6_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out6_din,
        wo_out6_full_n => wo_c6_full_n,
        wo_out6_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out6_write);

    runWeight2Reg_U0 : component Conv_sysarr_runWeight2Reg
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => runWeight2Reg_U0_ap_start,
        ap_done => runWeight2Reg_U0_ap_done,
        ap_continue => runWeight2Reg_U0_ap_continue,
        ap_idle => runWeight2Reg_U0_ap_idle,
        ap_ready => runWeight2Reg_U0_ap_ready,
        param_dout => param_c_dout,
        param_empty_n => param_c_empty_n,
        param_read => runWeight2Reg_U0_param_read,
        ko_1_dout => ko_1_c_dout,
        ko_1_empty_n => ko_1_c_empty_n,
        ko_1_read => runWeight2Reg_U0_ko_1_read,
        co_dout => co_c_dout,
        co_empty_n => co_c_empty_n,
        co_read => runWeight2Reg_U0_co_read,
        ro_dout => ro_c_dout,
        ro_empty_n => ro_c_empty_n,
        ro_read => runWeight2Reg_U0_ro_read,
        so_dout => so_c_dout,
        so_empty_n => so_c_empty_n,
        so_read => runWeight2Reg_U0_so_read,
        weight_l2_0_address0 => runWeight2Reg_U0_weight_l2_0_address0,
        weight_l2_0_ce0 => runWeight2Reg_U0_weight_l2_0_ce0,
        weight_l2_0_q0 => weight_l2_0_q0,
        weight_l2_1_address0 => runWeight2Reg_U0_weight_l2_1_address0,
        weight_l2_1_ce0 => runWeight2Reg_U0_weight_l2_1_ce0,
        weight_l2_1_q0 => weight_l2_1_q0,
        weight_l2_2_address0 => runWeight2Reg_U0_weight_l2_2_address0,
        weight_l2_2_ce0 => runWeight2Reg_U0_weight_l2_2_ce0,
        weight_l2_2_q0 => weight_l2_2_q0,
        weight_l2_3_address0 => runWeight2Reg_U0_weight_l2_3_address0,
        weight_l2_3_ce0 => runWeight2Reg_U0_weight_l2_3_ce0,
        weight_l2_3_q0 => weight_l2_3_q0,
        param_out_din => runWeight2Reg_U0_param_out_din,
        param_out_full_n => param_c7_full_n,
        param_out_write => runWeight2Reg_U0_param_out_write,
        ko_1_out_din => runWeight2Reg_U0_ko_1_out_din,
        ko_1_out_full_n => ko_1_c8_full_n,
        ko_1_out_write => runWeight2Reg_U0_ko_1_out_write,
        co_out_din => runWeight2Reg_U0_co_out_din,
        co_out_full_n => co_c9_full_n,
        co_out_write => runWeight2Reg_U0_co_out_write,
        ro_out_din => runWeight2Reg_U0_ro_out_din,
        ro_out_full_n => ro_c10_full_n,
        ro_out_write => runWeight2Reg_U0_ro_out_write,
        so_out_din => runWeight2Reg_U0_so_out_din,
        so_out_full_n => so_c11_full_n,
        so_out_write => runWeight2Reg_U0_so_out_write,
        ap_return_0 => runWeight2Reg_U0_ap_return_0,
        ap_return_1 => runWeight2Reg_U0_ap_return_1,
        ap_return_2 => runWeight2Reg_U0_ap_return_2,
        ap_return_3 => runWeight2Reg_U0_ap_return_3,
        ap_return_4 => runWeight2Reg_U0_ap_return_4,
        ap_return_5 => runWeight2Reg_U0_ap_return_5,
        ap_return_6 => runWeight2Reg_U0_ap_return_6,
        ap_return_7 => runWeight2Reg_U0_ap_return_7,
        ap_return_8 => runWeight2Reg_U0_ap_return_8,
        ap_return_9 => runWeight2Reg_U0_ap_return_9,
        ap_return_10 => runWeight2Reg_U0_ap_return_10,
        ap_return_11 => runWeight2Reg_U0_ap_return_11,
        ap_return_12 => runWeight2Reg_U0_ap_return_12,
        ap_return_13 => runWeight2Reg_U0_ap_return_13,
        ap_return_14 => runWeight2Reg_U0_ap_return_14,
        ap_return_15 => runWeight2Reg_U0_ap_return_15,
        ap_return_16 => runWeight2Reg_U0_ap_return_16,
        ap_return_17 => runWeight2Reg_U0_ap_return_17,
        ap_return_18 => runWeight2Reg_U0_ap_return_18,
        ap_return_19 => runWeight2Reg_U0_ap_return_19,
        ap_return_20 => runWeight2Reg_U0_ap_return_20,
        ap_return_21 => runWeight2Reg_U0_ap_return_21,
        ap_return_22 => runWeight2Reg_U0_ap_return_22,
        ap_return_23 => runWeight2Reg_U0_ap_return_23,
        ap_return_24 => runWeight2Reg_U0_ap_return_24,
        ap_return_25 => runWeight2Reg_U0_ap_return_25,
        ap_return_26 => runWeight2Reg_U0_ap_return_26,
        ap_return_27 => runWeight2Reg_U0_ap_return_27,
        ap_return_28 => runWeight2Reg_U0_ap_return_28,
        ap_return_29 => runWeight2Reg_U0_ap_return_29,
        ap_return_30 => runWeight2Reg_U0_ap_return_30,
        ap_return_31 => runWeight2Reg_U0_ap_return_31,
        ap_return_32 => runWeight2Reg_U0_ap_return_32,
        ap_return_33 => runWeight2Reg_U0_ap_return_33,
        ap_return_34 => runWeight2Reg_U0_ap_return_34,
        ap_return_35 => runWeight2Reg_U0_ap_return_35,
        ap_return_36 => runWeight2Reg_U0_ap_return_36,
        ap_return_37 => runWeight2Reg_U0_ap_return_37,
        ap_return_38 => runWeight2Reg_U0_ap_return_38,
        ap_return_39 => runWeight2Reg_U0_ap_return_39,
        ap_return_40 => runWeight2Reg_U0_ap_return_40,
        ap_return_41 => runWeight2Reg_U0_ap_return_41,
        ap_return_42 => runWeight2Reg_U0_ap_return_42,
        ap_return_43 => runWeight2Reg_U0_ap_return_43,
        ap_return_44 => runWeight2Reg_U0_ap_return_44,
        ap_return_45 => runWeight2Reg_U0_ap_return_45,
        ap_return_46 => runWeight2Reg_U0_ap_return_46,
        ap_return_47 => runWeight2Reg_U0_ap_return_47,
        ap_return_48 => runWeight2Reg_U0_ap_return_48,
        ap_return_49 => runWeight2Reg_U0_ap_return_49,
        ap_return_50 => runWeight2Reg_U0_ap_return_50,
        ap_return_51 => runWeight2Reg_U0_ap_return_51,
        ap_return_52 => runWeight2Reg_U0_ap_return_52,
        ap_return_53 => runWeight2Reg_U0_ap_return_53,
        ap_return_54 => runWeight2Reg_U0_ap_return_54,
        ap_return_55 => runWeight2Reg_U0_ap_return_55,
        ap_return_56 => runWeight2Reg_U0_ap_return_56,
        ap_return_57 => runWeight2Reg_U0_ap_return_57,
        ap_return_58 => runWeight2Reg_U0_ap_return_58,
        ap_return_59 => runWeight2Reg_U0_ap_return_59,
        ap_return_60 => runWeight2Reg_U0_ap_return_60,
        ap_return_61 => runWeight2Reg_U0_ap_return_61,
        ap_return_62 => runWeight2Reg_U0_ap_return_62,
        ap_return_63 => runWeight2Reg_U0_ap_return_63,
        ap_return_64 => runWeight2Reg_U0_ap_return_64,
        ap_return_65 => runWeight2Reg_U0_ap_return_65,
        ap_return_66 => runWeight2Reg_U0_ap_return_66,
        ap_return_67 => runWeight2Reg_U0_ap_return_67,
        ap_return_68 => runWeight2Reg_U0_ap_return_68,
        ap_return_69 => runWeight2Reg_U0_ap_return_69,
        ap_return_70 => runWeight2Reg_U0_ap_return_70,
        ap_return_71 => runWeight2Reg_U0_ap_return_71,
        ap_return_72 => runWeight2Reg_U0_ap_return_72,
        ap_return_73 => runWeight2Reg_U0_ap_return_73,
        ap_return_74 => runWeight2Reg_U0_ap_return_74,
        ap_return_75 => runWeight2Reg_U0_ap_return_75,
        ap_return_76 => runWeight2Reg_U0_ap_return_76,
        ap_return_77 => runWeight2Reg_U0_ap_return_77,
        ap_return_78 => runWeight2Reg_U0_ap_return_78,
        ap_return_79 => runWeight2Reg_U0_ap_return_79,
        ap_return_80 => runWeight2Reg_U0_ap_return_80,
        ap_return_81 => runWeight2Reg_U0_ap_return_81,
        ap_return_82 => runWeight2Reg_U0_ap_return_82,
        ap_return_83 => runWeight2Reg_U0_ap_return_83,
        ap_return_84 => runWeight2Reg_U0_ap_return_84,
        ap_return_85 => runWeight2Reg_U0_ap_return_85,
        ap_return_86 => runWeight2Reg_U0_ap_return_86,
        ap_return_87 => runWeight2Reg_U0_ap_return_87,
        ap_return_88 => runWeight2Reg_U0_ap_return_88,
        ap_return_89 => runWeight2Reg_U0_ap_return_89,
        ap_return_90 => runWeight2Reg_U0_ap_return_90,
        ap_return_91 => runWeight2Reg_U0_ap_return_91,
        ap_return_92 => runWeight2Reg_U0_ap_return_92,
        ap_return_93 => runWeight2Reg_U0_ap_return_93,
        ap_return_94 => runWeight2Reg_U0_ap_return_94,
        ap_return_95 => runWeight2Reg_U0_ap_return_95,
        ap_return_96 => runWeight2Reg_U0_ap_return_96,
        ap_return_97 => runWeight2Reg_U0_ap_return_97,
        ap_return_98 => runWeight2Reg_U0_ap_return_98,
        ap_return_99 => runWeight2Reg_U0_ap_return_99,
        ap_return_100 => runWeight2Reg_U0_ap_return_100,
        ap_return_101 => runWeight2Reg_U0_ap_return_101,
        ap_return_102 => runWeight2Reg_U0_ap_return_102,
        ap_return_103 => runWeight2Reg_U0_ap_return_103,
        ap_return_104 => runWeight2Reg_U0_ap_return_104,
        ap_return_105 => runWeight2Reg_U0_ap_return_105,
        ap_return_106 => runWeight2Reg_U0_ap_return_106,
        ap_return_107 => runWeight2Reg_U0_ap_return_107,
        ap_return_108 => runWeight2Reg_U0_ap_return_108,
        ap_return_109 => runWeight2Reg_U0_ap_return_109,
        ap_return_110 => runWeight2Reg_U0_ap_return_110,
        ap_return_111 => runWeight2Reg_U0_ap_return_111,
        ap_return_112 => runWeight2Reg_U0_ap_return_112,
        ap_return_113 => runWeight2Reg_U0_ap_return_113,
        ap_return_114 => runWeight2Reg_U0_ap_return_114,
        ap_return_115 => runWeight2Reg_U0_ap_return_115,
        ap_return_116 => runWeight2Reg_U0_ap_return_116,
        ap_return_117 => runWeight2Reg_U0_ap_return_117,
        ap_return_118 => runWeight2Reg_U0_ap_return_118,
        ap_return_119 => runWeight2Reg_U0_ap_return_119,
        ap_return_120 => runWeight2Reg_U0_ap_return_120,
        ap_return_121 => runWeight2Reg_U0_ap_return_121,
        ap_return_122 => runWeight2Reg_U0_ap_return_122,
        ap_return_123 => runWeight2Reg_U0_ap_return_123,
        ap_return_124 => runWeight2Reg_U0_ap_return_124,
        ap_return_125 => runWeight2Reg_U0_ap_return_125,
        ap_return_126 => runWeight2Reg_U0_ap_return_126,
        ap_return_127 => runWeight2Reg_U0_ap_return_127,
        ap_return_128 => runWeight2Reg_U0_ap_return_128,
        ap_return_129 => runWeight2Reg_U0_ap_return_129,
        ap_return_130 => runWeight2Reg_U0_ap_return_130,
        ap_return_131 => runWeight2Reg_U0_ap_return_131,
        ap_return_132 => runWeight2Reg_U0_ap_return_132,
        ap_return_133 => runWeight2Reg_U0_ap_return_133,
        ap_return_134 => runWeight2Reg_U0_ap_return_134,
        ap_return_135 => runWeight2Reg_U0_ap_return_135,
        ap_return_136 => runWeight2Reg_U0_ap_return_136,
        ap_return_137 => runWeight2Reg_U0_ap_return_137,
        ap_return_138 => runWeight2Reg_U0_ap_return_138,
        ap_return_139 => runWeight2Reg_U0_ap_return_139,
        ap_return_140 => runWeight2Reg_U0_ap_return_140,
        ap_return_141 => runWeight2Reg_U0_ap_return_141,
        ap_return_142 => runWeight2Reg_U0_ap_return_142,
        ap_return_143 => runWeight2Reg_U0_ap_return_143,
        ap_return_144 => runWeight2Reg_U0_ap_return_144,
        ap_return_145 => runWeight2Reg_U0_ap_return_145,
        ap_return_146 => runWeight2Reg_U0_ap_return_146,
        ap_return_147 => runWeight2Reg_U0_ap_return_147,
        ap_return_148 => runWeight2Reg_U0_ap_return_148,
        ap_return_149 => runWeight2Reg_U0_ap_return_149,
        ap_return_150 => runWeight2Reg_U0_ap_return_150,
        ap_return_151 => runWeight2Reg_U0_ap_return_151,
        ap_return_152 => runWeight2Reg_U0_ap_return_152,
        ap_return_153 => runWeight2Reg_U0_ap_return_153,
        ap_return_154 => runWeight2Reg_U0_ap_return_154,
        ap_return_155 => runWeight2Reg_U0_ap_return_155,
        ap_return_156 => runWeight2Reg_U0_ap_return_156,
        ap_return_157 => runWeight2Reg_U0_ap_return_157,
        ap_return_158 => runWeight2Reg_U0_ap_return_158,
        ap_return_159 => runWeight2Reg_U0_ap_return_159,
        ap_return_160 => runWeight2Reg_U0_ap_return_160,
        ap_return_161 => runWeight2Reg_U0_ap_return_161,
        ap_return_162 => runWeight2Reg_U0_ap_return_162,
        ap_return_163 => runWeight2Reg_U0_ap_return_163,
        ap_return_164 => runWeight2Reg_U0_ap_return_164,
        ap_return_165 => runWeight2Reg_U0_ap_return_165,
        ap_return_166 => runWeight2Reg_U0_ap_return_166,
        ap_return_167 => runWeight2Reg_U0_ap_return_167,
        ap_return_168 => runWeight2Reg_U0_ap_return_168,
        ap_return_169 => runWeight2Reg_U0_ap_return_169,
        ap_return_170 => runWeight2Reg_U0_ap_return_170,
        ap_return_171 => runWeight2Reg_U0_ap_return_171,
        ap_return_172 => runWeight2Reg_U0_ap_return_172,
        ap_return_173 => runWeight2Reg_U0_ap_return_173,
        ap_return_174 => runWeight2Reg_U0_ap_return_174,
        ap_return_175 => runWeight2Reg_U0_ap_return_175,
        ap_return_176 => runWeight2Reg_U0_ap_return_176,
        ap_return_177 => runWeight2Reg_U0_ap_return_177,
        ap_return_178 => runWeight2Reg_U0_ap_return_178,
        ap_return_179 => runWeight2Reg_U0_ap_return_179,
        ap_return_180 => runWeight2Reg_U0_ap_return_180,
        ap_return_181 => runWeight2Reg_U0_ap_return_181,
        ap_return_182 => runWeight2Reg_U0_ap_return_182,
        ap_return_183 => runWeight2Reg_U0_ap_return_183,
        ap_return_184 => runWeight2Reg_U0_ap_return_184,
        ap_return_185 => runWeight2Reg_U0_ap_return_185,
        ap_return_186 => runWeight2Reg_U0_ap_return_186,
        ap_return_187 => runWeight2Reg_U0_ap_return_187,
        ap_return_188 => runWeight2Reg_U0_ap_return_188,
        ap_return_189 => runWeight2Reg_U0_ap_return_189,
        ap_return_190 => runWeight2Reg_U0_ap_return_190,
        ap_return_191 => runWeight2Reg_U0_ap_return_191,
        ap_return_192 => runWeight2Reg_U0_ap_return_192,
        ap_return_193 => runWeight2Reg_U0_ap_return_193,
        ap_return_194 => runWeight2Reg_U0_ap_return_194,
        ap_return_195 => runWeight2Reg_U0_ap_return_195,
        ap_return_196 => runWeight2Reg_U0_ap_return_196,
        ap_return_197 => runWeight2Reg_U0_ap_return_197,
        ap_return_198 => runWeight2Reg_U0_ap_return_198,
        ap_return_199 => runWeight2Reg_U0_ap_return_199,
        ap_return_200 => runWeight2Reg_U0_ap_return_200,
        ap_return_201 => runWeight2Reg_U0_ap_return_201,
        ap_return_202 => runWeight2Reg_U0_ap_return_202,
        ap_return_203 => runWeight2Reg_U0_ap_return_203,
        ap_return_204 => runWeight2Reg_U0_ap_return_204,
        ap_return_205 => runWeight2Reg_U0_ap_return_205,
        ap_return_206 => runWeight2Reg_U0_ap_return_206,
        ap_return_207 => runWeight2Reg_U0_ap_return_207,
        ap_return_208 => runWeight2Reg_U0_ap_return_208,
        ap_return_209 => runWeight2Reg_U0_ap_return_209,
        ap_return_210 => runWeight2Reg_U0_ap_return_210,
        ap_return_211 => runWeight2Reg_U0_ap_return_211,
        ap_return_212 => runWeight2Reg_U0_ap_return_212,
        ap_return_213 => runWeight2Reg_U0_ap_return_213,
        ap_return_214 => runWeight2Reg_U0_ap_return_214,
        ap_return_215 => runWeight2Reg_U0_ap_return_215,
        ap_return_216 => runWeight2Reg_U0_ap_return_216,
        ap_return_217 => runWeight2Reg_U0_ap_return_217,
        ap_return_218 => runWeight2Reg_U0_ap_return_218,
        ap_return_219 => runWeight2Reg_U0_ap_return_219,
        ap_return_220 => runWeight2Reg_U0_ap_return_220,
        ap_return_221 => runWeight2Reg_U0_ap_return_221,
        ap_return_222 => runWeight2Reg_U0_ap_return_222,
        ap_return_223 => runWeight2Reg_U0_ap_return_223,
        ap_return_224 => runWeight2Reg_U0_ap_return_224,
        ap_return_225 => runWeight2Reg_U0_ap_return_225,
        ap_return_226 => runWeight2Reg_U0_ap_return_226,
        ap_return_227 => runWeight2Reg_U0_ap_return_227,
        ap_return_228 => runWeight2Reg_U0_ap_return_228,
        ap_return_229 => runWeight2Reg_U0_ap_return_229,
        ap_return_230 => runWeight2Reg_U0_ap_return_230,
        ap_return_231 => runWeight2Reg_U0_ap_return_231,
        ap_return_232 => runWeight2Reg_U0_ap_return_232,
        ap_return_233 => runWeight2Reg_U0_ap_return_233,
        ap_return_234 => runWeight2Reg_U0_ap_return_234,
        ap_return_235 => runWeight2Reg_U0_ap_return_235,
        ap_return_236 => runWeight2Reg_U0_ap_return_236,
        ap_return_237 => runWeight2Reg_U0_ap_return_237,
        ap_return_238 => runWeight2Reg_U0_ap_return_238,
        ap_return_239 => runWeight2Reg_U0_ap_return_239,
        ap_return_240 => runWeight2Reg_U0_ap_return_240,
        ap_return_241 => runWeight2Reg_U0_ap_return_241,
        ap_return_242 => runWeight2Reg_U0_ap_return_242,
        ap_return_243 => runWeight2Reg_U0_ap_return_243,
        ap_return_244 => runWeight2Reg_U0_ap_return_244,
        ap_return_245 => runWeight2Reg_U0_ap_return_245,
        ap_return_246 => runWeight2Reg_U0_ap_return_246,
        ap_return_247 => runWeight2Reg_U0_ap_return_247,
        ap_return_248 => runWeight2Reg_U0_ap_return_248,
        ap_return_249 => runWeight2Reg_U0_ap_return_249,
        ap_return_250 => runWeight2Reg_U0_ap_return_250,
        ap_return_251 => runWeight2Reg_U0_ap_return_251,
        ap_return_252 => runWeight2Reg_U0_ap_return_252,
        ap_return_253 => runWeight2Reg_U0_ap_return_253,
        ap_return_254 => runWeight2Reg_U0_ap_return_254,
        ap_return_255 => runWeight2Reg_U0_ap_return_255);

    runDataL2toL1_U0 : component Conv_sysarr_runDataL2toL1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => runDataL2toL1_U0_ap_start,
        ap_done => runDataL2toL1_U0_ap_done,
        ap_continue => runDataL2toL1_U0_ap_continue,
        ap_idle => runDataL2toL1_U0_ap_idle,
        ap_ready => runDataL2toL1_U0_ap_ready,
        data_l1_0257_i_address0 => runDataL2toL1_U0_data_l1_0257_i_address0,
        data_l1_0257_i_ce0 => runDataL2toL1_U0_data_l1_0257_i_ce0,
        data_l1_0257_i_we0 => runDataL2toL1_U0_data_l1_0257_i_we0,
        data_l1_0257_i_d0 => runDataL2toL1_U0_data_l1_0257_i_d0,
        data_l1_1258_i_address0 => runDataL2toL1_U0_data_l1_1258_i_address0,
        data_l1_1258_i_ce0 => runDataL2toL1_U0_data_l1_1258_i_ce0,
        data_l1_1258_i_we0 => runDataL2toL1_U0_data_l1_1258_i_we0,
        data_l1_1258_i_d0 => runDataL2toL1_U0_data_l1_1258_i_d0,
        data_l1_2259_i_address0 => runDataL2toL1_U0_data_l1_2259_i_address0,
        data_l1_2259_i_ce0 => runDataL2toL1_U0_data_l1_2259_i_ce0,
        data_l1_2259_i_we0 => runDataL2toL1_U0_data_l1_2259_i_we0,
        data_l1_2259_i_d0 => runDataL2toL1_U0_data_l1_2259_i_d0,
        data_l1_3260_i_address0 => runDataL2toL1_U0_data_l1_3260_i_address0,
        data_l1_3260_i_ce0 => runDataL2toL1_U0_data_l1_3260_i_ce0,
        data_l1_3260_i_we0 => runDataL2toL1_U0_data_l1_3260_i_we0,
        data_l1_3260_i_d0 => runDataL2toL1_U0_data_l1_3260_i_d0,
        data_l1_4261_i_address0 => runDataL2toL1_U0_data_l1_4261_i_address0,
        data_l1_4261_i_ce0 => runDataL2toL1_U0_data_l1_4261_i_ce0,
        data_l1_4261_i_we0 => runDataL2toL1_U0_data_l1_4261_i_we0,
        data_l1_4261_i_d0 => runDataL2toL1_U0_data_l1_4261_i_d0,
        data_l1_5262_i_address0 => runDataL2toL1_U0_data_l1_5262_i_address0,
        data_l1_5262_i_ce0 => runDataL2toL1_U0_data_l1_5262_i_ce0,
        data_l1_5262_i_we0 => runDataL2toL1_U0_data_l1_5262_i_we0,
        data_l1_5262_i_d0 => runDataL2toL1_U0_data_l1_5262_i_d0,
        data_l1_6263_i_address0 => runDataL2toL1_U0_data_l1_6263_i_address0,
        data_l1_6263_i_ce0 => runDataL2toL1_U0_data_l1_6263_i_ce0,
        data_l1_6263_i_we0 => runDataL2toL1_U0_data_l1_6263_i_we0,
        data_l1_6263_i_d0 => runDataL2toL1_U0_data_l1_6263_i_d0,
        data_l1_7264_i_address0 => runDataL2toL1_U0_data_l1_7264_i_address0,
        data_l1_7264_i_ce0 => runDataL2toL1_U0_data_l1_7264_i_ce0,
        data_l1_7264_i_we0 => runDataL2toL1_U0_data_l1_7264_i_we0,
        data_l1_7264_i_d0 => runDataL2toL1_U0_data_l1_7264_i_d0,
        data_l1_8265_i_address0 => runDataL2toL1_U0_data_l1_8265_i_address0,
        data_l1_8265_i_ce0 => runDataL2toL1_U0_data_l1_8265_i_ce0,
        data_l1_8265_i_we0 => runDataL2toL1_U0_data_l1_8265_i_we0,
        data_l1_8265_i_d0 => runDataL2toL1_U0_data_l1_8265_i_d0,
        data_l1_9266_i_address0 => runDataL2toL1_U0_data_l1_9266_i_address0,
        data_l1_9266_i_ce0 => runDataL2toL1_U0_data_l1_9266_i_ce0,
        data_l1_9266_i_we0 => runDataL2toL1_U0_data_l1_9266_i_we0,
        data_l1_9266_i_d0 => runDataL2toL1_U0_data_l1_9266_i_d0,
        data_l1_10267_i_address0 => runDataL2toL1_U0_data_l1_10267_i_address0,
        data_l1_10267_i_ce0 => runDataL2toL1_U0_data_l1_10267_i_ce0,
        data_l1_10267_i_we0 => runDataL2toL1_U0_data_l1_10267_i_we0,
        data_l1_10267_i_d0 => runDataL2toL1_U0_data_l1_10267_i_d0,
        data_l1_11268_i_address0 => runDataL2toL1_U0_data_l1_11268_i_address0,
        data_l1_11268_i_ce0 => runDataL2toL1_U0_data_l1_11268_i_ce0,
        data_l1_11268_i_we0 => runDataL2toL1_U0_data_l1_11268_i_we0,
        data_l1_11268_i_d0 => runDataL2toL1_U0_data_l1_11268_i_d0,
        data_l1_12269_i_address0 => runDataL2toL1_U0_data_l1_12269_i_address0,
        data_l1_12269_i_ce0 => runDataL2toL1_U0_data_l1_12269_i_ce0,
        data_l1_12269_i_we0 => runDataL2toL1_U0_data_l1_12269_i_we0,
        data_l1_12269_i_d0 => runDataL2toL1_U0_data_l1_12269_i_d0,
        data_l1_13270_i_address0 => runDataL2toL1_U0_data_l1_13270_i_address0,
        data_l1_13270_i_ce0 => runDataL2toL1_U0_data_l1_13270_i_ce0,
        data_l1_13270_i_we0 => runDataL2toL1_U0_data_l1_13270_i_we0,
        data_l1_13270_i_d0 => runDataL2toL1_U0_data_l1_13270_i_d0,
        data_l1_14271_i_address0 => runDataL2toL1_U0_data_l1_14271_i_address0,
        data_l1_14271_i_ce0 => runDataL2toL1_U0_data_l1_14271_i_ce0,
        data_l1_14271_i_we0 => runDataL2toL1_U0_data_l1_14271_i_we0,
        data_l1_14271_i_d0 => runDataL2toL1_U0_data_l1_14271_i_d0,
        data_l1_15272_i_address0 => runDataL2toL1_U0_data_l1_15272_i_address0,
        data_l1_15272_i_ce0 => runDataL2toL1_U0_data_l1_15272_i_ce0,
        data_l1_15272_i_we0 => runDataL2toL1_U0_data_l1_15272_i_we0,
        data_l1_15272_i_d0 => runDataL2toL1_U0_data_l1_15272_i_d0,
        param_dout => param_c1_dout,
        param_empty_n => param_c1_empty_n,
        param_read => runDataL2toL1_U0_param_read,
        co_dout => co_c2_dout,
        co_empty_n => co_c2_empty_n,
        co_read => runDataL2toL1_U0_co_read,
        ho_dout => ho_c_dout,
        ho_empty_n => ho_c_empty_n,
        ho_read => runDataL2toL1_U0_ho_read,
        wo_dout => wo_c_dout,
        wo_empty_n => wo_c_empty_n,
        wo_read => runDataL2toL1_U0_wo_read,
        ro_dout => ro_c3_dout,
        ro_empty_n => ro_c3_empty_n,
        ro_read => runDataL2toL1_U0_ro_read,
        so_dout => so_c4_dout,
        so_empty_n => so_c4_empty_n,
        so_read => runDataL2toL1_U0_so_read,
        data_l2_0_address0 => runDataL2toL1_U0_data_l2_0_address0,
        data_l2_0_ce0 => runDataL2toL1_U0_data_l2_0_ce0,
        data_l2_0_q0 => data_l2_0_q0,
        data_l2_1_address0 => runDataL2toL1_U0_data_l2_1_address0,
        data_l2_1_ce0 => runDataL2toL1_U0_data_l2_1_ce0,
        data_l2_1_q0 => data_l2_1_q0,
        data_l2_2_address0 => runDataL2toL1_U0_data_l2_2_address0,
        data_l2_2_ce0 => runDataL2toL1_U0_data_l2_2_ce0,
        data_l2_2_q0 => data_l2_2_q0,
        data_l2_3_address0 => runDataL2toL1_U0_data_l2_3_address0,
        data_l2_3_ce0 => runDataL2toL1_U0_data_l2_3_ce0,
        data_l2_3_q0 => data_l2_3_q0);

    runSysArr_U0 : component Conv_sysarr_runSysArr
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => runSysArr_U0_ap_start,
        ap_done => runSysArr_U0_ap_done,
        ap_continue => runSysArr_U0_ap_continue,
        ap_idle => runSysArr_U0_ap_idle,
        ap_ready => runSysArr_U0_ap_ready,
        p_read => weight_regfile_0_0_dout,
        p_read1 => weight_regfile_0_1_dout,
        p_read2 => weight_regfile_0_2_dout,
        p_read3 => weight_regfile_0_3_dout,
        p_read4 => weight_regfile_0_4_dout,
        p_read5 => weight_regfile_0_5_dout,
        p_read6 => weight_regfile_0_6_dout,
        p_read7 => weight_regfile_0_7_dout,
        p_read8 => weight_regfile_0_8_dout,
        p_read9 => weight_regfile_0_9_dout,
        p_read10 => weight_regfile_0_10_dout,
        p_read11 => weight_regfile_0_11_dout,
        p_read12 => weight_regfile_0_12_dout,
        p_read13 => weight_regfile_0_13_dout,
        p_read14 => weight_regfile_0_14_dout,
        p_read15 => weight_regfile_0_15_dout,
        p_read16 => weight_regfile_1_0_dout,
        p_read17 => weight_regfile_1_1_dout,
        p_read18 => weight_regfile_1_2_dout,
        p_read19 => weight_regfile_1_3_dout,
        p_read20 => weight_regfile_1_4_dout,
        p_read21 => weight_regfile_1_5_dout,
        p_read22 => weight_regfile_1_6_dout,
        p_read23 => weight_regfile_1_7_dout,
        p_read24 => weight_regfile_1_8_dout,
        p_read25 => weight_regfile_1_9_dout,
        p_read26 => weight_regfile_1_10_dout,
        p_read27 => weight_regfile_1_11_dout,
        p_read28 => weight_regfile_1_12_dout,
        p_read29 => weight_regfile_1_13_dout,
        p_read30 => weight_regfile_1_14_dout,
        p_read31 => weight_regfile_1_15_dout,
        p_read32 => weight_regfile_2_0_dout,
        p_read33 => weight_regfile_2_1_dout,
        p_read34 => weight_regfile_2_2_dout,
        p_read35 => weight_regfile_2_3_dout,
        p_read36 => weight_regfile_2_4_dout,
        p_read37 => weight_regfile_2_5_dout,
        p_read38 => weight_regfile_2_6_dout,
        p_read39 => weight_regfile_2_7_dout,
        p_read40 => weight_regfile_2_8_dout,
        p_read41 => weight_regfile_2_9_dout,
        p_read42 => weight_regfile_2_10_dout,
        p_read43 => weight_regfile_2_11_dout,
        p_read44 => weight_regfile_2_12_dout,
        p_read45 => weight_regfile_2_13_dout,
        p_read46 => weight_regfile_2_14_dout,
        p_read47 => weight_regfile_2_15_dout,
        p_read48 => weight_regfile_3_0_dout,
        p_read49 => weight_regfile_3_1_dout,
        p_read50 => weight_regfile_3_2_dout,
        p_read51 => weight_regfile_3_3_dout,
        p_read52 => weight_regfile_3_4_dout,
        p_read53 => weight_regfile_3_5_dout,
        p_read54 => weight_regfile_3_6_dout,
        p_read55 => weight_regfile_3_7_dout,
        p_read56 => weight_regfile_3_8_dout,
        p_read57 => weight_regfile_3_9_dout,
        p_read58 => weight_regfile_3_10_dout,
        p_read59 => weight_regfile_3_11_dout,
        p_read60 => weight_regfile_3_12_dout,
        p_read61 => weight_regfile_3_13_dout,
        p_read62 => weight_regfile_3_14_dout,
        p_read63 => weight_regfile_3_15_dout,
        p_read64 => weight_regfile_4_0_dout,
        p_read65 => weight_regfile_4_1_dout,
        p_read66 => weight_regfile_4_2_dout,
        p_read67 => weight_regfile_4_3_dout,
        p_read68 => weight_regfile_4_4_dout,
        p_read69 => weight_regfile_4_5_dout,
        p_read70 => weight_regfile_4_6_dout,
        p_read71 => weight_regfile_4_7_dout,
        p_read72 => weight_regfile_4_8_dout,
        p_read73 => weight_regfile_4_9_dout,
        p_read74 => weight_regfile_4_10_dout,
        p_read75 => weight_regfile_4_11_dout,
        p_read76 => weight_regfile_4_12_dout,
        p_read77 => weight_regfile_4_13_dout,
        p_read78 => weight_regfile_4_14_dout,
        p_read79 => weight_regfile_4_15_dout,
        p_read80 => weight_regfile_5_0_dout,
        p_read81 => weight_regfile_5_1_dout,
        p_read82 => weight_regfile_5_2_dout,
        p_read83 => weight_regfile_5_3_dout,
        p_read84 => weight_regfile_5_4_dout,
        p_read85 => weight_regfile_5_5_dout,
        p_read86 => weight_regfile_5_6_dout,
        p_read87 => weight_regfile_5_7_dout,
        p_read88 => weight_regfile_5_8_dout,
        p_read89 => weight_regfile_5_9_dout,
        p_read90 => weight_regfile_5_10_dout,
        p_read91 => weight_regfile_5_11_dout,
        p_read92 => weight_regfile_5_12_dout,
        p_read93 => weight_regfile_5_13_dout,
        p_read94 => weight_regfile_5_14_dout,
        p_read95 => weight_regfile_5_15_dout,
        p_read96 => weight_regfile_6_0_dout,
        p_read97 => weight_regfile_6_1_dout,
        p_read98 => weight_regfile_6_2_dout,
        p_read99 => weight_regfile_6_3_dout,
        p_read100 => weight_regfile_6_4_dout,
        p_read101 => weight_regfile_6_5_dout,
        p_read102 => weight_regfile_6_6_dout,
        p_read103 => weight_regfile_6_7_dout,
        p_read104 => weight_regfile_6_8_dout,
        p_read105 => weight_regfile_6_9_dout,
        p_read106 => weight_regfile_6_10_dout,
        p_read107 => weight_regfile_6_11_dout,
        p_read108 => weight_regfile_6_12_dout,
        p_read109 => weight_regfile_6_13_dout,
        p_read110 => weight_regfile_6_14_dout,
        p_read111 => weight_regfile_6_15_dout,
        p_read112 => weight_regfile_7_0_dout,
        p_read113 => weight_regfile_7_1_dout,
        p_read114 => weight_regfile_7_2_dout,
        p_read115 => weight_regfile_7_3_dout,
        p_read116 => weight_regfile_7_4_dout,
        p_read117 => weight_regfile_7_5_dout,
        p_read118 => weight_regfile_7_6_dout,
        p_read119 => weight_regfile_7_7_dout,
        p_read120 => weight_regfile_7_8_dout,
        p_read121 => weight_regfile_7_9_dout,
        p_read122 => weight_regfile_7_10_dout,
        p_read123 => weight_regfile_7_11_dout,
        p_read124 => weight_regfile_7_12_dout,
        p_read125 => weight_regfile_7_13_dout,
        p_read126 => weight_regfile_7_14_dout,
        p_read127 => weight_regfile_7_15_dout,
        p_read128 => weight_regfile_8_0_dout,
        p_read129 => weight_regfile_8_1_dout,
        p_read130 => weight_regfile_8_2_dout,
        p_read131 => weight_regfile_8_3_dout,
        p_read132 => weight_regfile_8_4_dout,
        p_read133 => weight_regfile_8_5_dout,
        p_read134 => weight_regfile_8_6_dout,
        p_read135 => weight_regfile_8_7_dout,
        p_read136 => weight_regfile_8_8_dout,
        p_read137 => weight_regfile_8_9_dout,
        p_read138 => weight_regfile_8_10_dout,
        p_read139 => weight_regfile_8_11_dout,
        p_read140 => weight_regfile_8_12_dout,
        p_read141 => weight_regfile_8_13_dout,
        p_read142 => weight_regfile_8_14_dout,
        p_read143 => weight_regfile_8_15_dout,
        p_read144 => weight_regfile_9_0_dout,
        p_read145 => weight_regfile_9_1_dout,
        p_read146 => weight_regfile_9_2_dout,
        p_read147 => weight_regfile_9_3_dout,
        p_read148 => weight_regfile_9_4_dout,
        p_read149 => weight_regfile_9_5_dout,
        p_read150 => weight_regfile_9_6_dout,
        p_read151 => weight_regfile_9_7_dout,
        p_read152 => weight_regfile_9_8_dout,
        p_read153 => weight_regfile_9_9_dout,
        p_read154 => weight_regfile_9_10_dout,
        p_read155 => weight_regfile_9_11_dout,
        p_read156 => weight_regfile_9_12_dout,
        p_read157 => weight_regfile_9_13_dout,
        p_read158 => weight_regfile_9_14_dout,
        p_read159 => weight_regfile_9_15_dout,
        p_read160 => weight_regfile_10_0_dout,
        p_read161 => weight_regfile_10_1_dout,
        p_read162 => weight_regfile_10_2_dout,
        p_read163 => weight_regfile_10_3_dout,
        p_read164 => weight_regfile_10_4_dout,
        p_read165 => weight_regfile_10_5_dout,
        p_read166 => weight_regfile_10_6_dout,
        p_read167 => weight_regfile_10_7_dout,
        p_read168 => weight_regfile_10_8_dout,
        p_read169 => weight_regfile_10_9_dout,
        p_read170 => weight_regfile_10_10_dout,
        p_read171 => weight_regfile_10_11_dout,
        p_read172 => weight_regfile_10_12_dout,
        p_read173 => weight_regfile_10_13_dout,
        p_read174 => weight_regfile_10_14_dout,
        p_read175 => weight_regfile_10_15_dout,
        p_read176 => weight_regfile_11_0_dout,
        p_read177 => weight_regfile_11_1_dout,
        p_read178 => weight_regfile_11_2_dout,
        p_read179 => weight_regfile_11_3_dout,
        p_read180 => weight_regfile_11_4_dout,
        p_read181 => weight_regfile_11_5_dout,
        p_read182 => weight_regfile_11_6_dout,
        p_read183 => weight_regfile_11_7_dout,
        p_read184 => weight_regfile_11_8_dout,
        p_read185 => weight_regfile_11_9_dout,
        p_read186 => weight_regfile_11_10_dout,
        p_read187 => weight_regfile_11_11_dout,
        p_read188 => weight_regfile_11_12_dout,
        p_read189 => weight_regfile_11_13_dout,
        p_read190 => weight_regfile_11_14_dout,
        p_read191 => weight_regfile_11_15_dout,
        p_read192 => weight_regfile_12_0_dout,
        p_read193 => weight_regfile_12_1_dout,
        p_read194 => weight_regfile_12_2_dout,
        p_read195 => weight_regfile_12_3_dout,
        p_read196 => weight_regfile_12_4_dout,
        p_read197 => weight_regfile_12_5_dout,
        p_read198 => weight_regfile_12_6_dout,
        p_read199 => weight_regfile_12_7_dout,
        p_read200 => weight_regfile_12_8_dout,
        p_read201 => weight_regfile_12_9_dout,
        p_read202 => weight_regfile_12_10_dout,
        p_read203 => weight_regfile_12_11_dout,
        p_read204 => weight_regfile_12_12_dout,
        p_read205 => weight_regfile_12_13_dout,
        p_read206 => weight_regfile_12_14_dout,
        p_read207 => weight_regfile_12_15_dout,
        p_read208 => weight_regfile_13_0_dout,
        p_read209 => weight_regfile_13_1_dout,
        p_read210 => weight_regfile_13_2_dout,
        p_read211 => weight_regfile_13_3_dout,
        p_read212 => weight_regfile_13_4_dout,
        p_read213 => weight_regfile_13_5_dout,
        p_read214 => weight_regfile_13_6_dout,
        p_read215 => weight_regfile_13_7_dout,
        p_read216 => weight_regfile_13_8_dout,
        p_read217 => weight_regfile_13_9_dout,
        p_read218 => weight_regfile_13_10_dout,
        p_read219 => weight_regfile_13_11_dout,
        p_read220 => weight_regfile_13_12_dout,
        p_read221 => weight_regfile_13_13_dout,
        p_read222 => weight_regfile_13_14_dout,
        p_read223 => weight_regfile_13_15_dout,
        p_read224 => weight_regfile_14_0_dout,
        p_read225 => weight_regfile_14_1_dout,
        p_read226 => weight_regfile_14_2_dout,
        p_read227 => weight_regfile_14_3_dout,
        p_read228 => weight_regfile_14_4_dout,
        p_read229 => weight_regfile_14_5_dout,
        p_read230 => weight_regfile_14_6_dout,
        p_read231 => weight_regfile_14_7_dout,
        p_read232 => weight_regfile_14_8_dout,
        p_read233 => weight_regfile_14_9_dout,
        p_read234 => weight_regfile_14_10_dout,
        p_read235 => weight_regfile_14_11_dout,
        p_read236 => weight_regfile_14_12_dout,
        p_read237 => weight_regfile_14_13_dout,
        p_read238 => weight_regfile_14_14_dout,
        p_read239 => weight_regfile_14_15_dout,
        p_read240 => weight_regfile_15_0_dout,
        p_read241 => weight_regfile_15_1_dout,
        p_read242 => weight_regfile_15_2_dout,
        p_read243 => weight_regfile_15_3_dout,
        p_read244 => weight_regfile_15_4_dout,
        p_read245 => weight_regfile_15_5_dout,
        p_read246 => weight_regfile_15_6_dout,
        p_read247 => weight_regfile_15_7_dout,
        p_read248 => weight_regfile_15_8_dout,
        p_read249 => weight_regfile_15_9_dout,
        p_read250 => weight_regfile_15_10_dout,
        p_read251 => weight_regfile_15_11_dout,
        p_read252 => weight_regfile_15_12_dout,
        p_read253 => weight_regfile_15_13_dout,
        p_read254 => weight_regfile_15_14_dout,
        p_read255 => weight_regfile_15_15_dout,
        data_l1_0257_i_address0 => runSysArr_U0_data_l1_0257_i_address0,
        data_l1_0257_i_ce0 => runSysArr_U0_data_l1_0257_i_ce0,
        data_l1_0257_i_q0 => data_l1_0_t_q0,
        data_l1_1258_i_address0 => runSysArr_U0_data_l1_1258_i_address0,
        data_l1_1258_i_ce0 => runSysArr_U0_data_l1_1258_i_ce0,
        data_l1_1258_i_q0 => data_l1_1_t_q0,
        data_l1_2259_i_address0 => runSysArr_U0_data_l1_2259_i_address0,
        data_l1_2259_i_ce0 => runSysArr_U0_data_l1_2259_i_ce0,
        data_l1_2259_i_q0 => data_l1_2_t_q0,
        data_l1_3260_i_address0 => runSysArr_U0_data_l1_3260_i_address0,
        data_l1_3260_i_ce0 => runSysArr_U0_data_l1_3260_i_ce0,
        data_l1_3260_i_q0 => data_l1_3_t_q0,
        data_l1_4261_i_address0 => runSysArr_U0_data_l1_4261_i_address0,
        data_l1_4261_i_ce0 => runSysArr_U0_data_l1_4261_i_ce0,
        data_l1_4261_i_q0 => data_l1_4_t_q0,
        data_l1_5262_i_address0 => runSysArr_U0_data_l1_5262_i_address0,
        data_l1_5262_i_ce0 => runSysArr_U0_data_l1_5262_i_ce0,
        data_l1_5262_i_q0 => data_l1_5_t_q0,
        data_l1_6263_i_address0 => runSysArr_U0_data_l1_6263_i_address0,
        data_l1_6263_i_ce0 => runSysArr_U0_data_l1_6263_i_ce0,
        data_l1_6263_i_q0 => data_l1_6_t_q0,
        data_l1_7264_i_address0 => runSysArr_U0_data_l1_7264_i_address0,
        data_l1_7264_i_ce0 => runSysArr_U0_data_l1_7264_i_ce0,
        data_l1_7264_i_q0 => data_l1_7_t_q0,
        data_l1_8265_i_address0 => runSysArr_U0_data_l1_8265_i_address0,
        data_l1_8265_i_ce0 => runSysArr_U0_data_l1_8265_i_ce0,
        data_l1_8265_i_q0 => data_l1_8_t_q0,
        data_l1_9266_i_address0 => runSysArr_U0_data_l1_9266_i_address0,
        data_l1_9266_i_ce0 => runSysArr_U0_data_l1_9266_i_ce0,
        data_l1_9266_i_q0 => data_l1_9_t_q0,
        data_l1_10267_i_address0 => runSysArr_U0_data_l1_10267_i_address0,
        data_l1_10267_i_ce0 => runSysArr_U0_data_l1_10267_i_ce0,
        data_l1_10267_i_q0 => data_l1_10_t_q0,
        data_l1_11268_i_address0 => runSysArr_U0_data_l1_11268_i_address0,
        data_l1_11268_i_ce0 => runSysArr_U0_data_l1_11268_i_ce0,
        data_l1_11268_i_q0 => data_l1_11_t_q0,
        data_l1_12269_i_address0 => runSysArr_U0_data_l1_12269_i_address0,
        data_l1_12269_i_ce0 => runSysArr_U0_data_l1_12269_i_ce0,
        data_l1_12269_i_q0 => data_l1_12_t_q0,
        data_l1_13270_i_address0 => runSysArr_U0_data_l1_13270_i_address0,
        data_l1_13270_i_ce0 => runSysArr_U0_data_l1_13270_i_ce0,
        data_l1_13270_i_q0 => data_l1_13_t_q0,
        data_l1_14271_i_address0 => runSysArr_U0_data_l1_14271_i_address0,
        data_l1_14271_i_ce0 => runSysArr_U0_data_l1_14271_i_ce0,
        data_l1_14271_i_q0 => data_l1_14_t_q0,
        data_l1_15272_i_address0 => runSysArr_U0_data_l1_15272_i_address0,
        data_l1_15272_i_ce0 => runSysArr_U0_data_l1_15272_i_ce0,
        data_l1_15272_i_q0 => data_l1_15_t_q0,
        output_l1_0273_i_address0 => runSysArr_U0_output_l1_0273_i_address0,
        output_l1_0273_i_ce0 => runSysArr_U0_output_l1_0273_i_ce0,
        output_l1_0273_i_we0 => runSysArr_U0_output_l1_0273_i_we0,
        output_l1_0273_i_d0 => runSysArr_U0_output_l1_0273_i_d0,
        output_l1_1274_i_address0 => runSysArr_U0_output_l1_1274_i_address0,
        output_l1_1274_i_ce0 => runSysArr_U0_output_l1_1274_i_ce0,
        output_l1_1274_i_we0 => runSysArr_U0_output_l1_1274_i_we0,
        output_l1_1274_i_d0 => runSysArr_U0_output_l1_1274_i_d0,
        output_l1_2275_i_address0 => runSysArr_U0_output_l1_2275_i_address0,
        output_l1_2275_i_ce0 => runSysArr_U0_output_l1_2275_i_ce0,
        output_l1_2275_i_we0 => runSysArr_U0_output_l1_2275_i_we0,
        output_l1_2275_i_d0 => runSysArr_U0_output_l1_2275_i_d0,
        output_l1_3276_i_address0 => runSysArr_U0_output_l1_3276_i_address0,
        output_l1_3276_i_ce0 => runSysArr_U0_output_l1_3276_i_ce0,
        output_l1_3276_i_we0 => runSysArr_U0_output_l1_3276_i_we0,
        output_l1_3276_i_d0 => runSysArr_U0_output_l1_3276_i_d0,
        output_l1_4277_i_address0 => runSysArr_U0_output_l1_4277_i_address0,
        output_l1_4277_i_ce0 => runSysArr_U0_output_l1_4277_i_ce0,
        output_l1_4277_i_we0 => runSysArr_U0_output_l1_4277_i_we0,
        output_l1_4277_i_d0 => runSysArr_U0_output_l1_4277_i_d0,
        output_l1_5278_i_address0 => runSysArr_U0_output_l1_5278_i_address0,
        output_l1_5278_i_ce0 => runSysArr_U0_output_l1_5278_i_ce0,
        output_l1_5278_i_we0 => runSysArr_U0_output_l1_5278_i_we0,
        output_l1_5278_i_d0 => runSysArr_U0_output_l1_5278_i_d0,
        output_l1_6279_i_address0 => runSysArr_U0_output_l1_6279_i_address0,
        output_l1_6279_i_ce0 => runSysArr_U0_output_l1_6279_i_ce0,
        output_l1_6279_i_we0 => runSysArr_U0_output_l1_6279_i_we0,
        output_l1_6279_i_d0 => runSysArr_U0_output_l1_6279_i_d0,
        output_l1_7280_i_address0 => runSysArr_U0_output_l1_7280_i_address0,
        output_l1_7280_i_ce0 => runSysArr_U0_output_l1_7280_i_ce0,
        output_l1_7280_i_we0 => runSysArr_U0_output_l1_7280_i_we0,
        output_l1_7280_i_d0 => runSysArr_U0_output_l1_7280_i_d0,
        output_l1_8281_i_address0 => runSysArr_U0_output_l1_8281_i_address0,
        output_l1_8281_i_ce0 => runSysArr_U0_output_l1_8281_i_ce0,
        output_l1_8281_i_we0 => runSysArr_U0_output_l1_8281_i_we0,
        output_l1_8281_i_d0 => runSysArr_U0_output_l1_8281_i_d0,
        output_l1_9282_i_address0 => runSysArr_U0_output_l1_9282_i_address0,
        output_l1_9282_i_ce0 => runSysArr_U0_output_l1_9282_i_ce0,
        output_l1_9282_i_we0 => runSysArr_U0_output_l1_9282_i_we0,
        output_l1_9282_i_d0 => runSysArr_U0_output_l1_9282_i_d0,
        output_l1_10283_i_address0 => runSysArr_U0_output_l1_10283_i_address0,
        output_l1_10283_i_ce0 => runSysArr_U0_output_l1_10283_i_ce0,
        output_l1_10283_i_we0 => runSysArr_U0_output_l1_10283_i_we0,
        output_l1_10283_i_d0 => runSysArr_U0_output_l1_10283_i_d0,
        output_l1_11284_i_address0 => runSysArr_U0_output_l1_11284_i_address0,
        output_l1_11284_i_ce0 => runSysArr_U0_output_l1_11284_i_ce0,
        output_l1_11284_i_we0 => runSysArr_U0_output_l1_11284_i_we0,
        output_l1_11284_i_d0 => runSysArr_U0_output_l1_11284_i_d0,
        output_l1_12285_i_address0 => runSysArr_U0_output_l1_12285_i_address0,
        output_l1_12285_i_ce0 => runSysArr_U0_output_l1_12285_i_ce0,
        output_l1_12285_i_we0 => runSysArr_U0_output_l1_12285_i_we0,
        output_l1_12285_i_d0 => runSysArr_U0_output_l1_12285_i_d0,
        output_l1_13286_i_address0 => runSysArr_U0_output_l1_13286_i_address0,
        output_l1_13286_i_ce0 => runSysArr_U0_output_l1_13286_i_ce0,
        output_l1_13286_i_we0 => runSysArr_U0_output_l1_13286_i_we0,
        output_l1_13286_i_d0 => runSysArr_U0_output_l1_13286_i_d0,
        output_l1_14287_i_address0 => runSysArr_U0_output_l1_14287_i_address0,
        output_l1_14287_i_ce0 => runSysArr_U0_output_l1_14287_i_ce0,
        output_l1_14287_i_we0 => runSysArr_U0_output_l1_14287_i_we0,
        output_l1_14287_i_d0 => runSysArr_U0_output_l1_14287_i_d0,
        output_l1_15288_i_address0 => runSysArr_U0_output_l1_15288_i_address0,
        output_l1_15288_i_ce0 => runSysArr_U0_output_l1_15288_i_ce0,
        output_l1_15288_i_we0 => runSysArr_U0_output_l1_15288_i_we0,
        output_l1_15288_i_d0 => runSysArr_U0_output_l1_15288_i_d0,
        param_dout => param_c7_dout,
        param_empty_n => param_c7_empty_n,
        param_read => runSysArr_U0_param_read,
        param_out_din => runSysArr_U0_param_out_din,
        param_out_full_n => param_c12_full_n,
        param_out_write => runSysArr_U0_param_out_write);

    runOutputL1toL2_U0 : component Conv_sysarr_runOutputL1toL2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => runOutputL1toL2_U0_ap_start,
        ap_done => runOutputL1toL2_U0_ap_done,
        ap_continue => runOutputL1toL2_U0_ap_continue,
        ap_idle => runOutputL1toL2_U0_ap_idle,
        ap_ready => runOutputL1toL2_U0_ap_ready,
        output_l1_0273_i_address0 => runOutputL1toL2_U0_output_l1_0273_i_address0,
        output_l1_0273_i_ce0 => runOutputL1toL2_U0_output_l1_0273_i_ce0,
        output_l1_0273_i_q0 => output_l1_0_t_q0,
        output_l1_1274_i_address0 => runOutputL1toL2_U0_output_l1_1274_i_address0,
        output_l1_1274_i_ce0 => runOutputL1toL2_U0_output_l1_1274_i_ce0,
        output_l1_1274_i_q0 => output_l1_1_t_q0,
        output_l1_2275_i_address0 => runOutputL1toL2_U0_output_l1_2275_i_address0,
        output_l1_2275_i_ce0 => runOutputL1toL2_U0_output_l1_2275_i_ce0,
        output_l1_2275_i_q0 => output_l1_2_t_q0,
        output_l1_3276_i_address0 => runOutputL1toL2_U0_output_l1_3276_i_address0,
        output_l1_3276_i_ce0 => runOutputL1toL2_U0_output_l1_3276_i_ce0,
        output_l1_3276_i_q0 => output_l1_3_t_q0,
        output_l1_4277_i_address0 => runOutputL1toL2_U0_output_l1_4277_i_address0,
        output_l1_4277_i_ce0 => runOutputL1toL2_U0_output_l1_4277_i_ce0,
        output_l1_4277_i_q0 => output_l1_4_t_q0,
        output_l1_5278_i_address0 => runOutputL1toL2_U0_output_l1_5278_i_address0,
        output_l1_5278_i_ce0 => runOutputL1toL2_U0_output_l1_5278_i_ce0,
        output_l1_5278_i_q0 => output_l1_5_t_q0,
        output_l1_6279_i_address0 => runOutputL1toL2_U0_output_l1_6279_i_address0,
        output_l1_6279_i_ce0 => runOutputL1toL2_U0_output_l1_6279_i_ce0,
        output_l1_6279_i_q0 => output_l1_6_t_q0,
        output_l1_7280_i_address0 => runOutputL1toL2_U0_output_l1_7280_i_address0,
        output_l1_7280_i_ce0 => runOutputL1toL2_U0_output_l1_7280_i_ce0,
        output_l1_7280_i_q0 => output_l1_7_t_q0,
        output_l1_8281_i_address0 => runOutputL1toL2_U0_output_l1_8281_i_address0,
        output_l1_8281_i_ce0 => runOutputL1toL2_U0_output_l1_8281_i_ce0,
        output_l1_8281_i_q0 => output_l1_8_t_q0,
        output_l1_9282_i_address0 => runOutputL1toL2_U0_output_l1_9282_i_address0,
        output_l1_9282_i_ce0 => runOutputL1toL2_U0_output_l1_9282_i_ce0,
        output_l1_9282_i_q0 => output_l1_9_t_q0,
        output_l1_10283_i_address0 => runOutputL1toL2_U0_output_l1_10283_i_address0,
        output_l1_10283_i_ce0 => runOutputL1toL2_U0_output_l1_10283_i_ce0,
        output_l1_10283_i_q0 => output_l1_10_t_q0,
        output_l1_11284_i_address0 => runOutputL1toL2_U0_output_l1_11284_i_address0,
        output_l1_11284_i_ce0 => runOutputL1toL2_U0_output_l1_11284_i_ce0,
        output_l1_11284_i_q0 => output_l1_11_t_q0,
        output_l1_12285_i_address0 => runOutputL1toL2_U0_output_l1_12285_i_address0,
        output_l1_12285_i_ce0 => runOutputL1toL2_U0_output_l1_12285_i_ce0,
        output_l1_12285_i_q0 => output_l1_12_t_q0,
        output_l1_13286_i_address0 => runOutputL1toL2_U0_output_l1_13286_i_address0,
        output_l1_13286_i_ce0 => runOutputL1toL2_U0_output_l1_13286_i_ce0,
        output_l1_13286_i_q0 => output_l1_13_t_q0,
        output_l1_14287_i_address0 => runOutputL1toL2_U0_output_l1_14287_i_address0,
        output_l1_14287_i_ce0 => runOutputL1toL2_U0_output_l1_14287_i_ce0,
        output_l1_14287_i_q0 => output_l1_14_t_q0,
        output_l1_15288_i_address0 => runOutputL1toL2_U0_output_l1_15288_i_address0,
        output_l1_15288_i_ce0 => runOutputL1toL2_U0_output_l1_15288_i_ce0,
        output_l1_15288_i_q0 => output_l1_15_t_q0,
        param_dout => param_c12_dout,
        param_empty_n => param_c12_empty_n,
        param_read => runOutputL1toL2_U0_param_read,
        ko_1_dout => ko_1_c8_dout,
        ko_1_empty_n => ko_1_c8_empty_n,
        ko_1_read => runOutputL1toL2_U0_ko_1_read,
        ho_dout => ho_c5_dout,
        ho_empty_n => ho_c5_empty_n,
        ho_read => runOutputL1toL2_U0_ho_read,
        wo_dout => wo_c6_dout,
        wo_empty_n => wo_c6_empty_n,
        wo_read => runOutputL1toL2_U0_wo_read,
        ro_dout => ro_c10_dout,
        ro_empty_n => ro_c10_empty_n,
        ro_read => runOutputL1toL2_U0_ro_read,
        co_dout => co_c9_dout,
        co_empty_n => co_c9_empty_n,
        co_read => runOutputL1toL2_U0_co_read,
        so_dout => so_c11_dout,
        so_empty_n => so_c11_empty_n,
        so_read => runOutputL1toL2_U0_so_read,
        output_l2_0_address0 => runOutputL1toL2_U0_output_l2_0_address0,
        output_l2_0_ce0 => runOutputL1toL2_U0_output_l2_0_ce0,
        output_l2_0_we0 => runOutputL1toL2_U0_output_l2_0_we0,
        output_l2_0_d0 => runOutputL1toL2_U0_output_l2_0_d0,
        output_l2_1_address0 => runOutputL1toL2_U0_output_l2_1_address0,
        output_l2_1_ce0 => runOutputL1toL2_U0_output_l2_1_ce0,
        output_l2_1_we0 => runOutputL1toL2_U0_output_l2_1_we0,
        output_l2_1_d0 => runOutputL1toL2_U0_output_l2_1_d0,
        output_l2_2_address0 => runOutputL1toL2_U0_output_l2_2_address0,
        output_l2_2_ce0 => runOutputL1toL2_U0_output_l2_2_ce0,
        output_l2_2_we0 => runOutputL1toL2_U0_output_l2_2_we0,
        output_l2_2_d0 => runOutputL1toL2_U0_output_l2_2_d0,
        output_l2_3_address0 => runOutputL1toL2_U0_output_l2_3_address0,
        output_l2_3_ce0 => runOutputL1toL2_U0_output_l2_3_ce0,
        output_l2_3_we0 => runOutputL1toL2_U0_output_l2_3_we0,
        output_l2_3_d0 => runOutputL1toL2_U0_output_l2_3_d0);

    param_c_U : component Conv_sysarr_fifo_w1184_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out_din,
        if_full_n => param_c_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out_write,
        if_dout => param_c_dout,
        if_empty_n => param_c_empty_n,
        if_read => runWeight2Reg_U0_param_read);

    param_c1_U : component Conv_sysarr_fifo_w1120_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out1_din,
        if_full_n => param_c1_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_param_out1_write,
        if_dout => param_c1_dout,
        if_empty_n => param_c1_empty_n,
        if_read => runDataL2toL1_U0_param_read);

    ko_1_c_U : component Conv_sysarr_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ko_1_out_din,
        if_full_n => ko_1_c_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ko_1_out_write,
        if_dout => ko_1_c_dout,
        if_empty_n => ko_1_c_empty_n,
        if_read => runWeight2Reg_U0_ko_1_read);

    co_c_U : component Conv_sysarr_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out_din,
        if_full_n => co_c_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out_write,
        if_dout => co_c_dout,
        if_empty_n => co_c_empty_n,
        if_read => runWeight2Reg_U0_co_read);

    co_c2_U : component Conv_sysarr_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out2_din,
        if_full_n => co_c2_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_co_out2_write,
        if_dout => co_c2_dout,
        if_empty_n => co_c2_empty_n,
        if_read => runDataL2toL1_U0_co_read);

    ro_c_U : component Conv_sysarr_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out_din,
        if_full_n => ro_c_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out_write,
        if_dout => ro_c_dout,
        if_empty_n => ro_c_empty_n,
        if_read => runWeight2Reg_U0_ro_read);

    ro_c3_U : component Conv_sysarr_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out3_din,
        if_full_n => ro_c3_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ro_out3_write,
        if_dout => ro_c3_dout,
        if_empty_n => ro_c3_empty_n,
        if_read => runDataL2toL1_U0_ro_read);

    so_c_U : component Conv_sysarr_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out_din,
        if_full_n => so_c_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out_write,
        if_dout => so_c_dout,
        if_empty_n => so_c_empty_n,
        if_read => runWeight2Reg_U0_so_read);

    so_c4_U : component Conv_sysarr_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out4_din,
        if_full_n => so_c4_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_so_out4_write,
        if_dout => so_c4_dout,
        if_empty_n => so_c4_empty_n,
        if_read => runDataL2toL1_U0_so_read);

    ho_c_U : component Conv_sysarr_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out_din,
        if_full_n => ho_c_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out_write,
        if_dout => ho_c_dout,
        if_empty_n => ho_c_empty_n,
        if_read => runDataL2toL1_U0_ho_read);

    ho_c5_U : component Conv_sysarr_fifo_w11_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out5_din,
        if_full_n => ho_c5_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ho_out5_write,
        if_dout => ho_c5_dout,
        if_empty_n => ho_c5_empty_n,
        if_read => runOutputL1toL2_U0_ho_read);

    wo_c_U : component Conv_sysarr_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out_din,
        if_full_n => wo_c_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out_write,
        if_dout => wo_c_dout,
        if_empty_n => wo_c_empty_n,
        if_read => runDataL2toL1_U0_wo_read);

    wo_c6_U : component Conv_sysarr_fifo_w11_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out6_din,
        if_full_n => wo_c6_full_n,
        if_write => dataflow_in_loop_LOOP_S_OUTER_entry28_U0_wo_out6_write,
        if_dout => wo_c6_dout,
        if_empty_n => wo_c6_empty_n,
        if_read => runOutputL1toL2_U0_wo_read);

    param_c7_U : component Conv_sysarr_fifo_w1184_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_param_out_din,
        if_full_n => param_c7_full_n,
        if_write => runWeight2Reg_U0_param_out_write,
        if_dout => param_c7_dout,
        if_empty_n => param_c7_empty_n,
        if_read => runSysArr_U0_param_read);

    ko_1_c8_U : component Conv_sysarr_fifo_w11_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ko_1_out_din,
        if_full_n => ko_1_c8_full_n,
        if_write => runWeight2Reg_U0_ko_1_out_write,
        if_dout => ko_1_c8_dout,
        if_empty_n => ko_1_c8_empty_n,
        if_read => runOutputL1toL2_U0_ko_1_read);

    co_c9_U : component Conv_sysarr_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_co_out_din,
        if_full_n => co_c9_full_n,
        if_write => runWeight2Reg_U0_co_out_write,
        if_dout => co_c9_dout,
        if_empty_n => co_c9_empty_n,
        if_read => runOutputL1toL2_U0_co_read);

    ro_c10_U : component Conv_sysarr_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ro_out_din,
        if_full_n => ro_c10_full_n,
        if_write => runWeight2Reg_U0_ro_out_write,
        if_dout => ro_c10_dout,
        if_empty_n => ro_c10_empty_n,
        if_read => runOutputL1toL2_U0_ro_read);

    so_c11_U : component Conv_sysarr_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_so_out_din,
        if_full_n => so_c11_full_n,
        if_write => runWeight2Reg_U0_so_out_write,
        if_dout => so_c11_dout,
        if_empty_n => so_c11_empty_n,
        if_read => runOutputL1toL2_U0_so_read);

    weight_regfile_0_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_0,
        if_full_n => weight_regfile_0_0_full_n,
        if_write => ap_channel_done_weight_regfile_0_0,
        if_dout => weight_regfile_0_0_dout,
        if_empty_n => weight_regfile_0_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_1,
        if_full_n => weight_regfile_0_1_full_n,
        if_write => ap_channel_done_weight_regfile_0_1,
        if_dout => weight_regfile_0_1_dout,
        if_empty_n => weight_regfile_0_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_2,
        if_full_n => weight_regfile_0_2_full_n,
        if_write => ap_channel_done_weight_regfile_0_2,
        if_dout => weight_regfile_0_2_dout,
        if_empty_n => weight_regfile_0_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_3,
        if_full_n => weight_regfile_0_3_full_n,
        if_write => ap_channel_done_weight_regfile_0_3,
        if_dout => weight_regfile_0_3_dout,
        if_empty_n => weight_regfile_0_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_4,
        if_full_n => weight_regfile_0_4_full_n,
        if_write => ap_channel_done_weight_regfile_0_4,
        if_dout => weight_regfile_0_4_dout,
        if_empty_n => weight_regfile_0_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_5,
        if_full_n => weight_regfile_0_5_full_n,
        if_write => ap_channel_done_weight_regfile_0_5,
        if_dout => weight_regfile_0_5_dout,
        if_empty_n => weight_regfile_0_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_6,
        if_full_n => weight_regfile_0_6_full_n,
        if_write => ap_channel_done_weight_regfile_0_6,
        if_dout => weight_regfile_0_6_dout,
        if_empty_n => weight_regfile_0_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_7,
        if_full_n => weight_regfile_0_7_full_n,
        if_write => ap_channel_done_weight_regfile_0_7,
        if_dout => weight_regfile_0_7_dout,
        if_empty_n => weight_regfile_0_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_8,
        if_full_n => weight_regfile_0_8_full_n,
        if_write => ap_channel_done_weight_regfile_0_8,
        if_dout => weight_regfile_0_8_dout,
        if_empty_n => weight_regfile_0_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_9,
        if_full_n => weight_regfile_0_9_full_n,
        if_write => ap_channel_done_weight_regfile_0_9,
        if_dout => weight_regfile_0_9_dout,
        if_empty_n => weight_regfile_0_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_10,
        if_full_n => weight_regfile_0_10_full_n,
        if_write => ap_channel_done_weight_regfile_0_10,
        if_dout => weight_regfile_0_10_dout,
        if_empty_n => weight_regfile_0_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_11,
        if_full_n => weight_regfile_0_11_full_n,
        if_write => ap_channel_done_weight_regfile_0_11,
        if_dout => weight_regfile_0_11_dout,
        if_empty_n => weight_regfile_0_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_12,
        if_full_n => weight_regfile_0_12_full_n,
        if_write => ap_channel_done_weight_regfile_0_12,
        if_dout => weight_regfile_0_12_dout,
        if_empty_n => weight_regfile_0_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_13,
        if_full_n => weight_regfile_0_13_full_n,
        if_write => ap_channel_done_weight_regfile_0_13,
        if_dout => weight_regfile_0_13_dout,
        if_empty_n => weight_regfile_0_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_14,
        if_full_n => weight_regfile_0_14_full_n,
        if_write => ap_channel_done_weight_regfile_0_14,
        if_dout => weight_regfile_0_14_dout,
        if_empty_n => weight_regfile_0_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_0_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_15,
        if_full_n => weight_regfile_0_15_full_n,
        if_write => ap_channel_done_weight_regfile_0_15,
        if_dout => weight_regfile_0_15_dout,
        if_empty_n => weight_regfile_0_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_16,
        if_full_n => weight_regfile_1_0_full_n,
        if_write => ap_channel_done_weight_regfile_1_0,
        if_dout => weight_regfile_1_0_dout,
        if_empty_n => weight_regfile_1_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_17,
        if_full_n => weight_regfile_1_1_full_n,
        if_write => ap_channel_done_weight_regfile_1_1,
        if_dout => weight_regfile_1_1_dout,
        if_empty_n => weight_regfile_1_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_18,
        if_full_n => weight_regfile_1_2_full_n,
        if_write => ap_channel_done_weight_regfile_1_2,
        if_dout => weight_regfile_1_2_dout,
        if_empty_n => weight_regfile_1_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_19,
        if_full_n => weight_regfile_1_3_full_n,
        if_write => ap_channel_done_weight_regfile_1_3,
        if_dout => weight_regfile_1_3_dout,
        if_empty_n => weight_regfile_1_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_20,
        if_full_n => weight_regfile_1_4_full_n,
        if_write => ap_channel_done_weight_regfile_1_4,
        if_dout => weight_regfile_1_4_dout,
        if_empty_n => weight_regfile_1_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_21,
        if_full_n => weight_regfile_1_5_full_n,
        if_write => ap_channel_done_weight_regfile_1_5,
        if_dout => weight_regfile_1_5_dout,
        if_empty_n => weight_regfile_1_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_22,
        if_full_n => weight_regfile_1_6_full_n,
        if_write => ap_channel_done_weight_regfile_1_6,
        if_dout => weight_regfile_1_6_dout,
        if_empty_n => weight_regfile_1_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_23,
        if_full_n => weight_regfile_1_7_full_n,
        if_write => ap_channel_done_weight_regfile_1_7,
        if_dout => weight_regfile_1_7_dout,
        if_empty_n => weight_regfile_1_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_24,
        if_full_n => weight_regfile_1_8_full_n,
        if_write => ap_channel_done_weight_regfile_1_8,
        if_dout => weight_regfile_1_8_dout,
        if_empty_n => weight_regfile_1_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_25,
        if_full_n => weight_regfile_1_9_full_n,
        if_write => ap_channel_done_weight_regfile_1_9,
        if_dout => weight_regfile_1_9_dout,
        if_empty_n => weight_regfile_1_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_26,
        if_full_n => weight_regfile_1_10_full_n,
        if_write => ap_channel_done_weight_regfile_1_10,
        if_dout => weight_regfile_1_10_dout,
        if_empty_n => weight_regfile_1_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_27,
        if_full_n => weight_regfile_1_11_full_n,
        if_write => ap_channel_done_weight_regfile_1_11,
        if_dout => weight_regfile_1_11_dout,
        if_empty_n => weight_regfile_1_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_28,
        if_full_n => weight_regfile_1_12_full_n,
        if_write => ap_channel_done_weight_regfile_1_12,
        if_dout => weight_regfile_1_12_dout,
        if_empty_n => weight_regfile_1_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_29,
        if_full_n => weight_regfile_1_13_full_n,
        if_write => ap_channel_done_weight_regfile_1_13,
        if_dout => weight_regfile_1_13_dout,
        if_empty_n => weight_regfile_1_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_30,
        if_full_n => weight_regfile_1_14_full_n,
        if_write => ap_channel_done_weight_regfile_1_14,
        if_dout => weight_regfile_1_14_dout,
        if_empty_n => weight_regfile_1_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_1_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_31,
        if_full_n => weight_regfile_1_15_full_n,
        if_write => ap_channel_done_weight_regfile_1_15,
        if_dout => weight_regfile_1_15_dout,
        if_empty_n => weight_regfile_1_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_32,
        if_full_n => weight_regfile_2_0_full_n,
        if_write => ap_channel_done_weight_regfile_2_0,
        if_dout => weight_regfile_2_0_dout,
        if_empty_n => weight_regfile_2_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_33,
        if_full_n => weight_regfile_2_1_full_n,
        if_write => ap_channel_done_weight_regfile_2_1,
        if_dout => weight_regfile_2_1_dout,
        if_empty_n => weight_regfile_2_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_34,
        if_full_n => weight_regfile_2_2_full_n,
        if_write => ap_channel_done_weight_regfile_2_2,
        if_dout => weight_regfile_2_2_dout,
        if_empty_n => weight_regfile_2_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_35,
        if_full_n => weight_regfile_2_3_full_n,
        if_write => ap_channel_done_weight_regfile_2_3,
        if_dout => weight_regfile_2_3_dout,
        if_empty_n => weight_regfile_2_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_36,
        if_full_n => weight_regfile_2_4_full_n,
        if_write => ap_channel_done_weight_regfile_2_4,
        if_dout => weight_regfile_2_4_dout,
        if_empty_n => weight_regfile_2_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_37,
        if_full_n => weight_regfile_2_5_full_n,
        if_write => ap_channel_done_weight_regfile_2_5,
        if_dout => weight_regfile_2_5_dout,
        if_empty_n => weight_regfile_2_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_38,
        if_full_n => weight_regfile_2_6_full_n,
        if_write => ap_channel_done_weight_regfile_2_6,
        if_dout => weight_regfile_2_6_dout,
        if_empty_n => weight_regfile_2_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_39,
        if_full_n => weight_regfile_2_7_full_n,
        if_write => ap_channel_done_weight_regfile_2_7,
        if_dout => weight_regfile_2_7_dout,
        if_empty_n => weight_regfile_2_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_40,
        if_full_n => weight_regfile_2_8_full_n,
        if_write => ap_channel_done_weight_regfile_2_8,
        if_dout => weight_regfile_2_8_dout,
        if_empty_n => weight_regfile_2_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_41,
        if_full_n => weight_regfile_2_9_full_n,
        if_write => ap_channel_done_weight_regfile_2_9,
        if_dout => weight_regfile_2_9_dout,
        if_empty_n => weight_regfile_2_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_42,
        if_full_n => weight_regfile_2_10_full_n,
        if_write => ap_channel_done_weight_regfile_2_10,
        if_dout => weight_regfile_2_10_dout,
        if_empty_n => weight_regfile_2_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_43,
        if_full_n => weight_regfile_2_11_full_n,
        if_write => ap_channel_done_weight_regfile_2_11,
        if_dout => weight_regfile_2_11_dout,
        if_empty_n => weight_regfile_2_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_44,
        if_full_n => weight_regfile_2_12_full_n,
        if_write => ap_channel_done_weight_regfile_2_12,
        if_dout => weight_regfile_2_12_dout,
        if_empty_n => weight_regfile_2_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_45,
        if_full_n => weight_regfile_2_13_full_n,
        if_write => ap_channel_done_weight_regfile_2_13,
        if_dout => weight_regfile_2_13_dout,
        if_empty_n => weight_regfile_2_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_46,
        if_full_n => weight_regfile_2_14_full_n,
        if_write => ap_channel_done_weight_regfile_2_14,
        if_dout => weight_regfile_2_14_dout,
        if_empty_n => weight_regfile_2_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_2_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_47,
        if_full_n => weight_regfile_2_15_full_n,
        if_write => ap_channel_done_weight_regfile_2_15,
        if_dout => weight_regfile_2_15_dout,
        if_empty_n => weight_regfile_2_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_48,
        if_full_n => weight_regfile_3_0_full_n,
        if_write => ap_channel_done_weight_regfile_3_0,
        if_dout => weight_regfile_3_0_dout,
        if_empty_n => weight_regfile_3_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_49,
        if_full_n => weight_regfile_3_1_full_n,
        if_write => ap_channel_done_weight_regfile_3_1,
        if_dout => weight_regfile_3_1_dout,
        if_empty_n => weight_regfile_3_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_50,
        if_full_n => weight_regfile_3_2_full_n,
        if_write => ap_channel_done_weight_regfile_3_2,
        if_dout => weight_regfile_3_2_dout,
        if_empty_n => weight_regfile_3_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_51,
        if_full_n => weight_regfile_3_3_full_n,
        if_write => ap_channel_done_weight_regfile_3_3,
        if_dout => weight_regfile_3_3_dout,
        if_empty_n => weight_regfile_3_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_52,
        if_full_n => weight_regfile_3_4_full_n,
        if_write => ap_channel_done_weight_regfile_3_4,
        if_dout => weight_regfile_3_4_dout,
        if_empty_n => weight_regfile_3_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_53,
        if_full_n => weight_regfile_3_5_full_n,
        if_write => ap_channel_done_weight_regfile_3_5,
        if_dout => weight_regfile_3_5_dout,
        if_empty_n => weight_regfile_3_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_54,
        if_full_n => weight_regfile_3_6_full_n,
        if_write => ap_channel_done_weight_regfile_3_6,
        if_dout => weight_regfile_3_6_dout,
        if_empty_n => weight_regfile_3_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_55,
        if_full_n => weight_regfile_3_7_full_n,
        if_write => ap_channel_done_weight_regfile_3_7,
        if_dout => weight_regfile_3_7_dout,
        if_empty_n => weight_regfile_3_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_56,
        if_full_n => weight_regfile_3_8_full_n,
        if_write => ap_channel_done_weight_regfile_3_8,
        if_dout => weight_regfile_3_8_dout,
        if_empty_n => weight_regfile_3_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_57,
        if_full_n => weight_regfile_3_9_full_n,
        if_write => ap_channel_done_weight_regfile_3_9,
        if_dout => weight_regfile_3_9_dout,
        if_empty_n => weight_regfile_3_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_58,
        if_full_n => weight_regfile_3_10_full_n,
        if_write => ap_channel_done_weight_regfile_3_10,
        if_dout => weight_regfile_3_10_dout,
        if_empty_n => weight_regfile_3_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_59,
        if_full_n => weight_regfile_3_11_full_n,
        if_write => ap_channel_done_weight_regfile_3_11,
        if_dout => weight_regfile_3_11_dout,
        if_empty_n => weight_regfile_3_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_60,
        if_full_n => weight_regfile_3_12_full_n,
        if_write => ap_channel_done_weight_regfile_3_12,
        if_dout => weight_regfile_3_12_dout,
        if_empty_n => weight_regfile_3_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_61,
        if_full_n => weight_regfile_3_13_full_n,
        if_write => ap_channel_done_weight_regfile_3_13,
        if_dout => weight_regfile_3_13_dout,
        if_empty_n => weight_regfile_3_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_62,
        if_full_n => weight_regfile_3_14_full_n,
        if_write => ap_channel_done_weight_regfile_3_14,
        if_dout => weight_regfile_3_14_dout,
        if_empty_n => weight_regfile_3_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_3_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_63,
        if_full_n => weight_regfile_3_15_full_n,
        if_write => ap_channel_done_weight_regfile_3_15,
        if_dout => weight_regfile_3_15_dout,
        if_empty_n => weight_regfile_3_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_64,
        if_full_n => weight_regfile_4_0_full_n,
        if_write => ap_channel_done_weight_regfile_4_0,
        if_dout => weight_regfile_4_0_dout,
        if_empty_n => weight_regfile_4_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_65,
        if_full_n => weight_regfile_4_1_full_n,
        if_write => ap_channel_done_weight_regfile_4_1,
        if_dout => weight_regfile_4_1_dout,
        if_empty_n => weight_regfile_4_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_66,
        if_full_n => weight_regfile_4_2_full_n,
        if_write => ap_channel_done_weight_regfile_4_2,
        if_dout => weight_regfile_4_2_dout,
        if_empty_n => weight_regfile_4_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_67,
        if_full_n => weight_regfile_4_3_full_n,
        if_write => ap_channel_done_weight_regfile_4_3,
        if_dout => weight_regfile_4_3_dout,
        if_empty_n => weight_regfile_4_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_68,
        if_full_n => weight_regfile_4_4_full_n,
        if_write => ap_channel_done_weight_regfile_4_4,
        if_dout => weight_regfile_4_4_dout,
        if_empty_n => weight_regfile_4_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_69,
        if_full_n => weight_regfile_4_5_full_n,
        if_write => ap_channel_done_weight_regfile_4_5,
        if_dout => weight_regfile_4_5_dout,
        if_empty_n => weight_regfile_4_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_70,
        if_full_n => weight_regfile_4_6_full_n,
        if_write => ap_channel_done_weight_regfile_4_6,
        if_dout => weight_regfile_4_6_dout,
        if_empty_n => weight_regfile_4_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_71,
        if_full_n => weight_regfile_4_7_full_n,
        if_write => ap_channel_done_weight_regfile_4_7,
        if_dout => weight_regfile_4_7_dout,
        if_empty_n => weight_regfile_4_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_72,
        if_full_n => weight_regfile_4_8_full_n,
        if_write => ap_channel_done_weight_regfile_4_8,
        if_dout => weight_regfile_4_8_dout,
        if_empty_n => weight_regfile_4_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_73,
        if_full_n => weight_regfile_4_9_full_n,
        if_write => ap_channel_done_weight_regfile_4_9,
        if_dout => weight_regfile_4_9_dout,
        if_empty_n => weight_regfile_4_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_74,
        if_full_n => weight_regfile_4_10_full_n,
        if_write => ap_channel_done_weight_regfile_4_10,
        if_dout => weight_regfile_4_10_dout,
        if_empty_n => weight_regfile_4_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_75,
        if_full_n => weight_regfile_4_11_full_n,
        if_write => ap_channel_done_weight_regfile_4_11,
        if_dout => weight_regfile_4_11_dout,
        if_empty_n => weight_regfile_4_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_76,
        if_full_n => weight_regfile_4_12_full_n,
        if_write => ap_channel_done_weight_regfile_4_12,
        if_dout => weight_regfile_4_12_dout,
        if_empty_n => weight_regfile_4_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_77,
        if_full_n => weight_regfile_4_13_full_n,
        if_write => ap_channel_done_weight_regfile_4_13,
        if_dout => weight_regfile_4_13_dout,
        if_empty_n => weight_regfile_4_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_78,
        if_full_n => weight_regfile_4_14_full_n,
        if_write => ap_channel_done_weight_regfile_4_14,
        if_dout => weight_regfile_4_14_dout,
        if_empty_n => weight_regfile_4_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_4_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_79,
        if_full_n => weight_regfile_4_15_full_n,
        if_write => ap_channel_done_weight_regfile_4_15,
        if_dout => weight_regfile_4_15_dout,
        if_empty_n => weight_regfile_4_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_80,
        if_full_n => weight_regfile_5_0_full_n,
        if_write => ap_channel_done_weight_regfile_5_0,
        if_dout => weight_regfile_5_0_dout,
        if_empty_n => weight_regfile_5_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_81,
        if_full_n => weight_regfile_5_1_full_n,
        if_write => ap_channel_done_weight_regfile_5_1,
        if_dout => weight_regfile_5_1_dout,
        if_empty_n => weight_regfile_5_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_82,
        if_full_n => weight_regfile_5_2_full_n,
        if_write => ap_channel_done_weight_regfile_5_2,
        if_dout => weight_regfile_5_2_dout,
        if_empty_n => weight_regfile_5_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_83,
        if_full_n => weight_regfile_5_3_full_n,
        if_write => ap_channel_done_weight_regfile_5_3,
        if_dout => weight_regfile_5_3_dout,
        if_empty_n => weight_regfile_5_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_84,
        if_full_n => weight_regfile_5_4_full_n,
        if_write => ap_channel_done_weight_regfile_5_4,
        if_dout => weight_regfile_5_4_dout,
        if_empty_n => weight_regfile_5_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_85,
        if_full_n => weight_regfile_5_5_full_n,
        if_write => ap_channel_done_weight_regfile_5_5,
        if_dout => weight_regfile_5_5_dout,
        if_empty_n => weight_regfile_5_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_86,
        if_full_n => weight_regfile_5_6_full_n,
        if_write => ap_channel_done_weight_regfile_5_6,
        if_dout => weight_regfile_5_6_dout,
        if_empty_n => weight_regfile_5_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_87,
        if_full_n => weight_regfile_5_7_full_n,
        if_write => ap_channel_done_weight_regfile_5_7,
        if_dout => weight_regfile_5_7_dout,
        if_empty_n => weight_regfile_5_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_88,
        if_full_n => weight_regfile_5_8_full_n,
        if_write => ap_channel_done_weight_regfile_5_8,
        if_dout => weight_regfile_5_8_dout,
        if_empty_n => weight_regfile_5_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_89,
        if_full_n => weight_regfile_5_9_full_n,
        if_write => ap_channel_done_weight_regfile_5_9,
        if_dout => weight_regfile_5_9_dout,
        if_empty_n => weight_regfile_5_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_90,
        if_full_n => weight_regfile_5_10_full_n,
        if_write => ap_channel_done_weight_regfile_5_10,
        if_dout => weight_regfile_5_10_dout,
        if_empty_n => weight_regfile_5_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_91,
        if_full_n => weight_regfile_5_11_full_n,
        if_write => ap_channel_done_weight_regfile_5_11,
        if_dout => weight_regfile_5_11_dout,
        if_empty_n => weight_regfile_5_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_92,
        if_full_n => weight_regfile_5_12_full_n,
        if_write => ap_channel_done_weight_regfile_5_12,
        if_dout => weight_regfile_5_12_dout,
        if_empty_n => weight_regfile_5_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_93,
        if_full_n => weight_regfile_5_13_full_n,
        if_write => ap_channel_done_weight_regfile_5_13,
        if_dout => weight_regfile_5_13_dout,
        if_empty_n => weight_regfile_5_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_94,
        if_full_n => weight_regfile_5_14_full_n,
        if_write => ap_channel_done_weight_regfile_5_14,
        if_dout => weight_regfile_5_14_dout,
        if_empty_n => weight_regfile_5_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_5_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_95,
        if_full_n => weight_regfile_5_15_full_n,
        if_write => ap_channel_done_weight_regfile_5_15,
        if_dout => weight_regfile_5_15_dout,
        if_empty_n => weight_regfile_5_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_96,
        if_full_n => weight_regfile_6_0_full_n,
        if_write => ap_channel_done_weight_regfile_6_0,
        if_dout => weight_regfile_6_0_dout,
        if_empty_n => weight_regfile_6_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_97,
        if_full_n => weight_regfile_6_1_full_n,
        if_write => ap_channel_done_weight_regfile_6_1,
        if_dout => weight_regfile_6_1_dout,
        if_empty_n => weight_regfile_6_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_98,
        if_full_n => weight_regfile_6_2_full_n,
        if_write => ap_channel_done_weight_regfile_6_2,
        if_dout => weight_regfile_6_2_dout,
        if_empty_n => weight_regfile_6_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_99,
        if_full_n => weight_regfile_6_3_full_n,
        if_write => ap_channel_done_weight_regfile_6_3,
        if_dout => weight_regfile_6_3_dout,
        if_empty_n => weight_regfile_6_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_100,
        if_full_n => weight_regfile_6_4_full_n,
        if_write => ap_channel_done_weight_regfile_6_4,
        if_dout => weight_regfile_6_4_dout,
        if_empty_n => weight_regfile_6_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_101,
        if_full_n => weight_regfile_6_5_full_n,
        if_write => ap_channel_done_weight_regfile_6_5,
        if_dout => weight_regfile_6_5_dout,
        if_empty_n => weight_regfile_6_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_102,
        if_full_n => weight_regfile_6_6_full_n,
        if_write => ap_channel_done_weight_regfile_6_6,
        if_dout => weight_regfile_6_6_dout,
        if_empty_n => weight_regfile_6_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_103,
        if_full_n => weight_regfile_6_7_full_n,
        if_write => ap_channel_done_weight_regfile_6_7,
        if_dout => weight_regfile_6_7_dout,
        if_empty_n => weight_regfile_6_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_104,
        if_full_n => weight_regfile_6_8_full_n,
        if_write => ap_channel_done_weight_regfile_6_8,
        if_dout => weight_regfile_6_8_dout,
        if_empty_n => weight_regfile_6_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_105,
        if_full_n => weight_regfile_6_9_full_n,
        if_write => ap_channel_done_weight_regfile_6_9,
        if_dout => weight_regfile_6_9_dout,
        if_empty_n => weight_regfile_6_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_106,
        if_full_n => weight_regfile_6_10_full_n,
        if_write => ap_channel_done_weight_regfile_6_10,
        if_dout => weight_regfile_6_10_dout,
        if_empty_n => weight_regfile_6_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_107,
        if_full_n => weight_regfile_6_11_full_n,
        if_write => ap_channel_done_weight_regfile_6_11,
        if_dout => weight_regfile_6_11_dout,
        if_empty_n => weight_regfile_6_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_108,
        if_full_n => weight_regfile_6_12_full_n,
        if_write => ap_channel_done_weight_regfile_6_12,
        if_dout => weight_regfile_6_12_dout,
        if_empty_n => weight_regfile_6_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_109,
        if_full_n => weight_regfile_6_13_full_n,
        if_write => ap_channel_done_weight_regfile_6_13,
        if_dout => weight_regfile_6_13_dout,
        if_empty_n => weight_regfile_6_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_110,
        if_full_n => weight_regfile_6_14_full_n,
        if_write => ap_channel_done_weight_regfile_6_14,
        if_dout => weight_regfile_6_14_dout,
        if_empty_n => weight_regfile_6_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_6_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_111,
        if_full_n => weight_regfile_6_15_full_n,
        if_write => ap_channel_done_weight_regfile_6_15,
        if_dout => weight_regfile_6_15_dout,
        if_empty_n => weight_regfile_6_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_112,
        if_full_n => weight_regfile_7_0_full_n,
        if_write => ap_channel_done_weight_regfile_7_0,
        if_dout => weight_regfile_7_0_dout,
        if_empty_n => weight_regfile_7_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_113,
        if_full_n => weight_regfile_7_1_full_n,
        if_write => ap_channel_done_weight_regfile_7_1,
        if_dout => weight_regfile_7_1_dout,
        if_empty_n => weight_regfile_7_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_114,
        if_full_n => weight_regfile_7_2_full_n,
        if_write => ap_channel_done_weight_regfile_7_2,
        if_dout => weight_regfile_7_2_dout,
        if_empty_n => weight_regfile_7_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_115,
        if_full_n => weight_regfile_7_3_full_n,
        if_write => ap_channel_done_weight_regfile_7_3,
        if_dout => weight_regfile_7_3_dout,
        if_empty_n => weight_regfile_7_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_116,
        if_full_n => weight_regfile_7_4_full_n,
        if_write => ap_channel_done_weight_regfile_7_4,
        if_dout => weight_regfile_7_4_dout,
        if_empty_n => weight_regfile_7_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_117,
        if_full_n => weight_regfile_7_5_full_n,
        if_write => ap_channel_done_weight_regfile_7_5,
        if_dout => weight_regfile_7_5_dout,
        if_empty_n => weight_regfile_7_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_118,
        if_full_n => weight_regfile_7_6_full_n,
        if_write => ap_channel_done_weight_regfile_7_6,
        if_dout => weight_regfile_7_6_dout,
        if_empty_n => weight_regfile_7_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_119,
        if_full_n => weight_regfile_7_7_full_n,
        if_write => ap_channel_done_weight_regfile_7_7,
        if_dout => weight_regfile_7_7_dout,
        if_empty_n => weight_regfile_7_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_120,
        if_full_n => weight_regfile_7_8_full_n,
        if_write => ap_channel_done_weight_regfile_7_8,
        if_dout => weight_regfile_7_8_dout,
        if_empty_n => weight_regfile_7_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_121,
        if_full_n => weight_regfile_7_9_full_n,
        if_write => ap_channel_done_weight_regfile_7_9,
        if_dout => weight_regfile_7_9_dout,
        if_empty_n => weight_regfile_7_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_122,
        if_full_n => weight_regfile_7_10_full_n,
        if_write => ap_channel_done_weight_regfile_7_10,
        if_dout => weight_regfile_7_10_dout,
        if_empty_n => weight_regfile_7_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_123,
        if_full_n => weight_regfile_7_11_full_n,
        if_write => ap_channel_done_weight_regfile_7_11,
        if_dout => weight_regfile_7_11_dout,
        if_empty_n => weight_regfile_7_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_124,
        if_full_n => weight_regfile_7_12_full_n,
        if_write => ap_channel_done_weight_regfile_7_12,
        if_dout => weight_regfile_7_12_dout,
        if_empty_n => weight_regfile_7_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_125,
        if_full_n => weight_regfile_7_13_full_n,
        if_write => ap_channel_done_weight_regfile_7_13,
        if_dout => weight_regfile_7_13_dout,
        if_empty_n => weight_regfile_7_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_126,
        if_full_n => weight_regfile_7_14_full_n,
        if_write => ap_channel_done_weight_regfile_7_14,
        if_dout => weight_regfile_7_14_dout,
        if_empty_n => weight_regfile_7_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_7_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_127,
        if_full_n => weight_regfile_7_15_full_n,
        if_write => ap_channel_done_weight_regfile_7_15,
        if_dout => weight_regfile_7_15_dout,
        if_empty_n => weight_regfile_7_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_128,
        if_full_n => weight_regfile_8_0_full_n,
        if_write => ap_channel_done_weight_regfile_8_0,
        if_dout => weight_regfile_8_0_dout,
        if_empty_n => weight_regfile_8_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_129,
        if_full_n => weight_regfile_8_1_full_n,
        if_write => ap_channel_done_weight_regfile_8_1,
        if_dout => weight_regfile_8_1_dout,
        if_empty_n => weight_regfile_8_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_130,
        if_full_n => weight_regfile_8_2_full_n,
        if_write => ap_channel_done_weight_regfile_8_2,
        if_dout => weight_regfile_8_2_dout,
        if_empty_n => weight_regfile_8_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_131,
        if_full_n => weight_regfile_8_3_full_n,
        if_write => ap_channel_done_weight_regfile_8_3,
        if_dout => weight_regfile_8_3_dout,
        if_empty_n => weight_regfile_8_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_132,
        if_full_n => weight_regfile_8_4_full_n,
        if_write => ap_channel_done_weight_regfile_8_4,
        if_dout => weight_regfile_8_4_dout,
        if_empty_n => weight_regfile_8_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_133,
        if_full_n => weight_regfile_8_5_full_n,
        if_write => ap_channel_done_weight_regfile_8_5,
        if_dout => weight_regfile_8_5_dout,
        if_empty_n => weight_regfile_8_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_134,
        if_full_n => weight_regfile_8_6_full_n,
        if_write => ap_channel_done_weight_regfile_8_6,
        if_dout => weight_regfile_8_6_dout,
        if_empty_n => weight_regfile_8_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_135,
        if_full_n => weight_regfile_8_7_full_n,
        if_write => ap_channel_done_weight_regfile_8_7,
        if_dout => weight_regfile_8_7_dout,
        if_empty_n => weight_regfile_8_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_136,
        if_full_n => weight_regfile_8_8_full_n,
        if_write => ap_channel_done_weight_regfile_8_8,
        if_dout => weight_regfile_8_8_dout,
        if_empty_n => weight_regfile_8_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_137,
        if_full_n => weight_regfile_8_9_full_n,
        if_write => ap_channel_done_weight_regfile_8_9,
        if_dout => weight_regfile_8_9_dout,
        if_empty_n => weight_regfile_8_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_138,
        if_full_n => weight_regfile_8_10_full_n,
        if_write => ap_channel_done_weight_regfile_8_10,
        if_dout => weight_regfile_8_10_dout,
        if_empty_n => weight_regfile_8_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_139,
        if_full_n => weight_regfile_8_11_full_n,
        if_write => ap_channel_done_weight_regfile_8_11,
        if_dout => weight_regfile_8_11_dout,
        if_empty_n => weight_regfile_8_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_140,
        if_full_n => weight_regfile_8_12_full_n,
        if_write => ap_channel_done_weight_regfile_8_12,
        if_dout => weight_regfile_8_12_dout,
        if_empty_n => weight_regfile_8_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_141,
        if_full_n => weight_regfile_8_13_full_n,
        if_write => ap_channel_done_weight_regfile_8_13,
        if_dout => weight_regfile_8_13_dout,
        if_empty_n => weight_regfile_8_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_142,
        if_full_n => weight_regfile_8_14_full_n,
        if_write => ap_channel_done_weight_regfile_8_14,
        if_dout => weight_regfile_8_14_dout,
        if_empty_n => weight_regfile_8_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_8_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_143,
        if_full_n => weight_regfile_8_15_full_n,
        if_write => ap_channel_done_weight_regfile_8_15,
        if_dout => weight_regfile_8_15_dout,
        if_empty_n => weight_regfile_8_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_144,
        if_full_n => weight_regfile_9_0_full_n,
        if_write => ap_channel_done_weight_regfile_9_0,
        if_dout => weight_regfile_9_0_dout,
        if_empty_n => weight_regfile_9_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_145,
        if_full_n => weight_regfile_9_1_full_n,
        if_write => ap_channel_done_weight_regfile_9_1,
        if_dout => weight_regfile_9_1_dout,
        if_empty_n => weight_regfile_9_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_146,
        if_full_n => weight_regfile_9_2_full_n,
        if_write => ap_channel_done_weight_regfile_9_2,
        if_dout => weight_regfile_9_2_dout,
        if_empty_n => weight_regfile_9_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_147,
        if_full_n => weight_regfile_9_3_full_n,
        if_write => ap_channel_done_weight_regfile_9_3,
        if_dout => weight_regfile_9_3_dout,
        if_empty_n => weight_regfile_9_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_148,
        if_full_n => weight_regfile_9_4_full_n,
        if_write => ap_channel_done_weight_regfile_9_4,
        if_dout => weight_regfile_9_4_dout,
        if_empty_n => weight_regfile_9_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_149,
        if_full_n => weight_regfile_9_5_full_n,
        if_write => ap_channel_done_weight_regfile_9_5,
        if_dout => weight_regfile_9_5_dout,
        if_empty_n => weight_regfile_9_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_150,
        if_full_n => weight_regfile_9_6_full_n,
        if_write => ap_channel_done_weight_regfile_9_6,
        if_dout => weight_regfile_9_6_dout,
        if_empty_n => weight_regfile_9_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_151,
        if_full_n => weight_regfile_9_7_full_n,
        if_write => ap_channel_done_weight_regfile_9_7,
        if_dout => weight_regfile_9_7_dout,
        if_empty_n => weight_regfile_9_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_152,
        if_full_n => weight_regfile_9_8_full_n,
        if_write => ap_channel_done_weight_regfile_9_8,
        if_dout => weight_regfile_9_8_dout,
        if_empty_n => weight_regfile_9_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_153,
        if_full_n => weight_regfile_9_9_full_n,
        if_write => ap_channel_done_weight_regfile_9_9,
        if_dout => weight_regfile_9_9_dout,
        if_empty_n => weight_regfile_9_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_154,
        if_full_n => weight_regfile_9_10_full_n,
        if_write => ap_channel_done_weight_regfile_9_10,
        if_dout => weight_regfile_9_10_dout,
        if_empty_n => weight_regfile_9_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_155,
        if_full_n => weight_regfile_9_11_full_n,
        if_write => ap_channel_done_weight_regfile_9_11,
        if_dout => weight_regfile_9_11_dout,
        if_empty_n => weight_regfile_9_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_156,
        if_full_n => weight_regfile_9_12_full_n,
        if_write => ap_channel_done_weight_regfile_9_12,
        if_dout => weight_regfile_9_12_dout,
        if_empty_n => weight_regfile_9_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_157,
        if_full_n => weight_regfile_9_13_full_n,
        if_write => ap_channel_done_weight_regfile_9_13,
        if_dout => weight_regfile_9_13_dout,
        if_empty_n => weight_regfile_9_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_158,
        if_full_n => weight_regfile_9_14_full_n,
        if_write => ap_channel_done_weight_regfile_9_14,
        if_dout => weight_regfile_9_14_dout,
        if_empty_n => weight_regfile_9_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_9_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_159,
        if_full_n => weight_regfile_9_15_full_n,
        if_write => ap_channel_done_weight_regfile_9_15,
        if_dout => weight_regfile_9_15_dout,
        if_empty_n => weight_regfile_9_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_160,
        if_full_n => weight_regfile_10_0_full_n,
        if_write => ap_channel_done_weight_regfile_10_0,
        if_dout => weight_regfile_10_0_dout,
        if_empty_n => weight_regfile_10_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_161,
        if_full_n => weight_regfile_10_1_full_n,
        if_write => ap_channel_done_weight_regfile_10_1,
        if_dout => weight_regfile_10_1_dout,
        if_empty_n => weight_regfile_10_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_162,
        if_full_n => weight_regfile_10_2_full_n,
        if_write => ap_channel_done_weight_regfile_10_2,
        if_dout => weight_regfile_10_2_dout,
        if_empty_n => weight_regfile_10_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_163,
        if_full_n => weight_regfile_10_3_full_n,
        if_write => ap_channel_done_weight_regfile_10_3,
        if_dout => weight_regfile_10_3_dout,
        if_empty_n => weight_regfile_10_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_164,
        if_full_n => weight_regfile_10_4_full_n,
        if_write => ap_channel_done_weight_regfile_10_4,
        if_dout => weight_regfile_10_4_dout,
        if_empty_n => weight_regfile_10_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_165,
        if_full_n => weight_regfile_10_5_full_n,
        if_write => ap_channel_done_weight_regfile_10_5,
        if_dout => weight_regfile_10_5_dout,
        if_empty_n => weight_regfile_10_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_166,
        if_full_n => weight_regfile_10_6_full_n,
        if_write => ap_channel_done_weight_regfile_10_6,
        if_dout => weight_regfile_10_6_dout,
        if_empty_n => weight_regfile_10_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_167,
        if_full_n => weight_regfile_10_7_full_n,
        if_write => ap_channel_done_weight_regfile_10_7,
        if_dout => weight_regfile_10_7_dout,
        if_empty_n => weight_regfile_10_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_168,
        if_full_n => weight_regfile_10_8_full_n,
        if_write => ap_channel_done_weight_regfile_10_8,
        if_dout => weight_regfile_10_8_dout,
        if_empty_n => weight_regfile_10_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_169,
        if_full_n => weight_regfile_10_9_full_n,
        if_write => ap_channel_done_weight_regfile_10_9,
        if_dout => weight_regfile_10_9_dout,
        if_empty_n => weight_regfile_10_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_170,
        if_full_n => weight_regfile_10_10_full_n,
        if_write => ap_channel_done_weight_regfile_10_10,
        if_dout => weight_regfile_10_10_dout,
        if_empty_n => weight_regfile_10_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_171,
        if_full_n => weight_regfile_10_11_full_n,
        if_write => ap_channel_done_weight_regfile_10_11,
        if_dout => weight_regfile_10_11_dout,
        if_empty_n => weight_regfile_10_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_172,
        if_full_n => weight_regfile_10_12_full_n,
        if_write => ap_channel_done_weight_regfile_10_12,
        if_dout => weight_regfile_10_12_dout,
        if_empty_n => weight_regfile_10_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_173,
        if_full_n => weight_regfile_10_13_full_n,
        if_write => ap_channel_done_weight_regfile_10_13,
        if_dout => weight_regfile_10_13_dout,
        if_empty_n => weight_regfile_10_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_174,
        if_full_n => weight_regfile_10_14_full_n,
        if_write => ap_channel_done_weight_regfile_10_14,
        if_dout => weight_regfile_10_14_dout,
        if_empty_n => weight_regfile_10_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_10_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_175,
        if_full_n => weight_regfile_10_15_full_n,
        if_write => ap_channel_done_weight_regfile_10_15,
        if_dout => weight_regfile_10_15_dout,
        if_empty_n => weight_regfile_10_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_176,
        if_full_n => weight_regfile_11_0_full_n,
        if_write => ap_channel_done_weight_regfile_11_0,
        if_dout => weight_regfile_11_0_dout,
        if_empty_n => weight_regfile_11_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_177,
        if_full_n => weight_regfile_11_1_full_n,
        if_write => ap_channel_done_weight_regfile_11_1,
        if_dout => weight_regfile_11_1_dout,
        if_empty_n => weight_regfile_11_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_178,
        if_full_n => weight_regfile_11_2_full_n,
        if_write => ap_channel_done_weight_regfile_11_2,
        if_dout => weight_regfile_11_2_dout,
        if_empty_n => weight_regfile_11_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_179,
        if_full_n => weight_regfile_11_3_full_n,
        if_write => ap_channel_done_weight_regfile_11_3,
        if_dout => weight_regfile_11_3_dout,
        if_empty_n => weight_regfile_11_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_180,
        if_full_n => weight_regfile_11_4_full_n,
        if_write => ap_channel_done_weight_regfile_11_4,
        if_dout => weight_regfile_11_4_dout,
        if_empty_n => weight_regfile_11_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_181,
        if_full_n => weight_regfile_11_5_full_n,
        if_write => ap_channel_done_weight_regfile_11_5,
        if_dout => weight_regfile_11_5_dout,
        if_empty_n => weight_regfile_11_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_182,
        if_full_n => weight_regfile_11_6_full_n,
        if_write => ap_channel_done_weight_regfile_11_6,
        if_dout => weight_regfile_11_6_dout,
        if_empty_n => weight_regfile_11_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_183,
        if_full_n => weight_regfile_11_7_full_n,
        if_write => ap_channel_done_weight_regfile_11_7,
        if_dout => weight_regfile_11_7_dout,
        if_empty_n => weight_regfile_11_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_184,
        if_full_n => weight_regfile_11_8_full_n,
        if_write => ap_channel_done_weight_regfile_11_8,
        if_dout => weight_regfile_11_8_dout,
        if_empty_n => weight_regfile_11_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_185,
        if_full_n => weight_regfile_11_9_full_n,
        if_write => ap_channel_done_weight_regfile_11_9,
        if_dout => weight_regfile_11_9_dout,
        if_empty_n => weight_regfile_11_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_186,
        if_full_n => weight_regfile_11_10_full_n,
        if_write => ap_channel_done_weight_regfile_11_10,
        if_dout => weight_regfile_11_10_dout,
        if_empty_n => weight_regfile_11_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_187,
        if_full_n => weight_regfile_11_11_full_n,
        if_write => ap_channel_done_weight_regfile_11_11,
        if_dout => weight_regfile_11_11_dout,
        if_empty_n => weight_regfile_11_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_188,
        if_full_n => weight_regfile_11_12_full_n,
        if_write => ap_channel_done_weight_regfile_11_12,
        if_dout => weight_regfile_11_12_dout,
        if_empty_n => weight_regfile_11_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_189,
        if_full_n => weight_regfile_11_13_full_n,
        if_write => ap_channel_done_weight_regfile_11_13,
        if_dout => weight_regfile_11_13_dout,
        if_empty_n => weight_regfile_11_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_190,
        if_full_n => weight_regfile_11_14_full_n,
        if_write => ap_channel_done_weight_regfile_11_14,
        if_dout => weight_regfile_11_14_dout,
        if_empty_n => weight_regfile_11_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_11_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_191,
        if_full_n => weight_regfile_11_15_full_n,
        if_write => ap_channel_done_weight_regfile_11_15,
        if_dout => weight_regfile_11_15_dout,
        if_empty_n => weight_regfile_11_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_192,
        if_full_n => weight_regfile_12_0_full_n,
        if_write => ap_channel_done_weight_regfile_12_0,
        if_dout => weight_regfile_12_0_dout,
        if_empty_n => weight_regfile_12_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_193,
        if_full_n => weight_regfile_12_1_full_n,
        if_write => ap_channel_done_weight_regfile_12_1,
        if_dout => weight_regfile_12_1_dout,
        if_empty_n => weight_regfile_12_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_194,
        if_full_n => weight_regfile_12_2_full_n,
        if_write => ap_channel_done_weight_regfile_12_2,
        if_dout => weight_regfile_12_2_dout,
        if_empty_n => weight_regfile_12_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_195,
        if_full_n => weight_regfile_12_3_full_n,
        if_write => ap_channel_done_weight_regfile_12_3,
        if_dout => weight_regfile_12_3_dout,
        if_empty_n => weight_regfile_12_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_196,
        if_full_n => weight_regfile_12_4_full_n,
        if_write => ap_channel_done_weight_regfile_12_4,
        if_dout => weight_regfile_12_4_dout,
        if_empty_n => weight_regfile_12_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_197,
        if_full_n => weight_regfile_12_5_full_n,
        if_write => ap_channel_done_weight_regfile_12_5,
        if_dout => weight_regfile_12_5_dout,
        if_empty_n => weight_regfile_12_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_198,
        if_full_n => weight_regfile_12_6_full_n,
        if_write => ap_channel_done_weight_regfile_12_6,
        if_dout => weight_regfile_12_6_dout,
        if_empty_n => weight_regfile_12_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_199,
        if_full_n => weight_regfile_12_7_full_n,
        if_write => ap_channel_done_weight_regfile_12_7,
        if_dout => weight_regfile_12_7_dout,
        if_empty_n => weight_regfile_12_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_200,
        if_full_n => weight_regfile_12_8_full_n,
        if_write => ap_channel_done_weight_regfile_12_8,
        if_dout => weight_regfile_12_8_dout,
        if_empty_n => weight_regfile_12_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_201,
        if_full_n => weight_regfile_12_9_full_n,
        if_write => ap_channel_done_weight_regfile_12_9,
        if_dout => weight_regfile_12_9_dout,
        if_empty_n => weight_regfile_12_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_202,
        if_full_n => weight_regfile_12_10_full_n,
        if_write => ap_channel_done_weight_regfile_12_10,
        if_dout => weight_regfile_12_10_dout,
        if_empty_n => weight_regfile_12_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_203,
        if_full_n => weight_regfile_12_11_full_n,
        if_write => ap_channel_done_weight_regfile_12_11,
        if_dout => weight_regfile_12_11_dout,
        if_empty_n => weight_regfile_12_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_204,
        if_full_n => weight_regfile_12_12_full_n,
        if_write => ap_channel_done_weight_regfile_12_12,
        if_dout => weight_regfile_12_12_dout,
        if_empty_n => weight_regfile_12_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_205,
        if_full_n => weight_regfile_12_13_full_n,
        if_write => ap_channel_done_weight_regfile_12_13,
        if_dout => weight_regfile_12_13_dout,
        if_empty_n => weight_regfile_12_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_206,
        if_full_n => weight_regfile_12_14_full_n,
        if_write => ap_channel_done_weight_regfile_12_14,
        if_dout => weight_regfile_12_14_dout,
        if_empty_n => weight_regfile_12_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_12_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_207,
        if_full_n => weight_regfile_12_15_full_n,
        if_write => ap_channel_done_weight_regfile_12_15,
        if_dout => weight_regfile_12_15_dout,
        if_empty_n => weight_regfile_12_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_208,
        if_full_n => weight_regfile_13_0_full_n,
        if_write => ap_channel_done_weight_regfile_13_0,
        if_dout => weight_regfile_13_0_dout,
        if_empty_n => weight_regfile_13_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_209,
        if_full_n => weight_regfile_13_1_full_n,
        if_write => ap_channel_done_weight_regfile_13_1,
        if_dout => weight_regfile_13_1_dout,
        if_empty_n => weight_regfile_13_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_210,
        if_full_n => weight_regfile_13_2_full_n,
        if_write => ap_channel_done_weight_regfile_13_2,
        if_dout => weight_regfile_13_2_dout,
        if_empty_n => weight_regfile_13_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_211,
        if_full_n => weight_regfile_13_3_full_n,
        if_write => ap_channel_done_weight_regfile_13_3,
        if_dout => weight_regfile_13_3_dout,
        if_empty_n => weight_regfile_13_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_212,
        if_full_n => weight_regfile_13_4_full_n,
        if_write => ap_channel_done_weight_regfile_13_4,
        if_dout => weight_regfile_13_4_dout,
        if_empty_n => weight_regfile_13_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_213,
        if_full_n => weight_regfile_13_5_full_n,
        if_write => ap_channel_done_weight_regfile_13_5,
        if_dout => weight_regfile_13_5_dout,
        if_empty_n => weight_regfile_13_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_214,
        if_full_n => weight_regfile_13_6_full_n,
        if_write => ap_channel_done_weight_regfile_13_6,
        if_dout => weight_regfile_13_6_dout,
        if_empty_n => weight_regfile_13_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_215,
        if_full_n => weight_regfile_13_7_full_n,
        if_write => ap_channel_done_weight_regfile_13_7,
        if_dout => weight_regfile_13_7_dout,
        if_empty_n => weight_regfile_13_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_216,
        if_full_n => weight_regfile_13_8_full_n,
        if_write => ap_channel_done_weight_regfile_13_8,
        if_dout => weight_regfile_13_8_dout,
        if_empty_n => weight_regfile_13_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_217,
        if_full_n => weight_regfile_13_9_full_n,
        if_write => ap_channel_done_weight_regfile_13_9,
        if_dout => weight_regfile_13_9_dout,
        if_empty_n => weight_regfile_13_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_218,
        if_full_n => weight_regfile_13_10_full_n,
        if_write => ap_channel_done_weight_regfile_13_10,
        if_dout => weight_regfile_13_10_dout,
        if_empty_n => weight_regfile_13_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_219,
        if_full_n => weight_regfile_13_11_full_n,
        if_write => ap_channel_done_weight_regfile_13_11,
        if_dout => weight_regfile_13_11_dout,
        if_empty_n => weight_regfile_13_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_220,
        if_full_n => weight_regfile_13_12_full_n,
        if_write => ap_channel_done_weight_regfile_13_12,
        if_dout => weight_regfile_13_12_dout,
        if_empty_n => weight_regfile_13_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_221,
        if_full_n => weight_regfile_13_13_full_n,
        if_write => ap_channel_done_weight_regfile_13_13,
        if_dout => weight_regfile_13_13_dout,
        if_empty_n => weight_regfile_13_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_222,
        if_full_n => weight_regfile_13_14_full_n,
        if_write => ap_channel_done_weight_regfile_13_14,
        if_dout => weight_regfile_13_14_dout,
        if_empty_n => weight_regfile_13_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_13_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_223,
        if_full_n => weight_regfile_13_15_full_n,
        if_write => ap_channel_done_weight_regfile_13_15,
        if_dout => weight_regfile_13_15_dout,
        if_empty_n => weight_regfile_13_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_224,
        if_full_n => weight_regfile_14_0_full_n,
        if_write => ap_channel_done_weight_regfile_14_0,
        if_dout => weight_regfile_14_0_dout,
        if_empty_n => weight_regfile_14_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_225,
        if_full_n => weight_regfile_14_1_full_n,
        if_write => ap_channel_done_weight_regfile_14_1,
        if_dout => weight_regfile_14_1_dout,
        if_empty_n => weight_regfile_14_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_226,
        if_full_n => weight_regfile_14_2_full_n,
        if_write => ap_channel_done_weight_regfile_14_2,
        if_dout => weight_regfile_14_2_dout,
        if_empty_n => weight_regfile_14_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_227,
        if_full_n => weight_regfile_14_3_full_n,
        if_write => ap_channel_done_weight_regfile_14_3,
        if_dout => weight_regfile_14_3_dout,
        if_empty_n => weight_regfile_14_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_228,
        if_full_n => weight_regfile_14_4_full_n,
        if_write => ap_channel_done_weight_regfile_14_4,
        if_dout => weight_regfile_14_4_dout,
        if_empty_n => weight_regfile_14_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_229,
        if_full_n => weight_regfile_14_5_full_n,
        if_write => ap_channel_done_weight_regfile_14_5,
        if_dout => weight_regfile_14_5_dout,
        if_empty_n => weight_regfile_14_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_230,
        if_full_n => weight_regfile_14_6_full_n,
        if_write => ap_channel_done_weight_regfile_14_6,
        if_dout => weight_regfile_14_6_dout,
        if_empty_n => weight_regfile_14_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_231,
        if_full_n => weight_regfile_14_7_full_n,
        if_write => ap_channel_done_weight_regfile_14_7,
        if_dout => weight_regfile_14_7_dout,
        if_empty_n => weight_regfile_14_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_232,
        if_full_n => weight_regfile_14_8_full_n,
        if_write => ap_channel_done_weight_regfile_14_8,
        if_dout => weight_regfile_14_8_dout,
        if_empty_n => weight_regfile_14_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_233,
        if_full_n => weight_regfile_14_9_full_n,
        if_write => ap_channel_done_weight_regfile_14_9,
        if_dout => weight_regfile_14_9_dout,
        if_empty_n => weight_regfile_14_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_234,
        if_full_n => weight_regfile_14_10_full_n,
        if_write => ap_channel_done_weight_regfile_14_10,
        if_dout => weight_regfile_14_10_dout,
        if_empty_n => weight_regfile_14_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_235,
        if_full_n => weight_regfile_14_11_full_n,
        if_write => ap_channel_done_weight_regfile_14_11,
        if_dout => weight_regfile_14_11_dout,
        if_empty_n => weight_regfile_14_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_236,
        if_full_n => weight_regfile_14_12_full_n,
        if_write => ap_channel_done_weight_regfile_14_12,
        if_dout => weight_regfile_14_12_dout,
        if_empty_n => weight_regfile_14_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_237,
        if_full_n => weight_regfile_14_13_full_n,
        if_write => ap_channel_done_weight_regfile_14_13,
        if_dout => weight_regfile_14_13_dout,
        if_empty_n => weight_regfile_14_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_238,
        if_full_n => weight_regfile_14_14_full_n,
        if_write => ap_channel_done_weight_regfile_14_14,
        if_dout => weight_regfile_14_14_dout,
        if_empty_n => weight_regfile_14_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_14_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_239,
        if_full_n => weight_regfile_14_15_full_n,
        if_write => ap_channel_done_weight_regfile_14_15,
        if_dout => weight_regfile_14_15_dout,
        if_empty_n => weight_regfile_14_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_0_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_240,
        if_full_n => weight_regfile_15_0_full_n,
        if_write => ap_channel_done_weight_regfile_15_0,
        if_dout => weight_regfile_15_0_dout,
        if_empty_n => weight_regfile_15_0_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_1_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_241,
        if_full_n => weight_regfile_15_1_full_n,
        if_write => ap_channel_done_weight_regfile_15_1,
        if_dout => weight_regfile_15_1_dout,
        if_empty_n => weight_regfile_15_1_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_2_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_242,
        if_full_n => weight_regfile_15_2_full_n,
        if_write => ap_channel_done_weight_regfile_15_2,
        if_dout => weight_regfile_15_2_dout,
        if_empty_n => weight_regfile_15_2_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_3_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_243,
        if_full_n => weight_regfile_15_3_full_n,
        if_write => ap_channel_done_weight_regfile_15_3,
        if_dout => weight_regfile_15_3_dout,
        if_empty_n => weight_regfile_15_3_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_4_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_244,
        if_full_n => weight_regfile_15_4_full_n,
        if_write => ap_channel_done_weight_regfile_15_4,
        if_dout => weight_regfile_15_4_dout,
        if_empty_n => weight_regfile_15_4_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_5_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_245,
        if_full_n => weight_regfile_15_5_full_n,
        if_write => ap_channel_done_weight_regfile_15_5,
        if_dout => weight_regfile_15_5_dout,
        if_empty_n => weight_regfile_15_5_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_6_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_246,
        if_full_n => weight_regfile_15_6_full_n,
        if_write => ap_channel_done_weight_regfile_15_6,
        if_dout => weight_regfile_15_6_dout,
        if_empty_n => weight_regfile_15_6_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_7_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_247,
        if_full_n => weight_regfile_15_7_full_n,
        if_write => ap_channel_done_weight_regfile_15_7,
        if_dout => weight_regfile_15_7_dout,
        if_empty_n => weight_regfile_15_7_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_8_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_248,
        if_full_n => weight_regfile_15_8_full_n,
        if_write => ap_channel_done_weight_regfile_15_8,
        if_dout => weight_regfile_15_8_dout,
        if_empty_n => weight_regfile_15_8_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_9_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_249,
        if_full_n => weight_regfile_15_9_full_n,
        if_write => ap_channel_done_weight_regfile_15_9,
        if_dout => weight_regfile_15_9_dout,
        if_empty_n => weight_regfile_15_9_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_10_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_250,
        if_full_n => weight_regfile_15_10_full_n,
        if_write => ap_channel_done_weight_regfile_15_10,
        if_dout => weight_regfile_15_10_dout,
        if_empty_n => weight_regfile_15_10_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_11_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_251,
        if_full_n => weight_regfile_15_11_full_n,
        if_write => ap_channel_done_weight_regfile_15_11,
        if_dout => weight_regfile_15_11_dout,
        if_empty_n => weight_regfile_15_11_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_12_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_252,
        if_full_n => weight_regfile_15_12_full_n,
        if_write => ap_channel_done_weight_regfile_15_12,
        if_dout => weight_regfile_15_12_dout,
        if_empty_n => weight_regfile_15_12_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_13_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_253,
        if_full_n => weight_regfile_15_13_full_n,
        if_write => ap_channel_done_weight_regfile_15_13,
        if_dout => weight_regfile_15_13_dout,
        if_empty_n => weight_regfile_15_13_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_14_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_254,
        if_full_n => weight_regfile_15_14_full_n,
        if_write => ap_channel_done_weight_regfile_15_14,
        if_dout => weight_regfile_15_14_dout,
        if_empty_n => weight_regfile_15_14_empty_n,
        if_read => runSysArr_U0_ap_ready);

    weight_regfile_15_15_U : component Conv_sysarr_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runWeight2Reg_U0_ap_return_255,
        if_full_n => weight_regfile_15_15_full_n,
        if_write => ap_channel_done_weight_regfile_15_15,
        if_dout => weight_regfile_15_15_dout,
        if_empty_n => weight_regfile_15_15_empty_n,
        if_read => runSysArr_U0_ap_ready);

    param_c12_U : component Conv_sysarr_fifo_w1120_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => runSysArr_U0_param_out_din,
        if_full_n => param_c12_full_n,
        if_write => runSysArr_U0_param_out_write,
        if_dout => param_c12_dout,
        if_empty_n => param_c12_empty_n,
        if_read => runOutputL1toL2_U0_param_read);





    ap_sync_reg_channel_write_data_l1_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_0 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_0 <= ap_sync_channel_write_data_l1_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_1 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_1 <= ap_sync_channel_write_data_l1_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_10 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_10 <= ap_sync_channel_write_data_l1_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_11 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_11 <= ap_sync_channel_write_data_l1_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_12 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_12 <= ap_sync_channel_write_data_l1_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_13 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_13 <= ap_sync_channel_write_data_l1_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_14 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_14 <= ap_sync_channel_write_data_l1_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_15 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_15 <= ap_sync_channel_write_data_l1_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_2 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_2 <= ap_sync_channel_write_data_l1_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_3 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_3 <= ap_sync_channel_write_data_l1_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_4 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_4 <= ap_sync_channel_write_data_l1_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_5 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_5 <= ap_sync_channel_write_data_l1_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_6 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_6 <= ap_sync_channel_write_data_l1_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_7 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_7 <= ap_sync_channel_write_data_l1_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_8 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_8 <= ap_sync_channel_write_data_l1_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_data_l1_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_data_l1_9 <= ap_const_logic_0;
            else
                if (((runDataL2toL1_U0_ap_done and runDataL2toL1_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_data_l1_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_data_l1_9 <= ap_sync_channel_write_data_l1_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_0 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_0 <= ap_sync_channel_write_output_l1_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_1 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_1 <= ap_sync_channel_write_output_l1_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_10 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_10 <= ap_sync_channel_write_output_l1_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_11 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_11 <= ap_sync_channel_write_output_l1_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_12 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_12 <= ap_sync_channel_write_output_l1_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_13 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_13 <= ap_sync_channel_write_output_l1_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_14 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_14 <= ap_sync_channel_write_output_l1_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_15 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_15 <= ap_sync_channel_write_output_l1_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_2 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_2 <= ap_sync_channel_write_output_l1_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_3 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_3 <= ap_sync_channel_write_output_l1_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_4 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_4 <= ap_sync_channel_write_output_l1_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_5 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_5 <= ap_sync_channel_write_output_l1_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_6 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_6 <= ap_sync_channel_write_output_l1_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_7 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_7 <= ap_sync_channel_write_output_l1_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_8 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_8 <= ap_sync_channel_write_output_l1_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_output_l1_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_output_l1_9 <= ap_const_logic_0;
            else
                if (((runSysArr_U0_ap_done and runSysArr_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_output_l1_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_output_l1_9 <= ap_sync_channel_write_output_l1_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_0 <= ap_sync_channel_write_weight_regfile_0_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_1 <= ap_sync_channel_write_weight_regfile_0_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_10 <= ap_sync_channel_write_weight_regfile_0_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_11 <= ap_sync_channel_write_weight_regfile_0_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_12 <= ap_sync_channel_write_weight_regfile_0_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_13 <= ap_sync_channel_write_weight_regfile_0_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_14 <= ap_sync_channel_write_weight_regfile_0_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_15 <= ap_sync_channel_write_weight_regfile_0_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_2 <= ap_sync_channel_write_weight_regfile_0_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_3 <= ap_sync_channel_write_weight_regfile_0_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_4 <= ap_sync_channel_write_weight_regfile_0_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_5 <= ap_sync_channel_write_weight_regfile_0_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_6 <= ap_sync_channel_write_weight_regfile_0_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_7 <= ap_sync_channel_write_weight_regfile_0_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_8 <= ap_sync_channel_write_weight_regfile_0_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_0_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_0_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_0_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_0_9 <= ap_sync_channel_write_weight_regfile_0_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_0 <= ap_sync_channel_write_weight_regfile_10_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_1 <= ap_sync_channel_write_weight_regfile_10_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_10 <= ap_sync_channel_write_weight_regfile_10_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_11 <= ap_sync_channel_write_weight_regfile_10_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_12 <= ap_sync_channel_write_weight_regfile_10_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_13 <= ap_sync_channel_write_weight_regfile_10_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_14 <= ap_sync_channel_write_weight_regfile_10_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_15 <= ap_sync_channel_write_weight_regfile_10_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_2 <= ap_sync_channel_write_weight_regfile_10_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_3 <= ap_sync_channel_write_weight_regfile_10_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_4 <= ap_sync_channel_write_weight_regfile_10_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_5 <= ap_sync_channel_write_weight_regfile_10_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_6 <= ap_sync_channel_write_weight_regfile_10_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_7 <= ap_sync_channel_write_weight_regfile_10_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_8 <= ap_sync_channel_write_weight_regfile_10_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_10_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_10_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_10_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_10_9 <= ap_sync_channel_write_weight_regfile_10_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_0 <= ap_sync_channel_write_weight_regfile_11_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_1 <= ap_sync_channel_write_weight_regfile_11_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_10 <= ap_sync_channel_write_weight_regfile_11_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_11 <= ap_sync_channel_write_weight_regfile_11_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_12 <= ap_sync_channel_write_weight_regfile_11_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_13 <= ap_sync_channel_write_weight_regfile_11_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_14 <= ap_sync_channel_write_weight_regfile_11_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_15 <= ap_sync_channel_write_weight_regfile_11_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_2 <= ap_sync_channel_write_weight_regfile_11_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_3 <= ap_sync_channel_write_weight_regfile_11_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_4 <= ap_sync_channel_write_weight_regfile_11_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_5 <= ap_sync_channel_write_weight_regfile_11_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_6 <= ap_sync_channel_write_weight_regfile_11_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_7 <= ap_sync_channel_write_weight_regfile_11_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_8 <= ap_sync_channel_write_weight_regfile_11_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_11_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_11_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_11_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_11_9 <= ap_sync_channel_write_weight_regfile_11_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_0 <= ap_sync_channel_write_weight_regfile_12_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_1 <= ap_sync_channel_write_weight_regfile_12_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_10 <= ap_sync_channel_write_weight_regfile_12_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_11 <= ap_sync_channel_write_weight_regfile_12_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_12 <= ap_sync_channel_write_weight_regfile_12_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_13 <= ap_sync_channel_write_weight_regfile_12_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_14 <= ap_sync_channel_write_weight_regfile_12_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_15 <= ap_sync_channel_write_weight_regfile_12_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_2 <= ap_sync_channel_write_weight_regfile_12_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_3 <= ap_sync_channel_write_weight_regfile_12_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_4 <= ap_sync_channel_write_weight_regfile_12_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_5 <= ap_sync_channel_write_weight_regfile_12_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_6 <= ap_sync_channel_write_weight_regfile_12_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_7 <= ap_sync_channel_write_weight_regfile_12_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_8 <= ap_sync_channel_write_weight_regfile_12_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_12_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_12_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_12_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_12_9 <= ap_sync_channel_write_weight_regfile_12_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_0 <= ap_sync_channel_write_weight_regfile_13_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_1 <= ap_sync_channel_write_weight_regfile_13_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_10 <= ap_sync_channel_write_weight_regfile_13_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_11 <= ap_sync_channel_write_weight_regfile_13_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_12 <= ap_sync_channel_write_weight_regfile_13_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_13 <= ap_sync_channel_write_weight_regfile_13_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_14 <= ap_sync_channel_write_weight_regfile_13_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_15 <= ap_sync_channel_write_weight_regfile_13_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_2 <= ap_sync_channel_write_weight_regfile_13_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_3 <= ap_sync_channel_write_weight_regfile_13_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_4 <= ap_sync_channel_write_weight_regfile_13_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_5 <= ap_sync_channel_write_weight_regfile_13_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_6 <= ap_sync_channel_write_weight_regfile_13_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_7 <= ap_sync_channel_write_weight_regfile_13_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_8 <= ap_sync_channel_write_weight_regfile_13_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_13_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_13_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_13_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_13_9 <= ap_sync_channel_write_weight_regfile_13_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_0 <= ap_sync_channel_write_weight_regfile_14_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_1 <= ap_sync_channel_write_weight_regfile_14_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_10 <= ap_sync_channel_write_weight_regfile_14_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_11 <= ap_sync_channel_write_weight_regfile_14_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_12 <= ap_sync_channel_write_weight_regfile_14_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_13 <= ap_sync_channel_write_weight_regfile_14_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_14 <= ap_sync_channel_write_weight_regfile_14_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_15 <= ap_sync_channel_write_weight_regfile_14_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_2 <= ap_sync_channel_write_weight_regfile_14_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_3 <= ap_sync_channel_write_weight_regfile_14_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_4 <= ap_sync_channel_write_weight_regfile_14_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_5 <= ap_sync_channel_write_weight_regfile_14_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_6 <= ap_sync_channel_write_weight_regfile_14_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_7 <= ap_sync_channel_write_weight_regfile_14_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_8 <= ap_sync_channel_write_weight_regfile_14_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_14_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_14_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_14_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_14_9 <= ap_sync_channel_write_weight_regfile_14_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_0 <= ap_sync_channel_write_weight_regfile_15_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_1 <= ap_sync_channel_write_weight_regfile_15_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_10 <= ap_sync_channel_write_weight_regfile_15_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_11 <= ap_sync_channel_write_weight_regfile_15_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_12 <= ap_sync_channel_write_weight_regfile_15_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_13 <= ap_sync_channel_write_weight_regfile_15_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_14 <= ap_sync_channel_write_weight_regfile_15_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_15 <= ap_sync_channel_write_weight_regfile_15_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_2 <= ap_sync_channel_write_weight_regfile_15_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_3 <= ap_sync_channel_write_weight_regfile_15_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_4 <= ap_sync_channel_write_weight_regfile_15_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_5 <= ap_sync_channel_write_weight_regfile_15_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_6 <= ap_sync_channel_write_weight_regfile_15_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_7 <= ap_sync_channel_write_weight_regfile_15_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_8 <= ap_sync_channel_write_weight_regfile_15_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_15_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_15_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_15_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_15_9 <= ap_sync_channel_write_weight_regfile_15_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_0 <= ap_sync_channel_write_weight_regfile_1_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_1 <= ap_sync_channel_write_weight_regfile_1_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_10 <= ap_sync_channel_write_weight_regfile_1_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_11 <= ap_sync_channel_write_weight_regfile_1_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_12 <= ap_sync_channel_write_weight_regfile_1_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_13 <= ap_sync_channel_write_weight_regfile_1_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_14 <= ap_sync_channel_write_weight_regfile_1_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_15 <= ap_sync_channel_write_weight_regfile_1_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_2 <= ap_sync_channel_write_weight_regfile_1_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_3 <= ap_sync_channel_write_weight_regfile_1_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_4 <= ap_sync_channel_write_weight_regfile_1_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_5 <= ap_sync_channel_write_weight_regfile_1_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_6 <= ap_sync_channel_write_weight_regfile_1_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_7 <= ap_sync_channel_write_weight_regfile_1_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_8 <= ap_sync_channel_write_weight_regfile_1_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_1_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_1_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_1_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_1_9 <= ap_sync_channel_write_weight_regfile_1_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_0 <= ap_sync_channel_write_weight_regfile_2_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_1 <= ap_sync_channel_write_weight_regfile_2_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_10 <= ap_sync_channel_write_weight_regfile_2_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_11 <= ap_sync_channel_write_weight_regfile_2_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_12 <= ap_sync_channel_write_weight_regfile_2_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_13 <= ap_sync_channel_write_weight_regfile_2_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_14 <= ap_sync_channel_write_weight_regfile_2_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_15 <= ap_sync_channel_write_weight_regfile_2_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_2 <= ap_sync_channel_write_weight_regfile_2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_3 <= ap_sync_channel_write_weight_regfile_2_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_4 <= ap_sync_channel_write_weight_regfile_2_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_5 <= ap_sync_channel_write_weight_regfile_2_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_6 <= ap_sync_channel_write_weight_regfile_2_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_7 <= ap_sync_channel_write_weight_regfile_2_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_8 <= ap_sync_channel_write_weight_regfile_2_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_2_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_2_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_2_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_2_9 <= ap_sync_channel_write_weight_regfile_2_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_0 <= ap_sync_channel_write_weight_regfile_3_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_1 <= ap_sync_channel_write_weight_regfile_3_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_10 <= ap_sync_channel_write_weight_regfile_3_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_11 <= ap_sync_channel_write_weight_regfile_3_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_12 <= ap_sync_channel_write_weight_regfile_3_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_13 <= ap_sync_channel_write_weight_regfile_3_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_14 <= ap_sync_channel_write_weight_regfile_3_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_15 <= ap_sync_channel_write_weight_regfile_3_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_2 <= ap_sync_channel_write_weight_regfile_3_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_3 <= ap_sync_channel_write_weight_regfile_3_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_4 <= ap_sync_channel_write_weight_regfile_3_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_5 <= ap_sync_channel_write_weight_regfile_3_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_6 <= ap_sync_channel_write_weight_regfile_3_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_7 <= ap_sync_channel_write_weight_regfile_3_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_8 <= ap_sync_channel_write_weight_regfile_3_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_3_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_3_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_3_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_3_9 <= ap_sync_channel_write_weight_regfile_3_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_0 <= ap_sync_channel_write_weight_regfile_4_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_1 <= ap_sync_channel_write_weight_regfile_4_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_10 <= ap_sync_channel_write_weight_regfile_4_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_11 <= ap_sync_channel_write_weight_regfile_4_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_12 <= ap_sync_channel_write_weight_regfile_4_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_13 <= ap_sync_channel_write_weight_regfile_4_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_14 <= ap_sync_channel_write_weight_regfile_4_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_15 <= ap_sync_channel_write_weight_regfile_4_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_2 <= ap_sync_channel_write_weight_regfile_4_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_3 <= ap_sync_channel_write_weight_regfile_4_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_4 <= ap_sync_channel_write_weight_regfile_4_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_5 <= ap_sync_channel_write_weight_regfile_4_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_6 <= ap_sync_channel_write_weight_regfile_4_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_7 <= ap_sync_channel_write_weight_regfile_4_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_8 <= ap_sync_channel_write_weight_regfile_4_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_4_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_4_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_4_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_4_9 <= ap_sync_channel_write_weight_regfile_4_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_0 <= ap_sync_channel_write_weight_regfile_5_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_1 <= ap_sync_channel_write_weight_regfile_5_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_10 <= ap_sync_channel_write_weight_regfile_5_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_11 <= ap_sync_channel_write_weight_regfile_5_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_12 <= ap_sync_channel_write_weight_regfile_5_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_13 <= ap_sync_channel_write_weight_regfile_5_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_14 <= ap_sync_channel_write_weight_regfile_5_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_15 <= ap_sync_channel_write_weight_regfile_5_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_2 <= ap_sync_channel_write_weight_regfile_5_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_3 <= ap_sync_channel_write_weight_regfile_5_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_4 <= ap_sync_channel_write_weight_regfile_5_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_5 <= ap_sync_channel_write_weight_regfile_5_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_6 <= ap_sync_channel_write_weight_regfile_5_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_7 <= ap_sync_channel_write_weight_regfile_5_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_8 <= ap_sync_channel_write_weight_regfile_5_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_5_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_5_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_5_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_5_9 <= ap_sync_channel_write_weight_regfile_5_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_0 <= ap_sync_channel_write_weight_regfile_6_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_1 <= ap_sync_channel_write_weight_regfile_6_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_10 <= ap_sync_channel_write_weight_regfile_6_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_11 <= ap_sync_channel_write_weight_regfile_6_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_12 <= ap_sync_channel_write_weight_regfile_6_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_13 <= ap_sync_channel_write_weight_regfile_6_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_14 <= ap_sync_channel_write_weight_regfile_6_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_15 <= ap_sync_channel_write_weight_regfile_6_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_2 <= ap_sync_channel_write_weight_regfile_6_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_3 <= ap_sync_channel_write_weight_regfile_6_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_4 <= ap_sync_channel_write_weight_regfile_6_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_5 <= ap_sync_channel_write_weight_regfile_6_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_6 <= ap_sync_channel_write_weight_regfile_6_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_7 <= ap_sync_channel_write_weight_regfile_6_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_8 <= ap_sync_channel_write_weight_regfile_6_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_6_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_6_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_6_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_6_9 <= ap_sync_channel_write_weight_regfile_6_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_0 <= ap_sync_channel_write_weight_regfile_7_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_1 <= ap_sync_channel_write_weight_regfile_7_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_10 <= ap_sync_channel_write_weight_regfile_7_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_11 <= ap_sync_channel_write_weight_regfile_7_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_12 <= ap_sync_channel_write_weight_regfile_7_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_13 <= ap_sync_channel_write_weight_regfile_7_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_14 <= ap_sync_channel_write_weight_regfile_7_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_15 <= ap_sync_channel_write_weight_regfile_7_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_2 <= ap_sync_channel_write_weight_regfile_7_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_3 <= ap_sync_channel_write_weight_regfile_7_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_4 <= ap_sync_channel_write_weight_regfile_7_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_5 <= ap_sync_channel_write_weight_regfile_7_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_6 <= ap_sync_channel_write_weight_regfile_7_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_7 <= ap_sync_channel_write_weight_regfile_7_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_8 <= ap_sync_channel_write_weight_regfile_7_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_7_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_7_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_7_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_7_9 <= ap_sync_channel_write_weight_regfile_7_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_0 <= ap_sync_channel_write_weight_regfile_8_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_1 <= ap_sync_channel_write_weight_regfile_8_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_10 <= ap_sync_channel_write_weight_regfile_8_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_11 <= ap_sync_channel_write_weight_regfile_8_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_12 <= ap_sync_channel_write_weight_regfile_8_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_13 <= ap_sync_channel_write_weight_regfile_8_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_14 <= ap_sync_channel_write_weight_regfile_8_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_15 <= ap_sync_channel_write_weight_regfile_8_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_2 <= ap_sync_channel_write_weight_regfile_8_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_3 <= ap_sync_channel_write_weight_regfile_8_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_4 <= ap_sync_channel_write_weight_regfile_8_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_5 <= ap_sync_channel_write_weight_regfile_8_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_6 <= ap_sync_channel_write_weight_regfile_8_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_7 <= ap_sync_channel_write_weight_regfile_8_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_8 <= ap_sync_channel_write_weight_regfile_8_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_8_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_8_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_8_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_8_9 <= ap_sync_channel_write_weight_regfile_8_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_0 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_0 <= ap_sync_channel_write_weight_regfile_9_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_1 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_1 <= ap_sync_channel_write_weight_regfile_9_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_10 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_10 <= ap_sync_channel_write_weight_regfile_9_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_11 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_11 <= ap_sync_channel_write_weight_regfile_9_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_12 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_12 <= ap_sync_channel_write_weight_regfile_9_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_13 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_13 <= ap_sync_channel_write_weight_regfile_9_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_14 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_14 <= ap_sync_channel_write_weight_regfile_9_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_15 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_15 <= ap_sync_channel_write_weight_regfile_9_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_2 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_2 <= ap_sync_channel_write_weight_regfile_9_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_3 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_3 <= ap_sync_channel_write_weight_regfile_9_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_4 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_4 <= ap_sync_channel_write_weight_regfile_9_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_5 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_5 <= ap_sync_channel_write_weight_regfile_9_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_6 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_6 <= ap_sync_channel_write_weight_regfile_9_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_7 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_7 <= ap_sync_channel_write_weight_regfile_9_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_8 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_8 <= ap_sync_channel_write_weight_regfile_9_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_weight_regfile_9_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_weight_regfile_9_9 <= ap_const_logic_0;
            else
                if (((runWeight2Reg_U0_ap_done and runWeight2Reg_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_weight_regfile_9_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_weight_regfile_9_9 <= ap_sync_channel_write_weight_regfile_9_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready <= ap_sync_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_runDataL2toL1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_runDataL2toL1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_runDataL2toL1_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_runDataL2toL1_U0_ap_ready <= ap_sync_runDataL2toL1_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_runWeight2Reg_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_runWeight2Reg_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_runWeight2Reg_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_runWeight2Reg_U0_ap_ready <= ap_sync_runWeight2Reg_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready = ap_const_logic_0))) then 
                dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready_count <= std_logic_vector(unsigned(dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready = ap_const_logic_1))) then 
                dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready_count <= std_logic_vector(unsigned(dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    runDataL2toL1_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (runDataL2toL1_U0_ap_ready = ap_const_logic_0))) then 
                runDataL2toL1_U0_ap_ready_count <= std_logic_vector(unsigned(runDataL2toL1_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (runDataL2toL1_U0_ap_ready = ap_const_logic_1))) then 
                runDataL2toL1_U0_ap_ready_count <= std_logic_vector(unsigned(runDataL2toL1_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    runWeight2Reg_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((runWeight2Reg_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                runWeight2Reg_U0_ap_ready_count <= std_logic_vector(unsigned(runWeight2Reg_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((runWeight2Reg_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                runWeight2Reg_U0_ap_ready_count <= std_logic_vector(unsigned(runWeight2Reg_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    ap_channel_done_data_l1_0 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_0 xor ap_const_logic_1));
    ap_channel_done_data_l1_1 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_1 xor ap_const_logic_1));
    ap_channel_done_data_l1_10 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_10 xor ap_const_logic_1));
    ap_channel_done_data_l1_11 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_11 xor ap_const_logic_1));
    ap_channel_done_data_l1_12 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_12 xor ap_const_logic_1));
    ap_channel_done_data_l1_13 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_13 xor ap_const_logic_1));
    ap_channel_done_data_l1_14 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_14 xor ap_const_logic_1));
    ap_channel_done_data_l1_15 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_15 xor ap_const_logic_1));
    ap_channel_done_data_l1_2 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_2 xor ap_const_logic_1));
    ap_channel_done_data_l1_3 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_3 xor ap_const_logic_1));
    ap_channel_done_data_l1_4 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_4 xor ap_const_logic_1));
    ap_channel_done_data_l1_5 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_5 xor ap_const_logic_1));
    ap_channel_done_data_l1_6 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_6 xor ap_const_logic_1));
    ap_channel_done_data_l1_7 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_7 xor ap_const_logic_1));
    ap_channel_done_data_l1_8 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_8 xor ap_const_logic_1));
    ap_channel_done_data_l1_9 <= (runDataL2toL1_U0_ap_done and (ap_sync_reg_channel_write_data_l1_9 xor ap_const_logic_1));
    ap_channel_done_output_l1_0 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_0 xor ap_const_logic_1));
    ap_channel_done_output_l1_1 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_1 xor ap_const_logic_1));
    ap_channel_done_output_l1_10 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_10 xor ap_const_logic_1));
    ap_channel_done_output_l1_11 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_11 xor ap_const_logic_1));
    ap_channel_done_output_l1_12 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_12 xor ap_const_logic_1));
    ap_channel_done_output_l1_13 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_13 xor ap_const_logic_1));
    ap_channel_done_output_l1_14 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_14 xor ap_const_logic_1));
    ap_channel_done_output_l1_15 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_15 xor ap_const_logic_1));
    ap_channel_done_output_l1_2 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_2 xor ap_const_logic_1));
    ap_channel_done_output_l1_3 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_3 xor ap_const_logic_1));
    ap_channel_done_output_l1_4 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_4 xor ap_const_logic_1));
    ap_channel_done_output_l1_5 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_5 xor ap_const_logic_1));
    ap_channel_done_output_l1_6 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_6 xor ap_const_logic_1));
    ap_channel_done_output_l1_7 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_7 xor ap_const_logic_1));
    ap_channel_done_output_l1_8 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_8 xor ap_const_logic_1));
    ap_channel_done_output_l1_9 <= (runSysArr_U0_ap_done and (ap_sync_reg_channel_write_output_l1_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_0_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_0_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_10_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_10_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_11_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_11_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_12_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_12_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_13_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_13_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_14_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_14_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_15_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_15_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_1_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_1_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_2_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_2_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_3_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_3_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_4_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_4_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_5_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_5_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_6_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_6_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_7_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_7_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_8_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_8_9 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_0 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_0 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_1 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_1 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_10 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_10 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_11 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_11 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_12 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_12 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_13 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_13 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_14 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_14 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_15 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_15 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_2 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_2 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_3 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_3 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_4 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_4 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_5 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_5 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_6 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_6 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_7 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_7 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_8 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_8 xor ap_const_logic_1));
    ap_channel_done_weight_regfile_9_9 <= (runWeight2Reg_U0_ap_done and (ap_sync_reg_channel_write_weight_regfile_9_9 xor ap_const_logic_1));
    ap_done <= runOutputL1toL2_U0_ap_done;
    ap_idle <= (runWeight2Reg_U0_ap_idle and runSysArr_U0_ap_idle and runOutputL1toL2_U0_ap_idle and runDataL2toL1_U0_ap_idle and (weight_regfile_15_15_empty_n xor ap_const_logic_1) and (weight_regfile_15_14_empty_n xor ap_const_logic_1) and (weight_regfile_15_13_empty_n xor ap_const_logic_1) and (weight_regfile_15_12_empty_n xor ap_const_logic_1) and (weight_regfile_15_11_empty_n xor ap_const_logic_1) and (weight_regfile_15_10_empty_n xor ap_const_logic_1) and (weight_regfile_15_9_empty_n xor ap_const_logic_1) and (weight_regfile_15_8_empty_n xor ap_const_logic_1) and (weight_regfile_15_7_empty_n xor ap_const_logic_1) and (weight_regfile_15_6_empty_n xor ap_const_logic_1) and (weight_regfile_15_5_empty_n xor ap_const_logic_1) and (weight_regfile_15_4_empty_n xor ap_const_logic_1) and (weight_regfile_15_3_empty_n xor ap_const_logic_1) and (weight_regfile_15_2_empty_n xor ap_const_logic_1) and (weight_regfile_15_1_empty_n xor ap_const_logic_1) and (weight_regfile_15_0_empty_n xor ap_const_logic_1) and (weight_regfile_14_15_empty_n xor ap_const_logic_1) and (weight_regfile_14_14_empty_n xor ap_const_logic_1) and (weight_regfile_14_13_empty_n xor ap_const_logic_1) and (weight_regfile_14_12_empty_n xor ap_const_logic_1) and (weight_regfile_14_11_empty_n xor ap_const_logic_1) and (weight_regfile_14_10_empty_n xor ap_const_logic_1) and (weight_regfile_14_9_empty_n xor ap_const_logic_1) and (weight_regfile_14_8_empty_n xor ap_const_logic_1) and (weight_regfile_14_7_empty_n xor ap_const_logic_1) and (weight_regfile_14_6_empty_n xor ap_const_logic_1) and (weight_regfile_14_5_empty_n xor ap_const_logic_1) and (weight_regfile_14_4_empty_n xor ap_const_logic_1) and (weight_regfile_14_3_empty_n xor ap_const_logic_1) and (weight_regfile_14_2_empty_n xor ap_const_logic_1) and (weight_regfile_14_1_empty_n xor ap_const_logic_1) and (weight_regfile_14_0_empty_n xor ap_const_logic_1) and (weight_regfile_13_15_empty_n xor ap_const_logic_1) and (weight_regfile_13_14_empty_n xor ap_const_logic_1) and (weight_regfile_13_13_empty_n xor ap_const_logic_1) and (weight_regfile_13_12_empty_n xor ap_const_logic_1) and (weight_regfile_13_11_empty_n xor ap_const_logic_1) and (weight_regfile_13_10_empty_n xor ap_const_logic_1) and (weight_regfile_13_9_empty_n xor ap_const_logic_1) and (weight_regfile_13_8_empty_n xor ap_const_logic_1) and (weight_regfile_13_7_empty_n xor ap_const_logic_1) and (weight_regfile_13_6_empty_n xor ap_const_logic_1) and (weight_regfile_13_5_empty_n xor ap_const_logic_1) and (weight_regfile_13_4_empty_n xor ap_const_logic_1) and (weight_regfile_13_3_empty_n xor ap_const_logic_1) and (weight_regfile_13_2_empty_n xor ap_const_logic_1) and (weight_regfile_13_1_empty_n xor ap_const_logic_1) and (weight_regfile_13_0_empty_n xor ap_const_logic_1) and (weight_regfile_12_15_empty_n xor ap_const_logic_1) and (weight_regfile_12_14_empty_n xor ap_const_logic_1) and (weight_regfile_12_13_empty_n xor ap_const_logic_1) and (weight_regfile_12_12_empty_n xor ap_const_logic_1) and (weight_regfile_12_11_empty_n xor ap_const_logic_1) and (weight_regfile_12_10_empty_n xor ap_const_logic_1) and (weight_regfile_12_9_empty_n xor ap_const_logic_1) and (weight_regfile_12_8_empty_n xor ap_const_logic_1) and (weight_regfile_12_7_empty_n xor ap_const_logic_1) and (weight_regfile_12_6_empty_n xor ap_const_logic_1) and (weight_regfile_12_5_empty_n xor ap_const_logic_1) and (weight_regfile_12_4_empty_n xor ap_const_logic_1) and (weight_regfile_12_3_empty_n xor ap_const_logic_1) and (weight_regfile_12_2_empty_n xor ap_const_logic_1) and (weight_regfile_12_1_empty_n xor ap_const_logic_1) and (weight_regfile_12_0_empty_n xor ap_const_logic_1) and (weight_regfile_11_15_empty_n xor ap_const_logic_1) and (weight_regfile_11_14_empty_n xor ap_const_logic_1) and (weight_regfile_11_13_empty_n xor ap_const_logic_1) and (weight_regfile_11_12_empty_n xor ap_const_logic_1) and (weight_regfile_11_11_empty_n xor ap_const_logic_1) and (weight_regfile_11_10_empty_n xor ap_const_logic_1) and (weight_regfile_11_9_empty_n xor ap_const_logic_1) and (weight_regfile_11_8_empty_n xor ap_const_logic_1) and (weight_regfile_11_7_empty_n xor ap_const_logic_1) and (weight_regfile_11_6_empty_n xor ap_const_logic_1) and (weight_regfile_11_5_empty_n xor ap_const_logic_1) and (weight_regfile_11_4_empty_n xor ap_const_logic_1) and (weight_regfile_11_3_empty_n xor ap_const_logic_1) and (weight_regfile_11_2_empty_n xor ap_const_logic_1) and (weight_regfile_11_1_empty_n xor ap_const_logic_1) and (weight_regfile_11_0_empty_n xor ap_const_logic_1) and (weight_regfile_10_15_empty_n xor ap_const_logic_1) and (weight_regfile_10_14_empty_n xor ap_const_logic_1) and (weight_regfile_10_13_empty_n xor ap_const_logic_1) and (weight_regfile_10_12_empty_n xor ap_const_logic_1) and (weight_regfile_10_11_empty_n xor ap_const_logic_1) and (weight_regfile_10_10_empty_n xor ap_const_logic_1) and (weight_regfile_10_9_empty_n xor ap_const_logic_1) and (weight_regfile_10_8_empty_n xor ap_const_logic_1) and (weight_regfile_10_7_empty_n xor ap_const_logic_1) and (weight_regfile_10_6_empty_n xor ap_const_logic_1) and (weight_regfile_10_5_empty_n xor ap_const_logic_1) and (weight_regfile_10_4_empty_n xor ap_const_logic_1) and (weight_regfile_10_3_empty_n xor ap_const_logic_1) and (weight_regfile_10_2_empty_n xor ap_const_logic_1) and (weight_regfile_10_1_empty_n xor ap_const_logic_1) and (weight_regfile_10_0_empty_n xor ap_const_logic_1) and (weight_regfile_9_15_empty_n xor ap_const_logic_1) and (weight_regfile_9_14_empty_n xor ap_const_logic_1) and (weight_regfile_9_13_empty_n xor ap_const_logic_1) and (weight_regfile_9_12_empty_n xor ap_const_logic_1) and (weight_regfile_9_11_empty_n xor ap_const_logic_1) and (weight_regfile_9_10_empty_n xor ap_const_logic_1) and (weight_regfile_9_9_empty_n xor ap_const_logic_1) and (weight_regfile_9_8_empty_n xor ap_const_logic_1) and (weight_regfile_9_7_empty_n xor ap_const_logic_1) and (weight_regfile_9_6_empty_n xor ap_const_logic_1) and (weight_regfile_9_5_empty_n xor ap_const_logic_1) and (weight_regfile_9_4_empty_n xor ap_const_logic_1) and (weight_regfile_9_3_empty_n xor ap_const_logic_1) and (weight_regfile_9_2_empty_n xor ap_const_logic_1) and (weight_regfile_9_1_empty_n xor ap_const_logic_1) and (weight_regfile_9_0_empty_n xor ap_const_logic_1) and (weight_regfile_8_15_empty_n xor ap_const_logic_1) and (weight_regfile_8_14_empty_n xor ap_const_logic_1) and (weight_regfile_8_13_empty_n xor ap_const_logic_1) and (weight_regfile_8_12_empty_n xor ap_const_logic_1) and (weight_regfile_8_11_empty_n xor ap_const_logic_1) and (weight_regfile_8_10_empty_n xor ap_const_logic_1) and (weight_regfile_8_9_empty_n xor ap_const_logic_1) and (weight_regfile_8_8_empty_n xor ap_const_logic_1) and (weight_regfile_8_7_empty_n xor ap_const_logic_1) and (weight_regfile_8_6_empty_n xor ap_const_logic_1) and (weight_regfile_8_5_empty_n xor ap_const_logic_1) and (weight_regfile_8_4_empty_n xor ap_const_logic_1) and (weight_regfile_8_3_empty_n xor ap_const_logic_1) and (weight_regfile_8_2_empty_n xor ap_const_logic_1) and (weight_regfile_8_1_empty_n xor ap_const_logic_1) and (weight_regfile_8_0_empty_n xor ap_const_logic_1) and (weight_regfile_7_15_empty_n xor ap_const_logic_1) and (weight_regfile_7_14_empty_n xor ap_const_logic_1) and (weight_regfile_7_13_empty_n xor ap_const_logic_1) and (weight_regfile_7_12_empty_n xor ap_const_logic_1) and (weight_regfile_7_11_empty_n xor ap_const_logic_1) and (weight_regfile_7_10_empty_n xor ap_const_logic_1) and (weight_regfile_7_9_empty_n xor ap_const_logic_1) and (weight_regfile_7_8_empty_n xor ap_const_logic_1) and (weight_regfile_7_7_empty_n xor ap_const_logic_1) and (weight_regfile_7_6_empty_n xor ap_const_logic_1) and (weight_regfile_7_5_empty_n xor ap_const_logic_1) and (weight_regfile_7_4_empty_n xor ap_const_logic_1) and (weight_regfile_7_3_empty_n xor ap_const_logic_1) and (weight_regfile_7_2_empty_n xor ap_const_logic_1) and (weight_regfile_7_1_empty_n xor ap_const_logic_1) and (weight_regfile_7_0_empty_n xor ap_const_logic_1) and (weight_regfile_6_15_empty_n xor ap_const_logic_1) and (weight_regfile_6_14_empty_n xor ap_const_logic_1) and (weight_regfile_6_13_empty_n xor ap_const_logic_1) and (weight_regfile_6_12_empty_n xor ap_const_logic_1) and (weight_regfile_6_11_empty_n xor ap_const_logic_1) and (weight_regfile_6_10_empty_n xor ap_const_logic_1) and (weight_regfile_6_9_empty_n xor ap_const_logic_1) and (weight_regfile_6_8_empty_n xor ap_const_logic_1) and (weight_regfile_6_7_empty_n xor ap_const_logic_1) and (weight_regfile_6_6_empty_n xor ap_const_logic_1) and (weight_regfile_6_5_empty_n xor ap_const_logic_1) and (weight_regfile_6_4_empty_n xor ap_const_logic_1) and (weight_regfile_6_3_empty_n xor ap_const_logic_1) and (weight_regfile_6_2_empty_n xor ap_const_logic_1) and (weight_regfile_6_1_empty_n xor ap_const_logic_1) and (weight_regfile_6_0_empty_n xor ap_const_logic_1) and (weight_regfile_5_15_empty_n xor ap_const_logic_1) and (weight_regfile_5_14_empty_n xor ap_const_logic_1) and (weight_regfile_5_13_empty_n xor ap_const_logic_1) and (weight_regfile_5_12_empty_n xor ap_const_logic_1) and (weight_regfile_5_11_empty_n xor ap_const_logic_1) and (weight_regfile_5_10_empty_n xor ap_const_logic_1) and (weight_regfile_5_9_empty_n xor ap_const_logic_1) and (weight_regfile_5_8_empty_n xor ap_const_logic_1) and (weight_regfile_5_7_empty_n xor ap_const_logic_1) and (weight_regfile_5_6_empty_n xor ap_const_logic_1) and (weight_regfile_5_5_empty_n xor ap_const_logic_1) and (weight_regfile_5_4_empty_n xor ap_const_logic_1) and (weight_regfile_5_3_empty_n xor ap_const_logic_1) and (weight_regfile_5_2_empty_n xor ap_const_logic_1) and (weight_regfile_5_1_empty_n xor ap_const_logic_1) and (weight_regfile_5_0_empty_n xor ap_const_logic_1) and (weight_regfile_4_15_empty_n xor ap_const_logic_1) and (weight_regfile_4_14_empty_n xor ap_const_logic_1) and (weight_regfile_4_13_empty_n xor ap_const_logic_1) and (weight_regfile_4_12_empty_n xor ap_const_logic_1) and (weight_regfile_4_11_empty_n xor ap_const_logic_1) and (weight_regfile_4_10_empty_n xor ap_const_logic_1) and (weight_regfile_4_9_empty_n xor ap_const_logic_1) and (weight_regfile_4_8_empty_n xor ap_const_logic_1) and (weight_regfile_4_7_empty_n xor ap_const_logic_1) and (weight_regfile_4_6_empty_n xor ap_const_logic_1) and (weight_regfile_4_5_empty_n xor ap_const_logic_1) and (weight_regfile_4_4_empty_n xor ap_const_logic_1) and (weight_regfile_4_3_empty_n xor ap_const_logic_1) and (weight_regfile_4_2_empty_n xor ap_const_logic_1) and (weight_regfile_4_1_empty_n xor ap_const_logic_1) and (weight_regfile_4_0_empty_n xor ap_const_logic_1) and (weight_regfile_3_15_empty_n xor ap_const_logic_1) and (weight_regfile_3_14_empty_n xor ap_const_logic_1) and (weight_regfile_3_13_empty_n xor ap_const_logic_1) and (weight_regfile_3_12_empty_n xor ap_const_logic_1) and (weight_regfile_3_11_empty_n xor ap_const_logic_1) and (weight_regfile_3_10_empty_n xor ap_const_logic_1) and (weight_regfile_3_9_empty_n xor ap_const_logic_1) and (weight_regfile_3_8_empty_n xor ap_const_logic_1) and (weight_regfile_3_7_empty_n xor ap_const_logic_1) and (weight_regfile_3_6_empty_n xor ap_const_logic_1) and (weight_regfile_3_5_empty_n xor ap_const_logic_1) and (weight_regfile_3_4_empty_n xor ap_const_logic_1) and (weight_regfile_3_3_empty_n xor ap_const_logic_1) and (weight_regfile_3_2_empty_n xor ap_const_logic_1) and (weight_regfile_3_1_empty_n xor ap_const_logic_1) and (weight_regfile_3_0_empty_n xor ap_const_logic_1) and (weight_regfile_2_15_empty_n xor ap_const_logic_1) and (weight_regfile_2_14_empty_n xor ap_const_logic_1) and (weight_regfile_2_13_empty_n xor ap_const_logic_1) and (weight_regfile_2_12_empty_n xor ap_const_logic_1) and (weight_regfile_2_11_empty_n xor ap_const_logic_1) and (weight_regfile_2_10_empty_n xor ap_const_logic_1) and (weight_regfile_2_9_empty_n xor ap_const_logic_1) and (weight_regfile_2_8_empty_n xor ap_const_logic_1) and (weight_regfile_2_7_empty_n xor ap_const_logic_1) and (weight_regfile_2_6_empty_n xor ap_const_logic_1) and (weight_regfile_2_5_empty_n xor ap_const_logic_1) and (weight_regfile_2_4_empty_n xor ap_const_logic_1) and (weight_regfile_2_3_empty_n xor ap_const_logic_1) and (weight_regfile_2_2_empty_n xor ap_const_logic_1) and (weight_regfile_2_1_empty_n xor ap_const_logic_1) and (weight_regfile_2_0_empty_n xor ap_const_logic_1) and (weight_regfile_1_15_empty_n xor ap_const_logic_1) and (weight_regfile_1_14_empty_n xor ap_const_logic_1) and (weight_regfile_1_13_empty_n xor ap_const_logic_1) and (weight_regfile_1_12_empty_n xor ap_const_logic_1) and (weight_regfile_1_11_empty_n xor ap_const_logic_1) and (weight_regfile_1_10_empty_n xor ap_const_logic_1) and (weight_regfile_1_9_empty_n xor ap_const_logic_1) and (weight_regfile_1_8_empty_n xor ap_const_logic_1) and (weight_regfile_1_7_empty_n xor ap_const_logic_1) and (weight_regfile_1_6_empty_n xor ap_const_logic_1) and (weight_regfile_1_5_empty_n xor ap_const_logic_1) and (weight_regfile_1_4_empty_n xor ap_const_logic_1) and (weight_regfile_1_3_empty_n xor ap_const_logic_1) and (weight_regfile_1_2_empty_n xor ap_const_logic_1) and (weight_regfile_1_1_empty_n xor ap_const_logic_1) and (weight_regfile_1_0_empty_n xor ap_const_logic_1) and (weight_regfile_0_15_empty_n xor ap_const_logic_1) and (weight_regfile_0_14_empty_n xor ap_const_logic_1) and (weight_regfile_0_13_empty_n xor ap_const_logic_1) and (weight_regfile_0_12_empty_n xor ap_const_logic_1) and (weight_regfile_0_11_empty_n xor ap_const_logic_1) and (weight_regfile_0_10_empty_n xor ap_const_logic_1) and (weight_regfile_0_9_empty_n xor ap_const_logic_1) and (weight_regfile_0_8_empty_n xor ap_const_logic_1) and (weight_regfile_0_7_empty_n xor ap_const_logic_1) and (weight_regfile_0_6_empty_n xor ap_const_logic_1) and (weight_regfile_0_5_empty_n xor ap_const_logic_1) and (weight_regfile_0_4_empty_n xor ap_const_logic_1) and (weight_regfile_0_3_empty_n xor ap_const_logic_1) and (weight_regfile_0_2_empty_n xor ap_const_logic_1) and (weight_regfile_0_1_empty_n xor ap_const_logic_1) and (weight_regfile_0_0_empty_n xor ap_const_logic_1) and (output_l1_15_t_empty_n xor ap_const_logic_1) and (output_l1_14_t_empty_n xor ap_const_logic_1) and (output_l1_13_t_empty_n xor ap_const_logic_1) and (output_l1_12_t_empty_n xor ap_const_logic_1) and (output_l1_11_t_empty_n xor ap_const_logic_1) and (output_l1_10_t_empty_n xor ap_const_logic_1) and (output_l1_9_t_empty_n xor ap_const_logic_1) and (output_l1_8_t_empty_n xor ap_const_logic_1) and (output_l1_7_t_empty_n xor ap_const_logic_1) and (output_l1_6_t_empty_n xor ap_const_logic_1) and (output_l1_5_t_empty_n xor ap_const_logic_1) and (output_l1_4_t_empty_n xor ap_const_logic_1) and (output_l1_3_t_empty_n xor ap_const_logic_1) and (output_l1_2_t_empty_n xor ap_const_logic_1) and (output_l1_1_t_empty_n xor ap_const_logic_1) and (output_l1_0_t_empty_n xor ap_const_logic_1) and (data_l1_15_t_empty_n xor ap_const_logic_1) and (data_l1_14_t_empty_n xor ap_const_logic_1) and (data_l1_13_t_empty_n xor ap_const_logic_1) and (data_l1_12_t_empty_n xor ap_const_logic_1) and (data_l1_11_t_empty_n xor ap_const_logic_1) and (data_l1_10_t_empty_n xor ap_const_logic_1) and (data_l1_9_t_empty_n xor ap_const_logic_1) and (data_l1_8_t_empty_n xor ap_const_logic_1) and (data_l1_7_t_empty_n xor ap_const_logic_1) and (data_l1_6_t_empty_n xor ap_const_logic_1) and (data_l1_5_t_empty_n xor ap_const_logic_1) and (data_l1_4_t_empty_n xor ap_const_logic_1) and (data_l1_3_t_empty_n xor ap_const_logic_1) and (data_l1_2_t_empty_n xor ap_const_logic_1) and (data_l1_1_t_empty_n xor ap_const_logic_1) and (data_l1_0_t_empty_n xor ap_const_logic_1) and dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_channel_write_data_l1_0 <= ((runDataL2toL1_U0_data_l1_0257_i_full_n and ap_channel_done_data_l1_0) or ap_sync_reg_channel_write_data_l1_0);
    ap_sync_channel_write_data_l1_1 <= ((runDataL2toL1_U0_data_l1_1258_i_full_n and ap_channel_done_data_l1_1) or ap_sync_reg_channel_write_data_l1_1);
    ap_sync_channel_write_data_l1_10 <= ((runDataL2toL1_U0_data_l1_10267_i_full_n and ap_channel_done_data_l1_10) or ap_sync_reg_channel_write_data_l1_10);
    ap_sync_channel_write_data_l1_11 <= ((runDataL2toL1_U0_data_l1_11268_i_full_n and ap_channel_done_data_l1_11) or ap_sync_reg_channel_write_data_l1_11);
    ap_sync_channel_write_data_l1_12 <= ((runDataL2toL1_U0_data_l1_12269_i_full_n and ap_channel_done_data_l1_12) or ap_sync_reg_channel_write_data_l1_12);
    ap_sync_channel_write_data_l1_13 <= ((runDataL2toL1_U0_data_l1_13270_i_full_n and ap_channel_done_data_l1_13) or ap_sync_reg_channel_write_data_l1_13);
    ap_sync_channel_write_data_l1_14 <= ((runDataL2toL1_U0_data_l1_14271_i_full_n and ap_channel_done_data_l1_14) or ap_sync_reg_channel_write_data_l1_14);
    ap_sync_channel_write_data_l1_15 <= ((runDataL2toL1_U0_data_l1_15272_i_full_n and ap_channel_done_data_l1_15) or ap_sync_reg_channel_write_data_l1_15);
    ap_sync_channel_write_data_l1_2 <= ((runDataL2toL1_U0_data_l1_2259_i_full_n and ap_channel_done_data_l1_2) or ap_sync_reg_channel_write_data_l1_2);
    ap_sync_channel_write_data_l1_3 <= ((runDataL2toL1_U0_data_l1_3260_i_full_n and ap_channel_done_data_l1_3) or ap_sync_reg_channel_write_data_l1_3);
    ap_sync_channel_write_data_l1_4 <= ((runDataL2toL1_U0_data_l1_4261_i_full_n and ap_channel_done_data_l1_4) or ap_sync_reg_channel_write_data_l1_4);
    ap_sync_channel_write_data_l1_5 <= ((runDataL2toL1_U0_data_l1_5262_i_full_n and ap_channel_done_data_l1_5) or ap_sync_reg_channel_write_data_l1_5);
    ap_sync_channel_write_data_l1_6 <= ((runDataL2toL1_U0_data_l1_6263_i_full_n and ap_channel_done_data_l1_6) or ap_sync_reg_channel_write_data_l1_6);
    ap_sync_channel_write_data_l1_7 <= ((runDataL2toL1_U0_data_l1_7264_i_full_n and ap_channel_done_data_l1_7) or ap_sync_reg_channel_write_data_l1_7);
    ap_sync_channel_write_data_l1_8 <= ((runDataL2toL1_U0_data_l1_8265_i_full_n and ap_channel_done_data_l1_8) or ap_sync_reg_channel_write_data_l1_8);
    ap_sync_channel_write_data_l1_9 <= ((runDataL2toL1_U0_data_l1_9266_i_full_n and ap_channel_done_data_l1_9) or ap_sync_reg_channel_write_data_l1_9);
    ap_sync_channel_write_output_l1_0 <= ((runSysArr_U0_output_l1_0273_i_full_n and ap_channel_done_output_l1_0) or ap_sync_reg_channel_write_output_l1_0);
    ap_sync_channel_write_output_l1_1 <= ((runSysArr_U0_output_l1_1274_i_full_n and ap_channel_done_output_l1_1) or ap_sync_reg_channel_write_output_l1_1);
    ap_sync_channel_write_output_l1_10 <= ((runSysArr_U0_output_l1_10283_i_full_n and ap_channel_done_output_l1_10) or ap_sync_reg_channel_write_output_l1_10);
    ap_sync_channel_write_output_l1_11 <= ((runSysArr_U0_output_l1_11284_i_full_n and ap_channel_done_output_l1_11) or ap_sync_reg_channel_write_output_l1_11);
    ap_sync_channel_write_output_l1_12 <= ((runSysArr_U0_output_l1_12285_i_full_n and ap_channel_done_output_l1_12) or ap_sync_reg_channel_write_output_l1_12);
    ap_sync_channel_write_output_l1_13 <= ((runSysArr_U0_output_l1_13286_i_full_n and ap_channel_done_output_l1_13) or ap_sync_reg_channel_write_output_l1_13);
    ap_sync_channel_write_output_l1_14 <= ((runSysArr_U0_output_l1_14287_i_full_n and ap_channel_done_output_l1_14) or ap_sync_reg_channel_write_output_l1_14);
    ap_sync_channel_write_output_l1_15 <= ((runSysArr_U0_output_l1_15288_i_full_n and ap_channel_done_output_l1_15) or ap_sync_reg_channel_write_output_l1_15);
    ap_sync_channel_write_output_l1_2 <= ((runSysArr_U0_output_l1_2275_i_full_n and ap_channel_done_output_l1_2) or ap_sync_reg_channel_write_output_l1_2);
    ap_sync_channel_write_output_l1_3 <= ((runSysArr_U0_output_l1_3276_i_full_n and ap_channel_done_output_l1_3) or ap_sync_reg_channel_write_output_l1_3);
    ap_sync_channel_write_output_l1_4 <= ((runSysArr_U0_output_l1_4277_i_full_n and ap_channel_done_output_l1_4) or ap_sync_reg_channel_write_output_l1_4);
    ap_sync_channel_write_output_l1_5 <= ((runSysArr_U0_output_l1_5278_i_full_n and ap_channel_done_output_l1_5) or ap_sync_reg_channel_write_output_l1_5);
    ap_sync_channel_write_output_l1_6 <= ((runSysArr_U0_output_l1_6279_i_full_n and ap_channel_done_output_l1_6) or ap_sync_reg_channel_write_output_l1_6);
    ap_sync_channel_write_output_l1_7 <= ((runSysArr_U0_output_l1_7280_i_full_n and ap_channel_done_output_l1_7) or ap_sync_reg_channel_write_output_l1_7);
    ap_sync_channel_write_output_l1_8 <= ((runSysArr_U0_output_l1_8281_i_full_n and ap_channel_done_output_l1_8) or ap_sync_reg_channel_write_output_l1_8);
    ap_sync_channel_write_output_l1_9 <= ((runSysArr_U0_output_l1_9282_i_full_n and ap_channel_done_output_l1_9) or ap_sync_reg_channel_write_output_l1_9);
    ap_sync_channel_write_weight_regfile_0_0 <= ((weight_regfile_0_0_full_n and ap_channel_done_weight_regfile_0_0) or ap_sync_reg_channel_write_weight_regfile_0_0);
    ap_sync_channel_write_weight_regfile_0_1 <= ((weight_regfile_0_1_full_n and ap_channel_done_weight_regfile_0_1) or ap_sync_reg_channel_write_weight_regfile_0_1);
    ap_sync_channel_write_weight_regfile_0_10 <= ((weight_regfile_0_10_full_n and ap_channel_done_weight_regfile_0_10) or ap_sync_reg_channel_write_weight_regfile_0_10);
    ap_sync_channel_write_weight_regfile_0_11 <= ((weight_regfile_0_11_full_n and ap_channel_done_weight_regfile_0_11) or ap_sync_reg_channel_write_weight_regfile_0_11);
    ap_sync_channel_write_weight_regfile_0_12 <= ((weight_regfile_0_12_full_n and ap_channel_done_weight_regfile_0_12) or ap_sync_reg_channel_write_weight_regfile_0_12);
    ap_sync_channel_write_weight_regfile_0_13 <= ((weight_regfile_0_13_full_n and ap_channel_done_weight_regfile_0_13) or ap_sync_reg_channel_write_weight_regfile_0_13);
    ap_sync_channel_write_weight_regfile_0_14 <= ((weight_regfile_0_14_full_n and ap_channel_done_weight_regfile_0_14) or ap_sync_reg_channel_write_weight_regfile_0_14);
    ap_sync_channel_write_weight_regfile_0_15 <= ((weight_regfile_0_15_full_n and ap_channel_done_weight_regfile_0_15) or ap_sync_reg_channel_write_weight_regfile_0_15);
    ap_sync_channel_write_weight_regfile_0_2 <= ((weight_regfile_0_2_full_n and ap_channel_done_weight_regfile_0_2) or ap_sync_reg_channel_write_weight_regfile_0_2);
    ap_sync_channel_write_weight_regfile_0_3 <= ((weight_regfile_0_3_full_n and ap_channel_done_weight_regfile_0_3) or ap_sync_reg_channel_write_weight_regfile_0_3);
    ap_sync_channel_write_weight_regfile_0_4 <= ((weight_regfile_0_4_full_n and ap_channel_done_weight_regfile_0_4) or ap_sync_reg_channel_write_weight_regfile_0_4);
    ap_sync_channel_write_weight_regfile_0_5 <= ((weight_regfile_0_5_full_n and ap_channel_done_weight_regfile_0_5) or ap_sync_reg_channel_write_weight_regfile_0_5);
    ap_sync_channel_write_weight_regfile_0_6 <= ((weight_regfile_0_6_full_n and ap_channel_done_weight_regfile_0_6) or ap_sync_reg_channel_write_weight_regfile_0_6);
    ap_sync_channel_write_weight_regfile_0_7 <= ((weight_regfile_0_7_full_n and ap_channel_done_weight_regfile_0_7) or ap_sync_reg_channel_write_weight_regfile_0_7);
    ap_sync_channel_write_weight_regfile_0_8 <= ((weight_regfile_0_8_full_n and ap_channel_done_weight_regfile_0_8) or ap_sync_reg_channel_write_weight_regfile_0_8);
    ap_sync_channel_write_weight_regfile_0_9 <= ((weight_regfile_0_9_full_n and ap_channel_done_weight_regfile_0_9) or ap_sync_reg_channel_write_weight_regfile_0_9);
    ap_sync_channel_write_weight_regfile_10_0 <= ((weight_regfile_10_0_full_n and ap_channel_done_weight_regfile_10_0) or ap_sync_reg_channel_write_weight_regfile_10_0);
    ap_sync_channel_write_weight_regfile_10_1 <= ((weight_regfile_10_1_full_n and ap_channel_done_weight_regfile_10_1) or ap_sync_reg_channel_write_weight_regfile_10_1);
    ap_sync_channel_write_weight_regfile_10_10 <= ((weight_regfile_10_10_full_n and ap_channel_done_weight_regfile_10_10) or ap_sync_reg_channel_write_weight_regfile_10_10);
    ap_sync_channel_write_weight_regfile_10_11 <= ((weight_regfile_10_11_full_n and ap_channel_done_weight_regfile_10_11) or ap_sync_reg_channel_write_weight_regfile_10_11);
    ap_sync_channel_write_weight_regfile_10_12 <= ((weight_regfile_10_12_full_n and ap_channel_done_weight_regfile_10_12) or ap_sync_reg_channel_write_weight_regfile_10_12);
    ap_sync_channel_write_weight_regfile_10_13 <= ((weight_regfile_10_13_full_n and ap_channel_done_weight_regfile_10_13) or ap_sync_reg_channel_write_weight_regfile_10_13);
    ap_sync_channel_write_weight_regfile_10_14 <= ((weight_regfile_10_14_full_n and ap_channel_done_weight_regfile_10_14) or ap_sync_reg_channel_write_weight_regfile_10_14);
    ap_sync_channel_write_weight_regfile_10_15 <= ((weight_regfile_10_15_full_n and ap_channel_done_weight_regfile_10_15) or ap_sync_reg_channel_write_weight_regfile_10_15);
    ap_sync_channel_write_weight_regfile_10_2 <= ((weight_regfile_10_2_full_n and ap_channel_done_weight_regfile_10_2) or ap_sync_reg_channel_write_weight_regfile_10_2);
    ap_sync_channel_write_weight_regfile_10_3 <= ((weight_regfile_10_3_full_n and ap_channel_done_weight_regfile_10_3) or ap_sync_reg_channel_write_weight_regfile_10_3);
    ap_sync_channel_write_weight_regfile_10_4 <= ((weight_regfile_10_4_full_n and ap_channel_done_weight_regfile_10_4) or ap_sync_reg_channel_write_weight_regfile_10_4);
    ap_sync_channel_write_weight_regfile_10_5 <= ((weight_regfile_10_5_full_n and ap_channel_done_weight_regfile_10_5) or ap_sync_reg_channel_write_weight_regfile_10_5);
    ap_sync_channel_write_weight_regfile_10_6 <= ((weight_regfile_10_6_full_n and ap_channel_done_weight_regfile_10_6) or ap_sync_reg_channel_write_weight_regfile_10_6);
    ap_sync_channel_write_weight_regfile_10_7 <= ((weight_regfile_10_7_full_n and ap_channel_done_weight_regfile_10_7) or ap_sync_reg_channel_write_weight_regfile_10_7);
    ap_sync_channel_write_weight_regfile_10_8 <= ((weight_regfile_10_8_full_n and ap_channel_done_weight_regfile_10_8) or ap_sync_reg_channel_write_weight_regfile_10_8);
    ap_sync_channel_write_weight_regfile_10_9 <= ((weight_regfile_10_9_full_n and ap_channel_done_weight_regfile_10_9) or ap_sync_reg_channel_write_weight_regfile_10_9);
    ap_sync_channel_write_weight_regfile_11_0 <= ((weight_regfile_11_0_full_n and ap_channel_done_weight_regfile_11_0) or ap_sync_reg_channel_write_weight_regfile_11_0);
    ap_sync_channel_write_weight_regfile_11_1 <= ((weight_regfile_11_1_full_n and ap_channel_done_weight_regfile_11_1) or ap_sync_reg_channel_write_weight_regfile_11_1);
    ap_sync_channel_write_weight_regfile_11_10 <= ((weight_regfile_11_10_full_n and ap_channel_done_weight_regfile_11_10) or ap_sync_reg_channel_write_weight_regfile_11_10);
    ap_sync_channel_write_weight_regfile_11_11 <= ((weight_regfile_11_11_full_n and ap_channel_done_weight_regfile_11_11) or ap_sync_reg_channel_write_weight_regfile_11_11);
    ap_sync_channel_write_weight_regfile_11_12 <= ((weight_regfile_11_12_full_n and ap_channel_done_weight_regfile_11_12) or ap_sync_reg_channel_write_weight_regfile_11_12);
    ap_sync_channel_write_weight_regfile_11_13 <= ((weight_regfile_11_13_full_n and ap_channel_done_weight_regfile_11_13) or ap_sync_reg_channel_write_weight_regfile_11_13);
    ap_sync_channel_write_weight_regfile_11_14 <= ((weight_regfile_11_14_full_n and ap_channel_done_weight_regfile_11_14) or ap_sync_reg_channel_write_weight_regfile_11_14);
    ap_sync_channel_write_weight_regfile_11_15 <= ((weight_regfile_11_15_full_n and ap_channel_done_weight_regfile_11_15) or ap_sync_reg_channel_write_weight_regfile_11_15);
    ap_sync_channel_write_weight_regfile_11_2 <= ((weight_regfile_11_2_full_n and ap_channel_done_weight_regfile_11_2) or ap_sync_reg_channel_write_weight_regfile_11_2);
    ap_sync_channel_write_weight_regfile_11_3 <= ((weight_regfile_11_3_full_n and ap_channel_done_weight_regfile_11_3) or ap_sync_reg_channel_write_weight_regfile_11_3);
    ap_sync_channel_write_weight_regfile_11_4 <= ((weight_regfile_11_4_full_n and ap_channel_done_weight_regfile_11_4) or ap_sync_reg_channel_write_weight_regfile_11_4);
    ap_sync_channel_write_weight_regfile_11_5 <= ((weight_regfile_11_5_full_n and ap_channel_done_weight_regfile_11_5) or ap_sync_reg_channel_write_weight_regfile_11_5);
    ap_sync_channel_write_weight_regfile_11_6 <= ((weight_regfile_11_6_full_n and ap_channel_done_weight_regfile_11_6) or ap_sync_reg_channel_write_weight_regfile_11_6);
    ap_sync_channel_write_weight_regfile_11_7 <= ((weight_regfile_11_7_full_n and ap_channel_done_weight_regfile_11_7) or ap_sync_reg_channel_write_weight_regfile_11_7);
    ap_sync_channel_write_weight_regfile_11_8 <= ((weight_regfile_11_8_full_n and ap_channel_done_weight_regfile_11_8) or ap_sync_reg_channel_write_weight_regfile_11_8);
    ap_sync_channel_write_weight_regfile_11_9 <= ((weight_regfile_11_9_full_n and ap_channel_done_weight_regfile_11_9) or ap_sync_reg_channel_write_weight_regfile_11_9);
    ap_sync_channel_write_weight_regfile_12_0 <= ((weight_regfile_12_0_full_n and ap_channel_done_weight_regfile_12_0) or ap_sync_reg_channel_write_weight_regfile_12_0);
    ap_sync_channel_write_weight_regfile_12_1 <= ((weight_regfile_12_1_full_n and ap_channel_done_weight_regfile_12_1) or ap_sync_reg_channel_write_weight_regfile_12_1);
    ap_sync_channel_write_weight_regfile_12_10 <= ((weight_regfile_12_10_full_n and ap_channel_done_weight_regfile_12_10) or ap_sync_reg_channel_write_weight_regfile_12_10);
    ap_sync_channel_write_weight_regfile_12_11 <= ((weight_regfile_12_11_full_n and ap_channel_done_weight_regfile_12_11) or ap_sync_reg_channel_write_weight_regfile_12_11);
    ap_sync_channel_write_weight_regfile_12_12 <= ((weight_regfile_12_12_full_n and ap_channel_done_weight_regfile_12_12) or ap_sync_reg_channel_write_weight_regfile_12_12);
    ap_sync_channel_write_weight_regfile_12_13 <= ((weight_regfile_12_13_full_n and ap_channel_done_weight_regfile_12_13) or ap_sync_reg_channel_write_weight_regfile_12_13);
    ap_sync_channel_write_weight_regfile_12_14 <= ((weight_regfile_12_14_full_n and ap_channel_done_weight_regfile_12_14) or ap_sync_reg_channel_write_weight_regfile_12_14);
    ap_sync_channel_write_weight_regfile_12_15 <= ((weight_regfile_12_15_full_n and ap_channel_done_weight_regfile_12_15) or ap_sync_reg_channel_write_weight_regfile_12_15);
    ap_sync_channel_write_weight_regfile_12_2 <= ((weight_regfile_12_2_full_n and ap_channel_done_weight_regfile_12_2) or ap_sync_reg_channel_write_weight_regfile_12_2);
    ap_sync_channel_write_weight_regfile_12_3 <= ((weight_regfile_12_3_full_n and ap_channel_done_weight_regfile_12_3) or ap_sync_reg_channel_write_weight_regfile_12_3);
    ap_sync_channel_write_weight_regfile_12_4 <= ((weight_regfile_12_4_full_n and ap_channel_done_weight_regfile_12_4) or ap_sync_reg_channel_write_weight_regfile_12_4);
    ap_sync_channel_write_weight_regfile_12_5 <= ((weight_regfile_12_5_full_n and ap_channel_done_weight_regfile_12_5) or ap_sync_reg_channel_write_weight_regfile_12_5);
    ap_sync_channel_write_weight_regfile_12_6 <= ((weight_regfile_12_6_full_n and ap_channel_done_weight_regfile_12_6) or ap_sync_reg_channel_write_weight_regfile_12_6);
    ap_sync_channel_write_weight_regfile_12_7 <= ((weight_regfile_12_7_full_n and ap_channel_done_weight_regfile_12_7) or ap_sync_reg_channel_write_weight_regfile_12_7);
    ap_sync_channel_write_weight_regfile_12_8 <= ((weight_regfile_12_8_full_n and ap_channel_done_weight_regfile_12_8) or ap_sync_reg_channel_write_weight_regfile_12_8);
    ap_sync_channel_write_weight_regfile_12_9 <= ((weight_regfile_12_9_full_n and ap_channel_done_weight_regfile_12_9) or ap_sync_reg_channel_write_weight_regfile_12_9);
    ap_sync_channel_write_weight_regfile_13_0 <= ((weight_regfile_13_0_full_n and ap_channel_done_weight_regfile_13_0) or ap_sync_reg_channel_write_weight_regfile_13_0);
    ap_sync_channel_write_weight_regfile_13_1 <= ((weight_regfile_13_1_full_n and ap_channel_done_weight_regfile_13_1) or ap_sync_reg_channel_write_weight_regfile_13_1);
    ap_sync_channel_write_weight_regfile_13_10 <= ((weight_regfile_13_10_full_n and ap_channel_done_weight_regfile_13_10) or ap_sync_reg_channel_write_weight_regfile_13_10);
    ap_sync_channel_write_weight_regfile_13_11 <= ((weight_regfile_13_11_full_n and ap_channel_done_weight_regfile_13_11) or ap_sync_reg_channel_write_weight_regfile_13_11);
    ap_sync_channel_write_weight_regfile_13_12 <= ((weight_regfile_13_12_full_n and ap_channel_done_weight_regfile_13_12) or ap_sync_reg_channel_write_weight_regfile_13_12);
    ap_sync_channel_write_weight_regfile_13_13 <= ((weight_regfile_13_13_full_n and ap_channel_done_weight_regfile_13_13) or ap_sync_reg_channel_write_weight_regfile_13_13);
    ap_sync_channel_write_weight_regfile_13_14 <= ((weight_regfile_13_14_full_n and ap_channel_done_weight_regfile_13_14) or ap_sync_reg_channel_write_weight_regfile_13_14);
    ap_sync_channel_write_weight_regfile_13_15 <= ((weight_regfile_13_15_full_n and ap_channel_done_weight_regfile_13_15) or ap_sync_reg_channel_write_weight_regfile_13_15);
    ap_sync_channel_write_weight_regfile_13_2 <= ((weight_regfile_13_2_full_n and ap_channel_done_weight_regfile_13_2) or ap_sync_reg_channel_write_weight_regfile_13_2);
    ap_sync_channel_write_weight_regfile_13_3 <= ((weight_regfile_13_3_full_n and ap_channel_done_weight_regfile_13_3) or ap_sync_reg_channel_write_weight_regfile_13_3);
    ap_sync_channel_write_weight_regfile_13_4 <= ((weight_regfile_13_4_full_n and ap_channel_done_weight_regfile_13_4) or ap_sync_reg_channel_write_weight_regfile_13_4);
    ap_sync_channel_write_weight_regfile_13_5 <= ((weight_regfile_13_5_full_n and ap_channel_done_weight_regfile_13_5) or ap_sync_reg_channel_write_weight_regfile_13_5);
    ap_sync_channel_write_weight_regfile_13_6 <= ((weight_regfile_13_6_full_n and ap_channel_done_weight_regfile_13_6) or ap_sync_reg_channel_write_weight_regfile_13_6);
    ap_sync_channel_write_weight_regfile_13_7 <= ((weight_regfile_13_7_full_n and ap_channel_done_weight_regfile_13_7) or ap_sync_reg_channel_write_weight_regfile_13_7);
    ap_sync_channel_write_weight_regfile_13_8 <= ((weight_regfile_13_8_full_n and ap_channel_done_weight_regfile_13_8) or ap_sync_reg_channel_write_weight_regfile_13_8);
    ap_sync_channel_write_weight_regfile_13_9 <= ((weight_regfile_13_9_full_n and ap_channel_done_weight_regfile_13_9) or ap_sync_reg_channel_write_weight_regfile_13_9);
    ap_sync_channel_write_weight_regfile_14_0 <= ((weight_regfile_14_0_full_n and ap_channel_done_weight_regfile_14_0) or ap_sync_reg_channel_write_weight_regfile_14_0);
    ap_sync_channel_write_weight_regfile_14_1 <= ((weight_regfile_14_1_full_n and ap_channel_done_weight_regfile_14_1) or ap_sync_reg_channel_write_weight_regfile_14_1);
    ap_sync_channel_write_weight_regfile_14_10 <= ((weight_regfile_14_10_full_n and ap_channel_done_weight_regfile_14_10) or ap_sync_reg_channel_write_weight_regfile_14_10);
    ap_sync_channel_write_weight_regfile_14_11 <= ((weight_regfile_14_11_full_n and ap_channel_done_weight_regfile_14_11) or ap_sync_reg_channel_write_weight_regfile_14_11);
    ap_sync_channel_write_weight_regfile_14_12 <= ((weight_regfile_14_12_full_n and ap_channel_done_weight_regfile_14_12) or ap_sync_reg_channel_write_weight_regfile_14_12);
    ap_sync_channel_write_weight_regfile_14_13 <= ((weight_regfile_14_13_full_n and ap_channel_done_weight_regfile_14_13) or ap_sync_reg_channel_write_weight_regfile_14_13);
    ap_sync_channel_write_weight_regfile_14_14 <= ((weight_regfile_14_14_full_n and ap_channel_done_weight_regfile_14_14) or ap_sync_reg_channel_write_weight_regfile_14_14);
    ap_sync_channel_write_weight_regfile_14_15 <= ((weight_regfile_14_15_full_n and ap_channel_done_weight_regfile_14_15) or ap_sync_reg_channel_write_weight_regfile_14_15);
    ap_sync_channel_write_weight_regfile_14_2 <= ((weight_regfile_14_2_full_n and ap_channel_done_weight_regfile_14_2) or ap_sync_reg_channel_write_weight_regfile_14_2);
    ap_sync_channel_write_weight_regfile_14_3 <= ((weight_regfile_14_3_full_n and ap_channel_done_weight_regfile_14_3) or ap_sync_reg_channel_write_weight_regfile_14_3);
    ap_sync_channel_write_weight_regfile_14_4 <= ((weight_regfile_14_4_full_n and ap_channel_done_weight_regfile_14_4) or ap_sync_reg_channel_write_weight_regfile_14_4);
    ap_sync_channel_write_weight_regfile_14_5 <= ((weight_regfile_14_5_full_n and ap_channel_done_weight_regfile_14_5) or ap_sync_reg_channel_write_weight_regfile_14_5);
    ap_sync_channel_write_weight_regfile_14_6 <= ((weight_regfile_14_6_full_n and ap_channel_done_weight_regfile_14_6) or ap_sync_reg_channel_write_weight_regfile_14_6);
    ap_sync_channel_write_weight_regfile_14_7 <= ((weight_regfile_14_7_full_n and ap_channel_done_weight_regfile_14_7) or ap_sync_reg_channel_write_weight_regfile_14_7);
    ap_sync_channel_write_weight_regfile_14_8 <= ((weight_regfile_14_8_full_n and ap_channel_done_weight_regfile_14_8) or ap_sync_reg_channel_write_weight_regfile_14_8);
    ap_sync_channel_write_weight_regfile_14_9 <= ((weight_regfile_14_9_full_n and ap_channel_done_weight_regfile_14_9) or ap_sync_reg_channel_write_weight_regfile_14_9);
    ap_sync_channel_write_weight_regfile_15_0 <= ((weight_regfile_15_0_full_n and ap_channel_done_weight_regfile_15_0) or ap_sync_reg_channel_write_weight_regfile_15_0);
    ap_sync_channel_write_weight_regfile_15_1 <= ((weight_regfile_15_1_full_n and ap_channel_done_weight_regfile_15_1) or ap_sync_reg_channel_write_weight_regfile_15_1);
    ap_sync_channel_write_weight_regfile_15_10 <= ((weight_regfile_15_10_full_n and ap_channel_done_weight_regfile_15_10) or ap_sync_reg_channel_write_weight_regfile_15_10);
    ap_sync_channel_write_weight_regfile_15_11 <= ((weight_regfile_15_11_full_n and ap_channel_done_weight_regfile_15_11) or ap_sync_reg_channel_write_weight_regfile_15_11);
    ap_sync_channel_write_weight_regfile_15_12 <= ((weight_regfile_15_12_full_n and ap_channel_done_weight_regfile_15_12) or ap_sync_reg_channel_write_weight_regfile_15_12);
    ap_sync_channel_write_weight_regfile_15_13 <= ((weight_regfile_15_13_full_n and ap_channel_done_weight_regfile_15_13) or ap_sync_reg_channel_write_weight_regfile_15_13);
    ap_sync_channel_write_weight_regfile_15_14 <= ((weight_regfile_15_14_full_n and ap_channel_done_weight_regfile_15_14) or ap_sync_reg_channel_write_weight_regfile_15_14);
    ap_sync_channel_write_weight_regfile_15_15 <= ((weight_regfile_15_15_full_n and ap_channel_done_weight_regfile_15_15) or ap_sync_reg_channel_write_weight_regfile_15_15);
    ap_sync_channel_write_weight_regfile_15_2 <= ((weight_regfile_15_2_full_n and ap_channel_done_weight_regfile_15_2) or ap_sync_reg_channel_write_weight_regfile_15_2);
    ap_sync_channel_write_weight_regfile_15_3 <= ((weight_regfile_15_3_full_n and ap_channel_done_weight_regfile_15_3) or ap_sync_reg_channel_write_weight_regfile_15_3);
    ap_sync_channel_write_weight_regfile_15_4 <= ((weight_regfile_15_4_full_n and ap_channel_done_weight_regfile_15_4) or ap_sync_reg_channel_write_weight_regfile_15_4);
    ap_sync_channel_write_weight_regfile_15_5 <= ((weight_regfile_15_5_full_n and ap_channel_done_weight_regfile_15_5) or ap_sync_reg_channel_write_weight_regfile_15_5);
    ap_sync_channel_write_weight_regfile_15_6 <= ((weight_regfile_15_6_full_n and ap_channel_done_weight_regfile_15_6) or ap_sync_reg_channel_write_weight_regfile_15_6);
    ap_sync_channel_write_weight_regfile_15_7 <= ((weight_regfile_15_7_full_n and ap_channel_done_weight_regfile_15_7) or ap_sync_reg_channel_write_weight_regfile_15_7);
    ap_sync_channel_write_weight_regfile_15_8 <= ((weight_regfile_15_8_full_n and ap_channel_done_weight_regfile_15_8) or ap_sync_reg_channel_write_weight_regfile_15_8);
    ap_sync_channel_write_weight_regfile_15_9 <= ((weight_regfile_15_9_full_n and ap_channel_done_weight_regfile_15_9) or ap_sync_reg_channel_write_weight_regfile_15_9);
    ap_sync_channel_write_weight_regfile_1_0 <= ((weight_regfile_1_0_full_n and ap_channel_done_weight_regfile_1_0) or ap_sync_reg_channel_write_weight_regfile_1_0);
    ap_sync_channel_write_weight_regfile_1_1 <= ((weight_regfile_1_1_full_n and ap_channel_done_weight_regfile_1_1) or ap_sync_reg_channel_write_weight_regfile_1_1);
    ap_sync_channel_write_weight_regfile_1_10 <= ((weight_regfile_1_10_full_n and ap_channel_done_weight_regfile_1_10) or ap_sync_reg_channel_write_weight_regfile_1_10);
    ap_sync_channel_write_weight_regfile_1_11 <= ((weight_regfile_1_11_full_n and ap_channel_done_weight_regfile_1_11) or ap_sync_reg_channel_write_weight_regfile_1_11);
    ap_sync_channel_write_weight_regfile_1_12 <= ((weight_regfile_1_12_full_n and ap_channel_done_weight_regfile_1_12) or ap_sync_reg_channel_write_weight_regfile_1_12);
    ap_sync_channel_write_weight_regfile_1_13 <= ((weight_regfile_1_13_full_n and ap_channel_done_weight_regfile_1_13) or ap_sync_reg_channel_write_weight_regfile_1_13);
    ap_sync_channel_write_weight_regfile_1_14 <= ((weight_regfile_1_14_full_n and ap_channel_done_weight_regfile_1_14) or ap_sync_reg_channel_write_weight_regfile_1_14);
    ap_sync_channel_write_weight_regfile_1_15 <= ((weight_regfile_1_15_full_n and ap_channel_done_weight_regfile_1_15) or ap_sync_reg_channel_write_weight_regfile_1_15);
    ap_sync_channel_write_weight_regfile_1_2 <= ((weight_regfile_1_2_full_n and ap_channel_done_weight_regfile_1_2) or ap_sync_reg_channel_write_weight_regfile_1_2);
    ap_sync_channel_write_weight_regfile_1_3 <= ((weight_regfile_1_3_full_n and ap_channel_done_weight_regfile_1_3) or ap_sync_reg_channel_write_weight_regfile_1_3);
    ap_sync_channel_write_weight_regfile_1_4 <= ((weight_regfile_1_4_full_n and ap_channel_done_weight_regfile_1_4) or ap_sync_reg_channel_write_weight_regfile_1_4);
    ap_sync_channel_write_weight_regfile_1_5 <= ((weight_regfile_1_5_full_n and ap_channel_done_weight_regfile_1_5) or ap_sync_reg_channel_write_weight_regfile_1_5);
    ap_sync_channel_write_weight_regfile_1_6 <= ((weight_regfile_1_6_full_n and ap_channel_done_weight_regfile_1_6) or ap_sync_reg_channel_write_weight_regfile_1_6);
    ap_sync_channel_write_weight_regfile_1_7 <= ((weight_regfile_1_7_full_n and ap_channel_done_weight_regfile_1_7) or ap_sync_reg_channel_write_weight_regfile_1_7);
    ap_sync_channel_write_weight_regfile_1_8 <= ((weight_regfile_1_8_full_n and ap_channel_done_weight_regfile_1_8) or ap_sync_reg_channel_write_weight_regfile_1_8);
    ap_sync_channel_write_weight_regfile_1_9 <= ((weight_regfile_1_9_full_n and ap_channel_done_weight_regfile_1_9) or ap_sync_reg_channel_write_weight_regfile_1_9);
    ap_sync_channel_write_weight_regfile_2_0 <= ((weight_regfile_2_0_full_n and ap_channel_done_weight_regfile_2_0) or ap_sync_reg_channel_write_weight_regfile_2_0);
    ap_sync_channel_write_weight_regfile_2_1 <= ((weight_regfile_2_1_full_n and ap_channel_done_weight_regfile_2_1) or ap_sync_reg_channel_write_weight_regfile_2_1);
    ap_sync_channel_write_weight_regfile_2_10 <= ((weight_regfile_2_10_full_n and ap_channel_done_weight_regfile_2_10) or ap_sync_reg_channel_write_weight_regfile_2_10);
    ap_sync_channel_write_weight_regfile_2_11 <= ((weight_regfile_2_11_full_n and ap_channel_done_weight_regfile_2_11) or ap_sync_reg_channel_write_weight_regfile_2_11);
    ap_sync_channel_write_weight_regfile_2_12 <= ((weight_regfile_2_12_full_n and ap_channel_done_weight_regfile_2_12) or ap_sync_reg_channel_write_weight_regfile_2_12);
    ap_sync_channel_write_weight_regfile_2_13 <= ((weight_regfile_2_13_full_n and ap_channel_done_weight_regfile_2_13) or ap_sync_reg_channel_write_weight_regfile_2_13);
    ap_sync_channel_write_weight_regfile_2_14 <= ((weight_regfile_2_14_full_n and ap_channel_done_weight_regfile_2_14) or ap_sync_reg_channel_write_weight_regfile_2_14);
    ap_sync_channel_write_weight_regfile_2_15 <= ((weight_regfile_2_15_full_n and ap_channel_done_weight_regfile_2_15) or ap_sync_reg_channel_write_weight_regfile_2_15);
    ap_sync_channel_write_weight_regfile_2_2 <= ((weight_regfile_2_2_full_n and ap_channel_done_weight_regfile_2_2) or ap_sync_reg_channel_write_weight_regfile_2_2);
    ap_sync_channel_write_weight_regfile_2_3 <= ((weight_regfile_2_3_full_n and ap_channel_done_weight_regfile_2_3) or ap_sync_reg_channel_write_weight_regfile_2_3);
    ap_sync_channel_write_weight_regfile_2_4 <= ((weight_regfile_2_4_full_n and ap_channel_done_weight_regfile_2_4) or ap_sync_reg_channel_write_weight_regfile_2_4);
    ap_sync_channel_write_weight_regfile_2_5 <= ((weight_regfile_2_5_full_n and ap_channel_done_weight_regfile_2_5) or ap_sync_reg_channel_write_weight_regfile_2_5);
    ap_sync_channel_write_weight_regfile_2_6 <= ((weight_regfile_2_6_full_n and ap_channel_done_weight_regfile_2_6) or ap_sync_reg_channel_write_weight_regfile_2_6);
    ap_sync_channel_write_weight_regfile_2_7 <= ((weight_regfile_2_7_full_n and ap_channel_done_weight_regfile_2_7) or ap_sync_reg_channel_write_weight_regfile_2_7);
    ap_sync_channel_write_weight_regfile_2_8 <= ((weight_regfile_2_8_full_n and ap_channel_done_weight_regfile_2_8) or ap_sync_reg_channel_write_weight_regfile_2_8);
    ap_sync_channel_write_weight_regfile_2_9 <= ((weight_regfile_2_9_full_n and ap_channel_done_weight_regfile_2_9) or ap_sync_reg_channel_write_weight_regfile_2_9);
    ap_sync_channel_write_weight_regfile_3_0 <= ((weight_regfile_3_0_full_n and ap_channel_done_weight_regfile_3_0) or ap_sync_reg_channel_write_weight_regfile_3_0);
    ap_sync_channel_write_weight_regfile_3_1 <= ((weight_regfile_3_1_full_n and ap_channel_done_weight_regfile_3_1) or ap_sync_reg_channel_write_weight_regfile_3_1);
    ap_sync_channel_write_weight_regfile_3_10 <= ((weight_regfile_3_10_full_n and ap_channel_done_weight_regfile_3_10) or ap_sync_reg_channel_write_weight_regfile_3_10);
    ap_sync_channel_write_weight_regfile_3_11 <= ((weight_regfile_3_11_full_n and ap_channel_done_weight_regfile_3_11) or ap_sync_reg_channel_write_weight_regfile_3_11);
    ap_sync_channel_write_weight_regfile_3_12 <= ((weight_regfile_3_12_full_n and ap_channel_done_weight_regfile_3_12) or ap_sync_reg_channel_write_weight_regfile_3_12);
    ap_sync_channel_write_weight_regfile_3_13 <= ((weight_regfile_3_13_full_n and ap_channel_done_weight_regfile_3_13) or ap_sync_reg_channel_write_weight_regfile_3_13);
    ap_sync_channel_write_weight_regfile_3_14 <= ((weight_regfile_3_14_full_n and ap_channel_done_weight_regfile_3_14) or ap_sync_reg_channel_write_weight_regfile_3_14);
    ap_sync_channel_write_weight_regfile_3_15 <= ((weight_regfile_3_15_full_n and ap_channel_done_weight_regfile_3_15) or ap_sync_reg_channel_write_weight_regfile_3_15);
    ap_sync_channel_write_weight_regfile_3_2 <= ((weight_regfile_3_2_full_n and ap_channel_done_weight_regfile_3_2) or ap_sync_reg_channel_write_weight_regfile_3_2);
    ap_sync_channel_write_weight_regfile_3_3 <= ((weight_regfile_3_3_full_n and ap_channel_done_weight_regfile_3_3) or ap_sync_reg_channel_write_weight_regfile_3_3);
    ap_sync_channel_write_weight_regfile_3_4 <= ((weight_regfile_3_4_full_n and ap_channel_done_weight_regfile_3_4) or ap_sync_reg_channel_write_weight_regfile_3_4);
    ap_sync_channel_write_weight_regfile_3_5 <= ((weight_regfile_3_5_full_n and ap_channel_done_weight_regfile_3_5) or ap_sync_reg_channel_write_weight_regfile_3_5);
    ap_sync_channel_write_weight_regfile_3_6 <= ((weight_regfile_3_6_full_n and ap_channel_done_weight_regfile_3_6) or ap_sync_reg_channel_write_weight_regfile_3_6);
    ap_sync_channel_write_weight_regfile_3_7 <= ((weight_regfile_3_7_full_n and ap_channel_done_weight_regfile_3_7) or ap_sync_reg_channel_write_weight_regfile_3_7);
    ap_sync_channel_write_weight_regfile_3_8 <= ((weight_regfile_3_8_full_n and ap_channel_done_weight_regfile_3_8) or ap_sync_reg_channel_write_weight_regfile_3_8);
    ap_sync_channel_write_weight_regfile_3_9 <= ((weight_regfile_3_9_full_n and ap_channel_done_weight_regfile_3_9) or ap_sync_reg_channel_write_weight_regfile_3_9);
    ap_sync_channel_write_weight_regfile_4_0 <= ((weight_regfile_4_0_full_n and ap_channel_done_weight_regfile_4_0) or ap_sync_reg_channel_write_weight_regfile_4_0);
    ap_sync_channel_write_weight_regfile_4_1 <= ((weight_regfile_4_1_full_n and ap_channel_done_weight_regfile_4_1) or ap_sync_reg_channel_write_weight_regfile_4_1);
    ap_sync_channel_write_weight_regfile_4_10 <= ((weight_regfile_4_10_full_n and ap_channel_done_weight_regfile_4_10) or ap_sync_reg_channel_write_weight_regfile_4_10);
    ap_sync_channel_write_weight_regfile_4_11 <= ((weight_regfile_4_11_full_n and ap_channel_done_weight_regfile_4_11) or ap_sync_reg_channel_write_weight_regfile_4_11);
    ap_sync_channel_write_weight_regfile_4_12 <= ((weight_regfile_4_12_full_n and ap_channel_done_weight_regfile_4_12) or ap_sync_reg_channel_write_weight_regfile_4_12);
    ap_sync_channel_write_weight_regfile_4_13 <= ((weight_regfile_4_13_full_n and ap_channel_done_weight_regfile_4_13) or ap_sync_reg_channel_write_weight_regfile_4_13);
    ap_sync_channel_write_weight_regfile_4_14 <= ((weight_regfile_4_14_full_n and ap_channel_done_weight_regfile_4_14) or ap_sync_reg_channel_write_weight_regfile_4_14);
    ap_sync_channel_write_weight_regfile_4_15 <= ((weight_regfile_4_15_full_n and ap_channel_done_weight_regfile_4_15) or ap_sync_reg_channel_write_weight_regfile_4_15);
    ap_sync_channel_write_weight_regfile_4_2 <= ((weight_regfile_4_2_full_n and ap_channel_done_weight_regfile_4_2) or ap_sync_reg_channel_write_weight_regfile_4_2);
    ap_sync_channel_write_weight_regfile_4_3 <= ((weight_regfile_4_3_full_n and ap_channel_done_weight_regfile_4_3) or ap_sync_reg_channel_write_weight_regfile_4_3);
    ap_sync_channel_write_weight_regfile_4_4 <= ((weight_regfile_4_4_full_n and ap_channel_done_weight_regfile_4_4) or ap_sync_reg_channel_write_weight_regfile_4_4);
    ap_sync_channel_write_weight_regfile_4_5 <= ((weight_regfile_4_5_full_n and ap_channel_done_weight_regfile_4_5) or ap_sync_reg_channel_write_weight_regfile_4_5);
    ap_sync_channel_write_weight_regfile_4_6 <= ((weight_regfile_4_6_full_n and ap_channel_done_weight_regfile_4_6) or ap_sync_reg_channel_write_weight_regfile_4_6);
    ap_sync_channel_write_weight_regfile_4_7 <= ((weight_regfile_4_7_full_n and ap_channel_done_weight_regfile_4_7) or ap_sync_reg_channel_write_weight_regfile_4_7);
    ap_sync_channel_write_weight_regfile_4_8 <= ((weight_regfile_4_8_full_n and ap_channel_done_weight_regfile_4_8) or ap_sync_reg_channel_write_weight_regfile_4_8);
    ap_sync_channel_write_weight_regfile_4_9 <= ((weight_regfile_4_9_full_n and ap_channel_done_weight_regfile_4_9) or ap_sync_reg_channel_write_weight_regfile_4_9);
    ap_sync_channel_write_weight_regfile_5_0 <= ((weight_regfile_5_0_full_n and ap_channel_done_weight_regfile_5_0) or ap_sync_reg_channel_write_weight_regfile_5_0);
    ap_sync_channel_write_weight_regfile_5_1 <= ((weight_regfile_5_1_full_n and ap_channel_done_weight_regfile_5_1) or ap_sync_reg_channel_write_weight_regfile_5_1);
    ap_sync_channel_write_weight_regfile_5_10 <= ((weight_regfile_5_10_full_n and ap_channel_done_weight_regfile_5_10) or ap_sync_reg_channel_write_weight_regfile_5_10);
    ap_sync_channel_write_weight_regfile_5_11 <= ((weight_regfile_5_11_full_n and ap_channel_done_weight_regfile_5_11) or ap_sync_reg_channel_write_weight_regfile_5_11);
    ap_sync_channel_write_weight_regfile_5_12 <= ((weight_regfile_5_12_full_n and ap_channel_done_weight_regfile_5_12) or ap_sync_reg_channel_write_weight_regfile_5_12);
    ap_sync_channel_write_weight_regfile_5_13 <= ((weight_regfile_5_13_full_n and ap_channel_done_weight_regfile_5_13) or ap_sync_reg_channel_write_weight_regfile_5_13);
    ap_sync_channel_write_weight_regfile_5_14 <= ((weight_regfile_5_14_full_n and ap_channel_done_weight_regfile_5_14) or ap_sync_reg_channel_write_weight_regfile_5_14);
    ap_sync_channel_write_weight_regfile_5_15 <= ((weight_regfile_5_15_full_n and ap_channel_done_weight_regfile_5_15) or ap_sync_reg_channel_write_weight_regfile_5_15);
    ap_sync_channel_write_weight_regfile_5_2 <= ((weight_regfile_5_2_full_n and ap_channel_done_weight_regfile_5_2) or ap_sync_reg_channel_write_weight_regfile_5_2);
    ap_sync_channel_write_weight_regfile_5_3 <= ((weight_regfile_5_3_full_n and ap_channel_done_weight_regfile_5_3) or ap_sync_reg_channel_write_weight_regfile_5_3);
    ap_sync_channel_write_weight_regfile_5_4 <= ((weight_regfile_5_4_full_n and ap_channel_done_weight_regfile_5_4) or ap_sync_reg_channel_write_weight_regfile_5_4);
    ap_sync_channel_write_weight_regfile_5_5 <= ((weight_regfile_5_5_full_n and ap_channel_done_weight_regfile_5_5) or ap_sync_reg_channel_write_weight_regfile_5_5);
    ap_sync_channel_write_weight_regfile_5_6 <= ((weight_regfile_5_6_full_n and ap_channel_done_weight_regfile_5_6) or ap_sync_reg_channel_write_weight_regfile_5_6);
    ap_sync_channel_write_weight_regfile_5_7 <= ((weight_regfile_5_7_full_n and ap_channel_done_weight_regfile_5_7) or ap_sync_reg_channel_write_weight_regfile_5_7);
    ap_sync_channel_write_weight_regfile_5_8 <= ((weight_regfile_5_8_full_n and ap_channel_done_weight_regfile_5_8) or ap_sync_reg_channel_write_weight_regfile_5_8);
    ap_sync_channel_write_weight_regfile_5_9 <= ((weight_regfile_5_9_full_n and ap_channel_done_weight_regfile_5_9) or ap_sync_reg_channel_write_weight_regfile_5_9);
    ap_sync_channel_write_weight_regfile_6_0 <= ((weight_regfile_6_0_full_n and ap_channel_done_weight_regfile_6_0) or ap_sync_reg_channel_write_weight_regfile_6_0);
    ap_sync_channel_write_weight_regfile_6_1 <= ((weight_regfile_6_1_full_n and ap_channel_done_weight_regfile_6_1) or ap_sync_reg_channel_write_weight_regfile_6_1);
    ap_sync_channel_write_weight_regfile_6_10 <= ((weight_regfile_6_10_full_n and ap_channel_done_weight_regfile_6_10) or ap_sync_reg_channel_write_weight_regfile_6_10);
    ap_sync_channel_write_weight_regfile_6_11 <= ((weight_regfile_6_11_full_n and ap_channel_done_weight_regfile_6_11) or ap_sync_reg_channel_write_weight_regfile_6_11);
    ap_sync_channel_write_weight_regfile_6_12 <= ((weight_regfile_6_12_full_n and ap_channel_done_weight_regfile_6_12) or ap_sync_reg_channel_write_weight_regfile_6_12);
    ap_sync_channel_write_weight_regfile_6_13 <= ((weight_regfile_6_13_full_n and ap_channel_done_weight_regfile_6_13) or ap_sync_reg_channel_write_weight_regfile_6_13);
    ap_sync_channel_write_weight_regfile_6_14 <= ((weight_regfile_6_14_full_n and ap_channel_done_weight_regfile_6_14) or ap_sync_reg_channel_write_weight_regfile_6_14);
    ap_sync_channel_write_weight_regfile_6_15 <= ((weight_regfile_6_15_full_n and ap_channel_done_weight_regfile_6_15) or ap_sync_reg_channel_write_weight_regfile_6_15);
    ap_sync_channel_write_weight_regfile_6_2 <= ((weight_regfile_6_2_full_n and ap_channel_done_weight_regfile_6_2) or ap_sync_reg_channel_write_weight_regfile_6_2);
    ap_sync_channel_write_weight_regfile_6_3 <= ((weight_regfile_6_3_full_n and ap_channel_done_weight_regfile_6_3) or ap_sync_reg_channel_write_weight_regfile_6_3);
    ap_sync_channel_write_weight_regfile_6_4 <= ((weight_regfile_6_4_full_n and ap_channel_done_weight_regfile_6_4) or ap_sync_reg_channel_write_weight_regfile_6_4);
    ap_sync_channel_write_weight_regfile_6_5 <= ((weight_regfile_6_5_full_n and ap_channel_done_weight_regfile_6_5) or ap_sync_reg_channel_write_weight_regfile_6_5);
    ap_sync_channel_write_weight_regfile_6_6 <= ((weight_regfile_6_6_full_n and ap_channel_done_weight_regfile_6_6) or ap_sync_reg_channel_write_weight_regfile_6_6);
    ap_sync_channel_write_weight_regfile_6_7 <= ((weight_regfile_6_7_full_n and ap_channel_done_weight_regfile_6_7) or ap_sync_reg_channel_write_weight_regfile_6_7);
    ap_sync_channel_write_weight_regfile_6_8 <= ((weight_regfile_6_8_full_n and ap_channel_done_weight_regfile_6_8) or ap_sync_reg_channel_write_weight_regfile_6_8);
    ap_sync_channel_write_weight_regfile_6_9 <= ((weight_regfile_6_9_full_n and ap_channel_done_weight_regfile_6_9) or ap_sync_reg_channel_write_weight_regfile_6_9);
    ap_sync_channel_write_weight_regfile_7_0 <= ((weight_regfile_7_0_full_n and ap_channel_done_weight_regfile_7_0) or ap_sync_reg_channel_write_weight_regfile_7_0);
    ap_sync_channel_write_weight_regfile_7_1 <= ((weight_regfile_7_1_full_n and ap_channel_done_weight_regfile_7_1) or ap_sync_reg_channel_write_weight_regfile_7_1);
    ap_sync_channel_write_weight_regfile_7_10 <= ((weight_regfile_7_10_full_n and ap_channel_done_weight_regfile_7_10) or ap_sync_reg_channel_write_weight_regfile_7_10);
    ap_sync_channel_write_weight_regfile_7_11 <= ((weight_regfile_7_11_full_n and ap_channel_done_weight_regfile_7_11) or ap_sync_reg_channel_write_weight_regfile_7_11);
    ap_sync_channel_write_weight_regfile_7_12 <= ((weight_regfile_7_12_full_n and ap_channel_done_weight_regfile_7_12) or ap_sync_reg_channel_write_weight_regfile_7_12);
    ap_sync_channel_write_weight_regfile_7_13 <= ((weight_regfile_7_13_full_n and ap_channel_done_weight_regfile_7_13) or ap_sync_reg_channel_write_weight_regfile_7_13);
    ap_sync_channel_write_weight_regfile_7_14 <= ((weight_regfile_7_14_full_n and ap_channel_done_weight_regfile_7_14) or ap_sync_reg_channel_write_weight_regfile_7_14);
    ap_sync_channel_write_weight_regfile_7_15 <= ((weight_regfile_7_15_full_n and ap_channel_done_weight_regfile_7_15) or ap_sync_reg_channel_write_weight_regfile_7_15);
    ap_sync_channel_write_weight_regfile_7_2 <= ((weight_regfile_7_2_full_n and ap_channel_done_weight_regfile_7_2) or ap_sync_reg_channel_write_weight_regfile_7_2);
    ap_sync_channel_write_weight_regfile_7_3 <= ((weight_regfile_7_3_full_n and ap_channel_done_weight_regfile_7_3) or ap_sync_reg_channel_write_weight_regfile_7_3);
    ap_sync_channel_write_weight_regfile_7_4 <= ((weight_regfile_7_4_full_n and ap_channel_done_weight_regfile_7_4) or ap_sync_reg_channel_write_weight_regfile_7_4);
    ap_sync_channel_write_weight_regfile_7_5 <= ((weight_regfile_7_5_full_n and ap_channel_done_weight_regfile_7_5) or ap_sync_reg_channel_write_weight_regfile_7_5);
    ap_sync_channel_write_weight_regfile_7_6 <= ((weight_regfile_7_6_full_n and ap_channel_done_weight_regfile_7_6) or ap_sync_reg_channel_write_weight_regfile_7_6);
    ap_sync_channel_write_weight_regfile_7_7 <= ((weight_regfile_7_7_full_n and ap_channel_done_weight_regfile_7_7) or ap_sync_reg_channel_write_weight_regfile_7_7);
    ap_sync_channel_write_weight_regfile_7_8 <= ((weight_regfile_7_8_full_n and ap_channel_done_weight_regfile_7_8) or ap_sync_reg_channel_write_weight_regfile_7_8);
    ap_sync_channel_write_weight_regfile_7_9 <= ((weight_regfile_7_9_full_n and ap_channel_done_weight_regfile_7_9) or ap_sync_reg_channel_write_weight_regfile_7_9);
    ap_sync_channel_write_weight_regfile_8_0 <= ((weight_regfile_8_0_full_n and ap_channel_done_weight_regfile_8_0) or ap_sync_reg_channel_write_weight_regfile_8_0);
    ap_sync_channel_write_weight_regfile_8_1 <= ((weight_regfile_8_1_full_n and ap_channel_done_weight_regfile_8_1) or ap_sync_reg_channel_write_weight_regfile_8_1);
    ap_sync_channel_write_weight_regfile_8_10 <= ((weight_regfile_8_10_full_n and ap_channel_done_weight_regfile_8_10) or ap_sync_reg_channel_write_weight_regfile_8_10);
    ap_sync_channel_write_weight_regfile_8_11 <= ((weight_regfile_8_11_full_n and ap_channel_done_weight_regfile_8_11) or ap_sync_reg_channel_write_weight_regfile_8_11);
    ap_sync_channel_write_weight_regfile_8_12 <= ((weight_regfile_8_12_full_n and ap_channel_done_weight_regfile_8_12) or ap_sync_reg_channel_write_weight_regfile_8_12);
    ap_sync_channel_write_weight_regfile_8_13 <= ((weight_regfile_8_13_full_n and ap_channel_done_weight_regfile_8_13) or ap_sync_reg_channel_write_weight_regfile_8_13);
    ap_sync_channel_write_weight_regfile_8_14 <= ((weight_regfile_8_14_full_n and ap_channel_done_weight_regfile_8_14) or ap_sync_reg_channel_write_weight_regfile_8_14);
    ap_sync_channel_write_weight_regfile_8_15 <= ((weight_regfile_8_15_full_n and ap_channel_done_weight_regfile_8_15) or ap_sync_reg_channel_write_weight_regfile_8_15);
    ap_sync_channel_write_weight_regfile_8_2 <= ((weight_regfile_8_2_full_n and ap_channel_done_weight_regfile_8_2) or ap_sync_reg_channel_write_weight_regfile_8_2);
    ap_sync_channel_write_weight_regfile_8_3 <= ((weight_regfile_8_3_full_n and ap_channel_done_weight_regfile_8_3) or ap_sync_reg_channel_write_weight_regfile_8_3);
    ap_sync_channel_write_weight_regfile_8_4 <= ((weight_regfile_8_4_full_n and ap_channel_done_weight_regfile_8_4) or ap_sync_reg_channel_write_weight_regfile_8_4);
    ap_sync_channel_write_weight_regfile_8_5 <= ((weight_regfile_8_5_full_n and ap_channel_done_weight_regfile_8_5) or ap_sync_reg_channel_write_weight_regfile_8_5);
    ap_sync_channel_write_weight_regfile_8_6 <= ((weight_regfile_8_6_full_n and ap_channel_done_weight_regfile_8_6) or ap_sync_reg_channel_write_weight_regfile_8_6);
    ap_sync_channel_write_weight_regfile_8_7 <= ((weight_regfile_8_7_full_n and ap_channel_done_weight_regfile_8_7) or ap_sync_reg_channel_write_weight_regfile_8_7);
    ap_sync_channel_write_weight_regfile_8_8 <= ((weight_regfile_8_8_full_n and ap_channel_done_weight_regfile_8_8) or ap_sync_reg_channel_write_weight_regfile_8_8);
    ap_sync_channel_write_weight_regfile_8_9 <= ((weight_regfile_8_9_full_n and ap_channel_done_weight_regfile_8_9) or ap_sync_reg_channel_write_weight_regfile_8_9);
    ap_sync_channel_write_weight_regfile_9_0 <= ((weight_regfile_9_0_full_n and ap_channel_done_weight_regfile_9_0) or ap_sync_reg_channel_write_weight_regfile_9_0);
    ap_sync_channel_write_weight_regfile_9_1 <= ((weight_regfile_9_1_full_n and ap_channel_done_weight_regfile_9_1) or ap_sync_reg_channel_write_weight_regfile_9_1);
    ap_sync_channel_write_weight_regfile_9_10 <= ((weight_regfile_9_10_full_n and ap_channel_done_weight_regfile_9_10) or ap_sync_reg_channel_write_weight_regfile_9_10);
    ap_sync_channel_write_weight_regfile_9_11 <= ((weight_regfile_9_11_full_n and ap_channel_done_weight_regfile_9_11) or ap_sync_reg_channel_write_weight_regfile_9_11);
    ap_sync_channel_write_weight_regfile_9_12 <= ((weight_regfile_9_12_full_n and ap_channel_done_weight_regfile_9_12) or ap_sync_reg_channel_write_weight_regfile_9_12);
    ap_sync_channel_write_weight_regfile_9_13 <= ((weight_regfile_9_13_full_n and ap_channel_done_weight_regfile_9_13) or ap_sync_reg_channel_write_weight_regfile_9_13);
    ap_sync_channel_write_weight_regfile_9_14 <= ((weight_regfile_9_14_full_n and ap_channel_done_weight_regfile_9_14) or ap_sync_reg_channel_write_weight_regfile_9_14);
    ap_sync_channel_write_weight_regfile_9_15 <= ((weight_regfile_9_15_full_n and ap_channel_done_weight_regfile_9_15) or ap_sync_reg_channel_write_weight_regfile_9_15);
    ap_sync_channel_write_weight_regfile_9_2 <= ((weight_regfile_9_2_full_n and ap_channel_done_weight_regfile_9_2) or ap_sync_reg_channel_write_weight_regfile_9_2);
    ap_sync_channel_write_weight_regfile_9_3 <= ((weight_regfile_9_3_full_n and ap_channel_done_weight_regfile_9_3) or ap_sync_reg_channel_write_weight_regfile_9_3);
    ap_sync_channel_write_weight_regfile_9_4 <= ((weight_regfile_9_4_full_n and ap_channel_done_weight_regfile_9_4) or ap_sync_reg_channel_write_weight_regfile_9_4);
    ap_sync_channel_write_weight_regfile_9_5 <= ((weight_regfile_9_5_full_n and ap_channel_done_weight_regfile_9_5) or ap_sync_reg_channel_write_weight_regfile_9_5);
    ap_sync_channel_write_weight_regfile_9_6 <= ((weight_regfile_9_6_full_n and ap_channel_done_weight_regfile_9_6) or ap_sync_reg_channel_write_weight_regfile_9_6);
    ap_sync_channel_write_weight_regfile_9_7 <= ((weight_regfile_9_7_full_n and ap_channel_done_weight_regfile_9_7) or ap_sync_reg_channel_write_weight_regfile_9_7);
    ap_sync_channel_write_weight_regfile_9_8 <= ((weight_regfile_9_8_full_n and ap_channel_done_weight_regfile_9_8) or ap_sync_reg_channel_write_weight_regfile_9_8);
    ap_sync_channel_write_weight_regfile_9_9 <= ((weight_regfile_9_9_full_n and ap_channel_done_weight_regfile_9_9) or ap_sync_reg_channel_write_weight_regfile_9_9);
    ap_sync_continue <= ap_continue;
    ap_sync_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready <= (dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready or ap_sync_reg_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready);
    ap_sync_done <= runOutputL1toL2_U0_ap_done;
    ap_sync_ready <= (ap_sync_runWeight2Reg_U0_ap_ready and ap_sync_runDataL2toL1_U0_ap_ready and ap_sync_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready);
    ap_sync_runDataL2toL1_U0_ap_ready <= (runDataL2toL1_U0_ap_ready or ap_sync_reg_runDataL2toL1_U0_ap_ready);
    ap_sync_runWeight2Reg_U0_ap_ready <= (runWeight2Reg_U0_ap_ready or ap_sync_reg_runWeight2Reg_U0_ap_ready);
    data_l2_0_address0 <= runDataL2toL1_U0_data_l2_0_address0;
    data_l2_0_address1 <= ap_const_lv11_0;
    data_l2_0_ce0 <= runDataL2toL1_U0_data_l2_0_ce0;
    data_l2_0_ce1 <= ap_const_logic_0;
    data_l2_0_d0 <= ap_const_lv8_0;
    data_l2_0_d1 <= ap_const_lv8_0;
    data_l2_0_read <= runDataL2toL1_U0_data_l2_0_write;
    data_l2_0_we0 <= ap_const_logic_0;
    data_l2_0_we1 <= ap_const_logic_0;
    data_l2_1_address0 <= runDataL2toL1_U0_data_l2_1_address0;
    data_l2_1_address1 <= ap_const_lv11_0;
    data_l2_1_ce0 <= runDataL2toL1_U0_data_l2_1_ce0;
    data_l2_1_ce1 <= ap_const_logic_0;
    data_l2_1_d0 <= ap_const_lv8_0;
    data_l2_1_d1 <= ap_const_lv8_0;
    data_l2_1_read <= runDataL2toL1_U0_data_l2_1_write;
    data_l2_1_we0 <= ap_const_logic_0;
    data_l2_1_we1 <= ap_const_logic_0;
    data_l2_2_address0 <= runDataL2toL1_U0_data_l2_2_address0;
    data_l2_2_address1 <= ap_const_lv11_0;
    data_l2_2_ce0 <= runDataL2toL1_U0_data_l2_2_ce0;
    data_l2_2_ce1 <= ap_const_logic_0;
    data_l2_2_d0 <= ap_const_lv8_0;
    data_l2_2_d1 <= ap_const_lv8_0;
    data_l2_2_read <= runDataL2toL1_U0_data_l2_2_write;
    data_l2_2_we0 <= ap_const_logic_0;
    data_l2_2_we1 <= ap_const_logic_0;
    data_l2_3_address0 <= runDataL2toL1_U0_data_l2_3_address0;
    data_l2_3_address1 <= ap_const_lv11_0;
    data_l2_3_ce0 <= runDataL2toL1_U0_data_l2_3_ce0;
    data_l2_3_ce1 <= ap_const_logic_0;
    data_l2_3_d0 <= ap_const_lv8_0;
    data_l2_3_d1 <= ap_const_lv8_0;
    data_l2_3_read <= runDataL2toL1_U0_data_l2_3_write;
    data_l2_3_we0 <= ap_const_logic_0;
    data_l2_3_we1 <= ap_const_logic_0;
    dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_continue <= ap_const_logic_1;
    dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_start <= ((ap_sync_reg_dataflow_in_loop_LOOP_S_OUTER_entry28_U0_ap_ready xor ap_const_logic_1) and ap_start);
    dataflow_in_loop_LOOP_S_OUTER_entry28_U0_start_full_n <= ap_const_logic_1;
    dataflow_in_loop_LOOP_S_OUTER_entry28_U0_start_write <= ap_const_logic_0;
    output_l2_0_address0 <= runOutputL1toL2_U0_output_l2_0_address0;
    output_l2_0_address1 <= ap_const_lv11_0;
    output_l2_0_ce0 <= runOutputL1toL2_U0_output_l2_0_ce0;
    output_l2_0_ce1 <= ap_const_logic_0;
    output_l2_0_d0 <= runOutputL1toL2_U0_output_l2_0_d0;
    output_l2_0_d1 <= ap_const_lv32_0;
    output_l2_0_we0 <= runOutputL1toL2_U0_output_l2_0_we0;
    output_l2_0_we1 <= ap_const_logic_0;
    output_l2_0_write <= runOutputL1toL2_U0_output_l2_0_write;
    output_l2_1_address0 <= runOutputL1toL2_U0_output_l2_1_address0;
    output_l2_1_address1 <= ap_const_lv11_0;
    output_l2_1_ce0 <= runOutputL1toL2_U0_output_l2_1_ce0;
    output_l2_1_ce1 <= ap_const_logic_0;
    output_l2_1_d0 <= runOutputL1toL2_U0_output_l2_1_d0;
    output_l2_1_d1 <= ap_const_lv32_0;
    output_l2_1_we0 <= runOutputL1toL2_U0_output_l2_1_we0;
    output_l2_1_we1 <= ap_const_logic_0;
    output_l2_1_write <= runOutputL1toL2_U0_output_l2_1_write;
    output_l2_2_address0 <= runOutputL1toL2_U0_output_l2_2_address0;
    output_l2_2_address1 <= ap_const_lv11_0;
    output_l2_2_ce0 <= runOutputL1toL2_U0_output_l2_2_ce0;
    output_l2_2_ce1 <= ap_const_logic_0;
    output_l2_2_d0 <= runOutputL1toL2_U0_output_l2_2_d0;
    output_l2_2_d1 <= ap_const_lv32_0;
    output_l2_2_we0 <= runOutputL1toL2_U0_output_l2_2_we0;
    output_l2_2_we1 <= ap_const_logic_0;
    output_l2_2_write <= runOutputL1toL2_U0_output_l2_2_write;
    output_l2_3_address0 <= runOutputL1toL2_U0_output_l2_3_address0;
    output_l2_3_address1 <= ap_const_lv11_0;
    output_l2_3_ce0 <= runOutputL1toL2_U0_output_l2_3_ce0;
    output_l2_3_ce1 <= ap_const_logic_0;
    output_l2_3_d0 <= runOutputL1toL2_U0_output_l2_3_d0;
    output_l2_3_d1 <= ap_const_lv32_0;
    output_l2_3_we0 <= runOutputL1toL2_U0_output_l2_3_we0;
    output_l2_3_we1 <= ap_const_logic_0;
    output_l2_3_write <= runOutputL1toL2_U0_output_l2_3_write;
    runDataL2toL1_U0_ap_continue <= (ap_sync_channel_write_data_l1_9 and ap_sync_channel_write_data_l1_8 and ap_sync_channel_write_data_l1_7 and ap_sync_channel_write_data_l1_6 and ap_sync_channel_write_data_l1_5 and ap_sync_channel_write_data_l1_4 and ap_sync_channel_write_data_l1_3 and ap_sync_channel_write_data_l1_2 and ap_sync_channel_write_data_l1_15 and ap_sync_channel_write_data_l1_14 and ap_sync_channel_write_data_l1_13 and ap_sync_channel_write_data_l1_12 and ap_sync_channel_write_data_l1_11 and ap_sync_channel_write_data_l1_10 and ap_sync_channel_write_data_l1_1 and ap_sync_channel_write_data_l1_0);
    runDataL2toL1_U0_ap_start <= ((ap_sync_reg_runDataL2toL1_U0_ap_ready xor ap_const_logic_1) and ap_start);
    runDataL2toL1_U0_data_l1_0257_i_full_n <= data_l1_0_i_full_n;
    runDataL2toL1_U0_data_l1_10267_i_full_n <= data_l1_10_i_full_n;
    runDataL2toL1_U0_data_l1_11268_i_full_n <= data_l1_11_i_full_n;
    runDataL2toL1_U0_data_l1_12269_i_full_n <= data_l1_12_i_full_n;
    runDataL2toL1_U0_data_l1_1258_i_full_n <= data_l1_1_i_full_n;
    runDataL2toL1_U0_data_l1_13270_i_full_n <= data_l1_13_i_full_n;
    runDataL2toL1_U0_data_l1_14271_i_full_n <= data_l1_14_i_full_n;
    runDataL2toL1_U0_data_l1_15272_i_full_n <= data_l1_15_i_full_n;
    runDataL2toL1_U0_data_l1_2259_i_full_n <= data_l1_2_i_full_n;
    runDataL2toL1_U0_data_l1_3260_i_full_n <= data_l1_3_i_full_n;
    runDataL2toL1_U0_data_l1_4261_i_full_n <= data_l1_4_i_full_n;
    runDataL2toL1_U0_data_l1_5262_i_full_n <= data_l1_5_i_full_n;
    runDataL2toL1_U0_data_l1_6263_i_full_n <= data_l1_6_i_full_n;
    runDataL2toL1_U0_data_l1_7264_i_full_n <= data_l1_7_i_full_n;
    runDataL2toL1_U0_data_l1_8265_i_full_n <= data_l1_8_i_full_n;
    runDataL2toL1_U0_data_l1_9266_i_full_n <= data_l1_9_i_full_n;
    runDataL2toL1_U0_data_l2_0_full_n <= data_l2_0_empty_n;
    runDataL2toL1_U0_data_l2_0_write <= ap_const_logic_0;
    runDataL2toL1_U0_data_l2_1_full_n <= data_l2_1_empty_n;
    runDataL2toL1_U0_data_l2_1_write <= ap_const_logic_0;
    runDataL2toL1_U0_data_l2_2_full_n <= data_l2_2_empty_n;
    runDataL2toL1_U0_data_l2_2_write <= ap_const_logic_0;
    runDataL2toL1_U0_data_l2_3_full_n <= data_l2_3_empty_n;
    runDataL2toL1_U0_data_l2_3_write <= ap_const_logic_0;
    runDataL2toL1_U0_start_full_n <= ap_const_logic_1;
    runDataL2toL1_U0_start_write <= ap_const_logic_0;
    runOutputL1toL2_U0_ap_continue <= ap_continue;
    runOutputL1toL2_U0_ap_start <= (output_l1_9_t_empty_n and output_l1_8_t_empty_n and output_l1_7_t_empty_n and output_l1_6_t_empty_n and output_l1_5_t_empty_n and output_l1_4_t_empty_n and output_l1_3_t_empty_n and output_l1_2_t_empty_n and output_l1_1_t_empty_n and output_l1_15_t_empty_n and output_l1_14_t_empty_n and output_l1_13_t_empty_n and output_l1_12_t_empty_n and output_l1_11_t_empty_n and output_l1_10_t_empty_n and output_l1_0_t_empty_n);
    runOutputL1toL2_U0_output_l2_0_full_n <= output_l2_0_full_n;
    runOutputL1toL2_U0_output_l2_0_write <= ap_const_logic_0;
    runOutputL1toL2_U0_output_l2_1_full_n <= output_l2_1_full_n;
    runOutputL1toL2_U0_output_l2_1_write <= ap_const_logic_0;
    runOutputL1toL2_U0_output_l2_2_full_n <= output_l2_2_full_n;
    runOutputL1toL2_U0_output_l2_2_write <= ap_const_logic_0;
    runOutputL1toL2_U0_output_l2_3_full_n <= output_l2_3_full_n;
    runOutputL1toL2_U0_output_l2_3_write <= ap_const_logic_0;
    runOutputL1toL2_U0_start_full_n <= ap_const_logic_1;
    runOutputL1toL2_U0_start_write <= ap_const_logic_0;
    runSysArr_U0_ap_continue <= (ap_sync_channel_write_output_l1_9 and ap_sync_channel_write_output_l1_8 and ap_sync_channel_write_output_l1_7 and ap_sync_channel_write_output_l1_6 and ap_sync_channel_write_output_l1_5 and ap_sync_channel_write_output_l1_4 and ap_sync_channel_write_output_l1_3 and ap_sync_channel_write_output_l1_2 and ap_sync_channel_write_output_l1_15 and ap_sync_channel_write_output_l1_14 and ap_sync_channel_write_output_l1_13 and ap_sync_channel_write_output_l1_12 and ap_sync_channel_write_output_l1_11 and ap_sync_channel_write_output_l1_10 and ap_sync_channel_write_output_l1_1 and ap_sync_channel_write_output_l1_0);
    runSysArr_U0_ap_start <= (weight_regfile_9_9_empty_n and weight_regfile_9_8_empty_n and weight_regfile_9_7_empty_n and weight_regfile_9_6_empty_n and weight_regfile_9_5_empty_n and weight_regfile_9_4_empty_n and weight_regfile_9_3_empty_n and weight_regfile_9_2_empty_n and weight_regfile_9_1_empty_n and weight_regfile_9_15_empty_n and weight_regfile_9_14_empty_n and weight_regfile_9_13_empty_n and weight_regfile_9_12_empty_n and weight_regfile_9_11_empty_n and weight_regfile_9_10_empty_n and weight_regfile_9_0_empty_n and weight_regfile_8_9_empty_n and weight_regfile_8_8_empty_n and weight_regfile_8_7_empty_n and weight_regfile_8_6_empty_n and weight_regfile_8_5_empty_n and weight_regfile_8_4_empty_n and weight_regfile_8_3_empty_n and weight_regfile_8_2_empty_n and weight_regfile_8_1_empty_n and weight_regfile_8_15_empty_n and weight_regfile_8_14_empty_n and weight_regfile_8_13_empty_n and weight_regfile_8_12_empty_n and weight_regfile_8_11_empty_n and weight_regfile_8_10_empty_n and weight_regfile_8_0_empty_n and weight_regfile_7_9_empty_n and weight_regfile_7_8_empty_n and weight_regfile_7_7_empty_n and weight_regfile_7_6_empty_n and weight_regfile_7_5_empty_n and weight_regfile_7_4_empty_n and weight_regfile_7_3_empty_n and weight_regfile_7_2_empty_n and weight_regfile_7_1_empty_n and weight_regfile_7_15_empty_n and weight_regfile_7_14_empty_n and weight_regfile_7_13_empty_n and weight_regfile_7_12_empty_n and weight_regfile_7_11_empty_n and weight_regfile_7_10_empty_n and weight_regfile_7_0_empty_n and weight_regfile_6_9_empty_n and weight_regfile_6_8_empty_n and weight_regfile_6_7_empty_n and weight_regfile_6_6_empty_n and weight_regfile_6_5_empty_n and weight_regfile_6_4_empty_n and weight_regfile_6_3_empty_n and weight_regfile_6_2_empty_n and weight_regfile_6_1_empty_n and weight_regfile_6_15_empty_n and weight_regfile_6_14_empty_n and weight_regfile_6_13_empty_n and weight_regfile_6_12_empty_n and weight_regfile_6_11_empty_n and weight_regfile_6_10_empty_n and weight_regfile_6_0_empty_n and weight_regfile_5_9_empty_n and weight_regfile_5_8_empty_n and weight_regfile_5_7_empty_n and weight_regfile_5_6_empty_n and weight_regfile_5_5_empty_n and weight_regfile_5_4_empty_n and weight_regfile_5_3_empty_n and weight_regfile_5_2_empty_n and weight_regfile_5_1_empty_n and weight_regfile_5_15_empty_n and weight_regfile_5_14_empty_n and weight_regfile_5_13_empty_n and weight_regfile_5_12_empty_n and weight_regfile_5_11_empty_n and weight_regfile_5_10_empty_n and weight_regfile_5_0_empty_n and weight_regfile_4_9_empty_n and weight_regfile_4_8_empty_n and weight_regfile_4_7_empty_n and weight_regfile_4_6_empty_n and weight_regfile_4_5_empty_n and weight_regfile_4_4_empty_n and weight_regfile_4_3_empty_n and weight_regfile_4_2_empty_n and weight_regfile_4_1_empty_n and weight_regfile_4_15_empty_n and weight_regfile_4_14_empty_n and weight_regfile_4_13_empty_n and weight_regfile_4_12_empty_n and weight_regfile_4_11_empty_n and weight_regfile_4_10_empty_n and weight_regfile_4_0_empty_n and weight_regfile_3_9_empty_n and weight_regfile_3_8_empty_n and weight_regfile_3_7_empty_n and weight_regfile_3_6_empty_n and weight_regfile_3_5_empty_n and weight_regfile_3_4_empty_n and weight_regfile_3_3_empty_n and weight_regfile_3_2_empty_n and weight_regfile_3_1_empty_n and weight_regfile_3_15_empty_n and weight_regfile_3_14_empty_n and weight_regfile_3_13_empty_n and weight_regfile_3_12_empty_n and weight_regfile_3_11_empty_n and weight_regfile_3_10_empty_n and weight_regfile_3_0_empty_n and weight_regfile_2_9_empty_n and weight_regfile_2_8_empty_n and weight_regfile_2_7_empty_n and weight_regfile_2_6_empty_n and weight_regfile_2_5_empty_n and weight_regfile_2_4_empty_n and weight_regfile_2_3_empty_n and weight_regfile_2_2_empty_n and weight_regfile_2_1_empty_n and weight_regfile_2_15_empty_n and weight_regfile_2_14_empty_n and weight_regfile_2_13_empty_n and weight_regfile_2_12_empty_n and weight_regfile_2_11_empty_n and weight_regfile_2_10_empty_n and weight_regfile_2_0_empty_n and weight_regfile_1_9_empty_n and weight_regfile_1_8_empty_n and weight_regfile_1_7_empty_n and weight_regfile_1_6_empty_n and weight_regfile_1_5_empty_n and weight_regfile_1_4_empty_n and weight_regfile_1_3_empty_n and weight_regfile_1_2_empty_n and weight_regfile_1_1_empty_n and weight_regfile_1_15_empty_n and weight_regfile_1_14_empty_n and weight_regfile_1_13_empty_n and weight_regfile_1_12_empty_n and weight_regfile_1_11_empty_n and weight_regfile_1_10_empty_n and weight_regfile_1_0_empty_n and weight_regfile_15_9_empty_n and weight_regfile_15_8_empty_n and weight_regfile_15_7_empty_n and weight_regfile_15_6_empty_n and weight_regfile_15_5_empty_n and weight_regfile_15_4_empty_n and weight_regfile_15_3_empty_n and weight_regfile_15_2_empty_n and weight_regfile_15_1_empty_n and weight_regfile_15_15_empty_n and weight_regfile_15_14_empty_n and weight_regfile_15_13_empty_n and weight_regfile_15_12_empty_n and weight_regfile_15_11_empty_n and weight_regfile_15_10_empty_n and weight_regfile_15_0_empty_n and weight_regfile_14_9_empty_n and weight_regfile_14_8_empty_n and weight_regfile_14_7_empty_n and weight_regfile_14_6_empty_n and weight_regfile_14_5_empty_n and weight_regfile_14_4_empty_n and weight_regfile_14_3_empty_n and weight_regfile_14_2_empty_n and weight_regfile_14_1_empty_n and weight_regfile_14_15_empty_n and weight_regfile_14_14_empty_n and weight_regfile_14_13_empty_n and weight_regfile_14_12_empty_n and weight_regfile_14_11_empty_n and weight_regfile_14_10_empty_n and weight_regfile_14_0_empty_n and weight_regfile_13_9_empty_n and weight_regfile_13_8_empty_n and weight_regfile_13_7_empty_n and weight_regfile_13_6_empty_n and weight_regfile_13_5_empty_n and weight_regfile_13_4_empty_n and weight_regfile_13_3_empty_n and weight_regfile_13_2_empty_n and weight_regfile_13_1_empty_n and weight_regfile_13_15_empty_n and weight_regfile_13_14_empty_n and weight_regfile_13_13_empty_n and weight_regfile_13_12_empty_n and weight_regfile_13_11_empty_n and weight_regfile_13_10_empty_n and weight_regfile_13_0_empty_n and weight_regfile_12_9_empty_n and weight_regfile_12_8_empty_n and weight_regfile_12_7_empty_n and weight_regfile_12_6_empty_n and weight_regfile_12_5_empty_n and weight_regfile_12_4_empty_n and weight_regfile_12_3_empty_n and weight_regfile_12_2_empty_n and weight_regfile_12_1_empty_n and weight_regfile_12_15_empty_n and weight_regfile_12_14_empty_n and weight_regfile_12_13_empty_n and weight_regfile_12_12_empty_n and weight_regfile_12_11_empty_n and weight_regfile_12_10_empty_n and weight_regfile_12_0_empty_n and weight_regfile_11_9_empty_n and weight_regfile_11_8_empty_n and weight_regfile_11_7_empty_n and weight_regfile_11_6_empty_n and weight_regfile_11_5_empty_n and weight_regfile_11_4_empty_n and weight_regfile_11_3_empty_n and weight_regfile_11_2_empty_n and weight_regfile_11_1_empty_n and weight_regfile_11_15_empty_n and weight_regfile_11_14_empty_n and weight_regfile_11_13_empty_n and weight_regfile_11_12_empty_n and weight_regfile_11_11_empty_n and weight_regfile_11_10_empty_n and weight_regfile_11_0_empty_n and weight_regfile_10_9_empty_n and weight_regfile_10_8_empty_n and weight_regfile_10_7_empty_n and weight_regfile_10_6_empty_n and weight_regfile_10_5_empty_n and weight_regfile_10_4_empty_n and weight_regfile_10_3_empty_n and weight_regfile_10_2_empty_n and weight_regfile_10_1_empty_n and weight_regfile_10_15_empty_n and weight_regfile_10_14_empty_n and weight_regfile_10_13_empty_n and weight_regfile_10_12_empty_n and weight_regfile_10_11_empty_n and weight_regfile_10_10_empty_n and weight_regfile_10_0_empty_n and weight_regfile_0_9_empty_n and weight_regfile_0_8_empty_n and weight_regfile_0_7_empty_n and weight_regfile_0_6_empty_n and weight_regfile_0_5_empty_n and weight_regfile_0_4_empty_n and weight_regfile_0_3_empty_n and weight_regfile_0_2_empty_n and weight_regfile_0_1_empty_n and weight_regfile_0_15_empty_n and weight_regfile_0_14_empty_n and weight_regfile_0_13_empty_n and weight_regfile_0_12_empty_n and weight_regfile_0_11_empty_n and weight_regfile_0_10_empty_n and weight_regfile_0_0_empty_n and data_l1_9_t_empty_n and data_l1_8_t_empty_n and data_l1_7_t_empty_n and data_l1_6_t_empty_n and data_l1_5_t_empty_n and data_l1_4_t_empty_n and data_l1_3_t_empty_n and data_l1_2_t_empty_n and data_l1_1_t_empty_n and data_l1_15_t_empty_n and data_l1_14_t_empty_n and data_l1_13_t_empty_n and data_l1_12_t_empty_n and data_l1_11_t_empty_n and data_l1_10_t_empty_n and data_l1_0_t_empty_n);
    runSysArr_U0_output_l1_0273_i_full_n <= output_l1_0_i_full_n;
    runSysArr_U0_output_l1_10283_i_full_n <= output_l1_10_i_full_n;
    runSysArr_U0_output_l1_11284_i_full_n <= output_l1_11_i_full_n;
    runSysArr_U0_output_l1_12285_i_full_n <= output_l1_12_i_full_n;
    runSysArr_U0_output_l1_1274_i_full_n <= output_l1_1_i_full_n;
    runSysArr_U0_output_l1_13286_i_full_n <= output_l1_13_i_full_n;
    runSysArr_U0_output_l1_14287_i_full_n <= output_l1_14_i_full_n;
    runSysArr_U0_output_l1_15288_i_full_n <= output_l1_15_i_full_n;
    runSysArr_U0_output_l1_2275_i_full_n <= output_l1_2_i_full_n;
    runSysArr_U0_output_l1_3276_i_full_n <= output_l1_3_i_full_n;
    runSysArr_U0_output_l1_4277_i_full_n <= output_l1_4_i_full_n;
    runSysArr_U0_output_l1_5278_i_full_n <= output_l1_5_i_full_n;
    runSysArr_U0_output_l1_6279_i_full_n <= output_l1_6_i_full_n;
    runSysArr_U0_output_l1_7280_i_full_n <= output_l1_7_i_full_n;
    runSysArr_U0_output_l1_8281_i_full_n <= output_l1_8_i_full_n;
    runSysArr_U0_output_l1_9282_i_full_n <= output_l1_9_i_full_n;
    runSysArr_U0_start_full_n <= ap_const_logic_1;
    runSysArr_U0_start_write <= ap_const_logic_0;
    runWeight2Reg_U0_ap_continue <= (ap_sync_channel_write_weight_regfile_9_9 and ap_sync_channel_write_weight_regfile_9_8 and ap_sync_channel_write_weight_regfile_9_7 and ap_sync_channel_write_weight_regfile_9_6 and ap_sync_channel_write_weight_regfile_9_5 and ap_sync_channel_write_weight_regfile_9_4 and ap_sync_channel_write_weight_regfile_9_3 and ap_sync_channel_write_weight_regfile_9_2 and ap_sync_channel_write_weight_regfile_9_15 and ap_sync_channel_write_weight_regfile_9_14 and ap_sync_channel_write_weight_regfile_9_13 and ap_sync_channel_write_weight_regfile_9_12 and ap_sync_channel_write_weight_regfile_9_11 and ap_sync_channel_write_weight_regfile_9_10 and ap_sync_channel_write_weight_regfile_9_1 and ap_sync_channel_write_weight_regfile_9_0 and ap_sync_channel_write_weight_regfile_8_9 and ap_sync_channel_write_weight_regfile_8_8 and ap_sync_channel_write_weight_regfile_8_7 and ap_sync_channel_write_weight_regfile_8_6 and ap_sync_channel_write_weight_regfile_8_5 and ap_sync_channel_write_weight_regfile_8_4 and ap_sync_channel_write_weight_regfile_8_3 and ap_sync_channel_write_weight_regfile_8_2 and ap_sync_channel_write_weight_regfile_8_15 and ap_sync_channel_write_weight_regfile_8_14 and ap_sync_channel_write_weight_regfile_8_13 and ap_sync_channel_write_weight_regfile_8_12 and ap_sync_channel_write_weight_regfile_8_11 and ap_sync_channel_write_weight_regfile_8_10 and ap_sync_channel_write_weight_regfile_8_1 and ap_sync_channel_write_weight_regfile_8_0 and ap_sync_channel_write_weight_regfile_7_9 and ap_sync_channel_write_weight_regfile_7_8 and ap_sync_channel_write_weight_regfile_7_7 and ap_sync_channel_write_weight_regfile_7_6 and ap_sync_channel_write_weight_regfile_7_5 and ap_sync_channel_write_weight_regfile_7_4 and ap_sync_channel_write_weight_regfile_7_3 and ap_sync_channel_write_weight_regfile_7_2 and ap_sync_channel_write_weight_regfile_7_15 and ap_sync_channel_write_weight_regfile_7_14 and ap_sync_channel_write_weight_regfile_7_13 and ap_sync_channel_write_weight_regfile_7_12 and ap_sync_channel_write_weight_regfile_7_11 and ap_sync_channel_write_weight_regfile_7_10 and ap_sync_channel_write_weight_regfile_7_1 and ap_sync_channel_write_weight_regfile_7_0 and ap_sync_channel_write_weight_regfile_6_9 and ap_sync_channel_write_weight_regfile_6_8 and ap_sync_channel_write_weight_regfile_6_7 and ap_sync_channel_write_weight_regfile_6_6 and ap_sync_channel_write_weight_regfile_6_5 and ap_sync_channel_write_weight_regfile_6_4 and ap_sync_channel_write_weight_regfile_6_3 and ap_sync_channel_write_weight_regfile_6_2 and ap_sync_channel_write_weight_regfile_6_15 and ap_sync_channel_write_weight_regfile_6_14 and ap_sync_channel_write_weight_regfile_6_13 and ap_sync_channel_write_weight_regfile_6_12 and ap_sync_channel_write_weight_regfile_6_11 and ap_sync_channel_write_weight_regfile_6_10 and ap_sync_channel_write_weight_regfile_6_1 and ap_sync_channel_write_weight_regfile_6_0 and ap_sync_channel_write_weight_regfile_5_9 and ap_sync_channel_write_weight_regfile_5_8 and ap_sync_channel_write_weight_regfile_5_7 and ap_sync_channel_write_weight_regfile_5_6 and ap_sync_channel_write_weight_regfile_5_5 and ap_sync_channel_write_weight_regfile_5_4 and ap_sync_channel_write_weight_regfile_5_3 and ap_sync_channel_write_weight_regfile_5_2 and ap_sync_channel_write_weight_regfile_5_15 and ap_sync_channel_write_weight_regfile_5_14 and ap_sync_channel_write_weight_regfile_5_13 and ap_sync_channel_write_weight_regfile_5_12 and ap_sync_channel_write_weight_regfile_5_11 and ap_sync_channel_write_weight_regfile_5_10 and ap_sync_channel_write_weight_regfile_5_1 and ap_sync_channel_write_weight_regfile_5_0 and ap_sync_channel_write_weight_regfile_4_9 and ap_sync_channel_write_weight_regfile_4_8 and ap_sync_channel_write_weight_regfile_4_7 and ap_sync_channel_write_weight_regfile_4_6 and ap_sync_channel_write_weight_regfile_4_5 and ap_sync_channel_write_weight_regfile_4_4 and ap_sync_channel_write_weight_regfile_4_3 and ap_sync_channel_write_weight_regfile_4_2 and ap_sync_channel_write_weight_regfile_4_15 and ap_sync_channel_write_weight_regfile_4_14 and ap_sync_channel_write_weight_regfile_4_13 and ap_sync_channel_write_weight_regfile_4_12 and ap_sync_channel_write_weight_regfile_4_11 and ap_sync_channel_write_weight_regfile_4_10 and ap_sync_channel_write_weight_regfile_4_1 and ap_sync_channel_write_weight_regfile_4_0 and ap_sync_channel_write_weight_regfile_3_9 and ap_sync_channel_write_weight_regfile_3_8 and ap_sync_channel_write_weight_regfile_3_7 and ap_sync_channel_write_weight_regfile_3_6 and ap_sync_channel_write_weight_regfile_3_5 and ap_sync_channel_write_weight_regfile_3_4 and ap_sync_channel_write_weight_regfile_3_3 and ap_sync_channel_write_weight_regfile_3_2 and ap_sync_channel_write_weight_regfile_3_15 and ap_sync_channel_write_weight_regfile_3_14 and ap_sync_channel_write_weight_regfile_3_13 and ap_sync_channel_write_weight_regfile_3_12 and ap_sync_channel_write_weight_regfile_3_11 and ap_sync_channel_write_weight_regfile_3_10 and ap_sync_channel_write_weight_regfile_3_1 and ap_sync_channel_write_weight_regfile_3_0 and ap_sync_channel_write_weight_regfile_2_9 and ap_sync_channel_write_weight_regfile_2_8 and ap_sync_channel_write_weight_regfile_2_7 and ap_sync_channel_write_weight_regfile_2_6 and ap_sync_channel_write_weight_regfile_2_5 and ap_sync_channel_write_weight_regfile_2_4 and ap_sync_channel_write_weight_regfile_2_3 and ap_sync_channel_write_weight_regfile_2_2 and ap_sync_channel_write_weight_regfile_2_15 and ap_sync_channel_write_weight_regfile_2_14 and ap_sync_channel_write_weight_regfile_2_13 and ap_sync_channel_write_weight_regfile_2_12 and ap_sync_channel_write_weight_regfile_2_11 and ap_sync_channel_write_weight_regfile_2_10 and ap_sync_channel_write_weight_regfile_2_1 and ap_sync_channel_write_weight_regfile_2_0 and ap_sync_channel_write_weight_regfile_1_9 and ap_sync_channel_write_weight_regfile_1_8 and ap_sync_channel_write_weight_regfile_1_7 and ap_sync_channel_write_weight_regfile_1_6 and ap_sync_channel_write_weight_regfile_1_5 and ap_sync_channel_write_weight_regfile_1_4 and ap_sync_channel_write_weight_regfile_1_3 and ap_sync_channel_write_weight_regfile_1_2 and ap_sync_channel_write_weight_regfile_1_15 and ap_sync_channel_write_weight_regfile_1_14 and ap_sync_channel_write_weight_regfile_1_13 and ap_sync_channel_write_weight_regfile_1_12 and ap_sync_channel_write_weight_regfile_1_11 and ap_sync_channel_write_weight_regfile_1_10 and ap_sync_channel_write_weight_regfile_1_1 and ap_sync_channel_write_weight_regfile_1_0 and ap_sync_channel_write_weight_regfile_15_9 and ap_sync_channel_write_weight_regfile_15_8 and ap_sync_channel_write_weight_regfile_15_7 and ap_sync_channel_write_weight_regfile_15_6 and ap_sync_channel_write_weight_regfile_15_5 and ap_sync_channel_write_weight_regfile_15_4 and ap_sync_channel_write_weight_regfile_15_3 and ap_sync_channel_write_weight_regfile_15_2 and ap_sync_channel_write_weight_regfile_15_15 and ap_sync_channel_write_weight_regfile_15_14 and ap_sync_channel_write_weight_regfile_15_13 and ap_sync_channel_write_weight_regfile_15_12 and ap_sync_channel_write_weight_regfile_15_11 and ap_sync_channel_write_weight_regfile_15_10 and ap_sync_channel_write_weight_regfile_15_1 and ap_sync_channel_write_weight_regfile_15_0 and ap_sync_channel_write_weight_regfile_14_9 and ap_sync_channel_write_weight_regfile_14_8 and ap_sync_channel_write_weight_regfile_14_7 and ap_sync_channel_write_weight_regfile_14_6 and ap_sync_channel_write_weight_regfile_14_5 and ap_sync_channel_write_weight_regfile_14_4 and ap_sync_channel_write_weight_regfile_14_3 and ap_sync_channel_write_weight_regfile_14_2 and ap_sync_channel_write_weight_regfile_14_15 and ap_sync_channel_write_weight_regfile_14_14 and ap_sync_channel_write_weight_regfile_14_13 and ap_sync_channel_write_weight_regfile_14_12 and ap_sync_channel_write_weight_regfile_14_11 and ap_sync_channel_write_weight_regfile_14_10 and ap_sync_channel_write_weight_regfile_14_1 and ap_sync_channel_write_weight_regfile_14_0 and ap_sync_channel_write_weight_regfile_13_9 and ap_sync_channel_write_weight_regfile_13_8 and ap_sync_channel_write_weight_regfile_13_7 and ap_sync_channel_write_weight_regfile_13_6 and ap_sync_channel_write_weight_regfile_13_5 and ap_sync_channel_write_weight_regfile_13_4 and ap_sync_channel_write_weight_regfile_13_3 and ap_sync_channel_write_weight_regfile_13_2 and ap_sync_channel_write_weight_regfile_13_15 and ap_sync_channel_write_weight_regfile_13_14 and ap_sync_channel_write_weight_regfile_13_13 and ap_sync_channel_write_weight_regfile_13_12 and ap_sync_channel_write_weight_regfile_13_11 and ap_sync_channel_write_weight_regfile_13_10 and ap_sync_channel_write_weight_regfile_13_1 and ap_sync_channel_write_weight_regfile_13_0 and ap_sync_channel_write_weight_regfile_12_9 and ap_sync_channel_write_weight_regfile_12_8 and ap_sync_channel_write_weight_regfile_12_7 and ap_sync_channel_write_weight_regfile_12_6 and ap_sync_channel_write_weight_regfile_12_5 and ap_sync_channel_write_weight_regfile_12_4 and ap_sync_channel_write_weight_regfile_12_3 and ap_sync_channel_write_weight_regfile_12_2 and ap_sync_channel_write_weight_regfile_12_15 and ap_sync_channel_write_weight_regfile_12_14 and ap_sync_channel_write_weight_regfile_12_13 and ap_sync_channel_write_weight_regfile_12_12 and ap_sync_channel_write_weight_regfile_12_11 and ap_sync_channel_write_weight_regfile_12_10 and ap_sync_channel_write_weight_regfile_12_1 and ap_sync_channel_write_weight_regfile_12_0 and ap_sync_channel_write_weight_regfile_11_9 and ap_sync_channel_write_weight_regfile_11_8 and ap_sync_channel_write_weight_regfile_11_7 and ap_sync_channel_write_weight_regfile_11_6 and ap_sync_channel_write_weight_regfile_11_5 and ap_sync_channel_write_weight_regfile_11_4 and ap_sync_channel_write_weight_regfile_11_3 and ap_sync_channel_write_weight_regfile_11_2 and ap_sync_channel_write_weight_regfile_11_15 and ap_sync_channel_write_weight_regfile_11_14 and ap_sync_channel_write_weight_regfile_11_13 and ap_sync_channel_write_weight_regfile_11_12 and ap_sync_channel_write_weight_regfile_11_11 and ap_sync_channel_write_weight_regfile_11_10 and ap_sync_channel_write_weight_regfile_11_1 and ap_sync_channel_write_weight_regfile_11_0 and ap_sync_channel_write_weight_regfile_10_9 and ap_sync_channel_write_weight_regfile_10_8 and ap_sync_channel_write_weight_regfile_10_7 and ap_sync_channel_write_weight_regfile_10_6 and ap_sync_channel_write_weight_regfile_10_5 and ap_sync_channel_write_weight_regfile_10_4 and ap_sync_channel_write_weight_regfile_10_3 and ap_sync_channel_write_weight_regfile_10_2 and ap_sync_channel_write_weight_regfile_10_15 and ap_sync_channel_write_weight_regfile_10_14 and ap_sync_channel_write_weight_regfile_10_13 and ap_sync_channel_write_weight_regfile_10_12 and ap_sync_channel_write_weight_regfile_10_11 and ap_sync_channel_write_weight_regfile_10_10 and ap_sync_channel_write_weight_regfile_10_1 and ap_sync_channel_write_weight_regfile_10_0 and ap_sync_channel_write_weight_regfile_0_9 and ap_sync_channel_write_weight_regfile_0_8 and ap_sync_channel_write_weight_regfile_0_7 and ap_sync_channel_write_weight_regfile_0_6 and ap_sync_channel_write_weight_regfile_0_5 and ap_sync_channel_write_weight_regfile_0_4 and ap_sync_channel_write_weight_regfile_0_3 and ap_sync_channel_write_weight_regfile_0_2 and ap_sync_channel_write_weight_regfile_0_15 and ap_sync_channel_write_weight_regfile_0_14 and ap_sync_channel_write_weight_regfile_0_13 and ap_sync_channel_write_weight_regfile_0_12 and ap_sync_channel_write_weight_regfile_0_11 and ap_sync_channel_write_weight_regfile_0_10 and ap_sync_channel_write_weight_regfile_0_1 and ap_sync_channel_write_weight_regfile_0_0);
    runWeight2Reg_U0_ap_start <= ((ap_sync_reg_runWeight2Reg_U0_ap_ready xor ap_const_logic_1) and ap_start);
    runWeight2Reg_U0_start_full_n <= ap_const_logic_1;
    runWeight2Reg_U0_start_write <= ap_const_logic_0;
    runWeight2Reg_U0_weight_l2_0_full_n <= weight_l2_0_empty_n;
    runWeight2Reg_U0_weight_l2_0_write <= ap_const_logic_0;
    runWeight2Reg_U0_weight_l2_1_full_n <= weight_l2_1_empty_n;
    runWeight2Reg_U0_weight_l2_1_write <= ap_const_logic_0;
    runWeight2Reg_U0_weight_l2_2_full_n <= weight_l2_2_empty_n;
    runWeight2Reg_U0_weight_l2_2_write <= ap_const_logic_0;
    runWeight2Reg_U0_weight_l2_3_full_n <= weight_l2_3_empty_n;
    runWeight2Reg_U0_weight_l2_3_write <= ap_const_logic_0;
    weight_l2_0_address0 <= runWeight2Reg_U0_weight_l2_0_address0;
    weight_l2_0_address1 <= ap_const_lv12_0;
    weight_l2_0_ce0 <= runWeight2Reg_U0_weight_l2_0_ce0;
    weight_l2_0_ce1 <= ap_const_logic_0;
    weight_l2_0_d0 <= ap_const_lv8_0;
    weight_l2_0_d1 <= ap_const_lv8_0;
    weight_l2_0_read <= runWeight2Reg_U0_weight_l2_0_write;
    weight_l2_0_we0 <= ap_const_logic_0;
    weight_l2_0_we1 <= ap_const_logic_0;
    weight_l2_1_address0 <= runWeight2Reg_U0_weight_l2_1_address0;
    weight_l2_1_address1 <= ap_const_lv12_0;
    weight_l2_1_ce0 <= runWeight2Reg_U0_weight_l2_1_ce0;
    weight_l2_1_ce1 <= ap_const_logic_0;
    weight_l2_1_d0 <= ap_const_lv8_0;
    weight_l2_1_d1 <= ap_const_lv8_0;
    weight_l2_1_read <= runWeight2Reg_U0_weight_l2_1_write;
    weight_l2_1_we0 <= ap_const_logic_0;
    weight_l2_1_we1 <= ap_const_logic_0;
    weight_l2_2_address0 <= runWeight2Reg_U0_weight_l2_2_address0;
    weight_l2_2_address1 <= ap_const_lv12_0;
    weight_l2_2_ce0 <= runWeight2Reg_U0_weight_l2_2_ce0;
    weight_l2_2_ce1 <= ap_const_logic_0;
    weight_l2_2_d0 <= ap_const_lv8_0;
    weight_l2_2_d1 <= ap_const_lv8_0;
    weight_l2_2_read <= runWeight2Reg_U0_weight_l2_2_write;
    weight_l2_2_we0 <= ap_const_logic_0;
    weight_l2_2_we1 <= ap_const_logic_0;
    weight_l2_3_address0 <= runWeight2Reg_U0_weight_l2_3_address0;
    weight_l2_3_address1 <= ap_const_lv12_0;
    weight_l2_3_ce0 <= runWeight2Reg_U0_weight_l2_3_ce0;
    weight_l2_3_ce1 <= ap_const_logic_0;
    weight_l2_3_d0 <= ap_const_lv8_0;
    weight_l2_3_d1 <= ap_const_lv8_0;
    weight_l2_3_read <= runWeight2Reg_U0_weight_l2_3_write;
    weight_l2_3_we0 <= ap_const_logic_0;
    weight_l2_3_we1 <= ap_const_logic_0;
end behav;
