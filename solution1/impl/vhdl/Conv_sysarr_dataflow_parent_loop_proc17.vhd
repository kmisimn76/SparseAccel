-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv_sysarr_dataflow_parent_loop_proc17 is
port (
    L2_TILENUM_R : IN STD_LOGIC_VECTOR (31 downto 0);
    L2_TILENUM_S : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    weight_in : IN STD_LOGIC_VECTOR (63 downto 0);
    kmo : IN STD_LOGIC_VECTOR (31 downto 0);
    cmo : IN STD_LOGIC_VECTOR (31 downto 0);
    K_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
    R_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
    S_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
    L2_TILENUM_C : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    data_in : IN STD_LOGIC_VECTOR (63 downto 0);
    hmo : IN STD_LOGIC_VECTOR (28 downto 0);
    wmo : IN STD_LOGIC_VECTOR (31 downto 0);
    H_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
    H_in_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_in_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
    WH_in : IN STD_LOGIC_VECTOR (28 downto 0);
    L1_TILENUM_K : IN STD_LOGIC_VECTOR (31 downto 0);
    L1_TILENUM_C : IN STD_LOGIC_VECTOR (31 downto 0);
    L1_TILENUM_H : IN STD_LOGIC_VECTOR (31 downto 0);
    L1_TILENUM_W : IN STD_LOGIC_VECTOR (31 downto 0);
    L1_TILENUM_R : IN STD_LOGIC_VECTOR (31 downto 0);
    L1_TILENUM_S : IN STD_LOGIC_VECTOR (31 downto 0);
    TILESIZE_H : IN STD_LOGIC_VECTOR (31 downto 0);
    TILESIZE_W : IN STD_LOGIC_VECTOR (31 downto 0);
    TILESIZE_R : IN STD_LOGIC_VECTOR (31 downto 0);
    TILESIZE_S : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv_out : IN STD_LOGIC_VECTOR (63 downto 0);
    WH : IN STD_LOGIC_VECTOR (28 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    L2_TILENUM_S_ap_vld : IN STD_LOGIC;
    weight_in_ap_vld : IN STD_LOGIC;
    kmo_ap_vld : IN STD_LOGIC;
    cmo_ap_vld : IN STD_LOGIC;
    K_L2_ap_vld : IN STD_LOGIC;
    C_L2_ap_vld : IN STD_LOGIC;
    R_L2_ap_vld : IN STD_LOGIC;
    S_L2_ap_vld : IN STD_LOGIC;
    L2_TILENUM_C_ap_vld : IN STD_LOGIC;
    L2_TILENUM_R_ap_vld : IN STD_LOGIC;
    data_in_ap_vld : IN STD_LOGIC;
    hmo_ap_vld : IN STD_LOGIC;
    wmo_ap_vld : IN STD_LOGIC;
    H_L2_ap_vld : IN STD_LOGIC;
    W_L2_ap_vld : IN STD_LOGIC;
    H_in_L2_ap_vld : IN STD_LOGIC;
    W_in_L2_ap_vld : IN STD_LOGIC;
    WH_in_ap_vld : IN STD_LOGIC;
    L1_TILENUM_K_ap_vld : IN STD_LOGIC;
    L1_TILENUM_C_ap_vld : IN STD_LOGIC;
    L1_TILENUM_H_ap_vld : IN STD_LOGIC;
    L1_TILENUM_W_ap_vld : IN STD_LOGIC;
    L1_TILENUM_R_ap_vld : IN STD_LOGIC;
    L1_TILENUM_S_ap_vld : IN STD_LOGIC;
    TILESIZE_H_ap_vld : IN STD_LOGIC;
    TILESIZE_W_ap_vld : IN STD_LOGIC;
    TILESIZE_R_ap_vld : IN STD_LOGIC;
    TILESIZE_S_ap_vld : IN STD_LOGIC;
    conv_out_ap_vld : IN STD_LOGIC;
    WH_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of Conv_sysarr_dataflow_parent_loop_proc17 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_WVALID : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_WLAST : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_RREADY : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem1_BREADY : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_WVALID : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_WLAST : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_RREADY : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem2_BREADY : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_wmo : STD_LOGIC_VECTOR (28 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWVALID : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_WVALID : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_WLAST : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARVALID : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_RREADY : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_m_axi_gmem3_BREADY : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_ap_start : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_ap_done : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_ap_ready : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_ap_idle : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_ap_continue : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal loop_dataflow_input_count : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal loop_dataflow_output_count : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal bound_minus_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_proc_U0_start_full_n : STD_LOGIC;
    signal dataflow_parent_loop_proc_U0_start_write : STD_LOGIC;

    component Conv_sysarr_dataflow_parent_loop_proc IS
    port (
        L2_TILENUM_S : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        weight_in : IN STD_LOGIC_VECTOR (63 downto 0);
        kmo : IN STD_LOGIC_VECTOR (31 downto 0);
        cmo : IN STD_LOGIC_VECTOR (31 downto 0);
        rmo : IN STD_LOGIC_VECTOR (31 downto 0);
        K_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
        R_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
        L2_TILENUM_C : IN STD_LOGIC_VECTOR (31 downto 0);
        L2_TILENUM_R : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        data_in : IN STD_LOGIC_VECTOR (63 downto 0);
        hmo : IN STD_LOGIC_VECTOR (28 downto 0);
        wmo : IN STD_LOGIC_VECTOR (28 downto 0);
        H_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
        W_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
        H_in_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
        W_in_L2 : IN STD_LOGIC_VECTOR (31 downto 0);
        WH_in : IN STD_LOGIC_VECTOR (28 downto 0);
        L1_TILENUM_K : IN STD_LOGIC_VECTOR (31 downto 0);
        L1_TILENUM_C : IN STD_LOGIC_VECTOR (31 downto 0);
        L1_TILENUM_H : IN STD_LOGIC_VECTOR (31 downto 0);
        L1_TILENUM_W : IN STD_LOGIC_VECTOR (31 downto 0);
        L1_TILENUM_R : IN STD_LOGIC_VECTOR (31 downto 0);
        L1_TILENUM_S : IN STD_LOGIC_VECTOR (31 downto 0);
        TILESIZE_H : IN STD_LOGIC_VECTOR (31 downto 0);
        TILESIZE_W : IN STD_LOGIC_VECTOR (31 downto 0);
        TILESIZE_R : IN STD_LOGIC_VECTOR (31 downto 0);
        TILESIZE_S : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_WREADY : IN STD_LOGIC;
        m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RVALID : IN STD_LOGIC;
        m_axi_gmem3_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_RLAST : IN STD_LOGIC;
        m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BVALID : IN STD_LOGIC;
        m_axi_gmem3_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv_out : IN STD_LOGIC_VECTOR (63 downto 0);
        WH : IN STD_LOGIC_VECTOR (28 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        weight_in_ap_vld : IN STD_LOGIC;
        kmo_ap_vld : IN STD_LOGIC;
        cmo_ap_vld : IN STD_LOGIC;
        rmo_ap_vld : IN STD_LOGIC;
        K_L2_ap_vld : IN STD_LOGIC;
        C_L2_ap_vld : IN STD_LOGIC;
        R_L2_ap_vld : IN STD_LOGIC;
        S_L2_ap_vld : IN STD_LOGIC;
        L2_TILENUM_C_ap_vld : IN STD_LOGIC;
        L2_TILENUM_R_ap_vld : IN STD_LOGIC;
        L2_TILENUM_S_ap_vld : IN STD_LOGIC;
        data_in_ap_vld : IN STD_LOGIC;
        hmo_ap_vld : IN STD_LOGIC;
        wmo_ap_vld : IN STD_LOGIC;
        H_L2_ap_vld : IN STD_LOGIC;
        W_L2_ap_vld : IN STD_LOGIC;
        H_in_L2_ap_vld : IN STD_LOGIC;
        W_in_L2_ap_vld : IN STD_LOGIC;
        WH_in_ap_vld : IN STD_LOGIC;
        L1_TILENUM_K_ap_vld : IN STD_LOGIC;
        L1_TILENUM_C_ap_vld : IN STD_LOGIC;
        L1_TILENUM_H_ap_vld : IN STD_LOGIC;
        L1_TILENUM_W_ap_vld : IN STD_LOGIC;
        L1_TILENUM_R_ap_vld : IN STD_LOGIC;
        L1_TILENUM_S_ap_vld : IN STD_LOGIC;
        TILESIZE_H_ap_vld : IN STD_LOGIC;
        TILESIZE_W_ap_vld : IN STD_LOGIC;
        TILESIZE_R_ap_vld : IN STD_LOGIC;
        TILESIZE_S_ap_vld : IN STD_LOGIC;
        conv_out_ap_vld : IN STD_LOGIC;
        WH_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    dataflow_parent_loop_proc_U0 : component Conv_sysarr_dataflow_parent_loop_proc
    port map (
        L2_TILENUM_S => L2_TILENUM_S,
        m_axi_gmem1_AWVALID => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => dataflow_parent_loop_proc_U0_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => dataflow_parent_loop_proc_U0_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => dataflow_parent_loop_proc_U0_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => dataflow_parent_loop_proc_U0_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => dataflow_parent_loop_proc_U0_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => dataflow_parent_loop_proc_U0_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => dataflow_parent_loop_proc_U0_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => dataflow_parent_loop_proc_U0_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY => dataflow_parent_loop_proc_U0_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST => m_axi_gmem1_RLAST,
        m_axi_gmem1_RID => m_axi_gmem1_RID,
        m_axi_gmem1_RUSER => m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP => m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => dataflow_parent_loop_proc_U0_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        weight_in => weight_in,
        kmo => kmo,
        cmo => cmo,
        rmo => loop_dataflow_input_count,
        K_L2 => K_L2,
        C_L2 => C_L2,
        R_L2 => R_L2,
        S_L2 => S_L2,
        L2_TILENUM_C => L2_TILENUM_C,
        L2_TILENUM_R => L2_TILENUM_R,
        m_axi_gmem2_AWVALID => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => ap_const_logic_0,
        m_axi_gmem2_AWADDR => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => dataflow_parent_loop_proc_U0_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => dataflow_parent_loop_proc_U0_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => ap_const_logic_0,
        m_axi_gmem2_WDATA => dataflow_parent_loop_proc_U0_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => dataflow_parent_loop_proc_U0_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => dataflow_parent_loop_proc_U0_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => dataflow_parent_loop_proc_U0_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => dataflow_parent_loop_proc_U0_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => dataflow_parent_loop_proc_U0_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY => dataflow_parent_loop_proc_U0_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST => m_axi_gmem2_RLAST,
        m_axi_gmem2_RID => m_axi_gmem2_RID,
        m_axi_gmem2_RUSER => m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP => m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID => ap_const_logic_0,
        m_axi_gmem2_BREADY => dataflow_parent_loop_proc_U0_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => ap_const_lv2_0,
        m_axi_gmem2_BID => ap_const_lv1_0,
        m_axi_gmem2_BUSER => ap_const_lv1_0,
        data_in => data_in,
        hmo => hmo,
        wmo => dataflow_parent_loop_proc_U0_wmo,
        H_L2 => H_L2,
        W_L2 => W_L2,
        H_in_L2 => H_in_L2,
        W_in_L2 => W_in_L2,
        WH_in => WH_in,
        L1_TILENUM_K => L1_TILENUM_K,
        L1_TILENUM_C => L1_TILENUM_C,
        L1_TILENUM_H => L1_TILENUM_H,
        L1_TILENUM_W => L1_TILENUM_W,
        L1_TILENUM_R => L1_TILENUM_R,
        L1_TILENUM_S => L1_TILENUM_S,
        TILESIZE_H => TILESIZE_H,
        TILESIZE_W => TILESIZE_W,
        TILESIZE_R => TILESIZE_R,
        TILESIZE_S => TILESIZE_S,
        m_axi_gmem3_AWVALID => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY => m_axi_gmem3_AWREADY,
        m_axi_gmem3_AWADDR => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER => dataflow_parent_loop_proc_U0_m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID => dataflow_parent_loop_proc_U0_m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY => m_axi_gmem3_WREADY,
        m_axi_gmem3_WDATA => dataflow_parent_loop_proc_U0_m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB => dataflow_parent_loop_proc_U0_m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST => dataflow_parent_loop_proc_U0_m_axi_gmem3_WLAST,
        m_axi_gmem3_WID => dataflow_parent_loop_proc_U0_m_axi_gmem3_WID,
        m_axi_gmem3_WUSER => dataflow_parent_loop_proc_U0_m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY => m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER => dataflow_parent_loop_proc_U0_m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID => m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY => dataflow_parent_loop_proc_U0_m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA => m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST => m_axi_gmem3_RLAST,
        m_axi_gmem3_RID => m_axi_gmem3_RID,
        m_axi_gmem3_RUSER => m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP => m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID => m_axi_gmem3_BVALID,
        m_axi_gmem3_BREADY => dataflow_parent_loop_proc_U0_m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP => m_axi_gmem3_BRESP,
        m_axi_gmem3_BID => m_axi_gmem3_BID,
        m_axi_gmem3_BUSER => m_axi_gmem3_BUSER,
        conv_out => conv_out,
        WH => WH,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        weight_in_ap_vld => weight_in_ap_vld,
        kmo_ap_vld => kmo_ap_vld,
        cmo_ap_vld => cmo_ap_vld,
        rmo_ap_vld => ap_const_logic_0,
        K_L2_ap_vld => K_L2_ap_vld,
        C_L2_ap_vld => C_L2_ap_vld,
        R_L2_ap_vld => R_L2_ap_vld,
        S_L2_ap_vld => S_L2_ap_vld,
        L2_TILENUM_C_ap_vld => L2_TILENUM_C_ap_vld,
        L2_TILENUM_R_ap_vld => L2_TILENUM_R_ap_vld,
        L2_TILENUM_S_ap_vld => L2_TILENUM_S_ap_vld,
        data_in_ap_vld => data_in_ap_vld,
        hmo_ap_vld => hmo_ap_vld,
        wmo_ap_vld => wmo_ap_vld,
        H_L2_ap_vld => H_L2_ap_vld,
        W_L2_ap_vld => W_L2_ap_vld,
        H_in_L2_ap_vld => H_in_L2_ap_vld,
        W_in_L2_ap_vld => W_in_L2_ap_vld,
        WH_in_ap_vld => WH_in_ap_vld,
        L1_TILENUM_K_ap_vld => L1_TILENUM_K_ap_vld,
        L1_TILENUM_C_ap_vld => L1_TILENUM_C_ap_vld,
        L1_TILENUM_H_ap_vld => L1_TILENUM_H_ap_vld,
        L1_TILENUM_W_ap_vld => L1_TILENUM_W_ap_vld,
        L1_TILENUM_R_ap_vld => L1_TILENUM_R_ap_vld,
        L1_TILENUM_S_ap_vld => L1_TILENUM_S_ap_vld,
        TILESIZE_H_ap_vld => TILESIZE_H_ap_vld,
        TILESIZE_W_ap_vld => TILESIZE_W_ap_vld,
        TILESIZE_R_ap_vld => TILESIZE_R_ap_vld,
        TILESIZE_S_ap_vld => TILESIZE_S_ap_vld,
        conv_out_ap_vld => conv_out_ap_vld,
        WH_ap_vld => WH_ap_vld,
        ap_start => dataflow_parent_loop_proc_U0_ap_start,
        ap_done => dataflow_parent_loop_proc_U0_ap_done,
        ap_ready => dataflow_parent_loop_proc_U0_ap_ready,
        ap_idle => dataflow_parent_loop_proc_U0_ap_idle,
        ap_continue => dataflow_parent_loop_proc_U0_ap_continue);





    loop_dataflow_input_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_input_count <= ap_const_lv32_0;
            else
                if ((not((loop_dataflow_input_count = bound_minus_1)) and (ap_start = ap_const_logic_1) and (dataflow_parent_loop_proc_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= std_logic_vector(unsigned(loop_dataflow_input_count) + unsigned(ap_const_lv32_1));
                elsif (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_parent_loop_proc_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= ap_const_lv32_0;
                end if; 
            end if;
        end if;
    end process;


    loop_dataflow_output_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_output_count <= ap_const_lv32_0;
            else
                if ((not((loop_dataflow_output_count = bound_minus_1)) and (dataflow_parent_loop_proc_U0_ap_continue = ap_const_logic_1) and (dataflow_parent_loop_proc_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= std_logic_vector(unsigned(loop_dataflow_output_count) + unsigned(ap_const_lv32_1));
                elsif (((loop_dataflow_output_count = bound_minus_1) and (dataflow_parent_loop_proc_U0_ap_continue = ap_const_logic_1) and (dataflow_parent_loop_proc_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= ap_const_lv32_0;
                end if; 
            end if;
        end if;
    end process;


    ap_done_assign_proc : process(dataflow_parent_loop_proc_U0_ap_done, loop_dataflow_output_count, bound_minus_1)
    begin
        if (((loop_dataflow_output_count = bound_minus_1) and (dataflow_parent_loop_proc_U0_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(dataflow_parent_loop_proc_U0_ap_idle, ap_start, loop_dataflow_output_count)
    begin
        if (((loop_dataflow_output_count = ap_const_lv32_0) and (ap_start = ap_const_logic_0) and (dataflow_parent_loop_proc_U0_ap_idle = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(dataflow_parent_loop_proc_U0_ap_ready, ap_start, loop_dataflow_input_count, bound_minus_1)
    begin
        if (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_parent_loop_proc_U0_ap_ready = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_continue <= ap_continue;
    ap_sync_done <= dataflow_parent_loop_proc_U0_ap_done;
    ap_sync_ready <= dataflow_parent_loop_proc_U0_ap_ready;
    bound_minus_1 <= std_logic_vector(unsigned(L2_TILENUM_R) - unsigned(ap_const_lv32_1));

    dataflow_parent_loop_proc_U0_ap_continue_assign_proc : process(ap_continue, loop_dataflow_output_count, bound_minus_1)
    begin
        if ((not((loop_dataflow_output_count = bound_minus_1)) or (ap_continue = ap_const_logic_1))) then 
            dataflow_parent_loop_proc_U0_ap_continue <= ap_const_logic_1;
        else 
            dataflow_parent_loop_proc_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    dataflow_parent_loop_proc_U0_ap_start <= ap_start;
    dataflow_parent_loop_proc_U0_start_full_n <= ap_const_logic_1;
    dataflow_parent_loop_proc_U0_start_write <= ap_const_logic_0;
    
    dataflow_parent_loop_proc_U0_wmo_proc : process(wmo)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable dataflow_parent_loop_proc_U0_wmo_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_1D(5 - 1 downto 0);
        v0_cpy := wmo;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1D(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            for dataflow_parent_loop_proc_U0_wmo_i in 0 to 32-1 loop
                v0_cpy(dataflow_parent_loop_proc_U0_wmo_i) := wmo(32-1-dataflow_parent_loop_proc_U0_wmo_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        dataflow_parent_loop_proc_U0_wmo <= resvalue(29-1 downto 0);
    end process;

    m_axi_gmem1_ARADDR <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARADDR;
    m_axi_gmem1_ARBURST <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARBURST;
    m_axi_gmem1_ARCACHE <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARCACHE;
    m_axi_gmem1_ARID <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARID;
    m_axi_gmem1_ARLEN <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARLEN;
    m_axi_gmem1_ARLOCK <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARLOCK;
    m_axi_gmem1_ARPROT <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARPROT;
    m_axi_gmem1_ARQOS <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARQOS;
    m_axi_gmem1_ARREGION <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARREGION;
    m_axi_gmem1_ARSIZE <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARSIZE;
    m_axi_gmem1_ARUSER <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARUSER;
    m_axi_gmem1_ARVALID <= dataflow_parent_loop_proc_U0_m_axi_gmem1_ARVALID;
    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;
    m_axi_gmem1_RREADY <= dataflow_parent_loop_proc_U0_m_axi_gmem1_RREADY;
    m_axi_gmem1_WDATA <= ap_const_lv8_0;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv1_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    m_axi_gmem2_ARADDR <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARADDR;
    m_axi_gmem2_ARBURST <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARBURST;
    m_axi_gmem2_ARCACHE <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARCACHE;
    m_axi_gmem2_ARID <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARID;
    m_axi_gmem2_ARLEN <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARLEN;
    m_axi_gmem2_ARLOCK <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARLOCK;
    m_axi_gmem2_ARPROT <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARPROT;
    m_axi_gmem2_ARQOS <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARQOS;
    m_axi_gmem2_ARREGION <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARREGION;
    m_axi_gmem2_ARSIZE <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARSIZE;
    m_axi_gmem2_ARUSER <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARUSER;
    m_axi_gmem2_ARVALID <= dataflow_parent_loop_proc_U0_m_axi_gmem2_ARVALID;
    m_axi_gmem2_AWADDR <= ap_const_lv64_0;
    m_axi_gmem2_AWBURST <= ap_const_lv2_0;
    m_axi_gmem2_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem2_AWID <= ap_const_lv1_0;
    m_axi_gmem2_AWLEN <= ap_const_lv32_0;
    m_axi_gmem2_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem2_AWPROT <= ap_const_lv3_0;
    m_axi_gmem2_AWQOS <= ap_const_lv4_0;
    m_axi_gmem2_AWREGION <= ap_const_lv4_0;
    m_axi_gmem2_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem2_AWUSER <= ap_const_lv1_0;
    m_axi_gmem2_AWVALID <= ap_const_logic_0;
    m_axi_gmem2_BREADY <= ap_const_logic_0;
    m_axi_gmem2_RREADY <= dataflow_parent_loop_proc_U0_m_axi_gmem2_RREADY;
    m_axi_gmem2_WDATA <= ap_const_lv8_0;
    m_axi_gmem2_WID <= ap_const_lv1_0;
    m_axi_gmem2_WLAST <= ap_const_logic_0;
    m_axi_gmem2_WSTRB <= ap_const_lv1_0;
    m_axi_gmem2_WUSER <= ap_const_lv1_0;
    m_axi_gmem2_WVALID <= ap_const_logic_0;
    m_axi_gmem3_ARADDR <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARADDR;
    m_axi_gmem3_ARBURST <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARBURST;
    m_axi_gmem3_ARCACHE <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARCACHE;
    m_axi_gmem3_ARID <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARID;
    m_axi_gmem3_ARLEN <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARLEN;
    m_axi_gmem3_ARLOCK <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARLOCK;
    m_axi_gmem3_ARPROT <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARPROT;
    m_axi_gmem3_ARQOS <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARQOS;
    m_axi_gmem3_ARREGION <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARREGION;
    m_axi_gmem3_ARSIZE <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARSIZE;
    m_axi_gmem3_ARUSER <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARUSER;
    m_axi_gmem3_ARVALID <= dataflow_parent_loop_proc_U0_m_axi_gmem3_ARVALID;
    m_axi_gmem3_AWADDR <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWADDR;
    m_axi_gmem3_AWBURST <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWBURST;
    m_axi_gmem3_AWCACHE <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWCACHE;
    m_axi_gmem3_AWID <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWID;
    m_axi_gmem3_AWLEN <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWLEN;
    m_axi_gmem3_AWLOCK <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWLOCK;
    m_axi_gmem3_AWPROT <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWPROT;
    m_axi_gmem3_AWQOS <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWQOS;
    m_axi_gmem3_AWREGION <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWREGION;
    m_axi_gmem3_AWSIZE <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWSIZE;
    m_axi_gmem3_AWUSER <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWUSER;
    m_axi_gmem3_AWVALID <= dataflow_parent_loop_proc_U0_m_axi_gmem3_AWVALID;
    m_axi_gmem3_BREADY <= dataflow_parent_loop_proc_U0_m_axi_gmem3_BREADY;
    m_axi_gmem3_RREADY <= dataflow_parent_loop_proc_U0_m_axi_gmem3_RREADY;
    m_axi_gmem3_WDATA <= dataflow_parent_loop_proc_U0_m_axi_gmem3_WDATA;
    m_axi_gmem3_WID <= dataflow_parent_loop_proc_U0_m_axi_gmem3_WID;
    m_axi_gmem3_WLAST <= dataflow_parent_loop_proc_U0_m_axi_gmem3_WLAST;
    m_axi_gmem3_WSTRB <= dataflow_parent_loop_proc_U0_m_axi_gmem3_WSTRB;
    m_axi_gmem3_WUSER <= dataflow_parent_loop_proc_U0_m_axi_gmem3_WUSER;
    m_axi_gmem3_WVALID <= dataflow_parent_loop_proc_U0_m_axi_gmem3_WVALID;
end behav;
