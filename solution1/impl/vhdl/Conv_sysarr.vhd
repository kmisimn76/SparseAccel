-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv_sysarr is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bias_in_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    bias_in_V_empty_n : IN STD_LOGIC;
    bias_in_V_read : OUT STD_LOGIC;
    weight_in_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    weight_in_V_empty_n : IN STD_LOGIC;
    weight_in_V_read : OUT STD_LOGIC;
    data_in_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    data_in_V_empty_n : IN STD_LOGIC;
    data_in_V_read : OUT STD_LOGIC;
    conv_out_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    conv_out_V_full_n : IN STD_LOGIC;
    conv_out_V_write : OUT STD_LOGIC );
end;


architecture behav of Conv_sysarr is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Conv_sysarr_Conv_sysarr,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.803000,HLS_SYN_LAT=3247,HLS_SYN_TPT=none,HLS_SYN_MEM=32,HLS_SYN_DSP=0,HLS_SYN_FF=6690,HLS_SYN_LUT=8135,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv62_0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv62_1 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal bias_in_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln150_reg_1122 : STD_LOGIC_VECTOR (0 downto 0);
    signal weight_in_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln159_reg_1151 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1151_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal data_in_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal icmp_ln172_reg_1196 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln172_reg_1196_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_out_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal icmp_ln218_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln218_reg_1235_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ko_reg_411 : STD_LOGIC_VECTOR (29 downto 0);
    signal indvar_flatten_reg_423 : STD_LOGIC_VECTOR (61 downto 0);
    signal crs_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal ko_1_reg_445 : STD_LOGIC_VECTOR (29 downto 0);
    signal indvar_flatten6_reg_456 : STD_LOGIC_VECTOR (61 downto 0);
    signal wh_reg_467 : STD_LOGIC_VECTOR (31 downto 0);
    signal co_reg_478 : STD_LOGIC_VECTOR (29 downto 0);
    signal indvar_flatten13_reg_489 : STD_LOGIC_VECTOR (61 downto 0);
    signal ko_2_reg_500 : STD_LOGIC_VECTOR (29 downto 0);
    signal wh_1_reg_511 : STD_LOGIC_VECTOR (31 downto 0);
    signal div30_cast_reg_1058 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal bias_in_V_read_1_reg_1067 : STD_LOGIC_VECTOR (255 downto 0);
    signal C_fu_563_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_reg_1072 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln135_fu_567_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln135_reg_1077 : STD_LOGIC_VECTOR (8 downto 0);
    signal WH_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal WH_reg_1082 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_in_V_read_3_reg_1089 : STD_LOGIC_VECTOR (255 downto 0);
    signal WH_in_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal WH_in_reg_1094 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln147_fu_579_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln147_reg_1100 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln147_fu_583_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln147_reg_1105 : STD_LOGIC_VECTOR (8 downto 0);
    signal RS_fu_587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal RS_reg_1110 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln145_fu_591_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln145_reg_1117 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln150_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln150_fu_600_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln150_reg_1126 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_fu_652_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal trunc_ln159_fu_660_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln159_reg_1136 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal cast1_fu_668_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal cast1_reg_1141 : STD_LOGIC_VECTOR (61 downto 0);
    signal bound_fu_671_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal bound_reg_1146 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln159_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln159_reg_1151_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln159_fu_682_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln159_1_fu_707_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln159_1_reg_1160 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln159_1_fu_715_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln159_1_reg_1165 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln159_1_reg_1165_pp1_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln161_fu_723_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_69_fu_778_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_69_reg_1180 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal div76_cast_fu_782_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal div76_cast_reg_1185 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound4_fu_799_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal bound4_reg_1191 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln172_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state15_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state16_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state18_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln172_reg_1196_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln172_fu_810_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln172_1_fu_835_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln172_1_reg_1205 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln172_fu_843_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln172_reg_1210 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln172_reg_1210_pp2_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln174_fu_851_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_71_fu_902_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_71_reg_1225 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal bound11_fu_909_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal bound11_reg_1230 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln218_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state21_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state22_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state23_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state24_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state25_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln218_reg_1235_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln218_reg_1235_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln218_fu_919_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal icmp_ln220_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln220_reg_1244 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln220_reg_1244_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln218_fu_930_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln218_reg_1249 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln218_reg_1249_pp3_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln218_reg_1249_pp3_iter2_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln220_fu_942_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln218_1_fu_954_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln218_1_reg_1264 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state6 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state15 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_dataflow_parent_loop_proc16_fu_522_ap_ready : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_ap_done : STD_LOGIC;
    signal ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_ready : STD_LOGIC;
    signal ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_done : STD_LOGIC;
    signal ap_block_state20_on_subcall_done : BOOLEAN;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp3_exit_iter2_state23 : STD_LOGIC;
    signal weight_l2_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal weight_l2_0_ce0 : STD_LOGIC;
    signal weight_l2_0_we0 : STD_LOGIC;
    signal weight_l2_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal weight_l2_1_ce0 : STD_LOGIC;
    signal weight_l2_1_we0 : STD_LOGIC;
    signal weight_l2_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal weight_l2_2_ce0 : STD_LOGIC;
    signal weight_l2_2_we0 : STD_LOGIC;
    signal weight_l2_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal weight_l2_3_ce0 : STD_LOGIC;
    signal weight_l2_3_we0 : STD_LOGIC;
    signal weight_l2_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal data_l2_0_ce0 : STD_LOGIC;
    signal data_l2_0_we0 : STD_LOGIC;
    signal data_l2_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal data_l2_1_ce0 : STD_LOGIC;
    signal data_l2_1_we0 : STD_LOGIC;
    signal data_l2_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal data_l2_2_ce0 : STD_LOGIC;
    signal data_l2_2_we0 : STD_LOGIC;
    signal data_l2_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal data_l2_3_ce0 : STD_LOGIC;
    signal data_l2_3_we0 : STD_LOGIC;
    signal data_l2_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bias_l1_0_ce0 : STD_LOGIC;
    signal bias_l1_0_we0 : STD_LOGIC;
    signal bias_l1_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bias_l1_1_ce0 : STD_LOGIC;
    signal bias_l1_1_we0 : STD_LOGIC;
    signal bias_l1_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bias_l1_2_ce0 : STD_LOGIC;
    signal bias_l1_2_we0 : STD_LOGIC;
    signal bias_l1_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bias_l1_3_ce0 : STD_LOGIC;
    signal bias_l1_3_we0 : STD_LOGIC;
    signal bias_l1_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_l1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_l1_0_ce0 : STD_LOGIC;
    signal output_l1_0_we0 : STD_LOGIC;
    signal output_l1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_l1_1_ce0 : STD_LOGIC;
    signal output_l1_1_we0 : STD_LOGIC;
    signal output_l1_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_l1_2_ce0 : STD_LOGIC;
    signal output_l1_2_we0 : STD_LOGIC;
    signal output_l1_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_l1_3_ce0 : STD_LOGIC;
    signal output_l1_3_we0 : STD_LOGIC;
    signal output_l1_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_ap_start : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_ap_idle : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc16_fu_522_ap_continue : STD_LOGIC;
    signal ap_phi_mux_ko_phi_fu_415_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_mux_crs_phi_fu_438_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_wh_phi_fu_471_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_wh_1_phi_fu_515_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done : STD_LOGIC := '0';
    signal ko_cast_fu_606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom67_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom93_fu_857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom136_fu_972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ko_4_cast126_fu_965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal mul45_fu_656_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_671_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound_fu_671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln161_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln159_1_fu_701_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln159_fu_693_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1036_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul74_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound4_fu_799_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound4_fu_799_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln174_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln172_1_fu_829_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln172_fu_821_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1043_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bound11_fu_909_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound11_fu_909_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln218_1_fu_948_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1050_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln226_fu_979_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln226_1_fu_989_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln226_2_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln226_3_fu_1009_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_3_fu_1013_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_2_fu_1003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_1_fu_993_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_fu_983_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_8_3_fu_1019_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_1036_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1043_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1050_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1050_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1036_ce : STD_LOGIC;
    signal grp_fu_1043_ce : STD_LOGIC;
    signal grp_fu_1050_ce : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal bound11_fu_909_p10 : STD_LOGIC_VECTOR (61 downto 0);
    signal bound4_fu_799_p00 : STD_LOGIC_VECTOR (61 downto 0);
    signal bound4_fu_799_p10 : STD_LOGIC_VECTOR (61 downto 0);
    signal bound_fu_671_p00 : STD_LOGIC_VECTOR (61 downto 0);
    signal bound_fu_671_p10 : STD_LOGIC_VECTOR (61 downto 0);

    component Conv_sysarr_dataflow_parent_loop_proc16 IS
    port (
        div30_cast124 : IN STD_LOGIC_VECTOR (29 downto 0);
        div76_cast125 : IN STD_LOGIC_VECTOR (29 downto 0);
        RS : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_l2_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_0_ce0 : OUT STD_LOGIC;
        weight_l2_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_0_we0 : OUT STD_LOGIC;
        weight_l2_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_0_ce1 : OUT STD_LOGIC;
        weight_l2_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_0_we1 : OUT STD_LOGIC;
        weight_l2_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_1_ce0 : OUT STD_LOGIC;
        weight_l2_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_1_we0 : OUT STD_LOGIC;
        weight_l2_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_1_ce1 : OUT STD_LOGIC;
        weight_l2_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_1_we1 : OUT STD_LOGIC;
        weight_l2_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_2_ce0 : OUT STD_LOGIC;
        weight_l2_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_2_we0 : OUT STD_LOGIC;
        weight_l2_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_2_ce1 : OUT STD_LOGIC;
        weight_l2_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_2_we1 : OUT STD_LOGIC;
        weight_l2_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_3_ce0 : OUT STD_LOGIC;
        weight_l2_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_3_we0 : OUT STD_LOGIC;
        weight_l2_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_3_ce1 : OUT STD_LOGIC;
        weight_l2_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_3_we1 : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (8 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (8 downto 0);
        data_l2_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_0_ce0 : OUT STD_LOGIC;
        data_l2_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_0_we0 : OUT STD_LOGIC;
        data_l2_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_0_ce1 : OUT STD_LOGIC;
        data_l2_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_0_we1 : OUT STD_LOGIC;
        data_l2_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_1_ce0 : OUT STD_LOGIC;
        data_l2_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_1_we0 : OUT STD_LOGIC;
        data_l2_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_1_ce1 : OUT STD_LOGIC;
        data_l2_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_1_we1 : OUT STD_LOGIC;
        data_l2_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_2_ce0 : OUT STD_LOGIC;
        data_l2_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_2_we0 : OUT STD_LOGIC;
        data_l2_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_2_ce1 : OUT STD_LOGIC;
        data_l2_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_2_we1 : OUT STD_LOGIC;
        data_l2_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_3_ce0 : OUT STD_LOGIC;
        data_l2_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_3_we0 : OUT STD_LOGIC;
        data_l2_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_3_ce1 : OUT STD_LOGIC;
        data_l2_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_3_we1 : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (9 downto 0);
        output_l1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_0_ce0 : OUT STD_LOGIC;
        output_l1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_0_we0 : OUT STD_LOGIC;
        output_l1_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_0_ce1 : OUT STD_LOGIC;
        output_l1_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_0_we1 : OUT STD_LOGIC;
        output_l1_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_1_ce0 : OUT STD_LOGIC;
        output_l1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1_we0 : OUT STD_LOGIC;
        output_l1_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_1_ce1 : OUT STD_LOGIC;
        output_l1_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1_we1 : OUT STD_LOGIC;
        output_l1_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_2_ce0 : OUT STD_LOGIC;
        output_l1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2_we0 : OUT STD_LOGIC;
        output_l1_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_2_ce1 : OUT STD_LOGIC;
        output_l1_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2_we1 : OUT STD_LOGIC;
        output_l1_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_3_ce0 : OUT STD_LOGIC;
        output_l1_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3_we0 : OUT STD_LOGIC;
        output_l1_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_3_ce1 : OUT STD_LOGIC;
        output_l1_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        div76_cast125_ap_vld : IN STD_LOGIC;
        RS_ap_vld : IN STD_LOGIC;
        p_read_ap_vld : IN STD_LOGIC;
        p_read1_ap_vld : IN STD_LOGIC;
        p_read2_ap_vld : IN STD_LOGIC;
        p_read3_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component Conv_sysarr_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_sysarr_mul_30ns_32ns_62_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component Conv_sysarr_mac_muladd_9s_9s_9ns_9_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component Conv_sysarr_mac_muladd_10s_10s_10ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component Conv_sysarr_weight_l2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Conv_sysarr_data_l2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Conv_sysarr_output_l1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    weight_l2_0_U : component Conv_sysarr_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_l2_0_address0,
        ce0 => weight_l2_0_ce0,
        we0 => weight_l2_0_we0,
        d0 => weight_l2_0_d0,
        q0 => weight_l2_0_q0);

    weight_l2_1_U : component Conv_sysarr_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_l2_1_address0,
        ce0 => weight_l2_1_ce0,
        we0 => weight_l2_1_we0,
        d0 => weight_l2_1_d0,
        q0 => weight_l2_1_q0);

    weight_l2_2_U : component Conv_sysarr_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_l2_2_address0,
        ce0 => weight_l2_2_ce0,
        we0 => weight_l2_2_we0,
        d0 => weight_l2_2_d0,
        q0 => weight_l2_2_q0);

    weight_l2_3_U : component Conv_sysarr_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_l2_3_address0,
        ce0 => weight_l2_3_ce0,
        we0 => weight_l2_3_we0,
        d0 => weight_l2_3_d0,
        q0 => weight_l2_3_q0);

    data_l2_0_U : component Conv_sysarr_data_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_l2_0_address0,
        ce0 => data_l2_0_ce0,
        we0 => data_l2_0_we0,
        d0 => data_l2_0_d0,
        q0 => data_l2_0_q0);

    data_l2_1_U : component Conv_sysarr_data_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_l2_1_address0,
        ce0 => data_l2_1_ce0,
        we0 => data_l2_1_we0,
        d0 => data_l2_1_d0,
        q0 => data_l2_1_q0);

    data_l2_2_U : component Conv_sysarr_data_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_l2_2_address0,
        ce0 => data_l2_2_ce0,
        we0 => data_l2_2_we0,
        d0 => data_l2_2_d0,
        q0 => data_l2_2_q0);

    data_l2_3_U : component Conv_sysarr_data_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_l2_3_address0,
        ce0 => data_l2_3_ce0,
        we0 => data_l2_3_we0,
        d0 => data_l2_3_d0,
        q0 => data_l2_3_q0);

    bias_l1_0_U : component Conv_sysarr_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_l1_0_address0,
        ce0 => bias_l1_0_ce0,
        we0 => bias_l1_0_we0,
        d0 => bias_l1_0_d0,
        q0 => bias_l1_0_q0);

    bias_l1_1_U : component Conv_sysarr_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_l1_1_address0,
        ce0 => bias_l1_1_ce0,
        we0 => bias_l1_1_we0,
        d0 => bias_l1_1_d0,
        q0 => bias_l1_1_q0);

    bias_l1_2_U : component Conv_sysarr_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_l1_2_address0,
        ce0 => bias_l1_2_ce0,
        we0 => bias_l1_2_we0,
        d0 => bias_l1_2_d0,
        q0 => bias_l1_2_q0);

    bias_l1_3_U : component Conv_sysarr_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_l1_3_address0,
        ce0 => bias_l1_3_ce0,
        we0 => bias_l1_3_we0,
        d0 => bias_l1_3_d0,
        q0 => bias_l1_3_q0);

    output_l1_0_U : component Conv_sysarr_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l1_0_address0,
        ce0 => output_l1_0_ce0,
        we0 => output_l1_0_we0,
        d0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d0,
        q0 => output_l1_0_q0);

    output_l1_1_U : component Conv_sysarr_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l1_1_address0,
        ce0 => output_l1_1_ce0,
        we0 => output_l1_1_we0,
        d0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d0,
        q0 => output_l1_1_q0);

    output_l1_2_U : component Conv_sysarr_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l1_2_address0,
        ce0 => output_l1_2_ce0,
        we0 => output_l1_2_we0,
        d0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d0,
        q0 => output_l1_2_q0);

    output_l1_3_U : component Conv_sysarr_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l1_3_address0,
        ce0 => output_l1_3_ce0,
        we0 => output_l1_3_we0,
        d0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d0,
        q0 => output_l1_3_q0);

    grp_dataflow_parent_loop_proc16_fu_522 : component Conv_sysarr_dataflow_parent_loop_proc16
    port map (
        div30_cast124 => div30_cast_reg_1058,
        div76_cast125 => div76_cast_reg_1185,
        RS => RS_reg_1110,
        weight_l2_0_address0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address0,
        weight_l2_0_ce0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce0,
        weight_l2_0_d0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_d0,
        weight_l2_0_q0 => weight_l2_0_q0,
        weight_l2_0_we0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_we0,
        weight_l2_0_address1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address1,
        weight_l2_0_ce1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce1,
        weight_l2_0_d1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_d1,
        weight_l2_0_q1 => ap_const_lv8_0,
        weight_l2_0_we1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_we1,
        weight_l2_1_address0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address0,
        weight_l2_1_ce0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce0,
        weight_l2_1_d0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_d0,
        weight_l2_1_q0 => weight_l2_1_q0,
        weight_l2_1_we0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_we0,
        weight_l2_1_address1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address1,
        weight_l2_1_ce1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce1,
        weight_l2_1_d1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_d1,
        weight_l2_1_q1 => ap_const_lv8_0,
        weight_l2_1_we1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_we1,
        weight_l2_2_address0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address0,
        weight_l2_2_ce0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce0,
        weight_l2_2_d0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_d0,
        weight_l2_2_q0 => weight_l2_2_q0,
        weight_l2_2_we0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_we0,
        weight_l2_2_address1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address1,
        weight_l2_2_ce1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce1,
        weight_l2_2_d1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_d1,
        weight_l2_2_q1 => ap_const_lv8_0,
        weight_l2_2_we1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_we1,
        weight_l2_3_address0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address0,
        weight_l2_3_ce0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce0,
        weight_l2_3_d0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_d0,
        weight_l2_3_q0 => weight_l2_3_q0,
        weight_l2_3_we0 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_we0,
        weight_l2_3_address1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address1,
        weight_l2_3_ce1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce1,
        weight_l2_3_d1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_d1,
        weight_l2_3_q1 => ap_const_lv8_0,
        weight_l2_3_we1 => grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_we1,
        p_read => trunc_ln135_reg_1077,
        p_read1 => trunc_ln145_reg_1117,
        data_l2_0_address0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address0,
        data_l2_0_ce0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce0,
        data_l2_0_d0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_d0,
        data_l2_0_q0 => data_l2_0_q0,
        data_l2_0_we0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_we0,
        data_l2_0_address1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address1,
        data_l2_0_ce1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce1,
        data_l2_0_d1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_d1,
        data_l2_0_q1 => ap_const_lv8_0,
        data_l2_0_we1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_we1,
        data_l2_1_address0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address0,
        data_l2_1_ce0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce0,
        data_l2_1_d0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_d0,
        data_l2_1_q0 => data_l2_1_q0,
        data_l2_1_we0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_we0,
        data_l2_1_address1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address1,
        data_l2_1_ce1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce1,
        data_l2_1_d1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_d1,
        data_l2_1_q1 => ap_const_lv8_0,
        data_l2_1_we1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_we1,
        data_l2_2_address0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address0,
        data_l2_2_ce0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce0,
        data_l2_2_d0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_d0,
        data_l2_2_q0 => data_l2_2_q0,
        data_l2_2_we0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_we0,
        data_l2_2_address1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address1,
        data_l2_2_ce1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce1,
        data_l2_2_d1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_d1,
        data_l2_2_q1 => ap_const_lv8_0,
        data_l2_2_we1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_we1,
        data_l2_3_address0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address0,
        data_l2_3_ce0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce0,
        data_l2_3_d0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_d0,
        data_l2_3_q0 => data_l2_3_q0,
        data_l2_3_we0 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_we0,
        data_l2_3_address1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address1,
        data_l2_3_ce1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce1,
        data_l2_3_d1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_d1,
        data_l2_3_q1 => ap_const_lv8_0,
        data_l2_3_we1 => grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_we1,
        p_read2 => WH_reg_1082,
        p_read3 => empty_71_reg_1225,
        output_l1_0_address0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address0,
        output_l1_0_ce0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce0,
        output_l1_0_d0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d0,
        output_l1_0_q0 => ap_const_lv32_0,
        output_l1_0_we0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we0,
        output_l1_0_address1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address1,
        output_l1_0_ce1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce1,
        output_l1_0_d1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d1,
        output_l1_0_q1 => ap_const_lv32_0,
        output_l1_0_we1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we1,
        output_l1_1_address0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address0,
        output_l1_1_ce0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce0,
        output_l1_1_d0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d0,
        output_l1_1_q0 => ap_const_lv32_0,
        output_l1_1_we0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we0,
        output_l1_1_address1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address1,
        output_l1_1_ce1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce1,
        output_l1_1_d1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d1,
        output_l1_1_q1 => ap_const_lv32_0,
        output_l1_1_we1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we1,
        output_l1_2_address0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address0,
        output_l1_2_ce0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce0,
        output_l1_2_d0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d0,
        output_l1_2_q0 => ap_const_lv32_0,
        output_l1_2_we0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we0,
        output_l1_2_address1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address1,
        output_l1_2_ce1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce1,
        output_l1_2_d1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d1,
        output_l1_2_q1 => ap_const_lv32_0,
        output_l1_2_we1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we1,
        output_l1_3_address0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address0,
        output_l1_3_ce0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce0,
        output_l1_3_d0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d0,
        output_l1_3_q0 => ap_const_lv32_0,
        output_l1_3_we0 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we0,
        output_l1_3_address1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address1,
        output_l1_3_ce1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce1,
        output_l1_3_d1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d1,
        output_l1_3_q1 => ap_const_lv32_0,
        output_l1_3_we1 => grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        div76_cast125_ap_vld => ap_const_logic_1,
        RS_ap_vld => ap_const_logic_1,
        p_read_ap_vld => ap_const_logic_1,
        p_read1_ap_vld => ap_const_logic_1,
        p_read2_ap_vld => ap_const_logic_1,
        p_read3_ap_vld => ap_const_logic_1,
        ap_start => grp_dataflow_parent_loop_proc16_fu_522_ap_start,
        ap_done => grp_dataflow_parent_loop_proc16_fu_522_ap_done,
        ap_ready => grp_dataflow_parent_loop_proc16_fu_522_ap_ready,
        ap_idle => grp_dataflow_parent_loop_proc16_fu_522_ap_idle,
        ap_continue => grp_dataflow_parent_loop_proc16_fu_522_ap_continue);

    mul_32s_32s_32_1_1_U282 : component Conv_sysarr_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => WH_reg_1082,
        din1 => WH_reg_1082,
        dout => mul_ln147_fu_579_p2);

    mul_32s_32s_32_1_1_U283 : component Conv_sysarr_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => C_reg_1072,
        din1 => RS_reg_1110,
        dout => tmp_fu_652_p2);

    mul_32s_32s_32_1_1_U284 : component Conv_sysarr_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_reg_1131,
        din1 => RS_reg_1110,
        dout => mul45_fu_656_p2);

    mul_30ns_32ns_62_1_1_U285 : component Conv_sysarr_mul_30ns_32ns_62_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 32,
        dout_WIDTH => 62)
    port map (
        din0 => bound_fu_671_p0,
        din1 => bound_fu_671_p1,
        dout => bound_fu_671_p2);

    mul_32s_32s_32_1_1_U286 : component Conv_sysarr_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => WH_in_reg_1094,
        din1 => WH_in_reg_1094,
        dout => mul74_fu_774_p2);

    mul_30ns_32ns_62_1_1_U287 : component Conv_sysarr_mul_30ns_32ns_62_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 32,
        dout_WIDTH => 62)
    port map (
        din0 => bound4_fu_799_p0,
        din1 => bound4_fu_799_p1,
        dout => bound4_fu_799_p2);

    mul_30ns_32ns_62_1_1_U288 : component Conv_sysarr_mul_30ns_32ns_62_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 32,
        dout_WIDTH => 62)
    port map (
        din0 => bound11_fu_909_p0,
        din1 => bound11_fu_909_p1,
        dout => bound11_fu_909_p2);

    mac_muladd_9s_9s_9ns_9_4_1_U289 : component Conv_sysarr_mac_muladd_9s_9s_9ns_9_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1036_p0,
        din1 => trunc_ln159_reg_1136,
        din2 => trunc_ln159_1_reg_1165_pp1_iter1_reg,
        ce => grp_fu_1036_ce,
        dout => grp_fu_1036_p3);

    mac_muladd_10s_10s_10ns_10_4_1_U290 : component Conv_sysarr_mac_muladd_10s_10s_10ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1043_p0,
        din1 => empty_69_reg_1180,
        din2 => trunc_ln172_reg_1210_pp2_iter1_reg,
        ce => grp_fu_1043_ce,
        dout => grp_fu_1043_p3);

    mac_muladd_9s_9s_9ns_9_4_1_U291 : component Conv_sysarr_mac_muladd_9s_9s_9ns_9_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1050_p0,
        din1 => trunc_ln147_reg_1105,
        din2 => grp_fu_1050_p2,
        ce => grp_fu_1050_ce,
        dout => grp_fu_1050_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state6);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state15) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state15)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state15);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp3_flush_enable)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter2_state23)) then 
                        ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                elsif (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done <= ap_const_logic_0;
                elsif ((grp_dataflow_parent_loop_proc16_fu_522_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready <= ap_const_logic_0;
                elsif ((grp_dataflow_parent_loop_proc16_fu_522_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
                    grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_parent_loop_proc16_fu_522_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    co_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln172_fu_805_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                co_reg_478 <= add_ln174_fu_851_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                co_reg_478 <= ap_const_lv30_0;
            end if; 
        end if;
    end process;

    crs_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln159_reg_1151 = ap_const_lv1_0))) then 
                crs_reg_434 <= select_ln159_1_reg_1160;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                crs_reg_434 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln218_fu_914_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                indvar_flatten13_reg_489 <= add_ln218_fu_919_p2;
            elsif (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                indvar_flatten13_reg_489 <= ap_const_lv62_0;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln172_fu_805_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                indvar_flatten6_reg_456 <= add_ln172_fu_810_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                indvar_flatten6_reg_456 <= ap_const_lv62_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_423_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln159_fu_677_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                indvar_flatten_reg_423 <= add_ln159_fu_682_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten_reg_423 <= ap_const_lv62_0;
            end if; 
        end if;
    end process;

    ko_1_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln159_fu_677_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                ko_1_reg_445 <= add_ln161_fu_723_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                ko_1_reg_445 <= ap_const_lv30_0;
            end if; 
        end if;
    end process;

    ko_2_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln218_fu_914_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                ko_2_reg_500 <= add_ln220_fu_942_p2;
            elsif (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                ko_2_reg_500 <= ap_const_lv30_0;
            end if; 
        end if;
    end process;

    ko_reg_411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ko_reg_411 <= ap_const_lv30_0;
            elsif (((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ko_reg_411 <= add_ln150_reg_1126;
            end if; 
        end if;
    end process;

    wh_1_reg_511_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (icmp_ln218_reg_1235_pp3_iter2_reg = ap_const_lv1_0))) then 
                wh_1_reg_511 <= select_ln218_1_reg_1264;
            elsif (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                wh_1_reg_511 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    wh_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln172_reg_1196 = ap_const_lv1_0))) then 
                wh_reg_467 <= select_ln172_1_reg_1205;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                wh_reg_467 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                C_reg_1072 <= C_fu_563_p1;
                bias_in_V_read_1_reg_1067 <= bias_in_V_dout;
                trunc_ln135_reg_1077 <= trunc_ln135_fu_567_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                RS_reg_1110 <= RS_fu_587_p1;
                mul_ln147_reg_1100 <= mul_ln147_fu_579_p2;
                trunc_ln145_reg_1117 <= trunc_ln145_fu_591_p1;
                trunc_ln147_reg_1105 <= trunc_ln147_fu_583_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                WH_in_reg_1094 <= WH_in_fu_575_p1;
                bias_in_V_read_3_reg_1089 <= bias_in_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                WH_reg_1082 <= WH_fu_571_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln150_reg_1126 <= add_ln150_fu_600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                bound11_reg_1230 <= bound11_fu_909_p2;
                empty_71_reg_1225 <= empty_71_fu_902_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                bound4_reg_1191 <= bound4_fu_799_p2;
                div76_cast_reg_1185 <= bias_in_V_read_1_reg_1067(31 downto 2);
                empty_69_reg_1180 <= empty_69_fu_778_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                bound_reg_1146 <= bound_fu_671_p2;
                    cast1_reg_1141(29 downto 0) <= cast1_fu_668_p1(29 downto 0);
                trunc_ln159_reg_1136 <= trunc_ln159_fu_660_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((bias_in_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                div30_cast_reg_1058 <= bias_in_V_dout(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln150_reg_1122 <= icmp_ln150_fu_595_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln159_reg_1151 <= icmp_ln159_fu_677_p2;
                icmp_ln159_reg_1151_pp1_iter1_reg <= icmp_ln159_reg_1151;
                trunc_ln159_1_reg_1165_pp1_iter1_reg <= trunc_ln159_1_reg_1165;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln159_reg_1151_pp1_iter2_reg <= icmp_ln159_reg_1151_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln172_reg_1196 <= icmp_ln172_fu_805_p2;
                icmp_ln172_reg_1196_pp2_iter1_reg <= icmp_ln172_reg_1196;
                trunc_ln172_reg_1210_pp2_iter1_reg <= trunc_ln172_reg_1210;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                icmp_ln172_reg_1196_pp2_iter2_reg <= icmp_ln172_reg_1196_pp2_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln218_reg_1235 <= icmp_ln218_fu_914_p2;
                icmp_ln218_reg_1235_pp3_iter1_reg <= icmp_ln218_reg_1235;
                icmp_ln220_reg_1244_pp3_iter1_reg <= icmp_ln220_reg_1244;
                select_ln218_reg_1249_pp3_iter1_reg <= select_ln218_reg_1249;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln218_reg_1235_pp3_iter2_reg <= icmp_ln218_reg_1235_pp3_iter1_reg;
                icmp_ln218_reg_1235_pp3_iter3_reg <= icmp_ln218_reg_1235_pp3_iter2_reg;
                select_ln218_reg_1249_pp3_iter2_reg <= select_ln218_reg_1249_pp3_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln218_fu_914_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln220_reg_1244 <= icmp_ln220_fu_925_p2;
                select_ln218_reg_1249 <= select_ln218_fu_930_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln159_fu_677_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                select_ln159_1_reg_1160 <= select_ln159_1_fu_707_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln172_fu_805_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln172_1_reg_1205 <= select_ln172_1_fu_835_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln218_reg_1235_pp3_iter1_reg = ap_const_lv1_0))) then
                select_ln218_1_reg_1264 <= select_ln218_1_fu_954_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                tmp_reg_1131 <= tmp_fu_652_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln159_fu_677_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln159_1_reg_1165 <= trunc_ln159_1_fu_715_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln172_fu_805_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                trunc_ln172_reg_1210 <= trunc_ln172_fu_843_p1;
            end if;
        end if;
    end process;
    cast1_reg_1141(61 downto 30) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, bias_in_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_enable_reg_pp1_iter3, ap_enable_reg_pp2_iter3, ap_enable_reg_pp3_iter4, icmp_ln150_fu_595_p2, ap_enable_reg_pp0_iter0, icmp_ln159_fu_677_p2, ap_enable_reg_pp1_iter0, icmp_ln172_fu_805_p2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_CS_fsm_state20, ap_block_state20_on_subcall_done, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((bias_in_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln150_fu_595_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln150_fu_595_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln159_fu_677_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln159_fu_677_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln172_fu_805_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln172_fu_805_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    C_fu_563_p1 <= bias_in_V_dout(32 - 1 downto 0);
    RS_fu_587_p1 <= bias_in_V_dout(32 - 1 downto 0);
    WH_fu_571_p1 <= bias_in_V_dout(32 - 1 downto 0);
    WH_in_fu_575_p1 <= bias_in_V_dout(32 - 1 downto 0);
    add_ln150_fu_600_p2 <= std_logic_vector(unsigned(ap_phi_mux_ko_phi_fu_415_p4) + unsigned(ap_const_lv30_1));
    add_ln159_1_fu_701_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_crs_phi_fu_438_p4));
    add_ln159_fu_682_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_423) + unsigned(ap_const_lv62_1));
    add_ln161_fu_723_p2 <= std_logic_vector(unsigned(ap_const_lv30_1) + unsigned(select_ln159_fu_693_p3));
    add_ln172_1_fu_829_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_wh_phi_fu_471_p4));
    add_ln172_fu_810_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_456) + unsigned(ap_const_lv62_1));
    add_ln174_fu_851_p2 <= std_logic_vector(unsigned(ap_const_lv30_1) + unsigned(select_ln172_fu_821_p3));
    add_ln218_1_fu_948_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_wh_1_phi_fu_515_p4));
    add_ln218_fu_919_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_489) + unsigned(ap_const_lv62_1));
    add_ln220_fu_942_p2 <= std_logic_vector(unsigned(ap_const_lv30_1) + unsigned(select_ln218_fu_930_p3));
    add_ln226_1_fu_993_p2 <= std_logic_vector(unsigned(output_l1_1_q0) + unsigned(sext_ln226_1_fu_989_p1));
    add_ln226_2_fu_1003_p2 <= std_logic_vector(unsigned(output_l1_2_q0) + unsigned(sext_ln226_2_fu_999_p1));
    add_ln226_3_fu_1013_p2 <= std_logic_vector(unsigned(output_l1_3_q0) + unsigned(sext_ln226_3_fu_1009_p1));
    add_ln226_fu_983_p2 <= std_logic_vector(unsigned(output_l1_0_q0) + unsigned(sext_ln226_fu_979_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(9);
    ap_CS_fsm_state19 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(12);
    ap_CS_fsm_state26 <= ap_CS_fsm(14);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(bias_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln150_reg_1122)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (bias_in_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(bias_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln150_reg_1122)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (bias_in_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(weight_in_V_empty_n, ap_enable_reg_pp1_iter3, icmp_ln159_reg_1151_pp1_iter2_reg)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (weight_in_V_empty_n = ap_const_logic_0) and (icmp_ln159_reg_1151_pp1_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(weight_in_V_empty_n, ap_enable_reg_pp1_iter3, icmp_ln159_reg_1151_pp1_iter2_reg)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (weight_in_V_empty_n = ap_const_logic_0) and (icmp_ln159_reg_1151_pp1_iter2_reg = ap_const_lv1_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(data_in_V_empty_n, ap_enable_reg_pp2_iter3, icmp_ln172_reg_1196_pp2_iter2_reg)
    begin
                ap_block_pp2_stage0_11001 <= ((data_in_V_empty_n = ap_const_logic_0) and (icmp_ln172_reg_1196_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(data_in_V_empty_n, ap_enable_reg_pp2_iter3, icmp_ln172_reg_1196_pp2_iter2_reg)
    begin
                ap_block_pp2_stage0_subdone <= ((data_in_V_empty_n = ap_const_logic_0) and (icmp_ln172_reg_1196_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(conv_out_V_full_n, ap_enable_reg_pp3_iter4, icmp_ln218_reg_1235_pp3_iter3_reg)
    begin
                ap_block_pp3_stage0_01001 <= ((conv_out_V_full_n = ap_const_logic_0) and (icmp_ln218_reg_1235_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(conv_out_V_full_n, ap_enable_reg_pp3_iter4, icmp_ln218_reg_1235_pp3_iter3_reg)
    begin
                ap_block_pp3_stage0_11001 <= ((conv_out_V_full_n = ap_const_logic_0) and (icmp_ln218_reg_1235_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(conv_out_V_full_n, ap_enable_reg_pp3_iter4, icmp_ln218_reg_1235_pp3_iter3_reg)
    begin
                ap_block_pp3_stage0_subdone <= ((conv_out_V_full_n = ap_const_logic_0) and (icmp_ln218_reg_1235_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, bias_in_V_empty_n)
    begin
                ap_block_state1 <= ((bias_in_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp1_stage0_iter3_assign_proc : process(weight_in_V_empty_n, icmp_ln159_reg_1151_pp1_iter2_reg)
    begin
                ap_block_state13_pp1_stage0_iter3 <= ((weight_in_V_empty_n = ap_const_logic_0) and (icmp_ln159_reg_1151_pp1_iter2_reg = ap_const_lv1_0));
    end process;

        ap_block_state15_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp2_stage0_iter3_assign_proc : process(data_in_V_empty_n, icmp_ln172_reg_1196_pp2_iter2_reg)
    begin
                ap_block_state18_pp2_stage0_iter3 <= ((data_in_V_empty_n = ap_const_logic_0) and (icmp_ln172_reg_1196_pp2_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_state20_on_subcall_done_assign_proc : process(ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_ready, ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_done)
    begin
                ap_block_state20_on_subcall_done <= ((ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_ready and ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_done) = ap_const_logic_0);
    end process;

        ap_block_state21_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state25_pp3_stage0_iter4_assign_proc : process(conv_out_V_full_n, icmp_ln218_reg_1235_pp3_iter3_reg)
    begin
                ap_block_state25_pp3_stage0_iter4 <= ((conv_out_V_full_n = ap_const_logic_0) and (icmp_ln218_reg_1235_pp3_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter1_assign_proc : process(bias_in_V_empty_n, icmp_ln150_reg_1122)
    begin
                ap_block_state7_pp0_stage0_iter1 <= ((icmp_ln150_reg_1122 = ap_const_lv1_0) and (bias_in_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state6_assign_proc : process(icmp_ln150_fu_595_p2)
    begin
        if ((icmp_ln150_fu_595_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state10_assign_proc : process(icmp_ln159_fu_677_p2)
    begin
        if ((icmp_ln159_fu_677_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state15_assign_proc : process(icmp_ln172_fu_805_p2)
    begin
        if ((icmp_ln172_fu_805_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state15 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter2_state23_assign_proc : process(ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            ap_condition_pp3_exit_iter2_state23 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter2_state23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_flush_enable_assign_proc : process(icmp_ln218_fu_914_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln218_fu_914_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_condition_pp3_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp3_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_crs_phi_fu_438_p4_assign_proc : process(ap_block_pp1_stage0, icmp_ln159_reg_1151, crs_reg_434, ap_CS_fsm_pp1_stage0, select_ln159_1_reg_1160, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln159_reg_1151 = ap_const_lv1_0))) then 
            ap_phi_mux_crs_phi_fu_438_p4 <= select_ln159_1_reg_1160;
        else 
            ap_phi_mux_crs_phi_fu_438_p4 <= crs_reg_434;
        end if; 
    end process;


    ap_phi_mux_ko_phi_fu_415_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln150_reg_1122, ko_reg_411, add_ln150_reg_1126)
    begin
        if (((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_ko_phi_fu_415_p4 <= add_ln150_reg_1126;
        else 
            ap_phi_mux_ko_phi_fu_415_p4 <= ko_reg_411;
        end if; 
    end process;


    ap_phi_mux_wh_1_phi_fu_515_p4_assign_proc : process(ap_block_pp3_stage0, wh_1_reg_511, icmp_ln218_reg_1235_pp3_iter2_reg, select_ln218_1_reg_1264, ap_enable_reg_pp3_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (icmp_ln218_reg_1235_pp3_iter2_reg = ap_const_lv1_0))) then 
            ap_phi_mux_wh_1_phi_fu_515_p4 <= select_ln218_1_reg_1264;
        else 
            ap_phi_mux_wh_1_phi_fu_515_p4 <= wh_1_reg_511;
        end if; 
    end process;


    ap_phi_mux_wh_phi_fu_471_p4_assign_proc : process(ap_block_pp2_stage0, icmp_ln172_reg_1196, wh_reg_467, ap_CS_fsm_pp2_stage0, select_ln172_1_reg_1205, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln172_reg_1196 = ap_const_lv1_0))) then 
            ap_phi_mux_wh_phi_fu_471_p4 <= select_ln172_1_reg_1205;
        else 
            ap_phi_mux_wh_phi_fu_471_p4 <= wh_reg_467;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_done <= (grp_dataflow_parent_loop_proc16_fu_522_ap_done or ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done);
    ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_ready <= (grp_dataflow_parent_loop_proc16_fu_522_ap_ready or ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready);

    bias_in_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, bias_in_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln150_reg_1122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            bias_in_V_blk_n <= bias_in_V_empty_n;
        else 
            bias_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bias_in_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, bias_in_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln150_reg_1122, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((bias_in_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            bias_in_V_read <= ap_const_logic_1;
        else 
            bias_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp3_stage0, ap_enable_reg_pp3_iter3, ko_cast_fu_606_p1, ko_4_cast126_fu_965_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            bias_l1_0_address0 <= ko_4_cast126_fu_965_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_0_address0 <= ko_cast_fu_606_p1(9 - 1 downto 0);
        else 
            bias_l1_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    bias_l1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_l1_0_ce0 <= ap_const_logic_1;
        else 
            bias_l1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_l1_0_d0 <= bias_in_V_dout(8 - 1 downto 0);

    bias_l1_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln150_reg_1122, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_0_we0 <= ap_const_logic_1;
        else 
            bias_l1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp3_stage0, ap_enable_reg_pp3_iter3, ko_cast_fu_606_p1, ko_4_cast126_fu_965_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            bias_l1_1_address0 <= ko_4_cast126_fu_965_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_1_address0 <= ko_cast_fu_606_p1(9 - 1 downto 0);
        else 
            bias_l1_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    bias_l1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_l1_1_ce0 <= ap_const_logic_1;
        else 
            bias_l1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_l1_1_d0 <= bias_in_V_dout(15 downto 8);

    bias_l1_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln150_reg_1122, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_1_we0 <= ap_const_logic_1;
        else 
            bias_l1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp3_stage0, ap_enable_reg_pp3_iter3, ko_cast_fu_606_p1, ko_4_cast126_fu_965_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            bias_l1_2_address0 <= ko_4_cast126_fu_965_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_2_address0 <= ko_cast_fu_606_p1(9 - 1 downto 0);
        else 
            bias_l1_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    bias_l1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_l1_2_ce0 <= ap_const_logic_1;
        else 
            bias_l1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_l1_2_d0 <= bias_in_V_dout(23 downto 16);

    bias_l1_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln150_reg_1122, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_2_we0 <= ap_const_logic_1;
        else 
            bias_l1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp3_stage0, ap_enable_reg_pp3_iter3, ko_cast_fu_606_p1, ko_4_cast126_fu_965_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            bias_l1_3_address0 <= ko_4_cast126_fu_965_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_3_address0 <= ko_cast_fu_606_p1(9 - 1 downto 0);
        else 
            bias_l1_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    bias_l1_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_l1_3_ce0 <= ap_const_logic_1;
        else 
            bias_l1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_l1_3_d0 <= bias_in_V_dout(31 downto 24);

    bias_l1_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln150_reg_1122, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln150_reg_1122 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_3_we0 <= ap_const_logic_1;
        else 
            bias_l1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bound11_fu_909_p0 <= cast1_reg_1141(30 - 1 downto 0);
    bound11_fu_909_p1 <= bound11_fu_909_p10(32 - 1 downto 0);
    bound11_fu_909_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln147_reg_1100),62));
    bound4_fu_799_p0 <= bound4_fu_799_p00(30 - 1 downto 0);
    bound4_fu_799_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div76_cast_fu_782_p4),62));
    bound4_fu_799_p1 <= bound4_fu_799_p10(32 - 1 downto 0);
    bound4_fu_799_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul74_fu_774_p2),62));
    bound_fu_671_p0 <= bound_fu_671_p00(30 - 1 downto 0);
    bound_fu_671_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div30_cast_reg_1058),62));
    bound_fu_671_p1 <= bound_fu_671_p10(32 - 1 downto 0);
    bound_fu_671_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul45_fu_656_p2),62));
    cast1_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div30_cast_reg_1058),62));

    conv_out_V_blk_n_assign_proc : process(conv_out_V_full_n, ap_enable_reg_pp3_iter4, ap_block_pp3_stage0, icmp_ln218_reg_1235_pp3_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (icmp_ln218_reg_1235_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))) then 
            conv_out_V_blk_n <= conv_out_V_full_n;
        else 
            conv_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    conv_out_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_8_3_fu_1019_p5),256));

    conv_out_V_write_assign_proc : process(ap_enable_reg_pp3_iter4, icmp_ln218_reg_1235_pp3_iter3_reg, ap_block_pp3_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln218_reg_1235_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))) then 
            conv_out_V_write <= ap_const_logic_1;
        else 
            conv_out_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_in_V_blk_n_assign_proc : process(data_in_V_empty_n, ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, icmp_ln172_reg_1196_pp2_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln172_reg_1196_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_in_V_blk_n <= data_in_V_empty_n;
        else 
            data_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_in_V_read_assign_proc : process(ap_enable_reg_pp2_iter3, icmp_ln172_reg_1196_pp2_iter2_reg, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln172_reg_1196_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_in_V_read <= ap_const_logic_1;
        else 
            data_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_0_address0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address0, idxprom93_fu_857_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_0_address0 <= idxprom93_fu_857_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_l2_0_address0 <= grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address0;
        else 
            data_l2_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    data_l2_0_ce0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_l2_0_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce0;
        else 
            data_l2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    data_l2_0_d0 <= data_in_V_dout(8 - 1 downto 0);

    data_l2_0_we0_assign_proc : process(ap_enable_reg_pp2_iter3, icmp_ln172_reg_1196_pp2_iter2_reg, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln172_reg_1196_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_0_we0 <= ap_const_logic_1;
        else 
            data_l2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_1_address0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address0, idxprom93_fu_857_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_1_address0 <= idxprom93_fu_857_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_l2_1_address0 <= grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address0;
        else 
            data_l2_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    data_l2_1_ce0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_l2_1_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce0;
        else 
            data_l2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    data_l2_1_d0 <= data_in_V_dout(15 downto 8);

    data_l2_1_we0_assign_proc : process(ap_enable_reg_pp2_iter3, icmp_ln172_reg_1196_pp2_iter2_reg, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln172_reg_1196_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_1_we0 <= ap_const_logic_1;
        else 
            data_l2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_2_address0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address0, idxprom93_fu_857_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_2_address0 <= idxprom93_fu_857_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_l2_2_address0 <= grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address0;
        else 
            data_l2_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    data_l2_2_ce0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_l2_2_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce0;
        else 
            data_l2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    data_l2_2_d0 <= data_in_V_dout(23 downto 16);

    data_l2_2_we0_assign_proc : process(ap_enable_reg_pp2_iter3, icmp_ln172_reg_1196_pp2_iter2_reg, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln172_reg_1196_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_2_we0 <= ap_const_logic_1;
        else 
            data_l2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_3_address0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address0, idxprom93_fu_857_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_3_address0 <= idxprom93_fu_857_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_l2_3_address0 <= grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address0;
        else 
            data_l2_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    data_l2_3_ce0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_l2_3_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce0;
        else 
            data_l2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    data_l2_3_d0 <= data_in_V_dout(31 downto 24);

    data_l2_3_we0_assign_proc : process(ap_enable_reg_pp2_iter3, icmp_ln172_reg_1196_pp2_iter2_reg, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln172_reg_1196_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            data_l2_3_we0 <= ap_const_logic_1;
        else 
            data_l2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    div76_cast_fu_782_p4 <= bias_in_V_read_1_reg_1067(31 downto 2);
    empty_69_fu_778_p1 <= mul74_fu_774_p2(10 - 1 downto 0);
    empty_71_fu_902_p1 <= bias_in_V_read_3_reg_1089(10 - 1 downto 0);

    grp_dataflow_parent_loop_proc16_fu_522_ap_continue_assign_proc : process(ap_CS_fsm_state20, ap_block_state20_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_dataflow_parent_loop_proc16_fu_522_ap_continue <= ap_const_logic_1;
        else 
            grp_dataflow_parent_loop_proc16_fu_522_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_dataflow_parent_loop_proc16_fu_522_ap_start <= grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg;

    grp_fu_1036_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1036_ce <= ap_const_logic_1;
        else 
            grp_fu_1036_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1036_p0 <= select_ln159_fu_693_p3(9 - 1 downto 0);

    grp_fu_1043_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1043_ce <= ap_const_logic_1;
        else 
            grp_fu_1043_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1043_p0 <= select_ln172_fu_821_p3(10 - 1 downto 0);

    grp_fu_1050_ce_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_fu_1050_ce <= ap_const_logic_1;
        else 
            grp_fu_1050_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1050_p0 <= select_ln218_fu_930_p3(9 - 1 downto 0);
    grp_fu_1050_p2 <= select_ln218_1_fu_954_p3(9 - 1 downto 0);
    icmp_ln150_fu_595_p2 <= "1" when (ap_phi_mux_ko_phi_fu_415_p4 = div30_cast_reg_1058) else "0";
    icmp_ln159_fu_677_p2 <= "1" when (indvar_flatten_reg_423 = bound_reg_1146) else "0";
    icmp_ln161_fu_688_p2 <= "1" when (ko_1_reg_445 = div30_cast_reg_1058) else "0";
    icmp_ln172_fu_805_p2 <= "1" when (indvar_flatten6_reg_456 = bound4_reg_1191) else "0";
    icmp_ln174_fu_816_p2 <= "1" when (co_reg_478 = div76_cast_reg_1185) else "0";
    icmp_ln218_fu_914_p2 <= "1" when (indvar_flatten13_reg_489 = bound11_reg_1230) else "0";
    icmp_ln220_fu_925_p2 <= "1" when (ko_2_reg_500 = div30_cast_reg_1058) else "0";
    idxprom136_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1050_p3),64));
    idxprom67_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1036_p3),64));
    idxprom93_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1043_p3),64));
    ko_4_cast126_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln218_reg_1249_pp3_iter2_reg),64));
    ko_cast_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ko_reg_411),64));

    output_l1_0_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_state20, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address0, idxprom136_fu_972_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            output_l1_0_address0 <= idxprom136_fu_972_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_0_address0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address0;
        else 
            output_l1_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    output_l1_0_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_state20, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            output_l1_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_0_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce0;
        else 
            output_l1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_0_we0_assign_proc : process(ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_0_we0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we0;
        else 
            output_l1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_1_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_state20, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address0, idxprom136_fu_972_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            output_l1_1_address0 <= idxprom136_fu_972_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_1_address0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address0;
        else 
            output_l1_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    output_l1_1_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_state20, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            output_l1_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_1_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce0;
        else 
            output_l1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_1_we0_assign_proc : process(ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_1_we0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we0;
        else 
            output_l1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_2_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_state20, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address0, idxprom136_fu_972_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            output_l1_2_address0 <= idxprom136_fu_972_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_2_address0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address0;
        else 
            output_l1_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    output_l1_2_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_state20, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            output_l1_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_2_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce0;
        else 
            output_l1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_2_we0_assign_proc : process(ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_2_we0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we0;
        else 
            output_l1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_3_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_state20, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address0, idxprom136_fu_972_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            output_l1_3_address0 <= idxprom136_fu_972_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_3_address0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address0;
        else 
            output_l1_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    output_l1_3_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_state20, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            output_l1_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_3_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce0;
        else 
            output_l1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_3_we0_assign_proc : process(ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_l1_3_we0 <= grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we0;
        else 
            output_l1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_8_3_fu_1019_p5 <= (((add_ln226_3_fu_1013_p2 & add_ln226_2_fu_1003_p2) & add_ln226_1_fu_993_p2) & add_ln226_fu_983_p2);
    select_ln159_1_fu_707_p3 <= 
        add_ln159_1_fu_701_p2 when (icmp_ln161_fu_688_p2(0) = '1') else 
        ap_phi_mux_crs_phi_fu_438_p4;
    select_ln159_fu_693_p3 <= 
        ap_const_lv30_0 when (icmp_ln161_fu_688_p2(0) = '1') else 
        ko_1_reg_445;
    select_ln172_1_fu_835_p3 <= 
        add_ln172_1_fu_829_p2 when (icmp_ln174_fu_816_p2(0) = '1') else 
        ap_phi_mux_wh_phi_fu_471_p4;
    select_ln172_fu_821_p3 <= 
        ap_const_lv30_0 when (icmp_ln174_fu_816_p2(0) = '1') else 
        co_reg_478;
    select_ln218_1_fu_954_p3 <= 
        add_ln218_1_fu_948_p2 when (icmp_ln220_reg_1244_pp3_iter1_reg(0) = '1') else 
        ap_phi_mux_wh_1_phi_fu_515_p4;
    select_ln218_fu_930_p3 <= 
        ap_const_lv30_0 when (icmp_ln220_fu_925_p2(0) = '1') else 
        ko_2_reg_500;
        sext_ln226_1_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_l1_1_q0),32));

        sext_ln226_2_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_l1_2_q0),32));

        sext_ln226_3_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_l1_3_q0),32));

        sext_ln226_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_l1_0_q0),32));

    trunc_ln135_fu_567_p1 <= bias_in_V_dout(9 - 1 downto 0);
    trunc_ln145_fu_591_p1 <= bias_in_V_dout(9 - 1 downto 0);
    trunc_ln147_fu_583_p1 <= mul_ln147_fu_579_p2(9 - 1 downto 0);
    trunc_ln159_1_fu_715_p1 <= select_ln159_1_fu_707_p3(9 - 1 downto 0);
    trunc_ln159_fu_660_p1 <= mul45_fu_656_p2(9 - 1 downto 0);
    trunc_ln172_fu_843_p1 <= select_ln172_1_fu_835_p3(10 - 1 downto 0);

    weight_in_V_blk_n_assign_proc : process(weight_in_V_empty_n, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, icmp_ln159_reg_1151_pp1_iter2_reg)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln159_reg_1151_pp1_iter2_reg = ap_const_lv1_0))) then 
            weight_in_V_blk_n <= weight_in_V_empty_n;
        else 
            weight_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    weight_in_V_read_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln159_reg_1151_pp1_iter2_reg, ap_block_pp1_stage0_11001)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln159_reg_1151_pp1_iter2_reg = ap_const_lv1_0))) then 
            weight_in_V_read <= ap_const_logic_1;
        else 
            weight_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_0_address0_assign_proc : process(ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address0, idxprom67_fu_729_p1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            weight_l2_0_address0 <= idxprom67_fu_729_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_l2_0_address0 <= grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address0;
        else 
            weight_l2_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weight_l2_0_ce0_assign_proc : process(ap_enable_reg_pp1_iter3, ap_block_pp1_stage0_11001, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce0)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            weight_l2_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_l2_0_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce0;
        else 
            weight_l2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_l2_0_d0 <= weight_in_V_dout(8 - 1 downto 0);

    weight_l2_0_we0_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln159_reg_1151_pp1_iter2_reg, ap_block_pp1_stage0_11001)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln159_reg_1151_pp1_iter2_reg = ap_const_lv1_0))) then 
            weight_l2_0_we0 <= ap_const_logic_1;
        else 
            weight_l2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_1_address0_assign_proc : process(ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address0, idxprom67_fu_729_p1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            weight_l2_1_address0 <= idxprom67_fu_729_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_l2_1_address0 <= grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address0;
        else 
            weight_l2_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weight_l2_1_ce0_assign_proc : process(ap_enable_reg_pp1_iter3, ap_block_pp1_stage0_11001, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce0)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            weight_l2_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_l2_1_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce0;
        else 
            weight_l2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_l2_1_d0 <= weight_in_V_dout(15 downto 8);

    weight_l2_1_we0_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln159_reg_1151_pp1_iter2_reg, ap_block_pp1_stage0_11001)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln159_reg_1151_pp1_iter2_reg = ap_const_lv1_0))) then 
            weight_l2_1_we0 <= ap_const_logic_1;
        else 
            weight_l2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_2_address0_assign_proc : process(ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address0, idxprom67_fu_729_p1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            weight_l2_2_address0 <= idxprom67_fu_729_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_l2_2_address0 <= grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address0;
        else 
            weight_l2_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weight_l2_2_ce0_assign_proc : process(ap_enable_reg_pp1_iter3, ap_block_pp1_stage0_11001, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce0)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            weight_l2_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_l2_2_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce0;
        else 
            weight_l2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_l2_2_d0 <= weight_in_V_dout(23 downto 16);

    weight_l2_2_we0_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln159_reg_1151_pp1_iter2_reg, ap_block_pp1_stage0_11001)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln159_reg_1151_pp1_iter2_reg = ap_const_lv1_0))) then 
            weight_l2_2_we0 <= ap_const_logic_1;
        else 
            weight_l2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_3_address0_assign_proc : process(ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address0, idxprom67_fu_729_p1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            weight_l2_3_address0 <= idxprom67_fu_729_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_l2_3_address0 <= grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address0;
        else 
            weight_l2_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weight_l2_3_ce0_assign_proc : process(ap_enable_reg_pp1_iter3, ap_block_pp1_stage0_11001, ap_CS_fsm_state20, grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce0)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            weight_l2_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_l2_3_ce0 <= grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce0;
        else 
            weight_l2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_l2_3_d0 <= weight_in_V_dout(31 downto 24);

    weight_l2_3_we0_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln159_reg_1151_pp1_iter2_reg, ap_block_pp1_stage0_11001)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln159_reg_1151_pp1_iter2_reg = ap_const_lv1_0))) then 
            weight_l2_3_we0 <= ap_const_logic_1;
        else 
            weight_l2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
