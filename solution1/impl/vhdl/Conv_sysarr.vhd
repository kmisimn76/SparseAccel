-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv_sysarr is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    param : IN STD_LOGIC_VECTOR (1183 downto 0);
    bias_in : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_in : IN STD_LOGIC_VECTOR (7 downto 0);
    data_in : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of Conv_sysarr is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Conv_sysarr_Conv_sysarr,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.584000,HLS_SYN_LAT=26898,HLS_SYN_TPT=none,HLS_SYN_MEM=44,HLS_SYN_DSP=0,HLS_SYN_FF=11266,HLS_SYN_LUT=11390,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal param_L2_TILENUM_S_reg_195 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_reg_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln334_4_reg_205 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln334_5_reg_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln334_6_reg_215 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln334_7_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc24_fu_82_conv_out_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc24_fu_82_conv_out_o_ap_vld : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc24_fu_82_ap_start : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc24_fu_82_ap_done : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc24_fu_82_ap_ready : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc24_fu_82_ap_idle : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc24_fu_82_ap_continue : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_ready : STD_LOGIC;
    signal ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);

    component Conv_sysarr_dataflow_parent_loop_proc24 IS
    port (
        lshr_ln334_8_cast : IN STD_LOGIC_VECTOR (31 downto 0);
        lshr_ln334_7_cast : IN STD_LOGIC_VECTOR (31 downto 0);
        lshr_ln334_6_cast : IN STD_LOGIC_VECTOR (31 downto 0);
        lshr_ln334_5_cast : IN STD_LOGIC_VECTOR (31 downto 0);
        lshr_ln334_4_cast : IN STD_LOGIC_VECTOR (31 downto 0);
        param_L2_TILENUM_S : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        bias_in : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_in : IN STD_LOGIC_VECTOR (7 downto 0);
        data_in : IN STD_LOGIC_VECTOR (7 downto 0);
        param : IN STD_LOGIC_VECTOR (1183 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        lshr_ln334_7_cast_ap_vld : IN STD_LOGIC;
        lshr_ln334_6_cast_ap_vld : IN STD_LOGIC;
        lshr_ln334_5_cast_ap_vld : IN STD_LOGIC;
        lshr_ln334_4_cast_ap_vld : IN STD_LOGIC;
        param_L2_TILENUM_S_ap_vld : IN STD_LOGIC;
        conv_out_i_ap_vld : IN STD_LOGIC;
        conv_out_o_ap_vld : OUT STD_LOGIC;
        bias_in_ap_vld : IN STD_LOGIC;
        weight_in_ap_vld : IN STD_LOGIC;
        data_in_ap_vld : IN STD_LOGIC;
        param_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    grp_dataflow_parent_loop_proc24_fu_82 : component Conv_sysarr_dataflow_parent_loop_proc24
    port map (
        lshr_ln334_8_cast => trunc_ln334_7_reg_220,
        lshr_ln334_7_cast => trunc_ln334_6_reg_215,
        lshr_ln334_6_cast => trunc_ln334_5_reg_210,
        lshr_ln334_5_cast => trunc_ln334_4_reg_205,
        lshr_ln334_4_cast => trunc_ln_reg_200,
        param_L2_TILENUM_S => param_L2_TILENUM_S_reg_195,
        conv_out_i => conv_out_i,
        conv_out_o => grp_dataflow_parent_loop_proc24_fu_82_conv_out_o,
        bias_in => bias_in,
        weight_in => weight_in,
        data_in => data_in,
        param => param,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        lshr_ln334_7_cast_ap_vld => ap_const_logic_1,
        lshr_ln334_6_cast_ap_vld => ap_const_logic_1,
        lshr_ln334_5_cast_ap_vld => ap_const_logic_1,
        lshr_ln334_4_cast_ap_vld => ap_const_logic_1,
        param_L2_TILENUM_S_ap_vld => ap_const_logic_1,
        conv_out_i_ap_vld => ap_const_logic_1,
        conv_out_o_ap_vld => grp_dataflow_parent_loop_proc24_fu_82_conv_out_o_ap_vld,
        bias_in_ap_vld => ap_const_logic_1,
        weight_in_ap_vld => ap_const_logic_1,
        data_in_ap_vld => ap_const_logic_1,
        param_ap_vld => ap_const_logic_1,
        ap_start => grp_dataflow_parent_loop_proc24_fu_82_ap_start,
        ap_done => grp_dataflow_parent_loop_proc24_fu_82_ap_done,
        ap_ready => grp_dataflow_parent_loop_proc24_fu_82_ap_ready,
        ap_idle => grp_dataflow_parent_loop_proc24_fu_82_ap_idle,
        ap_continue => grp_dataflow_parent_loop_proc24_fu_82_ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done <= ap_const_logic_0;
                elsif ((grp_dataflow_parent_loop_proc24_fu_82_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready <= ap_const_logic_0;
                elsif ((grp_dataflow_parent_loop_proc24_fu_82_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_parent_loop_proc24_fu_82_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                param_L2_TILENUM_S_reg_195 <= param(351 downto 320);
                trunc_ln334_4_reg_205 <= param(255 downto 224);
                trunc_ln334_5_reg_210 <= param(287 downto 256);
                trunc_ln334_6_reg_215 <= param(223 downto 192);
                trunc_ln334_7_reg_220 <= param(191 downto 160);
                trunc_ln_reg_200 <= param(319 downto 288);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_block_state2_on_subcall_done_assign_proc : process(ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_ready, ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_ready and ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_done) = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_done <= (grp_dataflow_parent_loop_proc24_fu_82_ap_done or ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done);
    ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_ready <= (grp_dataflow_parent_loop_proc24_fu_82_ap_ready or ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready);

    conv_out_o_assign_proc : process(conv_out_i, grp_dataflow_parent_loop_proc24_fu_82_conv_out_o, grp_dataflow_parent_loop_proc24_fu_82_conv_out_o_ap_vld, ap_CS_fsm_state2)
    begin
        if (((grp_dataflow_parent_loop_proc24_fu_82_conv_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            conv_out_o <= grp_dataflow_parent_loop_proc24_fu_82_conv_out_o;
        else 
            conv_out_o <= conv_out_i;
        end if; 
    end process;

    conv_out_o_ap_vld <= grp_dataflow_parent_loop_proc24_fu_82_conv_out_o_ap_vld;

    grp_dataflow_parent_loop_proc24_fu_82_ap_continue_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_dataflow_parent_loop_proc24_fu_82_ap_continue <= ap_const_logic_1;
        else 
            grp_dataflow_parent_loop_proc24_fu_82_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_dataflow_parent_loop_proc24_fu_82_ap_start <= grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg;
end behav;
