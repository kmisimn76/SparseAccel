-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv_sysarr_runOutputL1toL2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_l1_021_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_l1_021_i_ce0 : OUT STD_LOGIC;
    output_l1_021_i_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_l1_122_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_l1_122_i_ce0 : OUT STD_LOGIC;
    output_l1_122_i_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_l1_223_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_l1_223_i_ce0 : OUT STD_LOGIC;
    output_l1_223_i_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_l1_324_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_l1_324_i_ce0 : OUT STD_LOGIC;
    output_l1_324_i_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    param_dout : IN STD_LOGIC_VECTOR (1119 downto 0);
    param_empty_n : IN STD_LOGIC;
    param_read : OUT STD_LOGIC;
    ko_1_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    ko_1_empty_n : IN STD_LOGIC;
    ko_1_read : OUT STD_LOGIC;
    ho_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    ho_empty_n : IN STD_LOGIC;
    ho_read : OUT STD_LOGIC;
    wo_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    wo_empty_n : IN STD_LOGIC;
    wo_read : OUT STD_LOGIC;
    ro_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ro_empty_n : IN STD_LOGIC;
    ro_read : OUT STD_LOGIC;
    co_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    co_empty_n : IN STD_LOGIC;
    co_read : OUT STD_LOGIC;
    so_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    so_empty_n : IN STD_LOGIC;
    so_read : OUT STD_LOGIC;
    output_l2_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_l2_0_ce0 : OUT STD_LOGIC;
    output_l2_0_we0 : OUT STD_LOGIC;
    output_l2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Conv_sysarr_runOutputL1toL2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_440 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001000000";
    constant ap_const_lv32_45F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001011111";
    constant ap_const_lv32_420 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000100000";
    constant ap_const_lv32_43F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000111111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1AA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101010";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1CA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001010";
    constant ap_const_lv32_425 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000100101";
    constant ap_const_lv32_42A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000101010";
    constant ap_const_lv32_44A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001001010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal output_l2_reduction_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_0_ce0 : STD_LOGIC;
    signal output_l2_reduction_0_we0 : STD_LOGIC;
    signal output_l2_reduction_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_reduction_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_0_ce1 : STD_LOGIC;
    signal output_l2_reduction_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_reduction_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_1_ce0 : STD_LOGIC;
    signal output_l2_reduction_1_we0 : STD_LOGIC;
    signal output_l2_reduction_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_reduction_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_1_ce1 : STD_LOGIC;
    signal output_l2_reduction_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_1_ce0 : STD_LOGIC;
    signal output_l2_1_we0 : STD_LOGIC;
    signal output_l2_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_reduction_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_2_ce0 : STD_LOGIC;
    signal output_l2_reduction_2_we0 : STD_LOGIC;
    signal output_l2_reduction_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_reduction_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_2_ce1 : STD_LOGIC;
    signal output_l2_reduction_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_2_ce0 : STD_LOGIC;
    signal output_l2_2_we0 : STD_LOGIC;
    signal output_l2_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_reduction_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_3_ce0 : STD_LOGIC;
    signal output_l2_reduction_3_we0 : STD_LOGIC;
    signal output_l2_reduction_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_reduction_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_3_ce1 : STD_LOGIC;
    signal output_l2_reduction_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l2_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_3_ce0 : STD_LOGIC;
    signal output_l2_3_we0 : STD_LOGIC;
    signal param_blk_n : STD_LOGIC;
    signal ko_1_blk_n : STD_LOGIC;
    signal ho_blk_n : STD_LOGIC;
    signal wo_blk_n : STD_LOGIC;
    signal ro_blk_n : STD_LOGIC;
    signal co_blk_n : STD_LOGIC;
    signal so_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_392 : STD_LOGIC_VECTOR (63 downto 0);
    signal hi_reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal wi_reg_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal param_TILESIZE_H_i_i_reg_738 : STD_LOGIC_VECTOR (31 downto 0);
    signal param_TILESIZE_W_i_i_reg_743 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_reg_749 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln427_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln427_reg_759 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_reg_763 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_690_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul3_i_i_i_reg_778 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_696_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul5_i_i_i_reg_783 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_702_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul11_i_i_i_reg_788 : STD_LOGIC_VECTOR (10 downto 0);
    signal bound_fu_529_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_reg_793 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln105_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_798 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln105_reg_798_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_798_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_798_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln105_2_fu_540_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln105_1_fu_565_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln105_1_reg_807 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_57_fu_590_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_57_reg_817 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_57_reg_817_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_fu_594_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp2_fu_594_p2 : signal is "no";
    signal tmp2_reg_822 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp2_reg_822_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln107_fu_599_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxprom16_i_i_i_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom16_i_i_i_reg_832 : STD_LOGIC_VECTOR (63 downto 0);
    signal output_l2_reduction_0_addr_reg_851 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_1_addr_1_reg_862 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_2_addr_1_reg_873 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_reduction_3_addr_1_reg_884 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l1_122_i_addr_gep_fu_268_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal output_l1_223_i_addr_gep_fu_276_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal output_l1_324_i_addr_gep_fu_284_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_phi_mux_hi_phi_fu_407_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_empty_58_phi_fu_428_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l13_load_cast_i_i_i_fu_684_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_58_reg_425 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln119_3_fu_664_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxprom_i_i_i_fu_605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal output_l2_0_addr_gep_fu_331_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_1_addr_gep_fu_347_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l2_2_addr_gep_fu_363_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln119_fu_628_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_load_cast_i_i_i_fu_622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln119_1_fu_640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l11_load_cast_i_i_i_fu_672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln119_2_fu_652_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l12_load_cast_i_i_i_fu_678_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln427_1_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln427_fu_481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_529_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln107_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln105_3_fu_559_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln105_1_fu_577_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln105_fu_551_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_586_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_708_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_715_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_l11_load_1_cast_i_i_i_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l12_load_1_cast_i_i_i_fu_648_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l13_load_1_cast_i_i_i_fu_660_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_690_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_696_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_702_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_708_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_715_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_690_ce : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fu_696_ce : STD_LOGIC;
    signal grp_fu_702_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op86_load_state8 : BOOLEAN;
    signal ap_enable_operation_86 : BOOLEAN;
    signal ap_enable_state8_pp0_iter3_stage0 : BOOLEAN;
    signal ap_predicate_op111_load_state9 : BOOLEAN;
    signal ap_enable_operation_111 : BOOLEAN;
    signal ap_enable_state9_pp0_iter4_stage0 : BOOLEAN;
    signal ap_predicate_op113_store_state9 : BOOLEAN;
    signal ap_enable_operation_113 : BOOLEAN;
    signal ap_predicate_op136_store_state9 : BOOLEAN;
    signal ap_enable_operation_136 : BOOLEAN;
    signal ap_predicate_op115_store_state9 : BOOLEAN;
    signal ap_enable_operation_115 : BOOLEAN;
    signal ap_predicate_op138_store_state9 : BOOLEAN;
    signal ap_enable_operation_138 : BOOLEAN;
    signal ap_predicate_op90_load_state8 : BOOLEAN;
    signal ap_enable_operation_90 : BOOLEAN;
    signal ap_predicate_op118_load_state9 : BOOLEAN;
    signal ap_enable_operation_118 : BOOLEAN;
    signal ap_predicate_op120_store_state9 : BOOLEAN;
    signal ap_enable_operation_120 : BOOLEAN;
    signal ap_predicate_op142_store_state9 : BOOLEAN;
    signal ap_enable_operation_142 : BOOLEAN;
    signal ap_predicate_op122_store_state9 : BOOLEAN;
    signal ap_enable_operation_122 : BOOLEAN;
    signal ap_predicate_op144_store_state9 : BOOLEAN;
    signal ap_enable_operation_144 : BOOLEAN;
    signal ap_predicate_op94_load_state8 : BOOLEAN;
    signal ap_enable_operation_94 : BOOLEAN;
    signal ap_predicate_op125_load_state9 : BOOLEAN;
    signal ap_enable_operation_125 : BOOLEAN;
    signal ap_predicate_op127_store_state9 : BOOLEAN;
    signal ap_enable_operation_127 : BOOLEAN;
    signal ap_predicate_op148_store_state9 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_predicate_op129_store_state9 : BOOLEAN;
    signal ap_enable_operation_129 : BOOLEAN;
    signal ap_predicate_op150_store_state9 : BOOLEAN;
    signal ap_enable_operation_150 : BOOLEAN;
    signal ap_predicate_op98_load_state8 : BOOLEAN;
    signal ap_enable_operation_98 : BOOLEAN;
    signal ap_predicate_op132_load_state9 : BOOLEAN;
    signal ap_enable_operation_132 : BOOLEAN;
    signal ap_predicate_op134_store_state9 : BOOLEAN;
    signal ap_enable_operation_134 : BOOLEAN;
    signal ap_predicate_op154_store_state9 : BOOLEAN;
    signal ap_enable_operation_154 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal bound_fu_529_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_fu_529_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_condition_356 : BOOLEAN;
    signal ap_condition_372 : BOOLEAN;

    component Conv_sysarr_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Conv_sysarr_mul_mul_11s_11s_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Conv_sysarr_mac_muladd_6s_6s_6ns_6_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component Conv_sysarr_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Conv_sysarr_runOutputL1toL2_output_l2_reduction_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_sysarr_runOutputL1toL2_output_l2_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    output_l2_reduction_0_U : component Conv_sysarr_runOutputL1toL2_output_l2_reduction_0
    generic map (
        DataWidth => 32,
        AddressRange => 1568,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l2_reduction_0_address0,
        ce0 => output_l2_reduction_0_ce0,
        we0 => output_l2_reduction_0_we0,
        d0 => output_l2_reduction_0_d0,
        address1 => output_l2_reduction_0_address1,
        ce1 => output_l2_reduction_0_ce1,
        q1 => output_l2_reduction_0_q1);

    output_l2_reduction_1_U : component Conv_sysarr_runOutputL1toL2_output_l2_reduction_0
    generic map (
        DataWidth => 32,
        AddressRange => 1568,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l2_reduction_1_address0,
        ce0 => output_l2_reduction_1_ce0,
        we0 => output_l2_reduction_1_we0,
        d0 => output_l2_reduction_1_d0,
        address1 => output_l2_reduction_1_address1,
        ce1 => output_l2_reduction_1_ce1,
        q1 => output_l2_reduction_1_q1);

    output_l2_1_U : component Conv_sysarr_runOutputL1toL2_output_l2_1
    generic map (
        DataWidth => 32,
        AddressRange => 1568,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l2_1_address0,
        ce0 => output_l2_1_ce0,
        we0 => output_l2_1_we0,
        d0 => output_l2_1_d0);

    output_l2_reduction_2_U : component Conv_sysarr_runOutputL1toL2_output_l2_reduction_0
    generic map (
        DataWidth => 32,
        AddressRange => 1568,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l2_reduction_2_address0,
        ce0 => output_l2_reduction_2_ce0,
        we0 => output_l2_reduction_2_we0,
        d0 => output_l2_reduction_2_d0,
        address1 => output_l2_reduction_2_address1,
        ce1 => output_l2_reduction_2_ce1,
        q1 => output_l2_reduction_2_q1);

    output_l2_2_U : component Conv_sysarr_runOutputL1toL2_output_l2_1
    generic map (
        DataWidth => 32,
        AddressRange => 1568,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l2_2_address0,
        ce0 => output_l2_2_ce0,
        we0 => output_l2_2_we0,
        d0 => output_l2_2_d0);

    output_l2_reduction_3_U : component Conv_sysarr_runOutputL1toL2_output_l2_reduction_0
    generic map (
        DataWidth => 32,
        AddressRange => 1568,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l2_reduction_3_address0,
        ce0 => output_l2_reduction_3_ce0,
        we0 => output_l2_reduction_3_we0,
        d0 => output_l2_reduction_3_d0,
        address1 => output_l2_reduction_3_address1,
        ce1 => output_l2_reduction_3_ce1,
        q1 => output_l2_reduction_3_q1);

    output_l2_3_U : component Conv_sysarr_runOutputL1toL2_output_l2_1
    generic map (
        DataWidth => 32,
        AddressRange => 1568,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l2_3_address0,
        ce0 => output_l2_3_ce0,
        we0 => output_l2_3_we0,
        d0 => ap_phi_mux_empty_58_phi_fu_428_p4);

    mul_32ns_32ns_64_1_1_U166 : component Conv_sysarr_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => bound_fu_529_p0,
        din1 => bound_fu_529_p1,
        dout => bound_fu_529_p2);

    mul_mul_11s_11s_11_4_1_U167 : component Conv_sysarr_mul_mul_11s_11s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_690_p0,
        din1 => ho_dout,
        ce => grp_fu_690_ce,
        dout => grp_fu_690_p2);

    mul_mul_11s_11s_11_4_1_U168 : component Conv_sysarr_mul_mul_11s_11s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_696_p0,
        din1 => wo_dout,
        ce => grp_fu_696_ce,
        dout => grp_fu_696_p2);

    mul_mul_11s_11s_11_4_1_U169 : component Conv_sysarr_mul_mul_11s_11s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ko_1_dout,
        din1 => grp_fu_702_p1,
        ce => grp_fu_702_ce,
        dout => grp_fu_702_p2);

    mac_muladd_6s_6s_6ns_6_4_1_U170 : component Conv_sysarr_mac_muladd_6s_6s_6ns_6_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        dout_WIDTH => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln1_reg_763,
        din1 => grp_fu_708_p1,
        din2 => empty_57_reg_817_pp0_iter1_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_708_p3);

    ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U171 : component Conv_sysarr_ama_addmuladd_11ns_11s_11s_11ns_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_715_p0,
        din1 => mul11_i_i_i_reg_788,
        din2 => trunc_ln_reg_749,
        din3 => tmp2_reg_822_pp0_iter1_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_715_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    hi_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln105_reg_798 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                hi_reg_403 <= select_ln105_1_reg_807;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                hi_reg_403 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln105_fu_535_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_392 <= add_ln105_2_fu_540_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indvar_flatten_reg_392 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    wi_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln105_fu_535_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                wi_reg_414 <= add_ln107_fu_599_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                wi_reg_414 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                bound_reg_793 <= bound_fu_529_p2;
                mul11_i_i_i_reg_788 <= grp_fu_702_p2;
                mul3_i_i_i_reg_778 <= grp_fu_690_p2;
                mul5_i_i_i_reg_783 <= grp_fu_696_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln105_fu_535_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_57_reg_817 <= empty_57_fu_590_p1;
                tmp2_reg_822 <= tmp2_fu_594_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_57_reg_817_pp0_iter1_reg <= empty_57_reg_817;
                icmp_ln105_reg_798 <= icmp_ln105_fu_535_p2;
                icmp_ln105_reg_798_pp0_iter1_reg <= icmp_ln105_reg_798;
                tmp2_reg_822_pp0_iter1_reg <= tmp2_reg_822;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln105_reg_798_pp0_iter2_reg <= icmp_ln105_reg_798_pp0_iter1_reg;
                icmp_ln105_reg_798_pp0_iter3_reg <= icmp_ln105_reg_798_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln427_reg_759 <= icmp_ln427_fu_487_p2;
                param_TILESIZE_H_i_i_reg_738 <= param_dout(1119 downto 1088);
                param_TILESIZE_W_i_i_reg_743 <= param_dout(1087 downto 1056);
                trunc_ln1_reg_763 <= param_dout(1061 downto 1056);
                trunc_ln_reg_749 <= param_dout(426 downto 416);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    idxprom16_i_i_i_reg_832(10 downto 0) <= idxprom16_i_i_i_fu_615_p1(10 downto 0);
                output_l2_reduction_0_addr_reg_851 <= idxprom16_i_i_i_fu_615_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0))) then
                output_l2_reduction_1_addr_1_reg_862 <= idxprom16_i_i_i_fu_615_p1(11 - 1 downto 0);
                output_l2_reduction_2_addr_1_reg_873 <= idxprom16_i_i_i_fu_615_p1(11 - 1 downto 0);
                output_l2_reduction_3_addr_1_reg_884 <= idxprom16_i_i_i_fu_615_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln105_fu_535_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln105_1_reg_807 <= select_ln105_1_fu_565_p3;
            end if;
        end if;
    end process;
    idxprom16_i_i_i_reg_832(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n, icmp_ln105_fu_535_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln105_fu_535_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln105_fu_535_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln105_2_fu_540_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_392) + unsigned(ap_const_lv64_1));
    add_ln105_3_fu_559_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_hi_phi_fu_407_p4));
    add_ln107_fu_599_p2 <= std_logic_vector(unsigned(select_ln105_fu_551_p3) + unsigned(ap_const_lv32_1));
    add_ln119_1_fu_640_p2 <= std_logic_vector(unsigned(output_l2_reduction_1_q1) + unsigned(output_l11_load_1_cast_i_i_i_fu_636_p1));
    add_ln119_2_fu_652_p2 <= std_logic_vector(unsigned(output_l2_reduction_2_q1) + unsigned(output_l12_load_1_cast_i_i_i_fu_648_p1));
    add_ln119_3_fu_664_p2 <= std_logic_vector(unsigned(output_l2_reduction_3_q1) + unsigned(output_l13_load_1_cast_i_i_i_fu_660_p1));
    add_ln119_fu_628_p2 <= std_logic_vector(unsigned(output_l2_reduction_0_q1) + unsigned(output_l1_load_cast_i_i_i_fu_622_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n)
    begin
                ap_block_state1 <= ((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_356_assign_proc : process(icmp_ln105_reg_798_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0)
    begin
                ap_condition_356 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_372_assign_proc : process(icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
                ap_condition_372 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(icmp_ln105_fu_535_p2)
    begin
        if ((icmp_ln105_fu_535_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_111_assign_proc : process(ap_predicate_op111_load_state9)
    begin
                ap_enable_operation_111 <= (ap_predicate_op111_load_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_113_assign_proc : process(ap_predicate_op113_store_state9)
    begin
                ap_enable_operation_113 <= (ap_predicate_op113_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_115_assign_proc : process(ap_predicate_op115_store_state9)
    begin
                ap_enable_operation_115 <= (ap_predicate_op115_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_118_assign_proc : process(ap_predicate_op118_load_state9)
    begin
                ap_enable_operation_118 <= (ap_predicate_op118_load_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_120_assign_proc : process(ap_predicate_op120_store_state9)
    begin
                ap_enable_operation_120 <= (ap_predicate_op120_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_122_assign_proc : process(ap_predicate_op122_store_state9)
    begin
                ap_enable_operation_122 <= (ap_predicate_op122_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_125_assign_proc : process(ap_predicate_op125_load_state9)
    begin
                ap_enable_operation_125 <= (ap_predicate_op125_load_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_127_assign_proc : process(ap_predicate_op127_store_state9)
    begin
                ap_enable_operation_127 <= (ap_predicate_op127_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_129_assign_proc : process(ap_predicate_op129_store_state9)
    begin
                ap_enable_operation_129 <= (ap_predicate_op129_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_132_assign_proc : process(ap_predicate_op132_load_state9)
    begin
                ap_enable_operation_132 <= (ap_predicate_op132_load_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_134_assign_proc : process(ap_predicate_op134_store_state9)
    begin
                ap_enable_operation_134 <= (ap_predicate_op134_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_136_assign_proc : process(ap_predicate_op136_store_state9)
    begin
                ap_enable_operation_136 <= (ap_predicate_op136_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_138_assign_proc : process(ap_predicate_op138_store_state9)
    begin
                ap_enable_operation_138 <= (ap_predicate_op138_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_142_assign_proc : process(ap_predicate_op142_store_state9)
    begin
                ap_enable_operation_142 <= (ap_predicate_op142_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_144_assign_proc : process(ap_predicate_op144_store_state9)
    begin
                ap_enable_operation_144 <= (ap_predicate_op144_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_148_assign_proc : process(ap_predicate_op148_store_state9)
    begin
                ap_enable_operation_148 <= (ap_predicate_op148_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_150_assign_proc : process(ap_predicate_op150_store_state9)
    begin
                ap_enable_operation_150 <= (ap_predicate_op150_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_154_assign_proc : process(ap_predicate_op154_store_state9)
    begin
                ap_enable_operation_154 <= (ap_predicate_op154_store_state9 = ap_const_boolean_1);
    end process;


    ap_enable_operation_86_assign_proc : process(ap_predicate_op86_load_state8)
    begin
                ap_enable_operation_86 <= (ap_predicate_op86_load_state8 = ap_const_boolean_1);
    end process;


    ap_enable_operation_90_assign_proc : process(ap_predicate_op90_load_state8)
    begin
                ap_enable_operation_90 <= (ap_predicate_op90_load_state8 = ap_const_boolean_1);
    end process;


    ap_enable_operation_94_assign_proc : process(ap_predicate_op94_load_state8)
    begin
                ap_enable_operation_94 <= (ap_predicate_op94_load_state8 = ap_const_boolean_1);
    end process;


    ap_enable_operation_98_assign_proc : process(ap_predicate_op98_load_state8)
    begin
                ap_enable_operation_98 <= (ap_predicate_op98_load_state8 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state8_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state8_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state9_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
                ap_enable_state9_pp0_iter4_stage0 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_58_phi_fu_428_p4_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg, output_l13_load_cast_i_i_i_fu_684_p1, ap_phi_reg_pp0_iter4_empty_58_reg_425, add_ln119_3_fu_664_p2)
    begin
        if ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                ap_phi_mux_empty_58_phi_fu_428_p4 <= add_ln119_3_fu_664_p2;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                ap_phi_mux_empty_58_phi_fu_428_p4 <= output_l13_load_cast_i_i_i_fu_684_p1;
            else 
                ap_phi_mux_empty_58_phi_fu_428_p4 <= ap_phi_reg_pp0_iter4_empty_58_reg_425;
            end if;
        else 
            ap_phi_mux_empty_58_phi_fu_428_p4 <= ap_phi_reg_pp0_iter4_empty_58_reg_425;
        end if; 
    end process;


    ap_phi_mux_hi_phi_fu_407_p4_assign_proc : process(hi_reg_403, icmp_ln105_reg_798, ap_CS_fsm_pp0_stage0, select_ln105_1_reg_807, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln105_reg_798 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_hi_phi_fu_407_p4 <= select_ln105_1_reg_807;
        else 
            ap_phi_mux_hi_phi_fu_407_p4 <= hi_reg_403;
        end if; 
    end process;

    ap_phi_reg_pp0_iter4_empty_58_reg_425 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op111_load_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op111_load_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op113_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op113_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op115_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op115_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op118_load_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op118_load_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op120_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op120_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op122_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op122_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op125_load_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op125_load_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op127_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op127_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op129_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op129_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op132_load_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op132_load_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op134_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op134_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op136_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op136_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_1));
    end process;


    ap_predicate_op138_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op138_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_1));
    end process;


    ap_predicate_op142_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op142_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_1));
    end process;


    ap_predicate_op144_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op144_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_1));
    end process;


    ap_predicate_op148_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op148_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_1));
    end process;


    ap_predicate_op150_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op150_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_1));
    end process;


    ap_predicate_op154_store_state9_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter3_reg)
    begin
                ap_predicate_op154_store_state9 <= ((icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_1));
    end process;


    ap_predicate_op86_load_state8_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter2_reg)
    begin
                ap_predicate_op86_load_state8 <= ((icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op90_load_state8_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter2_reg)
    begin
                ap_predicate_op90_load_state8 <= ((icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op94_load_state8_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter2_reg)
    begin
                ap_predicate_op94_load_state8 <= ((icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_predicate_op98_load_state8_assign_proc : process(icmp_ln427_reg_759, icmp_ln105_reg_798_pp0_iter2_reg)
    begin
                ap_predicate_op98_load_state8 <= ((icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln427_reg_759 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_fu_529_p0 <= bound_fu_529_p00(32 - 1 downto 0);
    bound_fu_529_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(param_TILESIZE_H_i_i_reg_738),64));
    bound_fu_529_p1 <= bound_fu_529_p10(32 - 1 downto 0);
    bound_fu_529_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(param_TILESIZE_W_i_i_reg_743),64));

    co_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, co_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_blk_n <= co_empty_n;
        else 
            co_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    co_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n)
    begin
        if ((not(((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_read <= ap_const_logic_1;
        else 
            co_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_57_fu_590_p1 <= select_ln105_fu_551_p3(6 - 1 downto 0);
    empty_fu_586_p1 <= select_ln105_fu_551_p3(11 - 1 downto 0);

    grp_fu_690_ce_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) or ((ap_const_logic_1 = ap_CS_fsm_state1) and ((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))))) then 
            grp_fu_690_ce <= ap_const_logic_0;
        else 
            grp_fu_690_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_690_p0 <= param_dout(1098 downto 1088);

    grp_fu_696_ce_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) or ((ap_const_logic_1 = ap_CS_fsm_state1) and ((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))))) then 
            grp_fu_696_ce <= ap_const_logic_0;
        else 
            grp_fu_696_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_696_p0 <= param_dout(1066 downto 1056);

    grp_fu_702_ce_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) or ((ap_const_logic_1 = ap_CS_fsm_state1) and ((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))))) then 
            grp_fu_702_ce <= ap_const_logic_0;
        else 
            grp_fu_702_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_702_p1 <= param_dout(458 downto 448);
    grp_fu_708_p1 <= select_ln105_1_fu_565_p3(6 - 1 downto 0);
    grp_fu_715_p0 <= std_logic_vector(signed(mul3_i_i_i_reg_778) + signed(trunc_ln105_1_fu_577_p1));

    ho_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ho_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ho_blk_n <= ho_empty_n;
        else 
            ho_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ho_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n)
    begin
        if ((not(((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ho_read <= ap_const_logic_1;
        else 
            ho_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln105_fu_535_p2 <= "1" when (indvar_flatten_reg_392 = bound_reg_793) else "0";
    icmp_ln107_fu_546_p2 <= "1" when (wi_reg_414 = param_TILESIZE_W_i_i_reg_743) else "0";
    icmp_ln427_fu_487_p2 <= "1" when (or_ln427_fu_481_p2 = ap_const_lv32_0) else "0";
    idxprom16_i_i_i_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_715_p4),64));
    idxprom_i_i_i_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_708_p3),64));

    ko_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ko_1_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ko_1_blk_n <= ko_1_empty_n;
        else 
            ko_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ko_1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n)
    begin
        if ((not(((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ko_1_read <= ap_const_logic_1;
        else 
            ko_1_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln427_1_fu_475_p2 <= (so_dout or co_dout);
    or_ln427_fu_481_p2 <= (ro_dout or or_ln427_1_fu_475_p2);
        output_l11_load_1_cast_i_i_i_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_l1_122_i_q0),32));

        output_l11_load_cast_i_i_i_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_l1_122_i_q0),32));

        output_l12_load_1_cast_i_i_i_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_l1_223_i_q0),32));

        output_l12_load_cast_i_i_i_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_l1_223_i_q0),32));

        output_l13_load_1_cast_i_i_i_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_l1_324_i_q0),32));

        output_l13_load_cast_i_i_i_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_l1_324_i_q0),32));

    output_l1_021_i_address0 <= idxprom_i_i_i_fu_605_p1(6 - 1 downto 0);

    output_l1_021_i_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_l1_021_i_ce0 <= ap_const_logic_1;
        else 
            output_l1_021_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_l1_122_i_addr_gep_fu_268_p3 <= idxprom_i_i_i_fu_605_p1(6 - 1 downto 0);

    output_l1_122_i_address0_assign_proc : process(icmp_ln427_reg_759, output_l1_122_i_addr_gep_fu_268_p3, idxprom_i_i_i_fu_605_p1, ap_condition_356)
    begin
        if ((ap_const_boolean_1 = ap_condition_356)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l1_122_i_address0 <= output_l1_122_i_addr_gep_fu_268_p3;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l1_122_i_address0 <= idxprom_i_i_i_fu_605_p1(6 - 1 downto 0);
            else 
                output_l1_122_i_address0 <= "XXXXXX";
            end if;
        else 
            output_l1_122_i_address0 <= "XXXXXX";
        end if; 
    end process;


    output_l1_122_i_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l1_122_i_ce0 <= ap_const_logic_1;
        else 
            output_l1_122_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_l1_223_i_addr_gep_fu_276_p3 <= idxprom_i_i_i_fu_605_p1(6 - 1 downto 0);

    output_l1_223_i_address0_assign_proc : process(icmp_ln427_reg_759, output_l1_223_i_addr_gep_fu_276_p3, idxprom_i_i_i_fu_605_p1, ap_condition_356)
    begin
        if ((ap_const_boolean_1 = ap_condition_356)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l1_223_i_address0 <= output_l1_223_i_addr_gep_fu_276_p3;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l1_223_i_address0 <= idxprom_i_i_i_fu_605_p1(6 - 1 downto 0);
            else 
                output_l1_223_i_address0 <= "XXXXXX";
            end if;
        else 
            output_l1_223_i_address0 <= "XXXXXX";
        end if; 
    end process;


    output_l1_223_i_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l1_223_i_ce0 <= ap_const_logic_1;
        else 
            output_l1_223_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_l1_324_i_addr_gep_fu_284_p3 <= idxprom_i_i_i_fu_605_p1(6 - 1 downto 0);

    output_l1_324_i_address0_assign_proc : process(icmp_ln427_reg_759, output_l1_324_i_addr_gep_fu_284_p3, idxprom_i_i_i_fu_605_p1, ap_condition_356)
    begin
        if ((ap_const_boolean_1 = ap_condition_356)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l1_324_i_address0 <= output_l1_324_i_addr_gep_fu_284_p3;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l1_324_i_address0 <= idxprom_i_i_i_fu_605_p1(6 - 1 downto 0);
            else 
                output_l1_324_i_address0 <= "XXXXXX";
            end if;
        else 
            output_l1_324_i_address0 <= "XXXXXX";
        end if; 
    end process;


    output_l1_324_i_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l1_324_i_ce0 <= ap_const_logic_1;
        else 
            output_l1_324_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        output_l1_load_cast_i_i_i_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_l1_021_i_q0),32));

    output_l2_0_addr_gep_fu_331_p3 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);

    output_l2_0_address0_assign_proc : process(icmp_ln427_reg_759, idxprom16_i_i_i_reg_832, output_l2_0_addr_gep_fu_331_p3, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_0_address0 <= output_l2_0_addr_gep_fu_331_p3;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_0_address0 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);
            else 
                output_l2_0_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            output_l2_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    output_l2_0_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_0_ce0 <= ap_const_logic_1;
        else 
            output_l2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_0_d0_assign_proc : process(icmp_ln427_reg_759, add_ln119_fu_628_p2, output_l1_load_cast_i_i_i_fu_622_p1, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_0_d0 <= output_l1_load_cast_i_i_i_fu_622_p1;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_0_d0 <= add_ln119_fu_628_p2;
            else 
                output_l2_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_l2_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l2_0_we0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_0_we0 <= ap_const_logic_1;
        else 
            output_l2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_l2_1_addr_gep_fu_347_p3 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);

    output_l2_1_address0_assign_proc : process(icmp_ln427_reg_759, idxprom16_i_i_i_reg_832, output_l2_1_addr_gep_fu_347_p3, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_1_address0 <= output_l2_1_addr_gep_fu_347_p3;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_1_address0 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);
            else 
                output_l2_1_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            output_l2_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    output_l2_1_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_1_ce0 <= ap_const_logic_1;
        else 
            output_l2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_1_d0_assign_proc : process(icmp_ln427_reg_759, add_ln119_1_fu_640_p2, output_l11_load_cast_i_i_i_fu_672_p1, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_1_d0 <= output_l11_load_cast_i_i_i_fu_672_p1;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_1_d0 <= add_ln119_1_fu_640_p2;
            else 
                output_l2_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_l2_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l2_1_we0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_1_we0 <= ap_const_logic_1;
        else 
            output_l2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_l2_2_addr_gep_fu_363_p3 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);

    output_l2_2_address0_assign_proc : process(icmp_ln427_reg_759, idxprom16_i_i_i_reg_832, output_l2_2_addr_gep_fu_363_p3, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_2_address0 <= output_l2_2_addr_gep_fu_363_p3;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_2_address0 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);
            else 
                output_l2_2_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            output_l2_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    output_l2_2_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_2_ce0 <= ap_const_logic_1;
        else 
            output_l2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_2_d0_assign_proc : process(icmp_ln427_reg_759, add_ln119_2_fu_652_p2, output_l12_load_cast_i_i_i_fu_678_p1, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_2_d0 <= output_l12_load_cast_i_i_i_fu_678_p1;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_2_d0 <= add_ln119_2_fu_652_p2;
            else 
                output_l2_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_l2_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l2_2_we0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_2_we0 <= ap_const_logic_1;
        else 
            output_l2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_l2_3_address0 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);

    output_l2_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_l2_3_ce0 <= ap_const_logic_1;
        else 
            output_l2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_3_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_l2_3_we0 <= ap_const_logic_1;
        else 
            output_l2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_l2_reduction_0_address0 <= output_l2_reduction_0_addr_reg_851;
    output_l2_reduction_0_address1 <= idxprom16_i_i_i_fu_615_p1(11 - 1 downto 0);

    output_l2_reduction_0_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_reduction_0_ce0 <= ap_const_logic_1;
        else 
            output_l2_reduction_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_l2_reduction_0_ce1 <= ap_const_logic_1;
        else 
            output_l2_reduction_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_0_d0_assign_proc : process(icmp_ln427_reg_759, add_ln119_fu_628_p2, output_l1_load_cast_i_i_i_fu_622_p1, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_reduction_0_d0 <= output_l1_load_cast_i_i_i_fu_622_p1;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_reduction_0_d0 <= add_ln119_fu_628_p2;
            else 
                output_l2_reduction_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_l2_reduction_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l2_reduction_0_we0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_reduction_0_we0 <= ap_const_logic_1;
        else 
            output_l2_reduction_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_1_address0_assign_proc : process(icmp_ln427_reg_759, idxprom16_i_i_i_reg_832, output_l2_reduction_1_addr_1_reg_862, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_reduction_1_address0 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_reduction_1_address0 <= output_l2_reduction_1_addr_1_reg_862;
            else 
                output_l2_reduction_1_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            output_l2_reduction_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    output_l2_reduction_1_address1 <= idxprom16_i_i_i_fu_615_p1(11 - 1 downto 0);

    output_l2_reduction_1_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_reduction_1_ce0 <= ap_const_logic_1;
        else 
            output_l2_reduction_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_l2_reduction_1_ce1 <= ap_const_logic_1;
        else 
            output_l2_reduction_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_1_d0_assign_proc : process(icmp_ln427_reg_759, add_ln119_1_fu_640_p2, output_l11_load_cast_i_i_i_fu_672_p1, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_reduction_1_d0 <= output_l11_load_cast_i_i_i_fu_672_p1;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_reduction_1_d0 <= add_ln119_1_fu_640_p2;
            else 
                output_l2_reduction_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_l2_reduction_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l2_reduction_1_we0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_reduction_1_we0 <= ap_const_logic_1;
        else 
            output_l2_reduction_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_2_address0_assign_proc : process(icmp_ln427_reg_759, idxprom16_i_i_i_reg_832, output_l2_reduction_2_addr_1_reg_873, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_reduction_2_address0 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_reduction_2_address0 <= output_l2_reduction_2_addr_1_reg_873;
            else 
                output_l2_reduction_2_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            output_l2_reduction_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    output_l2_reduction_2_address1 <= idxprom16_i_i_i_fu_615_p1(11 - 1 downto 0);

    output_l2_reduction_2_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_reduction_2_ce0 <= ap_const_logic_1;
        else 
            output_l2_reduction_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_l2_reduction_2_ce1 <= ap_const_logic_1;
        else 
            output_l2_reduction_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_2_d0_assign_proc : process(icmp_ln427_reg_759, add_ln119_2_fu_652_p2, output_l12_load_cast_i_i_i_fu_678_p1, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_reduction_2_d0 <= output_l12_load_cast_i_i_i_fu_678_p1;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_reduction_2_d0 <= add_ln119_2_fu_652_p2;
            else 
                output_l2_reduction_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_l2_reduction_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l2_reduction_2_we0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_reduction_2_we0 <= ap_const_logic_1;
        else 
            output_l2_reduction_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_3_address0_assign_proc : process(icmp_ln427_reg_759, idxprom16_i_i_i_reg_832, output_l2_reduction_3_addr_1_reg_884, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_reduction_3_address0 <= idxprom16_i_i_i_reg_832(11 - 1 downto 0);
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_reduction_3_address0 <= output_l2_reduction_3_addr_1_reg_884;
            else 
                output_l2_reduction_3_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            output_l2_reduction_3_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    output_l2_reduction_3_address1 <= idxprom16_i_i_i_fu_615_p1(11 - 1 downto 0);

    output_l2_reduction_3_ce0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_reduction_3_ce0 <= ap_const_logic_1;
        else 
            output_l2_reduction_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_3_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_l2_reduction_3_ce1 <= ap_const_logic_1;
        else 
            output_l2_reduction_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_l2_reduction_3_d0_assign_proc : process(icmp_ln427_reg_759, output_l13_load_cast_i_i_i_fu_684_p1, add_ln119_3_fu_664_p2, ap_condition_372)
    begin
        if ((ap_const_boolean_1 = ap_condition_372)) then
            if ((icmp_ln427_reg_759 = ap_const_lv1_1)) then 
                output_l2_reduction_3_d0 <= output_l13_load_cast_i_i_i_fu_684_p1;
            elsif ((icmp_ln427_reg_759 = ap_const_lv1_0)) then 
                output_l2_reduction_3_d0 <= add_ln119_3_fu_664_p2;
            else 
                output_l2_reduction_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_l2_reduction_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l2_reduction_3_we0_assign_proc : process(icmp_ln427_reg_759, ap_block_pp0_stage0_11001, icmp_ln105_reg_798_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln105_reg_798_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln427_reg_759 = ap_const_lv1_0)))) then 
            output_l2_reduction_3_we0 <= ap_const_logic_1;
        else 
            output_l2_reduction_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    param_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            param_blk_n <= param_empty_n;
        else 
            param_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    param_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n)
    begin
        if ((not(((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            param_read <= ap_const_logic_1;
        else 
            param_read <= ap_const_logic_0;
        end if; 
    end process;


    ro_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ro_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ro_blk_n <= ro_empty_n;
        else 
            ro_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ro_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n)
    begin
        if ((not(((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ro_read <= ap_const_logic_1;
        else 
            ro_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln105_1_fu_565_p3 <= 
        add_ln105_3_fu_559_p2 when (icmp_ln107_fu_546_p2(0) = '1') else 
        ap_phi_mux_hi_phi_fu_407_p4;
    select_ln105_fu_551_p3 <= 
        ap_const_lv32_0 when (icmp_ln107_fu_546_p2(0) = '1') else 
        wi_reg_414;

    so_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, so_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            so_blk_n <= so_empty_n;
        else 
            so_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    so_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n)
    begin
        if ((not(((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            so_read <= ap_const_logic_1;
        else 
            so_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp2_fu_594_p2 <= std_logic_vector(signed(mul5_i_i_i_reg_783) + signed(empty_fu_586_p1));
    trunc_ln105_1_fu_577_p1 <= select_ln105_1_fu_565_p3(11 - 1 downto 0);

    wo_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, wo_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wo_blk_n <= wo_empty_n;
        else 
            wo_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    wo_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, param_empty_n, ko_1_empty_n, ho_empty_n, wo_empty_n, ro_empty_n, co_empty_n, so_empty_n)
    begin
        if ((not(((so_empty_n = ap_const_logic_0) or (co_empty_n = ap_const_logic_0) or (ro_empty_n = ap_const_logic_0) or (wo_empty_n = ap_const_logic_0) or (ho_empty_n = ap_const_logic_0) or (ko_1_empty_n = ap_const_logic_0) or (param_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wo_read <= ap_const_logic_1;
        else 
            wo_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
