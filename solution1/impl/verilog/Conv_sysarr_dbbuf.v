// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_dbbuf_Conv_sysarr_dbbuf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.340000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=4501,HLS_SYN_LUT=5746,HLS_VERSION=2020_1}" *)

module Conv_sysarr_dbbuf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 47'd1;
parameter    ap_ST_fsm_state2 = 47'd2;
parameter    ap_ST_fsm_state3 = 47'd4;
parameter    ap_ST_fsm_state4 = 47'd8;
parameter    ap_ST_fsm_state5 = 47'd16;
parameter    ap_ST_fsm_pp0_stage0 = 47'd32;
parameter    ap_ST_fsm_state8 = 47'd64;
parameter    ap_ST_fsm_pp1_stage0 = 47'd128;
parameter    ap_ST_fsm_state11 = 47'd256;
parameter    ap_ST_fsm_state12 = 47'd512;
parameter    ap_ST_fsm_pp2_stage0 = 47'd1024;
parameter    ap_ST_fsm_state15 = 47'd2048;
parameter    ap_ST_fsm_pp3_stage0 = 47'd4096;
parameter    ap_ST_fsm_state18 = 47'd8192;
parameter    ap_ST_fsm_pp4_stage0 = 47'd16384;
parameter    ap_ST_fsm_state21 = 47'd32768;
parameter    ap_ST_fsm_pp5_stage0 = 47'd65536;
parameter    ap_ST_fsm_state24 = 47'd131072;
parameter    ap_ST_fsm_state25 = 47'd262144;
parameter    ap_ST_fsm_state26 = 47'd524288;
parameter    ap_ST_fsm_state27 = 47'd1048576;
parameter    ap_ST_fsm_state28 = 47'd2097152;
parameter    ap_ST_fsm_state29 = 47'd4194304;
parameter    ap_ST_fsm_state30 = 47'd8388608;
parameter    ap_ST_fsm_pp6_stage0 = 47'd16777216;
parameter    ap_ST_fsm_state35 = 47'd33554432;
parameter    ap_ST_fsm_state36 = 47'd67108864;
parameter    ap_ST_fsm_state37 = 47'd134217728;
parameter    ap_ST_fsm_state38 = 47'd268435456;
parameter    ap_ST_fsm_state39 = 47'd536870912;
parameter    ap_ST_fsm_state40 = 47'd1073741824;
parameter    ap_ST_fsm_state41 = 47'd2147483648;
parameter    ap_ST_fsm_state42 = 47'd4294967296;
parameter    ap_ST_fsm_state43 = 47'd8589934592;
parameter    ap_ST_fsm_state44 = 47'd17179869184;
parameter    ap_ST_fsm_state45 = 47'd34359738368;
parameter    ap_ST_fsm_state46 = 47'd68719476736;
parameter    ap_ST_fsm_state47 = 47'd137438953472;
parameter    ap_ST_fsm_state48 = 47'd274877906944;
parameter    ap_ST_fsm_state49 = 47'd549755813888;
parameter    ap_ST_fsm_state50 = 47'd1099511627776;
parameter    ap_ST_fsm_pp7_stage0 = 47'd2199023255552;
parameter    ap_ST_fsm_state56 = 47'd4398046511104;
parameter    ap_ST_fsm_pp8_stage0 = 47'd8796093022208;
parameter    ap_ST_fsm_state65 = 47'd17592186044416;
parameter    ap_ST_fsm_pp9_stage0 = 47'd35184372088832;
parameter    ap_ST_fsm_state71 = 47'd70368744177664;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [63:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [63:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [63:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    weight_in_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln94_reg_4771;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln94_1_reg_4785;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] icmp_ln94_2_reg_4799;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln94_3_reg_4813;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp9_iter4;
wire    ap_block_pp9_stage0;
reg   [0:0] icmp_ln330_reg_6210;
reg   [0:0] icmp_ln330_reg_6210_pp9_iter3_reg;
reg   [31:0] k_reg_1329;
reg   [31:0] k_1_reg_1340;
reg   [31:0] wh_reg_1362;
reg   [31:0] wh_1_reg_1373;
reg   [31:0] wh_2_reg_1384;
reg   [31:0] wh_4_reg_1395;
reg   [63:0] indvar_flatten_reg_1451;
reg   [31:0] hi_reg_1462;
reg   [31:0] wi_reg_1473;
reg   [63:0] indvar_flatten6_reg_1518;
reg   [31:0] hi_1_reg_1529;
reg   [31:0] wi_1_reg_1540;
reg   [30:0] i_reg_1551;
reg   [63:0] indvar_flatten50_reg_1562;
reg   [29:0] k_2_reg_1573;
reg   [34:0] indvar_flatten36_reg_1584;
reg   [2:0] ki_reg_1595;
reg   [31:0] wh_3_reg_1606;
reg   [63:0] bias_in_V_read_reg_4392;
reg    ap_block_state1;
wire  signed [31:0] tmp_data_V_1_fu_1653_p1;
reg  signed [31:0] tmp_data_V_1_reg_4397;
reg   [63:0] bias_in_V_read_1_reg_4403;
wire  signed [31:0] tmp_data_V_2_fu_1657_p1;
reg  signed [31:0] tmp_data_V_2_reg_4409;
wire  signed [10:0] trunc_ln521_fu_1661_p1;
reg  signed [10:0] trunc_ln521_reg_4414;
wire  signed [31:0] tmp_data_V_3_fu_1665_p1;
reg  signed [31:0] tmp_data_V_3_reg_4421;
wire  signed [8:0] trunc_ln521_1_fu_1669_p1;
reg  signed [8:0] trunc_ln521_1_reg_4430;
wire  signed [31:0] tmp_data_V_4_fu_1673_p1;
reg  signed [31:0] tmp_data_V_4_reg_4438;
wire  signed [9:0] trunc_ln521_2_fu_1677_p1;
reg  signed [9:0] trunc_ln521_2_reg_4444;
wire  signed [31:0] tmp_data_V_5_fu_1681_p1;
reg  signed [31:0] tmp_data_V_5_reg_4450;
wire  signed [10:0] trunc_ln521_3_fu_1685_p1;
reg  signed [10:0] trunc_ln521_3_reg_4458;
wire   [0:0] icmp_ln82_fu_1689_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] add_ln82_fu_1694_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln84_fu_1700_p1;
reg   [1:0] trunc_ln84_reg_4503;
reg   [8:0] lshr_ln_reg_4507;
wire   [31:0] mul37_fu_1737_p2;
reg   [31:0] mul37_reg_4512;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln86_fu_1743_p2;
wire    ap_block_state9_pp1_stage0_iter0;
reg    ap_block_state10_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [31:0] add_ln86_fu_1748_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln88_fu_1754_p1;
reg   [1:0] trunc_ln88_reg_4526;
reg   [8:0] lshr_ln1_reg_4530;
reg   [29:0] div48_cast_reg_4535;
wire    ap_CS_fsm_state11;
wire   [31:0] mul51_fu_1792_p2;
reg   [31:0] mul51_reg_4542;
wire  signed [9:0] empty_fu_1796_p1;
reg  signed [9:0] empty_reg_4550;
wire   [0:0] cmp52307_fu_1800_p2;
reg   [0:0] cmp52307_reg_4555;
wire   [0:0] icmp_ln91_fu_1806_p2;
wire    ap_CS_fsm_state12;
wire   [29:0] co_3_fu_1811_p2;
reg   [29:0] co_3_reg_4563;
wire   [9:0] mul60_fu_1821_p2;
reg   [9:0] mul60_reg_4568;
wire   [29:0] div68_cast8_fu_1826_p4;
reg   [29:0] div68_cast8_reg_4720;
wire   [31:0] mul158_fu_1835_p2;
reg   [31:0] mul158_reg_4725;
wire  signed [8:0] empty_34_fu_1839_p1;
reg  signed [8:0] empty_34_reg_4736;
wire   [31:0] input_rows_fu_1843_p2;
reg   [31:0] input_rows_reg_4741;
wire   [0:0] cmp161278_fu_1849_p2;
reg   [0:0] cmp161278_reg_4746;
wire  signed [8:0] empty_35_fu_1855_p1;
reg  signed [8:0] empty_35_reg_4750;
wire   [63:0] bound_fu_1861_p2;
reg   [63:0] bound_reg_4755;
wire   [63:0] bound11_fu_1870_p2;
reg   [63:0] bound11_reg_4761;
wire   [59:0] bound18_fu_1883_p2;
reg   [59:0] bound18_reg_4766;
wire   [0:0] icmp_ln94_fu_1889_p2;
wire    ap_block_state13_pp2_stage0_iter0;
reg    ap_block_state14_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [31:0] add_ln94_fu_1894_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [9:0] trunc_ln97_fu_1900_p1;
reg   [9:0] trunc_ln97_reg_4780;
wire   [0:0] icmp_ln94_1_fu_1918_p2;
wire    ap_block_state16_pp3_stage0_iter0;
reg    ap_block_state17_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [31:0] add_ln94_1_fu_1923_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [9:0] trunc_ln97_1_fu_1929_p1;
reg   [9:0] trunc_ln97_1_reg_4794;
wire   [0:0] icmp_ln94_2_fu_1947_p2;
wire    ap_block_state19_pp4_stage0_iter0;
reg    ap_block_state20_pp4_stage0_iter1;
reg    ap_block_pp4_stage0_11001;
wire   [31:0] add_ln94_2_fu_1952_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [9:0] trunc_ln97_2_fu_1958_p1;
reg   [9:0] trunc_ln97_2_reg_4808;
wire   [0:0] icmp_ln94_3_fu_1976_p2;
wire    ap_block_state22_pp5_stage0_iter0;
reg    ap_block_state23_pp5_stage0_iter1;
reg    ap_block_pp5_stage0_11001;
wire   [31:0] add_ln94_3_fu_1981_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [9:0] add_ln97_3_fu_1991_p2;
reg   [9:0] add_ln97_3_reg_4822;
wire   [0:0] icmp_ln102_fu_2005_p2;
wire    ap_CS_fsm_state25;
wire   [59:0] add_ln102_fu_2010_p2;
reg   [59:0] add_ln102_reg_4831;
wire   [0:0] icmp_ln105_fu_2016_p2;
reg   [0:0] icmp_ln105_reg_4836;
wire  signed [8:0] select_ln102_1_fu_2035_p3;
reg  signed [8:0] select_ln102_1_reg_4841;
wire   [10:0] p_mid2_fu_2043_p3;
reg   [10:0] p_mid2_reg_4847;
wire   [29:0] select_ln102_2_fu_2069_p3;
reg   [29:0] select_ln102_2_reg_4867;
wire   [34:0] zext_ln330_fu_2084_p1;
reg   [34:0] zext_ln330_reg_4872;
wire   [63:0] mul_ln330_fu_2095_p2;
reg   [63:0] mul_ln330_reg_4877;
wire   [0:0] icmp_ln332_fu_2101_p2;
reg   [0:0] icmp_ln332_reg_4882;
wire   [29:0] select_ln102_fu_2106_p3;
reg   [29:0] select_ln102_reg_4887;
wire    ap_CS_fsm_state28;
wire  signed [8:0] mul_ln102_fu_2113_p2;
reg  signed [8:0] mul_ln102_reg_4892;
wire   [8:0] mul_ln102_1_fu_2117_p2;
reg   [8:0] mul_ln102_1_reg_4897;
wire   [10:0] mul107_mid2_fu_2126_p3;
reg   [10:0] mul107_mid2_reg_4908;
wire  signed [10:0] grp_fu_3895_p2;
reg  signed [10:0] mul_ln102_3_reg_4916;
wire  signed [10:0] grp_fu_3900_p2;
reg  signed [10:0] mul_ln102_4_reg_4924;
wire  signed [10:0] grp_fu_3905_p2;
reg  signed [10:0] mul_ln102_5_reg_4932;
wire  signed [9:0] trunc_ln105_fu_2134_p1;
reg  signed [9:0] trunc_ln105_reg_4940;
wire   [10:0] c_fu_2142_p3;
reg   [10:0] c_reg_4945;
wire   [10:0] c_3_fu_2150_p2;
reg   [10:0] c_3_reg_4955;
wire   [2:0] add_ln113_fu_2162_p2;
reg   [2:0] add_ln113_reg_4966;
wire    ap_CS_fsm_state29;
wire   [1:0] empty_36_fu_2172_p1;
reg   [1:0] empty_36_reg_4971;
wire   [0:0] icmp_ln113_fu_2156_p2;
wire  signed [31:0] conv83_fu_2298_p1;
reg  signed [31:0] conv83_reg_5076;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln114_fu_2302_p2;
reg   [0:0] icmp_ln114_reg_5084;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state31_pp6_stage0_iter0;
wire    ap_block_state32_pp6_stage0_iter1;
wire    ap_block_state33_pp6_stage0_iter2;
wire    ap_block_state34_pp6_stage0_iter3;
wire    ap_block_pp6_stage0_11001;
wire   [63:0] add_ln114_1_fu_2307_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [31:0] select_ln114_1_fu_2332_p3;
reg   [31:0] select_ln114_1_reg_5093;
wire   [8:0] trunc_ln123_fu_2344_p1;
reg   [8:0] trunc_ln123_reg_5098;
reg   [8:0] trunc_ln123_reg_5098_pp6_iter1_reg;
wire   [31:0] add_ln117_fu_2348_p2;
wire  signed [10:0] grp_fu_3910_p2;
reg  signed [10:0] mul109_2262_reg_5108;
wire    ap_CS_fsm_state38;
wire  signed [10:0] grp_fu_3915_p2;
reg  signed [10:0] mul109_1264_reg_5113;
wire  signed [10:0] grp_fu_3920_p2;
reg  signed [10:0] mul109_3266_reg_5118;
wire   [9:0] mul139_fu_2361_p2;
reg   [9:0] mul139_reg_5123;
wire  signed [10:0] grp_fu_3925_p2;
reg  signed [10:0] mul109_1268_reg_5128;
wire  signed [10:0] grp_fu_3930_p2;
reg  signed [10:0] mul109_2270_reg_5133;
wire  signed [10:0] grp_fu_3935_p2;
reg  signed [10:0] mul109_3272_reg_5138;
wire  signed [10:0] grp_fu_3940_p2;
reg  signed [10:0] mul109274_reg_5143;
wire  signed [10:0] grp_fu_3945_p2;
reg  signed [10:0] mul109276_reg_5148;
wire  signed [10:0] grp_fu_3950_p2;
reg  signed [10:0] mul109278_reg_5153;
wire  signed [10:0] grp_fu_3955_p2;
reg  signed [10:0] mul109280_reg_5158;
wire  signed [10:0] grp_fu_3960_p2;
reg  signed [10:0] mul109_1282_reg_5163;
wire  signed [10:0] grp_fu_3965_p2;
reg  signed [10:0] mul109_1284_reg_5168;
wire  signed [10:0] grp_fu_3970_p2;
reg  signed [10:0] mul109_2286_reg_5173;
wire  signed [10:0] grp_fu_3975_p2;
reg  signed [10:0] mul109_2288_reg_5178;
wire  signed [10:0] grp_fu_3980_p2;
reg  signed [10:0] mul109_3290_reg_5183;
wire  signed [10:0] grp_fu_3985_p2;
reg  signed [10:0] mul109_3292_reg_5188;
wire   [63:0] add_ln129_16_fu_2370_p2;
reg   [63:0] add_ln129_16_reg_5196;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln132_fu_2376_p2;
reg   [0:0] icmp_ln132_reg_5201;
wire   [0:0] icmp_ln129_fu_2365_p2;
wire   [31:0] select_ln129_1_fu_2387_p3;
reg   [31:0] select_ln129_1_reg_5206;
wire   [9:0] trunc_ln129_fu_2395_p1;
reg   [9:0] trunc_ln129_reg_5211;
wire   [29:0] co_2_fu_2403_p2;
wire   [31:0] select_ln129_fu_2408_p3;
reg   [31:0] select_ln129_reg_5221;
wire    ap_CS_fsm_state41;
wire   [10:0] trunc_ln148_fu_2415_p1;
wire   [9:0] trunc_ln148_1_fu_2419_p1;
reg   [9:0] trunc_ln148_1_reg_5246;
wire   [1:0] trunc_ln147_fu_2423_p1;
reg   [1:0] trunc_ln147_reg_5251;
wire    ap_CS_fsm_state42;
wire   [1:0] trunc_ln147_1_fu_2443_p1;
reg   [1:0] trunc_ln147_1_reg_5276;
wire   [1:0] trunc_ln147_2_fu_2463_p1;
reg   [1:0] trunc_ln147_2_reg_5301;
reg   [8:0] lshr_ln147_2_reg_5306;
wire   [1:0] trunc_ln147_3_fu_2475_p1;
reg   [1:0] trunc_ln147_3_reg_5311;
reg   [8:0] lshr_ln147_3_reg_5316;
wire   [1:0] trunc_ln147_4_fu_2487_p1;
reg   [1:0] trunc_ln147_4_reg_5321;
reg   [8:0] lshr_ln147_4_reg_5326;
wire   [1:0] trunc_ln147_5_fu_2499_p1;
reg   [1:0] trunc_ln147_5_reg_5331;
reg   [8:0] lshr_ln147_5_reg_5336;
wire   [1:0] trunc_ln147_6_fu_2511_p1;
reg   [1:0] trunc_ln147_6_reg_5341;
reg   [8:0] lshr_ln147_6_reg_5346;
wire   [1:0] trunc_ln147_7_fu_2523_p1;
reg   [1:0] trunc_ln147_7_reg_5351;
reg   [8:0] lshr_ln147_7_reg_5356;
wire   [1:0] trunc_ln147_8_fu_2535_p1;
reg   [1:0] trunc_ln147_8_reg_5361;
reg   [8:0] lshr_ln147_8_reg_5366;
wire   [1:0] trunc_ln147_9_fu_2547_p1;
reg   [1:0] trunc_ln147_9_reg_5371;
reg   [8:0] lshr_ln147_9_reg_5376;
wire   [1:0] trunc_ln147_10_fu_2559_p1;
reg   [1:0] trunc_ln147_10_reg_5381;
reg   [8:0] lshr_ln147_s_reg_5386;
wire   [1:0] trunc_ln147_11_fu_2571_p1;
reg   [1:0] trunc_ln147_11_reg_5391;
reg   [8:0] lshr_ln147_10_reg_5396;
wire   [1:0] trunc_ln147_12_fu_2583_p1;
reg   [1:0] trunc_ln147_12_reg_5401;
reg   [8:0] lshr_ln147_11_reg_5406;
wire   [1:0] trunc_ln147_13_fu_2595_p1;
reg   [1:0] trunc_ln147_13_reg_5411;
reg   [8:0] lshr_ln147_12_reg_5416;
wire   [1:0] trunc_ln147_14_fu_2607_p1;
reg   [1:0] trunc_ln147_14_reg_5421;
reg   [8:0] lshr_ln147_13_reg_5426;
wire   [1:0] trunc_ln147_15_fu_2619_p1;
reg   [1:0] trunc_ln147_15_reg_5431;
reg   [8:0] lshr_ln147_14_reg_5436;
wire   [7:0] tmp_3_fu_2634_p6;
reg   [7:0] tmp_3_reg_5441;
wire    ap_CS_fsm_state43;
wire   [7:0] tmp_4_fu_2651_p6;
reg   [7:0] tmp_4_reg_5446;
wire   [7:0] tmp_5_fu_2682_p6;
reg   [7:0] tmp_5_reg_5491;
wire    ap_CS_fsm_state44;
wire   [7:0] tmp_6_fu_2699_p6;
reg   [7:0] tmp_6_reg_5496;
wire   [7:0] tmp_7_fu_2730_p6;
reg   [7:0] tmp_7_reg_5541;
wire    ap_CS_fsm_state45;
wire   [7:0] tmp_8_fu_2747_p6;
reg   [7:0] tmp_8_reg_5546;
wire   [7:0] tmp_9_fu_2778_p6;
reg   [7:0] tmp_9_reg_5591;
wire    ap_CS_fsm_state46;
wire   [7:0] tmp_s_fu_2795_p6;
reg   [7:0] tmp_s_reg_5596;
wire   [7:0] tmp_10_fu_2826_p6;
reg   [7:0] tmp_10_reg_5641;
wire    ap_CS_fsm_state47;
wire   [7:0] tmp_11_fu_2843_p6;
reg   [7:0] tmp_11_reg_5646;
wire   [7:0] tmp_12_fu_2874_p6;
reg   [7:0] tmp_12_reg_5691;
wire    ap_CS_fsm_state48;
wire   [7:0] tmp_13_fu_2891_p6;
reg   [7:0] tmp_13_reg_5696;
wire   [7:0] tmp_14_fu_2922_p6;
reg   [7:0] tmp_14_reg_5741;
wire    ap_CS_fsm_state49;
wire   [7:0] tmp_15_fu_2939_p6;
reg   [7:0] tmp_15_reg_5746;
wire   [7:0] tmp_16_fu_2970_p6;
reg   [7:0] tmp_16_reg_5791;
wire    ap_CS_fsm_state50;
wire   [7:0] tmp_17_fu_2987_p6;
reg   [7:0] tmp_17_reg_5796;
wire   [0:0] icmp_ln155_fu_3001_p2;
reg   [0:0] icmp_ln155_reg_5801;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state51_pp7_stage0_iter0;
wire    ap_block_state52_pp7_stage0_iter1;
wire    ap_block_state53_pp7_stage0_iter2;
wire    ap_block_state54_pp7_stage0_iter3;
wire    ap_block_state55_pp7_stage0_iter4;
wire    ap_block_pp7_stage0_11001;
reg   [0:0] icmp_ln155_reg_5801_pp7_iter1_reg;
reg   [0:0] icmp_ln155_reg_5801_pp7_iter2_reg;
reg   [0:0] icmp_ln155_reg_5801_pp7_iter3_reg;
wire   [63:0] add_ln155_2_fu_3006_p2;
reg    ap_enable_reg_pp7_iter0;
wire   [31:0] select_ln155_1_fu_3031_p3;
reg   [31:0] select_ln155_1_reg_5810;
wire   [8:0] empty_39_fu_3056_p1;
reg   [8:0] empty_39_reg_5820;
reg   [8:0] empty_39_reg_5820_pp7_iter1_reg;
(* use_dsp48 = "no" *) wire   [9:0] tmp3_fu_3060_p2;
reg   [9:0] tmp3_reg_5825;
reg   [9:0] tmp3_reg_5825_pp7_iter1_reg;
wire   [31:0] add_ln158_fu_3065_p2;
wire  signed [8:0] grp_fu_4166_p3;
reg  signed [8:0] add149_reg_5835;
reg    ap_enable_reg_pp7_iter3;
wire  signed [15:0] p_cast13_fu_3085_p1;
reg  signed [15:0] p_cast13_reg_5860;
wire    ap_CS_fsm_state56;
wire  signed [15:0] p_cast22_fu_3088_p1;
reg  signed [15:0] p_cast22_reg_5865;
wire  signed [15:0] p_cast24_fu_3091_p1;
reg  signed [15:0] p_cast24_reg_5870;
wire  signed [15:0] p_cast26_fu_3094_p1;
reg  signed [15:0] p_cast26_reg_5875;
wire  signed [15:0] p_cast15_fu_3097_p1;
reg  signed [15:0] p_cast15_reg_5880;
wire  signed [15:0] p_cast28_fu_3100_p1;
reg  signed [15:0] p_cast28_reg_5885;
wire  signed [15:0] p_cast30_fu_3103_p1;
reg  signed [15:0] p_cast30_reg_5890;
wire  signed [15:0] p_cast32_fu_3106_p1;
reg  signed [15:0] p_cast32_reg_5895;
wire  signed [15:0] p_cast17_fu_3109_p1;
reg  signed [15:0] p_cast17_reg_5900;
wire  signed [15:0] p_cast34_fu_3112_p1;
reg  signed [15:0] p_cast34_reg_5905;
wire  signed [15:0] p_cast36_fu_3115_p1;
reg  signed [15:0] p_cast36_reg_5910;
wire  signed [15:0] p_cast38_fu_3118_p1;
reg  signed [15:0] p_cast38_reg_5915;
wire  signed [15:0] p_cast19_fu_3121_p1;
reg  signed [15:0] p_cast19_reg_5920;
wire  signed [15:0] p_cast40_fu_3124_p1;
reg  signed [15:0] p_cast40_reg_5925;
wire  signed [15:0] p_cast42_fu_3127_p1;
reg  signed [15:0] p_cast42_reg_5930;
wire  signed [15:0] sext_ln183_fu_3130_p1;
reg  signed [15:0] sext_ln183_reg_5935;
wire   [31:0] zext_ln183_fu_3133_p1;
reg   [31:0] zext_ln183_reg_5940;
wire    ap_CS_fsm_pp8_stage0;
wire    ap_block_state57_pp8_stage0_iter0;
wire    ap_block_state58_pp8_stage0_iter1;
wire    ap_block_state59_pp8_stage0_iter2;
wire    ap_block_state60_pp8_stage0_iter3;
wire    ap_block_state61_pp8_stage0_iter4;
wire    ap_block_state62_pp8_stage0_iter5;
wire    ap_block_state63_pp8_stage0_iter6;
wire    ap_block_state64_pp8_stage0_iter7;
wire    ap_block_pp8_stage0_11001;
reg   [31:0] zext_ln183_reg_5940_pp8_iter1_reg;
reg   [31:0] zext_ln183_reg_5940_pp8_iter2_reg;
wire   [0:0] icmp_ln183_fu_3137_p2;
reg   [0:0] icmp_ln183_reg_5948;
reg   [0:0] icmp_ln183_reg_5948_pp8_iter1_reg;
reg   [0:0] icmp_ln183_reg_5948_pp8_iter2_reg;
reg   [0:0] icmp_ln183_reg_5948_pp8_iter3_reg;
reg   [0:0] icmp_ln183_reg_5948_pp8_iter4_reg;
reg   [0:0] icmp_ln183_reg_5948_pp8_iter5_reg;
wire   [30:0] add_ln183_fu_3142_p2;
reg    ap_enable_reg_pp8_iter0;
wire   [8:0] trunc_ln196_fu_3148_p1;
reg   [8:0] trunc_ln196_reg_5957;
reg   [8:0] trunc_ln196_reg_5957_pp8_iter1_reg;
reg   [8:0] trunc_ln196_reg_5957_pp8_iter2_reg;
reg   [8:0] trunc_ln196_reg_5957_pp8_iter3_reg;
reg   [8:0] trunc_ln196_reg_5957_pp8_iter4_reg;
reg   [8:0] trunc_ln196_reg_5957_pp8_iter5_reg;
reg   [8:0] trunc_ln196_reg_5957_pp8_iter6_reg;
wire   [0:0] icmp_ln195_fu_3157_p2;
reg   [0:0] icmp_ln195_reg_5973;
reg   [0:0] icmp_ln195_reg_5973_pp8_iter1_reg;
reg   [0:0] icmp_ln195_reg_5973_pp8_iter2_reg;
wire   [0:0] and_ln306_fu_3188_p2;
reg   [0:0] and_ln306_reg_5979;
reg   [0:0] and_ln306_reg_5979_pp8_iter1_reg;
reg   [0:0] and_ln306_reg_5979_pp8_iter2_reg;
reg   [0:0] and_ln306_reg_5979_pp8_iter3_reg;
reg   [0:0] and_ln306_reg_5979_pp8_iter4_reg;
reg   [0:0] and_ln306_reg_5979_pp8_iter5_reg;
reg   [0:0] and_ln306_reg_5979_pp8_iter6_reg;
wire   [8:0] add_ln193_fu_3200_p2;
reg   [8:0] add_ln193_reg_5983;
wire   [63:0] zext_ln205_fu_3277_p1;
reg   [63:0] zext_ln205_reg_6018;
reg   [63:0] zext_ln205_reg_6018_pp8_iter3_reg;
reg   [63:0] zext_ln205_reg_6018_pp8_iter4_reg;
reg   [63:0] zext_ln205_reg_6018_pp8_iter5_reg;
reg   [63:0] zext_ln205_reg_6018_pp8_iter6_reg;
wire   [0:0] tmp_19_fu_3376_p3;
reg   [0:0] tmp_19_reg_6063;
wire   [31:0] output_l1_0_q1;
reg    ap_enable_reg_pp8_iter3;
wire   [0:0] and_ln306_1_fu_3442_p2;
reg   [0:0] and_ln306_1_reg_6093;
reg   [0:0] and_ln306_1_reg_6093_pp8_iter4_reg;
reg   [0:0] and_ln306_1_reg_6093_pp8_iter5_reg;
reg   [0:0] and_ln306_1_reg_6093_pp8_iter6_reg;
wire   [0:0] and_ln306_2_fu_3472_p2;
reg   [0:0] and_ln306_2_reg_6097;
reg   [0:0] and_ln306_2_reg_6097_pp8_iter4_reg;
reg   [0:0] and_ln306_2_reg_6097_pp8_iter5_reg;
reg   [0:0] and_ln306_2_reg_6097_pp8_iter6_reg;
wire   [0:0] and_ln306_3_fu_3483_p2;
reg   [0:0] and_ln306_3_reg_6101;
reg   [0:0] and_ln306_3_reg_6101_pp8_iter4_reg;
reg   [0:0] and_ln306_3_reg_6101_pp8_iter5_reg;
reg   [0:0] and_ln306_3_reg_6101_pp8_iter6_reg;
reg    ap_enable_reg_pp8_iter4;
reg    ap_enable_reg_pp8_iter5;
reg    ap_enable_reg_pp8_iter6;
wire   [31:0] add_ln132_fu_3739_p2;
wire    ap_CS_fsm_state65;
wire   [0:0] icmp_ln330_fu_3744_p2;
wire    ap_CS_fsm_pp9_stage0;
wire    ap_block_state66_pp9_stage0_iter0;
wire    ap_block_state67_pp9_stage0_iter1;
wire    ap_block_state68_pp9_stage0_iter2;
wire    ap_block_state69_pp9_stage0_iter3;
reg    ap_block_state70_pp9_stage0_iter4;
reg    ap_block_pp9_stage0_11001;
reg   [0:0] icmp_ln330_reg_6210_pp9_iter1_reg;
reg   [0:0] icmp_ln330_reg_6210_pp9_iter2_reg;
wire   [63:0] add_ln330_fu_3749_p2;
reg    ap_enable_reg_pp9_iter0;
wire   [0:0] icmp_ln331_fu_3755_p2;
reg   [0:0] icmp_ln331_reg_6219;
reg   [0:0] icmp_ln331_reg_6219_pp9_iter1_reg;
wire   [29:0] select_ln330_1_fu_3766_p3;
reg   [29:0] select_ln330_1_reg_6227;
wire   [34:0] select_ln331_3_fu_3784_p3;
wire   [1:0] select_ln331_1_fu_3844_p3;
reg   [1:0] select_ln331_1_reg_6242;
reg   [1:0] select_ln331_1_reg_6242_pp9_iter3_reg;
wire   [2:0] select_ln331_2_fu_3852_p3;
reg    ap_enable_reg_pp9_iter2;
wire   [31:0] add_ln332_fu_3864_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state13;
wire    ap_CS_fsm_state15;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state16;
wire    ap_CS_fsm_state18;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state19;
wire    ap_CS_fsm_state21;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state22;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state31;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state51;
reg    ap_enable_reg_pp7_iter1;
reg    ap_enable_reg_pp7_iter2;
reg    ap_enable_reg_pp7_iter4;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_flush_enable;
reg    ap_enable_reg_pp8_iter1;
reg    ap_enable_reg_pp8_iter2;
reg    ap_condition_pp8_exit_iter4_state61;
reg    ap_enable_reg_pp8_iter7;
reg    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_flush_enable;
reg    ap_enable_reg_pp9_iter1;
reg    ap_enable_reg_pp9_iter3;
reg    ap_condition_pp9_exit_iter2_state68;
reg   [8:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_q0;
reg   [8:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_q0;
reg   [8:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_q0;
reg   [8:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_q0;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_0_address1;
reg    weight_l2_0_ce1;
wire   [7:0] weight_l2_0_q1;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_1_address1;
reg    weight_l2_1_ce1;
wire   [7:0] weight_l2_1_q1;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_2_address1;
reg    weight_l2_2_ce1;
wire   [7:0] weight_l2_2_q1;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_q0;
reg   [8:0] weight_l2_3_address1;
reg    weight_l2_3_ce1;
wire   [7:0] weight_l2_3_q1;
reg   [9:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_d0;
wire   [7:0] data_l2_0_q0;
reg   [9:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_d0;
wire   [7:0] data_l2_1_q0;
reg   [9:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_d0;
wire   [7:0] data_l2_2_q0;
reg   [9:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_d0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] data_l1_0_0_address0;
reg    data_l1_0_0_ce0;
reg    data_l1_0_0_we0;
wire  signed [7:0] data_l1_0_0_q0;
reg   [8:0] data_l1_1_0_address0;
reg    data_l1_1_0_ce0;
reg    data_l1_1_0_we0;
wire   [7:0] data_l1_1_0_q0;
reg   [8:0] data_l1_2_0_address0;
reg    data_l1_2_0_ce0;
reg    data_l1_2_0_we0;
wire   [7:0] data_l1_2_0_q0;
reg   [8:0] data_l1_3_0_address0;
reg    data_l1_3_0_ce0;
reg    data_l1_3_0_we0;
wire   [7:0] data_l1_3_0_q0;
reg   [8:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
reg   [31:0] output_l1_0_d0;
reg   [8:0] output_l1_0_address1;
reg    output_l1_0_ce1;
reg   [8:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
reg   [31:0] output_l1_1_d0;
reg   [8:0] output_l1_1_address1;
reg    output_l1_1_ce1;
wire   [31:0] output_l1_1_q1;
reg   [8:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
reg   [31:0] output_l1_2_d0;
reg   [8:0] output_l1_2_address1;
reg    output_l1_2_ce1;
wire   [31:0] output_l1_2_q1;
reg   [8:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
reg   [31:0] output_l1_3_d0;
reg   [8:0] output_l1_3_address1;
reg    output_l1_3_ce1;
wire   [31:0] output_l1_3_q1;
reg   [29:0] co_reg_1351;
wire    ap_CS_fsm_state24;
reg   [59:0] indvar_flatten29_reg_1406;
reg   [29:0] ko_reg_1417;
reg   [29:0] co_1_reg_1428;
reg   [2:0] ki_1_reg_1440;
wire    ap_CS_fsm_state35;
reg   [31:0] ap_phi_mux_hi_phi_fu_1466_p4;
wire    ap_block_pp6_stage0;
reg   [63:0] indvar_flatten13_reg_1484;
reg   [31:0] r_reg_1495;
reg   [31:0] s_reg_1506;
reg   [31:0] ap_phi_mux_hi_1_phi_fu_1533_p4;
wire    ap_block_pp7_stage0;
reg   [29:0] ap_phi_mux_k_2_phi_fu_1577_p4;
wire   [63:0] zext_ln84_fu_1722_p1;
wire   [63:0] zext_ln88_fu_1776_p1;
wire   [63:0] zext_ln97_fu_1913_p1;
wire   [63:0] zext_ln97_1_fu_1942_p1;
wire   [63:0] zext_ln97_2_fu_1971_p1;
wire   [63:0] zext_ln97_3_fu_2001_p1;
wire   [63:0] newIndex66_cast_cast_fu_2191_p1;
wire   [63:0] zext_ln122_fu_2354_p1;
wire   [63:0] zext_ln147_1_fu_2435_p1;
wire   [63:0] zext_ln147_3_fu_2455_p1;
wire   [63:0] zext_ln147_5_fu_2665_p1;
wire   [63:0] zext_ln147_7_fu_2672_p1;
wire   [63:0] zext_ln147_9_fu_2713_p1;
wire   [63:0] zext_ln147_11_fu_2720_p1;
wire   [63:0] zext_ln147_13_fu_2761_p1;
wire   [63:0] zext_ln147_15_fu_2768_p1;
wire   [63:0] zext_ln147_17_fu_2809_p1;
wire   [63:0] zext_ln147_19_fu_2816_p1;
wire   [63:0] zext_ln147_21_fu_2857_p1;
wire   [63:0] zext_ln147_23_fu_2864_p1;
wire   [63:0] zext_ln147_25_fu_2905_p1;
wire   [63:0] zext_ln147_27_fu_2912_p1;
wire   [63:0] zext_ln147_29_fu_2953_p1;
wire   [63:0] zext_ln147_31_fu_2960_p1;
wire   [63:0] idxprom144_fu_3071_p1;
wire   [63:0] idxprom150_fu_3078_p1;
wire   [63:0] zext_ln196_fu_3152_p1;
wire    ap_block_pp8_stage0;
wire   [63:0] zext_ln196_1_fu_3205_p1;
wire   [63:0] zext_ln196_2_fu_3262_p1;
wire   [63:0] zext_ln205_1_fu_3287_p1;
wire   [63:0] zext_ln205_2_fu_3296_p1;
wire   [63:0] zext_ln205_3_fu_3305_p1;
wire   [63:0] zext_ln196_3_fu_3390_p1;
wire   [63:0] zext_ln314_fu_3644_p1;
wire   [63:0] zext_ln314_1_fu_3659_p1;
wire   [63:0] zext_ln314_2_fu_3674_p1;
wire   [63:0] zext_ln333_fu_3870_p1;
wire  signed [31:0] grp_fu_4295_p3;
wire  signed [31:0] grp_fu_4286_p3;
wire  signed [31:0] grp_fu_4277_p3;
wire  signed [31:0] grp_fu_4268_p3;
reg  signed [7:0] arrayidx2164_promoted538_fu_316;
reg   [31:0] output_reg_3_2_1_fu_320;
wire  signed [31:0] grp_fu_4236_p3;
reg  signed [7:0] arrayidx2164_1364_promoted552_fu_324;
reg   [31:0] output_reg_3_1_1_fu_328;
wire  signed [31:0] grp_fu_4204_p3;
reg  signed [7:0] arrayidx2164_2376_promoted566_fu_332;
reg   [31:0] output_reg_3_0_1_fu_336;
wire  signed [31:0] grp_fu_4172_p3;
reg  signed [7:0] arrayidx2164_3388_promoted580_fu_340;
reg  signed [7:0] arrayidx2164_1_promoted587_fu_344;
reg   [31:0] output_reg_2_2_1_fu_348;
wire  signed [31:0] grp_fu_4244_p3;
reg  signed [7:0] arrayidx2164_1_1_promoted601_fu_352;
reg   [31:0] output_reg_2_1_1_fu_356;
wire  signed [31:0] grp_fu_4212_p3;
reg  signed [7:0] arrayidx2164_1_2_promoted615_fu_360;
reg   [31:0] output_reg_2_0_1_fu_364;
wire  signed [31:0] grp_fu_4180_p3;
reg  signed [7:0] arrayidx2164_1_3_promoted629_fu_368;
reg  signed [7:0] arrayidx2164_2_promoted636_fu_372;
wire  signed [7:0] select_ln195_2_fu_3532_p3;
reg   [31:0] output_reg_1_2_1_fu_376;
wire  signed [31:0] grp_fu_4252_p3;
reg  signed [7:0] arrayidx2164_2_1_promoted650_fu_380;
wire  signed [7:0] select_ln195_1_fu_3363_p3;
reg   [31:0] output_reg_1_1_1_fu_384;
wire  signed [31:0] grp_fu_4220_p3;
reg  signed [7:0] arrayidx2164_2_2_promoted664_fu_388;
wire  signed [7:0] select_ln195_fu_3250_p3;
reg   [31:0] output_reg_1_0_1_fu_392;
wire  signed [31:0] grp_fu_4188_p3;
reg  signed [7:0] arrayidx2164_2_3_promoted678_fu_396;
reg   [31:0] output_reg_0_2_1_fu_400;
wire  signed [31:0] grp_fu_4260_p3;
reg   [31:0] output_reg_0_1_1_fu_404;
wire  signed [31:0] grp_fu_4228_p3;
reg   [31:0] output_reg_0_0_1_fu_408;
wire  signed [31:0] grp_fu_4196_p3;
reg    ap_block_pp9_stage0_01001;
wire   [7:0] trunc_ln708_fu_1714_p1;
wire   [7:0] trunc_ln708_1_fu_1768_p1;
wire  signed [31:0] tmp1_fu_1733_p2;
wire  signed [31:0] tmp_fu_1729_p2;
wire  signed [9:0] mul60_fu_1821_p0;
wire   [31:0] bound_fu_1861_p0;
wire   [63:0] cast_fu_1858_p1;
wire   [31:0] bound_fu_1861_p1;
wire   [31:0] bound11_fu_1870_p0;
wire   [63:0] cast9_fu_1867_p1;
wire   [31:0] bound11_fu_1870_p1;
wire   [29:0] bound18_fu_1883_p0;
wire   [29:0] bound18_fu_1883_p1;
wire   [9:0] add_ln97_fu_1909_p2;
wire   [9:0] add_ln97_1_fu_1938_p2;
wire   [9:0] add_ln97_2_fu_1967_p2;
wire   [9:0] trunc_ln97_3_fu_1987_p1;
wire   [29:0] add_ln102_1_fu_2021_p2;
wire   [8:0] trunc_ln102_fu_2027_p1;
wire   [8:0] trunc_ln102_1_fu_2031_p1;
wire   [33:0] tmp_2_fu_2077_p3;
wire   [33:0] mul_ln330_fu_2095_p0;
wire   [29:0] mul_ln330_fu_2095_p1;
wire   [8:0] mul_ln102_2_fu_2122_p2;
wire   [8:0] empty_40_fu_2138_p1;
wire   [10:0] zext_ln113_fu_2168_p1;
wire   [10:0] empty_37_fu_2176_p2;
wire   [8:0] newIndex_fu_2181_p4;
wire   [10:0] c_2_fu_2204_p2;
wire   [10:0] c_1_fu_2199_p2;
wire   [63:0] tmp_1_fu_2284_p5;
wire   [7:0] tmp_1_fu_2284_p6;
wire   [0:0] icmp_ln117_fu_2313_p2;
wire   [31:0] add_ln114_2_fu_2326_p2;
wire   [31:0] select_ln114_fu_2318_p3;
wire  signed [8:0] grp_fu_3990_p4;
wire   [31:0] add_ln129_17_fu_2381_p2;
wire  signed [10:0] grp_fu_3998_p4;
wire   [8:0] lshr_ln2_fu_2426_p4;
wire  signed [10:0] grp_fu_4008_p4;
wire   [8:0] lshr_ln147_1_fu_2446_p4;
wire  signed [10:0] grp_fu_4018_p4;
wire  signed [10:0] grp_fu_4028_p4;
wire  signed [10:0] grp_fu_4038_p4;
wire  signed [10:0] grp_fu_4048_p4;
wire  signed [10:0] grp_fu_4058_p4;
wire  signed [10:0] grp_fu_4068_p4;
wire  signed [10:0] grp_fu_4078_p4;
wire  signed [10:0] grp_fu_4088_p4;
wire  signed [10:0] grp_fu_4098_p4;
wire  signed [10:0] grp_fu_4108_p4;
wire  signed [10:0] grp_fu_4118_p4;
wire  signed [10:0] grp_fu_4128_p4;
wire  signed [10:0] grp_fu_4138_p4;
wire  signed [10:0] grp_fu_4148_p4;
wire   [31:0] tmp_3_fu_2634_p5;
wire   [31:0] tmp_4_fu_2651_p5;
wire   [31:0] tmp_5_fu_2682_p5;
wire   [31:0] tmp_6_fu_2699_p5;
wire   [31:0] tmp_7_fu_2730_p5;
wire   [31:0] tmp_8_fu_2747_p5;
wire   [31:0] tmp_9_fu_2778_p5;
wire   [31:0] tmp_s_fu_2795_p5;
wire   [31:0] tmp_10_fu_2826_p5;
wire   [31:0] tmp_11_fu_2843_p5;
wire   [31:0] tmp_12_fu_2874_p5;
wire   [31:0] tmp_13_fu_2891_p5;
wire   [31:0] tmp_14_fu_2922_p5;
wire   [31:0] tmp_15_fu_2939_p5;
wire   [31:0] tmp_16_fu_2970_p5;
wire   [31:0] tmp_17_fu_2987_p5;
wire   [0:0] icmp_ln158_fu_3012_p2;
wire   [31:0] add_ln155_3_fu_3025_p2;
wire   [9:0] trunc_ln155_fu_3039_p1;
wire   [31:0] select_ln155_fu_3017_p3;
wire   [9:0] empty_38_fu_3052_p1;
wire  signed [9:0] grp_fu_4158_p4;
wire   [31:0] add_ln305_fu_3163_p2;
wire   [0:0] tmp_20_fu_3169_p3;
wire   [0:0] icmp_ln307_fu_3183_p2;
wire   [0:0] xor_ln305_fu_3177_p2;
wire   [8:0] add_ln193_3_fu_3257_p2;
wire   [8:0] add_ln195_fu_3267_p2;
wire   [8:0] add_ln205_fu_3272_p2;
wire   [8:0] add_ln205_1_fu_3282_p2;
wire   [8:0] add_ln205_2_fu_3292_p2;
wire   [8:0] add_ln205_3_fu_3301_p2;
wire   [31:0] add_ln193_1_fu_3350_p2;
wire   [0:0] tmp_18_fu_3355_p3;
wire   [31:0] add_ln193_2_fu_3371_p2;
wire   [31:0] add_ln305_1_fu_3418_p2;
wire   [0:0] tmp_21_fu_3423_p3;
wire   [0:0] icmp_ln307_1_fu_3437_p2;
wire   [0:0] xor_ln305_1_fu_3431_p2;
wire   [31:0] add_ln305_2_fu_3448_p2;
wire   [0:0] tmp_22_fu_3453_p3;
wire   [0:0] icmp_ln307_2_fu_3467_p2;
wire   [0:0] xor_ln305_2_fu_3461_p2;
wire   [0:0] icmp_ln307_3_fu_3478_p2;
wire   [0:0] xor_ln195_fu_3384_p2;
wire   [8:0] add_ln307_fu_3634_p2;
wire   [8:0] add_ln315_fu_3639_p2;
wire   [8:0] add_ln307_1_fu_3649_p2;
wire   [8:0] add_ln315_1_fu_3654_p2;
wire   [8:0] add_ln307_2_fu_3664_p2;
wire   [8:0] add_ln315_2_fu_3669_p2;
wire   [29:0] add_ln330_1_fu_3760_p2;
wire   [34:0] add_ln331_1_fu_3778_p2;
wire   [1:0] trunc_ln333_fu_3799_p1;
wire   [0:0] icmp_ln332_1_fu_3810_p2;
wire   [2:0] select_ln330_fu_3792_p3;
wire   [0:0] select_ln330_3_fu_3815_p3;
wire   [0:0] or_ln331_fu_3827_p2;
wire   [2:0] add_ln331_fu_3821_p2;
wire   [1:0] trunc_ln333_1_fu_3840_p1;
wire   [1:0] select_ln330_2_fu_3803_p3;
wire   [31:0] select_ln331_fu_3832_p3;
wire  signed [8:0] grp_fu_4304_p3;
wire   [31:0] p_Repl2_s_fu_3877_p6;
wire  signed [10:0] grp_fu_3895_p0;
wire  signed [10:0] grp_fu_3900_p0;
wire  signed [10:0] grp_fu_3905_p0;
wire  signed [10:0] grp_fu_3910_p0;
wire  signed [10:0] grp_fu_3915_p0;
wire  signed [10:0] grp_fu_3920_p0;
wire  signed [10:0] grp_fu_3925_p0;
wire  signed [10:0] grp_fu_3930_p0;
wire  signed [10:0] grp_fu_3935_p0;
wire  signed [10:0] grp_fu_3940_p0;
wire  signed [10:0] grp_fu_3945_p0;
wire  signed [10:0] grp_fu_3950_p0;
wire  signed [10:0] grp_fu_3955_p0;
wire  signed [10:0] grp_fu_3960_p0;
wire  signed [10:0] grp_fu_3965_p0;
wire  signed [10:0] grp_fu_3970_p0;
wire  signed [10:0] grp_fu_3975_p0;
wire  signed [10:0] grp_fu_3980_p0;
wire  signed [10:0] grp_fu_3985_p0;
wire   [8:0] grp_fu_3990_p0;
wire   [10:0] trunc_ln129_1_fu_2399_p1;
wire   [9:0] grp_fu_4158_p0;
wire  signed [8:0] grp_fu_4166_p0;
wire  signed [7:0] grp_fu_4172_p1;
wire   [31:0] grp_fu_4172_p2;
wire  signed [7:0] grp_fu_4180_p1;
wire   [31:0] grp_fu_4180_p2;
wire  signed [7:0] grp_fu_4188_p1;
wire   [31:0] grp_fu_4188_p2;
wire  signed [7:0] grp_fu_4196_p1;
wire  signed [7:0] grp_fu_4204_p1;
wire  signed [7:0] grp_fu_4212_p1;
wire  signed [7:0] grp_fu_4220_p1;
wire  signed [7:0] grp_fu_4228_p1;
wire  signed [7:0] grp_fu_4236_p1;
wire  signed [7:0] grp_fu_4244_p1;
wire  signed [7:0] grp_fu_4252_p1;
wire  signed [7:0] grp_fu_4260_p1;
wire  signed [7:0] grp_fu_4268_p1;
wire  signed [7:0] grp_fu_4277_p1;
wire  signed [7:0] grp_fu_4286_p1;
wire  signed [7:0] grp_fu_4295_p1;
wire  signed [8:0] grp_fu_4304_p0;
wire   [8:0] grp_fu_4304_p2;
reg    grp_fu_4304_ce;
wire    ap_CS_fsm_state71;
reg   [46:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_block_pp4;
reg    ap_block_pp5;
reg    ap_block_pp6;
reg    ap_block_pp7;
reg    ap_block_pp8;
reg    ap_block_pp9;
reg    ap_enable_operation_1007;
reg    ap_enable_state59_pp8_iter2_stage0;
reg    ap_enable_operation_1048;
reg    ap_enable_state60_pp8_iter3_stage0;
reg    ap_enable_operation_1210;
reg    ap_enable_state64_pp8_iter7_stage0;
reg    ap_enable_operation_1011;
reg    ap_enable_operation_1050;
reg    ap_enable_operation_1216;
reg    ap_predicate_op1015_load_state59;
reg    ap_enable_operation_1015;
reg    ap_predicate_op1052_load_state60;
reg    ap_enable_operation_1052;
reg    ap_enable_operation_1222;
reg    ap_enable_operation_1019;
reg    ap_enable_operation_1054;
reg    ap_enable_operation_1225;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
wire   [59:0] bound18_fu_1883_p00;
wire   [59:0] bound18_fu_1883_p10;
wire   [63:0] mul_ln330_fu_2095_p00;
wire   [63:0] mul_ln330_fu_2095_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter3 = 1'b0;
#0 ap_enable_reg_pp8_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter5 = 1'b0;
#0 ap_enable_reg_pp8_iter6 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter7 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter3 = 1'b0;
end

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(trunc_ln708_fu_1714_p1),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(trunc_ln708_fu_1714_p1),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(trunc_ln708_fu_1714_p1),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(trunc_ln708_fu_1714_p1),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(trunc_ln708_1_fu_1768_p1),
    .q0(weight_l2_0_q0),
    .address1(weight_l2_0_address1),
    .ce1(weight_l2_0_ce1),
    .q1(weight_l2_0_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(trunc_ln708_1_fu_1768_p1),
    .q0(weight_l2_1_q0),
    .address1(weight_l2_1_address1),
    .ce1(weight_l2_1_ce1),
    .q1(weight_l2_1_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(trunc_ln708_1_fu_1768_p1),
    .q0(weight_l2_2_q0),
    .address1(weight_l2_2_address1),
    .ce1(weight_l2_2_ce1),
    .q1(weight_l2_2_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(trunc_ln708_1_fu_1768_p1),
    .q0(weight_l2_3_q0),
    .address1(weight_l2_3_address1),
    .ce1(weight_l2_3_ce1),
    .q1(weight_l2_3_q1)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(data_l2_0_d0),
    .q0(data_l2_0_q0)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(data_l2_1_d0),
    .q0(data_l2_1_q0)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(data_l2_2_d0),
    .q0(data_l2_2_q0)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(data_l2_3_d0),
    .q0(data_l2_3_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_0_0_address0),
    .ce0(data_l1_0_0_ce0),
    .we0(data_l1_0_0_we0),
    .d0(data_l2_0_q0),
    .q0(data_l1_0_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_1_0_address0),
    .ce0(data_l1_1_0_ce0),
    .we0(data_l1_1_0_we0),
    .d0(data_l2_1_q0),
    .q0(data_l1_1_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_2_0_address0),
    .ce0(data_l1_2_0_ce0),
    .we0(data_l1_2_0_we0),
    .d0(data_l2_2_q0),
    .q0(data_l1_2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_3_0_address0),
    .ce0(data_l1_3_0_ce0),
    .we0(data_l1_3_0_we0),
    .d0(data_l2_3_q0),
    .q0(data_l1_3_0_q0)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(output_l1_0_d0),
    .address1(output_l1_0_address1),
    .ce1(output_l1_0_ce1),
    .q1(output_l1_0_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(output_l1_1_d0),
    .address1(output_l1_1_address1),
    .ce1(output_l1_1_ce1),
    .q1(output_l1_1_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(output_l1_2_d0),
    .address1(output_l1_2_address1),
    .ce1(output_l1_2_ce1),
    .q1(output_l1_2_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(output_l1_3_d0),
    .address1(output_l1_3_address1),
    .ce1(output_l1_3_ce1),
    .q1(output_l1_3_q1)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U1(
    .din0(tmp_data_V_2_reg_4409),
    .din1(tmp_data_V_1_reg_4397),
    .dout(tmp_fu_1729_p2)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U2(
    .din0(tmp_data_V_5_reg_4450),
    .din1(tmp_data_V_5_reg_4450),
    .dout(tmp1_fu_1733_p2)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U3(
    .din0(tmp1_fu_1733_p2),
    .din1(tmp_fu_1729_p2),
    .dout(mul37_fu_1737_p2)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U4(
    .din0(tmp_data_V_4_reg_4438),
    .din1(tmp_data_V_4_reg_4438),
    .dout(mul51_fu_1792_p2)
);

Conv_sysarr_dbbuf_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U5(
    .din0(mul60_fu_1821_p0),
    .din1(empty_reg_4550),
    .dout(mul60_fu_1821_p2)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U6(
    .din0(tmp_data_V_3_reg_4421),
    .din1(tmp_data_V_3_reg_4421),
    .dout(mul158_fu_1835_p2)
);

Conv_sysarr_dbbuf_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U7(
    .din0(bound_fu_1861_p0),
    .din1(bound_fu_1861_p1),
    .dout(bound_fu_1861_p2)
);

Conv_sysarr_dbbuf_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U8(
    .din0(bound11_fu_1870_p0),
    .din1(bound11_fu_1870_p1),
    .dout(bound11_fu_1870_p2)
);

Conv_sysarr_dbbuf_mul_30ns_30ns_60_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 60 ))
mul_30ns_30ns_60_1_1_U9(
    .din0(bound18_fu_1883_p0),
    .din1(bound18_fu_1883_p1),
    .dout(bound18_fu_1883_p2)
);

Conv_sysarr_dbbuf_mul_34ns_30ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 64 ))
mul_34ns_30ns_64_1_1_U10(
    .din0(mul_ln330_fu_2095_p0),
    .din1(mul_ln330_fu_2095_p1),
    .dout(mul_ln330_fu_2095_p2)
);

Conv_sysarr_dbbuf_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U11(
    .din0(select_ln102_1_reg_4841),
    .din1(trunc_ln521_1_reg_4430),
    .dout(mul_ln102_fu_2113_p2)
);

Conv_sysarr_dbbuf_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U12(
    .din0(mul_ln102_fu_2113_p2),
    .din1(trunc_ln521_1_reg_4430),
    .dout(mul_ln102_1_fu_2117_p2)
);

Conv_sysarr_dbbuf_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U13(
    .din0(empty_35_reg_4750),
    .din1(select_ln102_1_reg_4841),
    .dout(mul_ln102_2_fu_2122_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U14(
    .din0(bias_l2_0_q0),
    .din1(bias_l2_1_q0),
    .din2(bias_l2_2_q0),
    .din3(bias_l2_3_q0),
    .din4(tmp_1_fu_2284_p5),
    .dout(tmp_1_fu_2284_p6)
);

Conv_sysarr_dbbuf_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U15(
    .din0(trunc_ln105_reg_4940),
    .din1(trunc_ln521_2_reg_4444),
    .dout(mul139_fu_2361_p2)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U16(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_3_fu_2634_p5),
    .dout(tmp_3_fu_2634_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U17(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_4_fu_2651_p5),
    .dout(tmp_4_fu_2651_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U18(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_5_fu_2682_p5),
    .dout(tmp_5_fu_2682_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U19(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_6_fu_2699_p5),
    .dout(tmp_6_fu_2699_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U20(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_7_fu_2730_p5),
    .dout(tmp_7_fu_2730_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U21(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_8_fu_2747_p5),
    .dout(tmp_8_fu_2747_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U22(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_9_fu_2778_p5),
    .dout(tmp_9_fu_2778_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U23(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_s_fu_2795_p5),
    .dout(tmp_s_fu_2795_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U24(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_10_fu_2826_p5),
    .dout(tmp_10_fu_2826_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U25(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_11_fu_2843_p5),
    .dout(tmp_11_fu_2843_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U26(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_12_fu_2874_p5),
    .dout(tmp_12_fu_2874_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U27(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_13_fu_2891_p5),
    .dout(tmp_13_fu_2891_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U28(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_14_fu_2922_p5),
    .dout(tmp_14_fu_2922_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U29(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_15_fu_2939_p5),
    .dout(tmp_15_fu_2939_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U30(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_16_fu_2970_p5),
    .dout(tmp_16_fu_2970_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U31(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_17_fu_2987_p5),
    .dout(tmp_17_fu_2987_p6)
);

Conv_sysarr_dbbuf_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U32(
    .din0(output_l1_0_q1),
    .din1(output_l1_1_q1),
    .din2(output_l1_2_q1),
    .din3(output_l1_3_q1),
    .din4(select_ln331_1_reg_6242_pp9_iter3_reg),
    .dout(p_Repl2_s_fu_3877_p6)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3895_p0),
    .din1(trunc_ln521_reg_4414),
    .ce(1'b1),
    .dout(grp_fu_3895_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3900_p0),
    .din1(trunc_ln521_reg_4414),
    .ce(1'b1),
    .dout(grp_fu_3900_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3905_p0),
    .din1(trunc_ln521_reg_4414),
    .ce(1'b1),
    .dout(grp_fu_3905_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3910_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3910_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3915_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3915_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3920_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3920_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3925_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3925_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3930_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3930_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3935_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3935_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3940_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3940_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3945_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3945_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3950_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3950_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3955_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3955_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3960_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3960_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3965_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3965_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3970_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3970_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3975_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3975_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3980_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3980_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3985_p0),
    .din1(trunc_ln521_3_reg_4458),
    .ce(1'b1),
    .dout(grp_fu_3985_p2)
);

Conv_sysarr_dbbuf_ama_addmuladd_9ns_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
ama_addmuladd_9ns_9s_9s_9ns_9_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3990_p0),
    .din1(mul_ln102_reg_4892),
    .din2(trunc_ln521_1_reg_4430),
    .din3(trunc_ln123_reg_5098_pp6_iter1_reg),
    .ce(1'b1),
    .dout(grp_fu_3990_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109274_reg_5143),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_3998_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109276_reg_5148),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4008_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109278_reg_5153),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4018_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109280_reg_5158),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4028_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_1264_reg_5113),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4038_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_1282_reg_5163),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4048_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_1268_reg_5128),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4058_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_1284_reg_5168),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4068_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_2262_reg_5108),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4078_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_2286_reg_5173),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4088_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_2270_reg_5133),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4098_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_2288_reg_5178),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4108_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_3266_reg_5118),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4118_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_3290_reg_5183),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4128_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_3272_reg_5138),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4138_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2399_p1),
    .din1(mul109_3292_reg_5188),
    .din2(trunc_ln521_3_reg_4458),
    .din3(trunc_ln148_fu_2415_p1),
    .ce(1'b1),
    .dout(grp_fu_4148_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_10ns_10ns_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
ama_addmuladd_10ns_10ns_10s_10ns_10_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4158_p0),
    .din1(trunc_ln129_reg_5211),
    .din2(trunc_ln521_2_reg_4444),
    .din3(tmp3_reg_5825_pp7_iter1_reg),
    .ce(1'b1),
    .dout(grp_fu_4158_p4)
);

Conv_sysarr_dbbuf_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4166_p0),
    .din1(trunc_ln521_1_reg_4430),
    .din2(empty_39_reg_5820_pp7_iter1_reg),
    .ce(1'b1),
    .dout(grp_fu_4166_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_3388_promoted580_fu_340),
    .din1(grp_fu_4172_p1),
    .din2(grp_fu_4172_p2),
    .ce(1'b1),
    .dout(grp_fu_4172_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_1_3_promoted629_fu_368),
    .din1(grp_fu_4180_p1),
    .din2(grp_fu_4180_p2),
    .ce(1'b1),
    .dout(grp_fu_4180_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_2_3_promoted678_fu_396),
    .din1(grp_fu_4188_p1),
    .din2(grp_fu_4188_p2),
    .ce(1'b1),
    .dout(grp_fu_4188_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1_0_0_q0),
    .din1(grp_fu_4196_p1),
    .din2(output_l1_0_q1),
    .ce(1'b1),
    .dout(grp_fu_4196_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_2376_promoted566_fu_332),
    .din1(grp_fu_4204_p1),
    .din2(output_reg_3_0_1_fu_336),
    .ce(1'b1),
    .dout(grp_fu_4204_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_1_2_promoted615_fu_360),
    .din1(grp_fu_4212_p1),
    .din2(output_reg_2_0_1_fu_364),
    .ce(1'b1),
    .dout(grp_fu_4212_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_2_2_promoted664_fu_388),
    .din1(grp_fu_4220_p1),
    .din2(output_reg_1_0_1_fu_392),
    .ce(1'b1),
    .dout(grp_fu_4220_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln195_fu_3250_p3),
    .din1(grp_fu_4228_p1),
    .din2(output_reg_0_0_1_fu_408),
    .ce(1'b1),
    .dout(grp_fu_4228_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_1364_promoted552_fu_324),
    .din1(grp_fu_4236_p1),
    .din2(output_reg_3_1_1_fu_328),
    .ce(1'b1),
    .dout(grp_fu_4236_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_1_1_promoted601_fu_352),
    .din1(grp_fu_4244_p1),
    .din2(output_reg_2_1_1_fu_356),
    .ce(1'b1),
    .dout(grp_fu_4244_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_2_1_promoted650_fu_380),
    .din1(grp_fu_4252_p1),
    .din2(output_reg_1_1_1_fu_384),
    .ce(1'b1),
    .dout(grp_fu_4252_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln195_1_fu_3363_p3),
    .din1(grp_fu_4260_p1),
    .din2(output_reg_0_1_1_fu_404),
    .ce(1'b1),
    .dout(grp_fu_4260_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_promoted538_fu_316),
    .din1(grp_fu_4268_p1),
    .din2(output_reg_3_2_1_fu_320),
    .ce(1'b1),
    .dout(grp_fu_4268_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_1_promoted587_fu_344),
    .din1(grp_fu_4277_p1),
    .din2(output_reg_2_2_1_fu_348),
    .ce(1'b1),
    .dout(grp_fu_4277_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2164_2_promoted636_fu_372),
    .din1(grp_fu_4286_p1),
    .din2(output_reg_1_2_1_fu_376),
    .ce(1'b1),
    .dout(grp_fu_4286_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln195_2_fu_3532_p3),
    .din1(grp_fu_4295_p1),
    .din2(output_reg_0_2_1_fu_400),
    .ce(1'b1),
    .dout(grp_fu_4295_p3)
);

Conv_sysarr_dbbuf_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4304_p0),
    .din1(empty_34_reg_4736),
    .din2(grp_fu_4304_p2),
    .ce(grp_fu_4304_ce),
    .dout(grp_fu_4304_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln91_fu_1806_p2 == 1'd0) & (cmp52307_reg_4555 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln91_fu_1806_p2 == 1'd0) & (cmp52307_reg_4555 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state16) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state16) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state16);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state19) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state19) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state19);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state22) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state22) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state22);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state31) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state31)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state31);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp6_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state51) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state50)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state51)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state51);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end else if ((1'b1 == ap_CS_fsm_state50)) begin
            ap_enable_reg_pp7_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp8_flush_enable)) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if (((cmp161278_reg_4746 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter3 <= ap_enable_reg_pp8_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter4 <= ap_enable_reg_pp8_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp8_exit_iter4_state61)) begin
                ap_enable_reg_pp8_iter5 <= ap_enable_reg_pp8_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp8_iter5 <= ap_enable_reg_pp8_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter6 <= ap_enable_reg_pp8_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter7 <= ap_enable_reg_pp8_iter6;
        end else if (((cmp161278_reg_4746 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
            ap_enable_reg_pp8_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp9_flush_enable)) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if (((icmp_ln102_fu_2005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter2 <= ap_enable_reg_pp9_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp9_exit_iter2_state68)) begin
                ap_enable_reg_pp9_iter3 <= ap_enable_reg_pp9_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp9_iter3 <= ap_enable_reg_pp9_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter4 <= ap_enable_reg_pp9_iter3;
        end else if (((icmp_ln102_fu_2005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
            ap_enable_reg_pp9_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_2365_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        co_1_reg_1428 <= co_2_fu_2403_p2;
    end else if (((icmp_ln91_fu_1806_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        co_1_reg_1428 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        co_reg_1351 <= co_3_reg_4563;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        co_reg_1351 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln155_reg_5801 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        hi_1_reg_1529 <= select_ln155_1_reg_5810;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        hi_1_reg_1529 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_5084 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        hi_reg_1462 <= select_ln114_1_reg_5093;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        hi_reg_1462 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln183_fu_3137_p2 == 1'd0))) begin
        i_reg_1551 <= add_ln183_fu_3142_p2;
    end else if (((cmp161278_reg_4746 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        i_reg_1551 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        indvar_flatten13_reg_1484 <= add_ln129_16_reg_5196;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        indvar_flatten13_reg_1484 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_2365_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        indvar_flatten29_reg_1406 <= add_ln102_reg_4831;
    end else if (((icmp_ln91_fu_1806_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        indvar_flatten29_reg_1406 <= 60'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln330_fu_3744_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        indvar_flatten36_reg_1584 <= select_ln331_3_fu_3784_p3;
    end else if (((icmp_ln102_fu_2005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        indvar_flatten36_reg_1584 <= 35'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln330_fu_3744_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        indvar_flatten50_reg_1562 <= add_ln330_fu_3749_p2;
    end else if (((icmp_ln102_fu_2005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        indvar_flatten50_reg_1562 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_3001_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        indvar_flatten6_reg_1518 <= add_ln155_2_fu_3006_p2;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        indvar_flatten6_reg_1518 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten_reg_1451 <= add_ln114_1_fu_2307_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        indvar_flatten_reg_1451 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_1_reg_1340 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln86_fu_1743_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_1_reg_1340 <= add_ln86_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln330_reg_6210 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        k_2_reg_1573 <= select_ln330_1_reg_6227;
    end else if (((icmp_ln102_fu_2005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        k_2_reg_1573 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        k_reg_1329 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln82_fu_1689_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_1329 <= add_ln82_fu_1694_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ki_1_reg_1440 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ki_1_reg_1440 <= add_ln113_reg_4966;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln330_reg_6210_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        ki_reg_1595 <= select_ln331_2_fu_3852_p3;
    end else if (((icmp_ln102_fu_2005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        ki_reg_1595 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_2365_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        ko_reg_1417 <= select_ln102_2_reg_4867;
    end else if (((icmp_ln91_fu_1806_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ko_reg_1417 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        r_reg_1495 <= select_ln129_1_reg_5206;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_reg_1495 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        s_reg_1506 <= add_ln132_fu_3739_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        s_reg_1506 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        wh_1_reg_1373 <= 32'd0;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln94_1_fu_1918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        wh_1_reg_1373 <= add_ln94_1_fu_1923_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        wh_2_reg_1384 <= 32'd0;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln94_2_fu_1947_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        wh_2_reg_1384 <= add_ln94_2_fu_1952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln330_reg_6210_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        wh_3_reg_1606 <= add_ln332_fu_3864_p2;
    end else if (((icmp_ln102_fu_2005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        wh_3_reg_1606 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        wh_4_reg_1395 <= 32'd0;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln94_3_fu_1976_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        wh_4_reg_1395 <= add_ln94_3_fu_1981_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_1806_p2 == 1'd0) & (cmp52307_reg_4555 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        wh_reg_1362 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln94_fu_1889_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        wh_reg_1362 <= add_ln94_fu_1894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_3001_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        wi_1_reg_1540 <= add_ln158_fu_3065_p2;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        wi_1_reg_1540 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        wi_reg_1473 <= add_ln117_fu_2348_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        wi_reg_1473 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (icmp_ln155_reg_5801_pp7_iter2_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        add149_reg_5835 <= grp_fu_4166_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln102_reg_4831 <= add_ln102_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln113_reg_4966 <= add_ln113_fu_2162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        add_ln129_16_reg_5196 <= add_ln129_16_fu_2370_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5948 == 1'd0))) begin
        add_ln193_reg_5983 <= add_ln193_fu_3200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_3_fu_1976_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln97_3_reg_4822 <= add_ln97_3_fu_1991_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5948_pp8_iter2_reg == 1'd0))) begin
        and_ln306_1_reg_6093 <= and_ln306_1_fu_3442_p2;
        and_ln306_2_reg_6097 <= and_ln306_2_fu_3472_p2;
        and_ln306_3_reg_6101 <= and_ln306_3_fu_3483_p2;
        tmp_19_reg_6063 <= add_ln193_2_fu_3371_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp8_stage0_11001)) begin
        and_ln306_1_reg_6093_pp8_iter4_reg <= and_ln306_1_reg_6093;
        and_ln306_1_reg_6093_pp8_iter5_reg <= and_ln306_1_reg_6093_pp8_iter4_reg;
        and_ln306_1_reg_6093_pp8_iter6_reg <= and_ln306_1_reg_6093_pp8_iter5_reg;
        and_ln306_2_reg_6097_pp8_iter4_reg <= and_ln306_2_reg_6097;
        and_ln306_2_reg_6097_pp8_iter5_reg <= and_ln306_2_reg_6097_pp8_iter4_reg;
        and_ln306_2_reg_6097_pp8_iter6_reg <= and_ln306_2_reg_6097_pp8_iter5_reg;
        and_ln306_3_reg_6101_pp8_iter4_reg <= and_ln306_3_reg_6101;
        and_ln306_3_reg_6101_pp8_iter5_reg <= and_ln306_3_reg_6101_pp8_iter4_reg;
        and_ln306_3_reg_6101_pp8_iter6_reg <= and_ln306_3_reg_6101_pp8_iter5_reg;
        and_ln306_reg_5979_pp8_iter2_reg <= and_ln306_reg_5979_pp8_iter1_reg;
        and_ln306_reg_5979_pp8_iter3_reg <= and_ln306_reg_5979_pp8_iter2_reg;
        and_ln306_reg_5979_pp8_iter4_reg <= and_ln306_reg_5979_pp8_iter3_reg;
        and_ln306_reg_5979_pp8_iter5_reg <= and_ln306_reg_5979_pp8_iter4_reg;
        and_ln306_reg_5979_pp8_iter6_reg <= and_ln306_reg_5979_pp8_iter5_reg;
        icmp_ln183_reg_5948_pp8_iter2_reg <= icmp_ln183_reg_5948_pp8_iter1_reg;
        icmp_ln183_reg_5948_pp8_iter3_reg <= icmp_ln183_reg_5948_pp8_iter2_reg;
        icmp_ln183_reg_5948_pp8_iter4_reg <= icmp_ln183_reg_5948_pp8_iter3_reg;
        icmp_ln183_reg_5948_pp8_iter5_reg <= icmp_ln183_reg_5948_pp8_iter4_reg;
        icmp_ln195_reg_5973_pp8_iter2_reg <= icmp_ln195_reg_5973_pp8_iter1_reg;
        trunc_ln196_reg_5957_pp8_iter2_reg <= trunc_ln196_reg_5957_pp8_iter1_reg;
        trunc_ln196_reg_5957_pp8_iter3_reg <= trunc_ln196_reg_5957_pp8_iter2_reg;
        trunc_ln196_reg_5957_pp8_iter4_reg <= trunc_ln196_reg_5957_pp8_iter3_reg;
        trunc_ln196_reg_5957_pp8_iter5_reg <= trunc_ln196_reg_5957_pp8_iter4_reg;
        trunc_ln196_reg_5957_pp8_iter6_reg <= trunc_ln196_reg_5957_pp8_iter5_reg;
        zext_ln183_reg_5940_pp8_iter2_reg[30 : 0] <= zext_ln183_reg_5940_pp8_iter1_reg[30 : 0];
        zext_ln205_reg_6018_pp8_iter3_reg[8 : 0] <= zext_ln205_reg_6018[8 : 0];
        zext_ln205_reg_6018_pp8_iter4_reg[8 : 0] <= zext_ln205_reg_6018_pp8_iter3_reg[8 : 0];
        zext_ln205_reg_6018_pp8_iter5_reg[8 : 0] <= zext_ln205_reg_6018_pp8_iter4_reg[8 : 0];
        zext_ln205_reg_6018_pp8_iter6_reg[8 : 0] <= zext_ln205_reg_6018_pp8_iter5_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_fu_3137_p2 == 1'd0))) begin
        and_ln306_reg_5979 <= and_ln306_fu_3188_p2;
        icmp_ln195_reg_5973 <= icmp_ln195_fu_3157_p2;
        trunc_ln196_reg_5957 <= trunc_ln196_fu_3148_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        and_ln306_reg_5979_pp8_iter1_reg <= and_ln306_reg_5979;
        icmp_ln183_reg_5948 <= icmp_ln183_fu_3137_p2;
        icmp_ln183_reg_5948_pp8_iter1_reg <= icmp_ln183_reg_5948;
        icmp_ln195_reg_5973_pp8_iter1_reg <= icmp_ln195_reg_5973;
        trunc_ln196_reg_5957_pp8_iter1_reg <= trunc_ln196_reg_5957;
        zext_ln183_reg_5940[30 : 0] <= zext_ln183_fu_3133_p1[30 : 0];
        zext_ln183_reg_5940_pp8_iter1_reg[30 : 0] <= zext_ln183_reg_5940[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter3 == 1'b1) & (icmp_ln183_reg_5948_pp8_iter2_reg == 1'd0))) begin
        arrayidx2164_1364_promoted552_fu_324 <= arrayidx2164_1_1_promoted601_fu_352;
        arrayidx2164_1_1_promoted601_fu_352 <= arrayidx2164_2_1_promoted650_fu_380;
        arrayidx2164_2_1_promoted650_fu_380 <= select_ln195_1_fu_3363_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5948_pp8_iter1_reg == 1'd0))) begin
        arrayidx2164_1_2_promoted615_fu_360 <= arrayidx2164_2_2_promoted664_fu_388;
        arrayidx2164_2376_promoted566_fu_332 <= arrayidx2164_1_2_promoted615_fu_360;
        arrayidx2164_2_2_promoted664_fu_388 <= select_ln195_fu_3250_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5948 == 1'd0))) begin
        arrayidx2164_1_3_promoted629_fu_368 <= arrayidx2164_2_3_promoted678_fu_396;
        arrayidx2164_2_3_promoted678_fu_396 <= data_l1_0_0_q0;
        arrayidx2164_3388_promoted580_fu_340 <= arrayidx2164_1_3_promoted629_fu_368;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter4 == 1'b1) & (icmp_ln183_reg_5948_pp8_iter3_reg == 1'd0))) begin
        arrayidx2164_1_promoted587_fu_344 <= arrayidx2164_2_promoted636_fu_372;
        arrayidx2164_2_promoted636_fu_372 <= select_ln195_2_fu_3532_p3;
        arrayidx2164_promoted538_fu_316 <= arrayidx2164_1_promoted587_fu_344;
        output_reg_0_0_1_fu_408 <= grp_fu_4196_p3;
        output_reg_1_0_1_fu_392 <= grp_fu_4188_p3;
        output_reg_2_0_1_fu_364 <= grp_fu_4180_p3;
        output_reg_3_0_1_fu_336 <= grp_fu_4172_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        bias_in_V_read_1_reg_4403 <= bias_in_V_dout;
        tmp_data_V_2_reg_4409 <= tmp_data_V_2_fu_1657_p1;
        trunc_ln521_reg_4414 <= trunc_ln521_fu_1661_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_in_V_read_reg_4392 <= bias_in_V_dout;
        tmp_data_V_1_reg_4397 <= tmp_data_V_1_fu_1653_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_1806_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        bound11_reg_4761 <= bound11_fu_1870_p2;
        bound18_reg_4766 <= bound18_fu_1883_p2;
        bound_reg_4755 <= bound_fu_1861_p2;
        cmp161278_reg_4746 <= cmp161278_fu_1849_p2;
        div68_cast8_reg_4720 <= {{bias_in_V_read_reg_4392[31:2]}};
        empty_34_reg_4736 <= empty_34_fu_1839_p1;
        empty_35_reg_4750 <= empty_35_fu_1855_p1;
        input_rows_reg_4741 <= input_rows_fu_1843_p2;
        mul158_reg_4725 <= mul158_fu_1835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        c_3_reg_4955[10 : 2] <= c_3_fu_2150_p2[10 : 2];
        c_reg_4945[10 : 2] <= c_fu_2142_p3[10 : 2];
        mul107_mid2_reg_4908[10 : 2] <= mul107_mid2_fu_2126_p3[10 : 2];
        mul_ln102_1_reg_4897 <= mul_ln102_1_fu_2117_p2;
        mul_ln102_3_reg_4916 <= grp_fu_3895_p2;
        mul_ln102_4_reg_4924 <= grp_fu_3900_p2;
        mul_ln102_5_reg_4932 <= grp_fu_3905_p2;
        mul_ln102_reg_4892 <= mul_ln102_fu_2113_p2;
        select_ln102_reg_4887 <= select_ln102_fu_2106_p3;
        trunc_ln105_reg_4940 <= trunc_ln105_fu_2134_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        cmp52307_reg_4555 <= cmp52307_fu_1800_p2;
        div48_cast_reg_4535 <= {{bias_in_V_read_1_reg_4403[31:2]}};
        empty_reg_4550 <= empty_fu_1796_p1;
        mul51_reg_4542 <= mul51_fu_1792_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        co_3_reg_4563 <= co_3_fu_1811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        conv83_reg_5076 <= conv83_fu_2298_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_2156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        empty_36_reg_4971 <= empty_36_fu_2172_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln155_fu_3001_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        empty_39_reg_5820 <= empty_39_fu_3056_p1;
        tmp3_reg_5825 <= tmp3_fu_3060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        empty_39_reg_5820_pp7_iter1_reg <= empty_39_reg_5820;
        icmp_ln155_reg_5801 <= icmp_ln155_fu_3001_p2;
        icmp_ln155_reg_5801_pp7_iter1_reg <= icmp_ln155_reg_5801;
        tmp3_reg_5825_pp7_iter1_reg <= tmp3_reg_5825;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_2005_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        icmp_ln105_reg_4836 <= icmp_ln105_fu_2016_p2;
        p_mid2_reg_4847[10 : 2] <= p_mid2_fu_2043_p3[10 : 2];
        select_ln102_1_reg_4841 <= select_ln102_1_fu_2035_p3;
        select_ln102_2_reg_4867 <= select_ln102_2_fu_2069_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln114_reg_5084 <= icmp_ln114_fu_2302_p2;
        trunc_ln123_reg_5098_pp6_iter1_reg <= trunc_ln123_reg_5098;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_2365_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        icmp_ln132_reg_5201 <= icmp_ln132_fu_2376_p2;
        select_ln129_1_reg_5206 <= select_ln129_1_fu_2387_p3;
        trunc_ln129_reg_5211 <= trunc_ln129_fu_2395_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp7_stage0_11001)) begin
        icmp_ln155_reg_5801_pp7_iter2_reg <= icmp_ln155_reg_5801_pp7_iter1_reg;
        icmp_ln155_reg_5801_pp7_iter3_reg <= icmp_ln155_reg_5801_pp7_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        icmp_ln330_reg_6210 <= icmp_ln330_fu_3744_p2;
        icmp_ln330_reg_6210_pp9_iter1_reg <= icmp_ln330_reg_6210;
        icmp_ln331_reg_6219_pp9_iter1_reg <= icmp_ln331_reg_6219;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp9_stage0_11001)) begin
        icmp_ln330_reg_6210_pp9_iter2_reg <= icmp_ln330_reg_6210_pp9_iter1_reg;
        icmp_ln330_reg_6210_pp9_iter3_reg <= icmp_ln330_reg_6210_pp9_iter2_reg;
        select_ln331_1_reg_6242_pp9_iter3_reg <= select_ln331_1_reg_6242;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln330_fu_3744_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        icmp_ln331_reg_6219 <= icmp_ln331_fu_3755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_2005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        icmp_ln332_reg_4882 <= icmp_ln332_fu_2101_p2;
        mul_ln330_reg_4877 <= mul_ln330_fu_2095_p2;
        zext_ln330_reg_4872[33 : 2] <= zext_ln330_fu_2084_p1[33 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln94_1_reg_4785 <= icmp_ln94_1_fu_1918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln94_2_reg_4799 <= icmp_ln94_2_fu_1947_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln94_3_reg_4813 <= icmp_ln94_3_fu_1976_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln94_reg_4771 <= icmp_ln94_fu_1889_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        lshr_ln147_10_reg_5396 <= {{grp_fu_4108_p4[10:2]}};
        lshr_ln147_11_reg_5406 <= {{grp_fu_4118_p4[10:2]}};
        lshr_ln147_12_reg_5416 <= {{grp_fu_4128_p4[10:2]}};
        lshr_ln147_13_reg_5426 <= {{grp_fu_4138_p4[10:2]}};
        lshr_ln147_14_reg_5436 <= {{grp_fu_4148_p4[10:2]}};
        lshr_ln147_2_reg_5306 <= {{grp_fu_4018_p4[10:2]}};
        lshr_ln147_3_reg_5316 <= {{grp_fu_4028_p4[10:2]}};
        lshr_ln147_4_reg_5326 <= {{grp_fu_4038_p4[10:2]}};
        lshr_ln147_5_reg_5336 <= {{grp_fu_4048_p4[10:2]}};
        lshr_ln147_6_reg_5346 <= {{grp_fu_4058_p4[10:2]}};
        lshr_ln147_7_reg_5356 <= {{grp_fu_4068_p4[10:2]}};
        lshr_ln147_8_reg_5366 <= {{grp_fu_4078_p4[10:2]}};
        lshr_ln147_9_reg_5376 <= {{grp_fu_4088_p4[10:2]}};
        lshr_ln147_s_reg_5386 <= {{grp_fu_4098_p4[10:2]}};
        trunc_ln147_10_reg_5381 <= trunc_ln147_10_fu_2559_p1;
        trunc_ln147_11_reg_5391 <= trunc_ln147_11_fu_2571_p1;
        trunc_ln147_12_reg_5401 <= trunc_ln147_12_fu_2583_p1;
        trunc_ln147_13_reg_5411 <= trunc_ln147_13_fu_2595_p1;
        trunc_ln147_14_reg_5421 <= trunc_ln147_14_fu_2607_p1;
        trunc_ln147_15_reg_5431 <= trunc_ln147_15_fu_2619_p1;
        trunc_ln147_1_reg_5276 <= trunc_ln147_1_fu_2443_p1;
        trunc_ln147_2_reg_5301 <= trunc_ln147_2_fu_2463_p1;
        trunc_ln147_3_reg_5311 <= trunc_ln147_3_fu_2475_p1;
        trunc_ln147_4_reg_5321 <= trunc_ln147_4_fu_2487_p1;
        trunc_ln147_5_reg_5331 <= trunc_ln147_5_fu_2499_p1;
        trunc_ln147_6_reg_5341 <= trunc_ln147_6_fu_2511_p1;
        trunc_ln147_7_reg_5351 <= trunc_ln147_7_fu_2523_p1;
        trunc_ln147_8_reg_5361 <= trunc_ln147_8_fu_2535_p1;
        trunc_ln147_9_reg_5371 <= trunc_ln147_9_fu_2547_p1;
        trunc_ln147_reg_5251 <= trunc_ln147_fu_2423_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_1743_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln1_reg_4530 <= {{k_1_reg_1340[10:2]}};
        trunc_ln88_reg_4526 <= trunc_ln88_fu_1754_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_1689_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln_reg_4507 <= {{k_reg_1329[10:2]}};
        trunc_ln84_reg_4503 <= trunc_ln84_fu_1700_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        mul109274_reg_5143 <= grp_fu_3940_p2;
        mul109276_reg_5148 <= grp_fu_3945_p2;
        mul109278_reg_5153 <= grp_fu_3950_p2;
        mul109280_reg_5158 <= grp_fu_3955_p2;
        mul109_1264_reg_5113 <= grp_fu_3915_p2;
        mul109_1268_reg_5128 <= grp_fu_3925_p2;
        mul109_1282_reg_5163 <= grp_fu_3960_p2;
        mul109_1284_reg_5168 <= grp_fu_3965_p2;
        mul109_2262_reg_5108 <= grp_fu_3910_p2;
        mul109_2270_reg_5133 <= grp_fu_3930_p2;
        mul109_2286_reg_5173 <= grp_fu_3970_p2;
        mul109_2288_reg_5178 <= grp_fu_3975_p2;
        mul109_3266_reg_5118 <= grp_fu_3920_p2;
        mul109_3272_reg_5138 <= grp_fu_3935_p2;
        mul109_3290_reg_5183 <= grp_fu_3980_p2;
        mul109_3292_reg_5188 <= grp_fu_3985_p2;
        mul139_reg_5123 <= mul139_fu_2361_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        mul37_reg_4512 <= mul37_fu_1737_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_1806_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        mul60_reg_4568 <= mul60_fu_1821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter5 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5948_pp8_iter4_reg == 1'd0))) begin
        output_reg_0_1_1_fu_404 <= grp_fu_4228_p3;
        output_reg_1_1_1_fu_384 <= grp_fu_4220_p3;
        output_reg_2_1_1_fu_356 <= grp_fu_4212_p3;
        output_reg_3_1_1_fu_328 <= grp_fu_4204_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter6 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5948_pp8_iter5_reg == 1'd0))) begin
        output_reg_0_2_1_fu_400 <= grp_fu_4260_p3;
        output_reg_1_2_1_fu_376 <= grp_fu_4252_p3;
        output_reg_2_2_1_fu_348 <= grp_fu_4244_p3;
        output_reg_3_2_1_fu_320 <= grp_fu_4236_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp161278_reg_4746 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        p_cast13_reg_5860 <= p_cast13_fu_3085_p1;
        p_cast15_reg_5880 <= p_cast15_fu_3097_p1;
        p_cast17_reg_5900 <= p_cast17_fu_3109_p1;
        p_cast19_reg_5920 <= p_cast19_fu_3121_p1;
        p_cast22_reg_5865 <= p_cast22_fu_3088_p1;
        p_cast24_reg_5870 <= p_cast24_fu_3091_p1;
        p_cast26_reg_5875 <= p_cast26_fu_3094_p1;
        p_cast28_reg_5885 <= p_cast28_fu_3100_p1;
        p_cast30_reg_5890 <= p_cast30_fu_3103_p1;
        p_cast32_reg_5895 <= p_cast32_fu_3106_p1;
        p_cast34_reg_5905 <= p_cast34_fu_3112_p1;
        p_cast36_reg_5910 <= p_cast36_fu_3115_p1;
        p_cast38_reg_5915 <= p_cast38_fu_3118_p1;
        p_cast40_reg_5925 <= p_cast40_fu_3124_p1;
        p_cast42_reg_5930 <= p_cast42_fu_3127_p1;
        sext_ln183_reg_5935 <= sext_ln183_fu_3130_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln114_1_reg_5093 <= select_ln114_1_fu_2332_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        select_ln129_reg_5221 <= select_ln129_fu_2408_p3;
        trunc_ln148_1_reg_5246 <= trunc_ln148_1_fu_2419_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_3001_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        select_ln155_1_reg_5810 <= select_ln155_1_fu_3031_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln330_fu_3744_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        select_ln330_1_reg_6227 <= select_ln330_1_fu_3766_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln330_reg_6210_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        select_ln331_1_reg_6242 <= select_ln331_1_fu_3844_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        tmp_10_reg_5641 <= tmp_10_fu_2826_p6;
        tmp_11_reg_5646 <= tmp_11_fu_2843_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        tmp_12_reg_5691 <= tmp_12_fu_2874_p6;
        tmp_13_reg_5696 <= tmp_13_fu_2891_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_14_reg_5741 <= tmp_14_fu_2922_p6;
        tmp_15_reg_5746 <= tmp_15_fu_2939_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        tmp_16_reg_5791 <= tmp_16_fu_2970_p6;
        tmp_17_reg_5796 <= tmp_17_fu_2987_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_3_reg_5441 <= tmp_3_fu_2634_p6;
        tmp_4_reg_5446 <= tmp_4_fu_2651_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_5_reg_5491 <= tmp_5_fu_2682_p6;
        tmp_6_reg_5496 <= tmp_6_fu_2699_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_7_reg_5541 <= tmp_7_fu_2730_p6;
        tmp_8_reg_5546 <= tmp_8_fu_2747_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_9_reg_5591 <= tmp_9_fu_2778_p6;
        tmp_s_reg_5596 <= tmp_s_fu_2795_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_data_V_3_reg_4421 <= tmp_data_V_3_fu_1665_p1;
        trunc_ln521_1_reg_4430 <= trunc_ln521_1_fu_1669_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_data_V_4_reg_4438 <= tmp_data_V_4_fu_1673_p1;
        trunc_ln521_2_reg_4444 <= trunc_ln521_2_fu_1677_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_data_V_5_reg_4450 <= tmp_data_V_5_fu_1681_p1;
        trunc_ln521_3_reg_4458 <= trunc_ln521_3_fu_1685_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_fu_2302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        trunc_ln123_reg_5098 <= trunc_ln123_fu_2344_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_1_fu_1918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        trunc_ln97_1_reg_4794 <= trunc_ln97_1_fu_1929_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_2_fu_1947_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        trunc_ln97_2_reg_4808 <= trunc_ln97_2_fu_1958_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_1889_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        trunc_ln97_reg_4780 <= trunc_ln97_fu_1900_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5948_pp8_iter1_reg == 1'd0))) begin
        zext_ln205_reg_6018[8 : 0] <= zext_ln205_fu_3277_p1[8 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln82_fu_1689_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln86_fu_1743_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_fu_1889_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_1_fu_1918_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_2_fu_1947_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_3_fu_1976_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln114_fu_2302_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln155_fu_3001_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state51 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state51 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter4 == 1'b1) & (ap_enable_reg_pp8_iter3 == 1'b0))) begin
        ap_condition_pp8_exit_iter4_state61 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter4_state61 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln183_fu_3137_p2 == 1'd1))) begin
        ap_condition_pp8_flush_enable = 1'b1;
    end else begin
        ap_condition_pp8_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b1))) begin
        ap_condition_pp9_exit_iter2_state68 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter2_state68 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln330_fu_3744_p2 == 1'd1) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
        ap_condition_pp9_flush_enable = 1'b1;
    end else begin
        ap_condition_pp9_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter6 == 1'b0) & (ap_enable_reg_pp8_iter5 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b0) & (ap_enable_reg_pp8_iter3 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter4 == 1'b0) & (ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5801 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        ap_phi_mux_hi_1_phi_fu_1533_p4 = select_ln155_1_reg_5810;
    end else begin
        ap_phi_mux_hi_1_phi_fu_1533_p4 = hi_1_reg_1529;
    end
end

always @ (*) begin
    if (((icmp_ln114_reg_5084 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_hi_phi_fu_1466_p4 = select_ln114_1_reg_5093;
    end else begin
        ap_phi_mux_hi_phi_fu_1466_p4 = hi_reg_1462;
    end
end

always @ (*) begin
    if (((icmp_ln330_reg_6210 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        ap_phi_mux_k_2_phi_fu_1577_p4 = select_ln330_1_reg_6227;
    end else begin
        ap_phi_mux_k_2_phi_fu_1577_p4 = k_2_reg_1573;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_0_address0 = newIndex66_cast_cast_fu_2191_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_address0 = zext_ln84_fu_1722_p1;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4503 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_1_address0 = newIndex66_cast_cast_fu_2191_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_address0 = zext_ln84_fu_1722_p1;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4503 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_2_address0 = newIndex66_cast_cast_fu_2191_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_address0 = zext_ln84_fu_1722_p1;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4503 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_3_address0 = newIndex66_cast_cast_fu_2191_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_address0 = zext_ln84_fu_1722_p1;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4503 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln330_reg_6210_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln330_reg_6210_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln94_3_reg_4813 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln94_2_reg_4799 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln94_1_reg_4785 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln94_reg_4771 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln94_3_reg_4813 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln94_2_reg_4799 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln94_1_reg_4785 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln94_reg_4771 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        data_l1_0_0_address0 = zext_ln196_fu_3152_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_0_0_address0 = idxprom150_fu_3078_p1;
    end else begin
        data_l1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        data_l1_0_0_ce0 = 1'b1;
    end else begin
        data_l1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5801_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_0_0_we0 = 1'b1;
    end else begin
        data_l1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        data_l1_1_0_address0 = zext_ln196_1_fu_3205_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_1_0_address0 = idxprom150_fu_3078_p1;
    end else begin
        data_l1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        data_l1_1_0_ce0 = 1'b1;
    end else begin
        data_l1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5801_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_1_0_we0 = 1'b1;
    end else begin
        data_l1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        data_l1_2_0_address0 = zext_ln196_2_fu_3262_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_2_0_address0 = idxprom150_fu_3078_p1;
    end else begin
        data_l1_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        data_l1_2_0_ce0 = 1'b1;
    end else begin
        data_l1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5801_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_2_0_we0 = 1'b1;
    end else begin
        data_l1_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter3 == 1'b1))) begin
        data_l1_3_0_address0 = zext_ln196_3_fu_3390_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_3_0_address0 = idxprom150_fu_3078_p1;
    end else begin
        data_l1_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter3 == 1'b1)))) begin
        data_l1_3_0_ce0 = 1'b1;
    end else begin
        data_l1_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5801_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_3_0_we0 = 1'b1;
    end else begin
        data_l1_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_0_address0 = idxprom144_fu_3071_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_0_address0 = zext_ln97_fu_1913_p1;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_0_ce0 = 1'b1;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln94_reg_4771 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_1_address0 = idxprom144_fu_3071_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        data_l2_1_address0 = zext_ln97_1_fu_1942_p1;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        data_l2_1_ce0 = 1'b1;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln94_1_reg_4785 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_2_address0 = idxprom144_fu_3071_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_2_address0 = zext_ln97_2_fu_1971_p1;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_2_ce0 = 1'b1;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln94_2_reg_4799 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_3_address0 = idxprom144_fu_3071_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l2_3_address0 = zext_ln97_3_fu_2001_p1;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        data_l2_3_ce0 = 1'b1;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln94_3_reg_4813 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        grp_fu_4304_ce = 1'b1;
    end else begin
        grp_fu_4304_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_0_address0 = zext_ln205_reg_6018_pp8_iter6_reg;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_address0 = zext_ln122_fu_2354_p1;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_0_address1 = zext_ln333_fu_3870_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_0_address1 = zext_ln205_3_fu_3305_p1;
    end else begin
        output_l1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_0_ce0 = 1'b1;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_0_ce1 = 1'b1;
    end else begin
        output_l1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_0_d0 = grp_fu_4295_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_d0 = conv83_reg_5076;
    end else begin
        output_l1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_36_reg_4971 == 2'd0) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'd1 == and_ln306_3_reg_6101_pp8_iter6_reg) & (ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_0_we0 = 1'b1;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_1_address0 = zext_ln314_2_fu_3674_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_address0 = zext_ln122_fu_2354_p1;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_1_address1 = zext_ln333_fu_3870_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_1_address1 = zext_ln205_2_fu_3296_p1;
    end else begin
        output_l1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_1_ce0 = 1'b1;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_1_ce1 = 1'b1;
    end else begin
        output_l1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_1_d0 = grp_fu_4286_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_d0 = conv83_reg_5076;
    end else begin
        output_l1_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_36_reg_4971 == 2'd1) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'd1 == and_ln306_2_reg_6097_pp8_iter6_reg) & (ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_1_we0 = 1'b1;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_2_address0 = zext_ln314_1_fu_3659_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_address0 = zext_ln122_fu_2354_p1;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_2_address1 = zext_ln333_fu_3870_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_2_address1 = zext_ln205_1_fu_3287_p1;
    end else begin
        output_l1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_2_ce0 = 1'b1;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_2_ce1 = 1'b1;
    end else begin
        output_l1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_2_d0 = grp_fu_4277_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_d0 = conv83_reg_5076;
    end else begin
        output_l1_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_36_reg_4971 == 2'd2) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'd1 == and_ln306_1_reg_6093_pp8_iter6_reg) & (ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_2_we0 = 1'b1;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_3_address0 = zext_ln314_fu_3644_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_address0 = zext_ln122_fu_2354_p1;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_3_address1 = zext_ln333_fu_3870_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_3_address1 = zext_ln205_fu_3277_p1;
    end else begin
        output_l1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_3_ce0 = 1'b1;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_3_ce1 = 1'b1;
    end else begin
        output_l1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_3_d0 = grp_fu_4268_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_d0 = conv83_reg_5076;
    end else begin
        output_l1_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_36_reg_4971 == 2'd3) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'd1 == and_ln306_reg_5979_pp8_iter6_reg) & (ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_3_we0 = 1'b1;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_0_address0 = zext_ln147_29_fu_2953_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_0_address0 = zext_ln147_25_fu_2905_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_0_address0 = zext_ln147_21_fu_2857_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_0_address0 = zext_ln147_17_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_0_address0 = zext_ln147_13_fu_2761_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_0_address0 = zext_ln147_9_fu_2713_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_0_address0 = zext_ln147_5_fu_2665_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_0_address0 = zext_ln147_3_fu_2455_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = zext_ln88_fu_1776_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_0_address1 = zext_ln147_31_fu_2960_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_0_address1 = zext_ln147_27_fu_2912_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_0_address1 = zext_ln147_23_fu_2864_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_0_address1 = zext_ln147_19_fu_2816_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_0_address1 = zext_ln147_15_fu_2768_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_0_address1 = zext_ln147_11_fu_2720_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_0_address1 = zext_ln147_7_fu_2672_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_0_address1 = zext_ln147_1_fu_2435_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln88_reg_4526 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_1_address0 = zext_ln147_29_fu_2953_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_1_address0 = zext_ln147_25_fu_2905_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_1_address0 = zext_ln147_21_fu_2857_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_1_address0 = zext_ln147_17_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_1_address0 = zext_ln147_13_fu_2761_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_1_address0 = zext_ln147_9_fu_2713_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_1_address0 = zext_ln147_5_fu_2665_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_1_address0 = zext_ln147_3_fu_2455_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = zext_ln88_fu_1776_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_1_address1 = zext_ln147_31_fu_2960_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_1_address1 = zext_ln147_27_fu_2912_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_1_address1 = zext_ln147_23_fu_2864_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_1_address1 = zext_ln147_19_fu_2816_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_1_address1 = zext_ln147_15_fu_2768_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_1_address1 = zext_ln147_11_fu_2720_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_1_address1 = zext_ln147_7_fu_2672_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_1_address1 = zext_ln147_1_fu_2435_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln88_reg_4526 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_2_address0 = zext_ln147_29_fu_2953_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_2_address0 = zext_ln147_25_fu_2905_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_2_address0 = zext_ln147_21_fu_2857_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_2_address0 = zext_ln147_17_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_2_address0 = zext_ln147_13_fu_2761_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_2_address0 = zext_ln147_9_fu_2713_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_2_address0 = zext_ln147_5_fu_2665_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_2_address0 = zext_ln147_3_fu_2455_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = zext_ln88_fu_1776_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_2_address1 = zext_ln147_31_fu_2960_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_2_address1 = zext_ln147_27_fu_2912_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_2_address1 = zext_ln147_23_fu_2864_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_2_address1 = zext_ln147_19_fu_2816_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_2_address1 = zext_ln147_15_fu_2768_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_2_address1 = zext_ln147_11_fu_2720_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_2_address1 = zext_ln147_7_fu_2672_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_2_address1 = zext_ln147_1_fu_2435_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln88_reg_4526 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_3_address0 = zext_ln147_29_fu_2953_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_3_address0 = zext_ln147_25_fu_2905_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_3_address0 = zext_ln147_21_fu_2857_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_3_address0 = zext_ln147_17_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_3_address0 = zext_ln147_13_fu_2761_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_3_address0 = zext_ln147_9_fu_2713_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_3_address0 = zext_ln147_5_fu_2665_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_3_address0 = zext_ln147_3_fu_2455_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = zext_ln88_fu_1776_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_3_address1 = zext_ln147_31_fu_2960_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_3_address1 = zext_ln147_27_fu_2912_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_3_address1 = zext_ln147_23_fu_2864_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_3_address1 = zext_ln147_19_fu_2816_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_3_address1 = zext_ln147_15_fu_2768_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_3_address1 = zext_ln147_11_fu_2720_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_3_address1 = zext_ln147_7_fu_2672_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_3_address1 = zext_ln147_1_fu_2435_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln88_reg_4526 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln82_fu_1689_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln82_fu_1689_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln86_fu_1743_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln86_fu_1743_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln91_fu_1806_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if (((icmp_ln91_fu_1806_p2 == 1'd0) & (cmp52307_reg_4555 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln94_fu_1889_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln94_fu_1889_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln94_1_fu_1918_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln94_1_fu_1918_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln94_2_fu_1947_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln94_2_fu_1947_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln94_3_fu_1976_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln94_3_fu_1976_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln102_fu_2005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln113_fu_2156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2302_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter3 == 1'b1) & (ap_enable_reg_pp6_iter2 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2302_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (ap_enable_reg_pp6_iter2 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((icmp_ln129_fu_2365_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_3001_p2 == 1'd1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)) & ~((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_3001_p2 == 1'd1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state56 : begin
            if (((cmp161278_reg_4746 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter5 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter4 == 1'b1) & (ap_enable_reg_pp8_iter3 == 1'b0)) & ~((ap_enable_reg_pp8_iter7 == 1'b1) & (ap_enable_reg_pp8_iter6 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (ap_enable_reg_pp8_iter6 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone)) | ((ap_enable_reg_pp8_iter5 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter4 == 1'b1) & (ap_enable_reg_pp8_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_pp9_stage0 : begin
            if ((~((ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone)) & ~((ap_enable_reg_pp9_iter4 == 1'b1) & (ap_enable_reg_pp9_iter3 == 1'b0) & (1'b0 == ap_block_pp9_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if ((((ap_enable_reg_pp9_iter4 == 1'b1) & (ap_enable_reg_pp9_iter3 == 1'b0) & (1'b0 == ap_block_pp9_stage0_subdone)) | ((ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln102_1_fu_2021_p2 = (30'd1 + ko_reg_1417);

assign add_ln102_fu_2010_p2 = (indvar_flatten29_reg_1406 + 60'd1);

assign add_ln113_fu_2162_p2 = (ki_1_reg_1440 + 3'd1);

assign add_ln114_1_fu_2307_p2 = (indvar_flatten_reg_1451 + 64'd1);

assign add_ln114_2_fu_2326_p2 = (32'd1 + ap_phi_mux_hi_phi_fu_1466_p4);

assign add_ln117_fu_2348_p2 = (select_ln114_fu_2318_p3 + 32'd1);

assign add_ln129_16_fu_2370_p2 = (indvar_flatten13_reg_1484 + 64'd1);

assign add_ln129_17_fu_2381_p2 = (32'd1 + r_reg_1495);

assign add_ln132_fu_3739_p2 = (select_ln129_reg_5221 + 32'd1);

assign add_ln155_2_fu_3006_p2 = (indvar_flatten6_reg_1518 + 64'd1);

assign add_ln155_3_fu_3025_p2 = (32'd1 + ap_phi_mux_hi_1_phi_fu_1533_p4);

assign add_ln158_fu_3065_p2 = (32'd1 + select_ln155_fu_3017_p3);

assign add_ln183_fu_3142_p2 = (i_reg_1551 + 31'd1);

assign add_ln193_1_fu_3350_p2 = ($signed(32'd4294967294) + $signed(zext_ln183_reg_5940_pp8_iter2_reg));

assign add_ln193_2_fu_3371_p2 = ($signed(32'd4294967293) + $signed(zext_ln183_reg_5940_pp8_iter2_reg));

assign add_ln193_3_fu_3257_p2 = ($signed(9'd510) + $signed(trunc_ln196_reg_5957_pp8_iter1_reg));

assign add_ln193_fu_3200_p2 = ($signed(9'd511) + $signed(trunc_ln196_reg_5957));

assign add_ln195_fu_3267_p2 = ($signed(9'd509) + $signed(trunc_ln196_reg_5957_pp8_iter1_reg));

assign add_ln205_1_fu_3282_p2 = (mul_ln102_1_reg_4897 + add_ln193_3_fu_3257_p2);

assign add_ln205_2_fu_3292_p2 = (mul_ln102_1_reg_4897 + add_ln193_reg_5983);

assign add_ln205_3_fu_3301_p2 = (mul_ln102_1_reg_4897 + trunc_ln196_reg_5957_pp8_iter1_reg);

assign add_ln205_fu_3272_p2 = (mul_ln102_1_reg_4897 + add_ln195_fu_3267_p2);

assign add_ln305_1_fu_3418_p2 = ($signed(zext_ln183_reg_5940_pp8_iter2_reg) + $signed(32'd4294967291));

assign add_ln305_2_fu_3448_p2 = ($signed(zext_ln183_reg_5940_pp8_iter2_reg) + $signed(32'd4294967292));

assign add_ln305_fu_3163_p2 = ($signed(32'd4294967290) + $signed(zext_ln183_fu_3133_p1));

assign add_ln307_1_fu_3649_p2 = ($signed(trunc_ln196_reg_5957_pp8_iter6_reg) + $signed(9'd507));

assign add_ln307_2_fu_3664_p2 = ($signed(trunc_ln196_reg_5957_pp8_iter6_reg) + $signed(9'd508));

assign add_ln307_fu_3634_p2 = ($signed(9'd506) + $signed(trunc_ln196_reg_5957_pp8_iter6_reg));

assign add_ln315_1_fu_3654_p2 = (add_ln307_1_fu_3649_p2 + mul_ln102_1_reg_4897);

assign add_ln315_2_fu_3669_p2 = (add_ln307_2_fu_3664_p2 + mul_ln102_1_reg_4897);

assign add_ln315_fu_3639_p2 = (add_ln307_fu_3634_p2 + mul_ln102_1_reg_4897);

assign add_ln330_1_fu_3760_p2 = (30'd1 + ap_phi_mux_k_2_phi_fu_1577_p4);

assign add_ln330_fu_3749_p2 = (indvar_flatten50_reg_1562 + 64'd1);

assign add_ln331_1_fu_3778_p2 = (35'd1 + indvar_flatten36_reg_1584);

assign add_ln331_fu_3821_p2 = (3'd1 + select_ln330_fu_3792_p3);

assign add_ln332_fu_3864_p2 = (32'd1 + select_ln331_fu_3832_p3);

assign add_ln82_fu_1694_p2 = (k_reg_1329 + 32'd1);

assign add_ln86_fu_1748_p2 = (k_1_reg_1340 + 32'd1);

assign add_ln94_1_fu_1923_p2 = (wh_1_reg_1373 + 32'd1);

assign add_ln94_2_fu_1952_p2 = (wh_2_reg_1384 + 32'd1);

assign add_ln94_3_fu_1981_p2 = (wh_4_reg_1395 + 32'd1);

assign add_ln94_fu_1894_p2 = (wh_reg_1362 + 32'd1);

assign add_ln97_1_fu_1938_p2 = (trunc_ln97_1_reg_4794 + mul60_reg_4568);

assign add_ln97_2_fu_1967_p2 = (trunc_ln97_2_reg_4808 + mul60_reg_4568);

assign add_ln97_3_fu_1991_p2 = (trunc_ln97_3_fu_1987_p1 + mul60_reg_4568);

assign add_ln97_fu_1909_p2 = (trunc_ln97_reg_4780 + mul60_reg_4568);

assign and_ln306_1_fu_3442_p2 = (xor_ln305_1_fu_3431_p2 & icmp_ln307_1_fu_3437_p2);

assign and_ln306_2_fu_3472_p2 = (xor_ln305_2_fu_3461_p2 & icmp_ln307_2_fu_3467_p2);

assign and_ln306_3_fu_3483_p2 = (xor_ln195_fu_3384_p2 & icmp_ln307_3_fu_3478_p2);

assign and_ln306_fu_3188_p2 = (xor_ln305_fu_3177_p2 & icmp_ln307_fu_3183_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1 = ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_reg_4771 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_reg_4771 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_1_reg_4785 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_1_reg_4785 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp4 = ((1'b1 == ap_block_pp4_stage0_subdone) & (ap_ST_fsm_pp4_stage0 == ap_CS_fsm));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_2_reg_4799 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_2_reg_4799 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp5 = ((1'b1 == ap_block_pp5_stage0_subdone) & (ap_ST_fsm_pp5_stage0 == ap_CS_fsm));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_3_reg_4813 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_3_reg_4813 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp6 = ((1'b1 == ap_block_pp6_stage0_subdone) & (ap_ST_fsm_pp6_stage0 == ap_CS_fsm));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7 = ((1'b1 == ap_block_pp7_stage0_subdone) & (ap_ST_fsm_pp7_stage0 == ap_CS_fsm));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8 = ((1'b1 == ap_block_pp8_stage0_subdone) & (ap_ST_fsm_pp8_stage0 == ap_CS_fsm));
end

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9 = ((1'b1 == ap_block_pp9_stage0_subdone) & (ap_ST_fsm_pp9_stage0 == ap_CS_fsm));
end

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln330_reg_6210_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln330_reg_6210_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln330_reg_6210_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter1 = (weight_in_V_empty_n == 1'b0);
end

assign ap_block_state13_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp2_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_reg_4771 == 1'd0));
end

assign ap_block_state16_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp3_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_1_reg_4785 == 1'd0));
end

assign ap_block_state19_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp4_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_2_reg_4799 == 1'd0));
end

assign ap_block_state22_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp5_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_3_reg_4813 == 1'd0));
end

assign ap_block_state31_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp8_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp8_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp8_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp8_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp8_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp9_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp9_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state70_pp9_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln330_reg_6210_pp9_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (bias_in_V_empty_n == 1'b0);
end

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_1007 = (icmp_ln183_reg_5948_pp8_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1011 = (icmp_ln183_reg_5948_pp8_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1015 = (ap_predicate_op1015_load_state59 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_1019 = (icmp_ln183_reg_5948_pp8_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1048 = (icmp_ln183_reg_5948_pp8_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1050 = (icmp_ln183_reg_5948_pp8_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1052 = (ap_predicate_op1052_load_state60 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_1054 = (icmp_ln183_reg_5948_pp8_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1210 = (1'd1 == and_ln306_reg_5979_pp8_iter6_reg);
end

always @ (*) begin
    ap_enable_operation_1216 = (1'd1 == and_ln306_1_reg_6093_pp8_iter6_reg);
end

always @ (*) begin
    ap_enable_operation_1222 = (1'd1 == and_ln306_2_reg_6097_pp8_iter6_reg);
end

always @ (*) begin
    ap_enable_operation_1225 = (1'd1 == and_ln306_3_reg_6101_pp8_iter6_reg);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

always @ (*) begin
    ap_enable_state59_pp8_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state60_pp8_iter3_stage0 = ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter3 == 1'b1));
end

always @ (*) begin
    ap_enable_state64_pp8_iter7_stage0 = ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter7 == 1'b1));
end

always @ (*) begin
    ap_predicate_op1015_load_state59 = ((icmp_ln195_reg_5973_pp8_iter1_reg == 1'd1) & (icmp_ln183_reg_5948_pp8_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op1052_load_state60 = ((icmp_ln195_reg_5973_pp8_iter2_reg == 1'd1) & (icmp_ln183_reg_5948_pp8_iter2_reg == 1'd0));
end

assign bound11_fu_1870_p0 = cast9_fu_1867_p1;

assign bound11_fu_1870_p1 = cast9_fu_1867_p1;

assign bound18_fu_1883_p0 = bound18_fu_1883_p00;

assign bound18_fu_1883_p00 = div48_cast_reg_4535;

assign bound18_fu_1883_p1 = bound18_fu_1883_p10;

assign bound18_fu_1883_p10 = div68_cast8_fu_1826_p4;

assign bound_fu_1861_p0 = cast_fu_1858_p1;

assign bound_fu_1861_p1 = cast_fu_1858_p1;

assign c_1_fu_2199_p2 = (c_reg_4945 | 11'd1);

assign c_2_fu_2204_p2 = (c_reg_4945 | 11'd2);

assign c_3_fu_2150_p2 = (c_fu_2142_p3 | 11'd3);

assign c_fu_2142_p3 = {{empty_40_fu_2138_p1}, {2'd0}};

assign cast9_fu_1867_p1 = $unsigned(tmp_data_V_5_reg_4450);

assign cast_fu_1858_p1 = $unsigned(tmp_data_V_3_reg_4421);

assign cmp161278_fu_1849_p2 = (($signed(input_rows_fu_1843_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign cmp52307_fu_1800_p2 = ((mul51_fu_1792_p2 == 32'd0) ? 1'b1 : 1'b0);

assign co_2_fu_2403_p2 = (select_ln102_reg_4887 + 30'd1);

assign co_3_fu_1811_p2 = (co_reg_1351 + 30'd1);

assign conv83_fu_2298_p1 = $signed(tmp_1_fu_2284_p6);

assign conv_out_V_din = p_Repl2_s_fu_3877_p6;

assign data_l2_0_d0 = data_in_V_dout[7:0];

assign data_l2_1_d0 = data_in_V_dout[7:0];

assign data_l2_2_d0 = data_in_V_dout[7:0];

assign data_l2_3_d0 = data_in_V_dout[7:0];

assign div68_cast8_fu_1826_p4 = {{bias_in_V_read_reg_4392[31:2]}};

assign empty_34_fu_1839_p1 = mul158_fu_1835_p2[8:0];

assign empty_35_fu_1855_p1 = bias_in_V_read_1_reg_4403[8:0];

assign empty_36_fu_2172_p1 = ki_1_reg_1440[1:0];

assign empty_37_fu_2176_p2 = (p_mid2_reg_4847 + zext_ln113_fu_2168_p1);

assign empty_38_fu_3052_p1 = select_ln155_fu_3017_p3[9:0];

assign empty_39_fu_3056_p1 = select_ln155_fu_3017_p3[8:0];

assign empty_40_fu_2138_p1 = select_ln102_fu_2106_p3[8:0];

assign empty_fu_1796_p1 = mul51_fu_1792_p2[9:0];

assign grp_fu_3895_p0 = (p_mid2_fu_2043_p3 | 11'd1);

assign grp_fu_3900_p0 = (p_mid2_fu_2043_p3 | 11'd2);

assign grp_fu_3905_p0 = (p_mid2_fu_2043_p3 | 11'd3);

assign grp_fu_3910_p0 = ($signed(c_reg_4945) + $signed(mul_ln102_4_reg_4924));

assign grp_fu_3915_p0 = ($signed(c_reg_4945) + $signed(mul_ln102_3_reg_4916));

assign grp_fu_3920_p0 = ($signed(c_reg_4945) + $signed(mul_ln102_5_reg_4932));

assign grp_fu_3925_p0 = ($signed(c_2_fu_2204_p2) + $signed(mul_ln102_3_reg_4916));

assign grp_fu_3930_p0 = ($signed(c_2_fu_2204_p2) + $signed(mul_ln102_4_reg_4924));

assign grp_fu_3935_p0 = ($signed(c_2_fu_2204_p2) + $signed(mul_ln102_5_reg_4932));

assign grp_fu_3940_p0 = (c_reg_4945 + mul107_mid2_reg_4908);

assign grp_fu_3945_p0 = (c_1_fu_2199_p2 + mul107_mid2_reg_4908);

assign grp_fu_3950_p0 = (c_2_fu_2204_p2 + mul107_mid2_reg_4908);

assign grp_fu_3955_p0 = (c_3_reg_4955 + mul107_mid2_reg_4908);

assign grp_fu_3960_p0 = ($signed(c_1_fu_2199_p2) + $signed(mul_ln102_3_reg_4916));

assign grp_fu_3965_p0 = ($signed(c_3_reg_4955) + $signed(mul_ln102_3_reg_4916));

assign grp_fu_3970_p0 = ($signed(c_1_fu_2199_p2) + $signed(mul_ln102_4_reg_4924));

assign grp_fu_3975_p0 = ($signed(c_3_reg_4955) + $signed(mul_ln102_4_reg_4924));

assign grp_fu_3980_p0 = ($signed(c_1_fu_2199_p2) + $signed(mul_ln102_5_reg_4932));

assign grp_fu_3985_p0 = ($signed(c_3_reg_4955) + $signed(mul_ln102_5_reg_4932));

assign grp_fu_3990_p0 = select_ln114_1_fu_2332_p3[8:0];

assign grp_fu_4158_p0 = (mul139_reg_5123 + trunc_ln155_fu_3039_p1);

assign grp_fu_4166_p0 = select_ln155_1_fu_3031_p3[8:0];

assign grp_fu_4172_p1 = p_cast26_reg_5875;

assign grp_fu_4172_p2 = ((tmp_19_fu_3376_p3[0:0] === 1'b1) ? 32'd0 : output_l1_3_q1);

assign grp_fu_4180_p1 = p_cast32_reg_5895;

assign grp_fu_4180_p2 = ((tmp_18_fu_3355_p3[0:0] === 1'b1) ? 32'd0 : output_l1_2_q1);

assign grp_fu_4188_p1 = p_cast38_reg_5915;

assign grp_fu_4188_p2 = ((icmp_ln195_reg_5973_pp8_iter2_reg[0:0] === 1'b1) ? output_l1_1_q1 : 32'd0);

assign grp_fu_4196_p1 = sext_ln183_reg_5935;

assign grp_fu_4204_p1 = p_cast24_reg_5870;

assign grp_fu_4212_p1 = p_cast30_reg_5890;

assign grp_fu_4220_p1 = p_cast36_reg_5910;

assign grp_fu_4228_p1 = p_cast42_reg_5930;

assign grp_fu_4236_p1 = p_cast22_reg_5865;

assign grp_fu_4244_p1 = p_cast28_reg_5885;

assign grp_fu_4252_p1 = p_cast34_reg_5905;

assign grp_fu_4260_p1 = p_cast40_reg_5925;

assign grp_fu_4268_p1 = p_cast13_reg_5860;

assign grp_fu_4277_p1 = p_cast15_reg_5880;

assign grp_fu_4286_p1 = p_cast17_reg_5900;

assign grp_fu_4295_p1 = p_cast19_reg_5920;

assign grp_fu_4304_p0 = select_ln330_1_fu_3766_p3[8:0];

assign grp_fu_4304_p2 = select_ln331_fu_3832_p3[8:0];

assign icmp_ln102_fu_2005_p2 = ((indvar_flatten29_reg_1406 == bound18_reg_4766) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_2016_p2 = ((co_1_reg_1428 == div48_cast_reg_4535) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_2156_p2 = ((ki_1_reg_1440 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_2302_p2 = ((indvar_flatten_reg_1451 == bound_reg_4755) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_2313_p2 = ((wi_reg_1473 == tmp_data_V_3_reg_4421) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_2365_p2 = ((indvar_flatten13_reg_1484 == bound11_reg_4761) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_2376_p2 = ((s_reg_1506 == tmp_data_V_5_reg_4450) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_3001_p2 = ((indvar_flatten6_reg_1518 == bound_reg_4755) ? 1'b1 : 1'b0);

assign icmp_ln158_fu_3012_p2 = ((wi_1_reg_1540 == tmp_data_V_3_reg_4421) ? 1'b1 : 1'b0);

assign icmp_ln183_fu_3137_p2 = ((zext_ln183_fu_3133_p1 == input_rows_reg_4741) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_3157_p2 = ((i_reg_1551 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln307_1_fu_3437_p2 = ((add_ln305_1_fu_3418_p2 < mul158_reg_4725) ? 1'b1 : 1'b0);

assign icmp_ln307_2_fu_3467_p2 = ((add_ln305_2_fu_3448_p2 < mul158_reg_4725) ? 1'b1 : 1'b0);

assign icmp_ln307_3_fu_3478_p2 = ((add_ln193_2_fu_3371_p2 < mul158_reg_4725) ? 1'b1 : 1'b0);

assign icmp_ln307_fu_3183_p2 = ((add_ln305_fu_3163_p2 < mul158_reg_4725) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_3744_p2 = ((indvar_flatten50_reg_1562 == mul_ln330_reg_4877) ? 1'b1 : 1'b0);

assign icmp_ln331_fu_3755_p2 = ((indvar_flatten36_reg_1584 == zext_ln330_reg_4872) ? 1'b1 : 1'b0);

assign icmp_ln332_1_fu_3810_p2 = ((wh_3_reg_1606 == mul158_reg_4725) ? 1'b1 : 1'b0);

assign icmp_ln332_fu_2101_p2 = ((mul158_reg_4725 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1689_p2 = ((k_reg_1329 == tmp_data_V_1_reg_4397) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_1743_p2 = ((k_1_reg_1340 == mul37_reg_4512) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_1806_p2 = ((co_reg_1351 == div48_cast_reg_4535) ? 1'b1 : 1'b0);

assign icmp_ln94_1_fu_1918_p2 = ((wh_1_reg_1373 == mul51_reg_4542) ? 1'b1 : 1'b0);

assign icmp_ln94_2_fu_1947_p2 = ((wh_2_reg_1384 == mul51_reg_4542) ? 1'b1 : 1'b0);

assign icmp_ln94_3_fu_1976_p2 = ((wh_4_reg_1395 == mul51_reg_4542) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1889_p2 = ((wh_reg_1362 == mul51_reg_4542) ? 1'b1 : 1'b0);

assign idxprom144_fu_3071_p1 = $unsigned(grp_fu_4158_p4);

assign idxprom150_fu_3078_p1 = $unsigned(add149_reg_5835);

assign input_rows_fu_1843_p2 = (32'd6 + mul158_fu_1835_p2);

assign lshr_ln147_1_fu_2446_p4 = {{grp_fu_4008_p4[10:2]}};

assign lshr_ln2_fu_2426_p4 = {{grp_fu_3998_p4[10:2]}};

assign mul107_mid2_fu_2126_p3 = {{mul_ln102_2_fu_2122_p2}, {2'd0}};

assign mul60_fu_1821_p0 = co_reg_1351[9:0];

assign mul_ln330_fu_2095_p0 = mul_ln330_fu_2095_p00;

assign mul_ln330_fu_2095_p00 = tmp_2_fu_2077_p3;

assign mul_ln330_fu_2095_p1 = mul_ln330_fu_2095_p10;

assign mul_ln330_fu_2095_p10 = div68_cast8_reg_4720;

assign newIndex66_cast_cast_fu_2191_p1 = newIndex_fu_2181_p4;

assign newIndex_fu_2181_p4 = {{empty_37_fu_2176_p2[10:2]}};

assign or_ln331_fu_3827_p2 = (select_ln330_3_fu_3815_p3 | icmp_ln331_reg_6219_pp9_iter1_reg);

assign p_cast13_fu_3085_p1 = $signed(tmp_17_reg_5796);

assign p_cast15_fu_3097_p1 = $signed(tmp_13_reg_5696);

assign p_cast17_fu_3109_p1 = $signed(tmp_s_reg_5596);

assign p_cast19_fu_3121_p1 = $signed(tmp_6_reg_5496);

assign p_cast22_fu_3088_p1 = $signed(tmp_16_reg_5791);

assign p_cast24_fu_3091_p1 = $signed(tmp_15_reg_5746);

assign p_cast26_fu_3094_p1 = $signed(tmp_14_reg_5741);

assign p_cast28_fu_3100_p1 = $signed(tmp_12_reg_5691);

assign p_cast30_fu_3103_p1 = $signed(tmp_11_reg_5646);

assign p_cast32_fu_3106_p1 = $signed(tmp_10_reg_5641);

assign p_cast34_fu_3112_p1 = $signed(tmp_9_reg_5591);

assign p_cast36_fu_3115_p1 = $signed(tmp_8_reg_5546);

assign p_cast38_fu_3118_p1 = $signed(tmp_7_reg_5541);

assign p_cast40_fu_3124_p1 = $signed(tmp_5_reg_5491);

assign p_cast42_fu_3127_p1 = $signed(tmp_4_reg_5446);

assign p_mid2_fu_2043_p3 = {{select_ln102_1_fu_2035_p3}, {2'd0}};

assign select_ln102_1_fu_2035_p3 = ((icmp_ln105_fu_2016_p2[0:0] === 1'b1) ? trunc_ln102_fu_2027_p1 : trunc_ln102_1_fu_2031_p1);

assign select_ln102_2_fu_2069_p3 = ((icmp_ln105_fu_2016_p2[0:0] === 1'b1) ? add_ln102_1_fu_2021_p2 : ko_reg_1417);

assign select_ln102_fu_2106_p3 = ((icmp_ln105_reg_4836[0:0] === 1'b1) ? 30'd0 : co_1_reg_1428);

assign select_ln114_1_fu_2332_p3 = ((icmp_ln117_fu_2313_p2[0:0] === 1'b1) ? add_ln114_2_fu_2326_p2 : ap_phi_mux_hi_phi_fu_1466_p4);

assign select_ln114_fu_2318_p3 = ((icmp_ln117_fu_2313_p2[0:0] === 1'b1) ? 32'd0 : wi_reg_1473);

assign select_ln129_1_fu_2387_p3 = ((icmp_ln132_fu_2376_p2[0:0] === 1'b1) ? add_ln129_17_fu_2381_p2 : r_reg_1495);

assign select_ln129_fu_2408_p3 = ((icmp_ln132_reg_5201[0:0] === 1'b1) ? 32'd0 : s_reg_1506);

assign select_ln155_1_fu_3031_p3 = ((icmp_ln158_fu_3012_p2[0:0] === 1'b1) ? add_ln155_3_fu_3025_p2 : ap_phi_mux_hi_1_phi_fu_1533_p4);

assign select_ln155_fu_3017_p3 = ((icmp_ln158_fu_3012_p2[0:0] === 1'b1) ? 32'd0 : wi_1_reg_1540);

assign select_ln195_1_fu_3363_p3 = ((tmp_18_fu_3355_p3[0:0] === 1'b1) ? 8'd0 : data_l1_2_0_q0);

assign select_ln195_2_fu_3532_p3 = ((tmp_19_reg_6063[0:0] === 1'b1) ? 8'd0 : data_l1_3_0_q0);

assign select_ln195_fu_3250_p3 = ((icmp_ln195_reg_5973_pp8_iter1_reg[0:0] === 1'b1) ? data_l1_1_0_q0 : 8'd0);

assign select_ln330_1_fu_3766_p3 = ((icmp_ln331_fu_3755_p2[0:0] === 1'b1) ? add_ln330_1_fu_3760_p2 : ap_phi_mux_k_2_phi_fu_1577_p4);

assign select_ln330_2_fu_3803_p3 = ((icmp_ln331_reg_6219_pp9_iter1_reg[0:0] === 1'b1) ? 2'd0 : trunc_ln333_fu_3799_p1);

assign select_ln330_3_fu_3815_p3 = ((icmp_ln331_reg_6219_pp9_iter1_reg[0:0] === 1'b1) ? icmp_ln332_reg_4882 : icmp_ln332_1_fu_3810_p2);

assign select_ln330_fu_3792_p3 = ((icmp_ln331_reg_6219_pp9_iter1_reg[0:0] === 1'b1) ? 3'd0 : ki_reg_1595);

assign select_ln331_1_fu_3844_p3 = ((select_ln330_3_fu_3815_p3[0:0] === 1'b1) ? trunc_ln333_1_fu_3840_p1 : select_ln330_2_fu_3803_p3);

assign select_ln331_2_fu_3852_p3 = ((select_ln330_3_fu_3815_p3[0:0] === 1'b1) ? add_ln331_fu_3821_p2 : select_ln330_fu_3792_p3);

assign select_ln331_3_fu_3784_p3 = ((icmp_ln331_fu_3755_p2[0:0] === 1'b1) ? 35'd1 : add_ln331_1_fu_3778_p2);

assign select_ln331_fu_3832_p3 = ((or_ln331_fu_3827_p2[0:0] === 1'b1) ? 32'd0 : wh_3_reg_1606);

assign sext_ln183_fu_3130_p1 = $signed(tmp_3_reg_5441);

assign tmp3_fu_3060_p2 = (trunc_ln148_1_reg_5246 + empty_38_fu_3052_p1);

assign tmp_10_fu_2826_p5 = trunc_ln147_8_reg_5361;

assign tmp_11_fu_2843_p5 = trunc_ln147_9_reg_5371;

assign tmp_12_fu_2874_p5 = trunc_ln147_10_reg_5381;

assign tmp_13_fu_2891_p5 = trunc_ln147_11_reg_5391;

assign tmp_14_fu_2922_p5 = trunc_ln147_12_reg_5401;

assign tmp_15_fu_2939_p5 = trunc_ln147_13_reg_5411;

assign tmp_16_fu_2970_p5 = trunc_ln147_14_reg_5421;

assign tmp_17_fu_2987_p5 = trunc_ln147_15_reg_5431;

assign tmp_18_fu_3355_p3 = add_ln193_1_fu_3350_p2[32'd31];

assign tmp_19_fu_3376_p3 = add_ln193_2_fu_3371_p2[32'd31];

assign tmp_1_fu_2284_p5 = empty_36_reg_4971;

assign tmp_20_fu_3169_p3 = add_ln305_fu_3163_p2[32'd31];

assign tmp_21_fu_3423_p3 = add_ln305_1_fu_3418_p2[32'd31];

assign tmp_22_fu_3453_p3 = add_ln305_2_fu_3448_p2[32'd31];

assign tmp_2_fu_2077_p3 = {{mul158_reg_4725}, {2'd0}};

assign tmp_3_fu_2634_p5 = trunc_ln147_reg_5251;

assign tmp_4_fu_2651_p5 = trunc_ln147_1_reg_5276;

assign tmp_5_fu_2682_p5 = trunc_ln147_2_reg_5301;

assign tmp_6_fu_2699_p5 = trunc_ln147_3_reg_5311;

assign tmp_7_fu_2730_p5 = trunc_ln147_4_reg_5321;

assign tmp_8_fu_2747_p5 = trunc_ln147_5_reg_5331;

assign tmp_9_fu_2778_p5 = trunc_ln147_6_reg_5341;

assign tmp_data_V_1_fu_1653_p1 = bias_in_V_dout[31:0];

assign tmp_data_V_2_fu_1657_p1 = bias_in_V_dout[31:0];

assign tmp_data_V_3_fu_1665_p1 = bias_in_V_dout[31:0];

assign tmp_data_V_4_fu_1673_p1 = bias_in_V_dout[31:0];

assign tmp_data_V_5_fu_1681_p1 = bias_in_V_dout[31:0];

assign tmp_s_fu_2795_p5 = trunc_ln147_7_reg_5351;

assign trunc_ln102_1_fu_2031_p1 = ko_reg_1417[8:0];

assign trunc_ln102_fu_2027_p1 = add_ln102_1_fu_2021_p2[8:0];

assign trunc_ln105_fu_2134_p1 = select_ln102_fu_2106_p3[9:0];

assign trunc_ln123_fu_2344_p1 = select_ln114_fu_2318_p3[8:0];

assign trunc_ln129_1_fu_2399_p1 = select_ln129_1_fu_2387_p3[10:0];

assign trunc_ln129_fu_2395_p1 = select_ln129_1_fu_2387_p3[9:0];

assign trunc_ln147_10_fu_2559_p1 = grp_fu_4098_p4[1:0];

assign trunc_ln147_11_fu_2571_p1 = grp_fu_4108_p4[1:0];

assign trunc_ln147_12_fu_2583_p1 = grp_fu_4118_p4[1:0];

assign trunc_ln147_13_fu_2595_p1 = grp_fu_4128_p4[1:0];

assign trunc_ln147_14_fu_2607_p1 = grp_fu_4138_p4[1:0];

assign trunc_ln147_15_fu_2619_p1 = grp_fu_4148_p4[1:0];

assign trunc_ln147_1_fu_2443_p1 = grp_fu_4008_p4[1:0];

assign trunc_ln147_2_fu_2463_p1 = grp_fu_4018_p4[1:0];

assign trunc_ln147_3_fu_2475_p1 = grp_fu_4028_p4[1:0];

assign trunc_ln147_4_fu_2487_p1 = grp_fu_4038_p4[1:0];

assign trunc_ln147_5_fu_2499_p1 = grp_fu_4048_p4[1:0];

assign trunc_ln147_6_fu_2511_p1 = grp_fu_4058_p4[1:0];

assign trunc_ln147_7_fu_2523_p1 = grp_fu_4068_p4[1:0];

assign trunc_ln147_8_fu_2535_p1 = grp_fu_4078_p4[1:0];

assign trunc_ln147_9_fu_2547_p1 = grp_fu_4088_p4[1:0];

assign trunc_ln147_fu_2423_p1 = grp_fu_3998_p4[1:0];

assign trunc_ln148_1_fu_2419_p1 = select_ln129_fu_2408_p3[9:0];

assign trunc_ln148_fu_2415_p1 = select_ln129_fu_2408_p3[10:0];

assign trunc_ln155_fu_3039_p1 = select_ln155_1_fu_3031_p3[9:0];

assign trunc_ln196_fu_3148_p1 = i_reg_1551[8:0];

assign trunc_ln333_1_fu_3840_p1 = add_ln331_fu_3821_p2[1:0];

assign trunc_ln333_fu_3799_p1 = ki_reg_1595[1:0];

assign trunc_ln521_1_fu_1669_p1 = bias_in_V_dout[8:0];

assign trunc_ln521_2_fu_1677_p1 = bias_in_V_dout[9:0];

assign trunc_ln521_3_fu_1685_p1 = bias_in_V_dout[10:0];

assign trunc_ln521_fu_1661_p1 = bias_in_V_dout[10:0];

assign trunc_ln708_1_fu_1768_p1 = weight_in_V_dout[7:0];

assign trunc_ln708_fu_1714_p1 = bias_in_V_dout[7:0];

assign trunc_ln84_fu_1700_p1 = k_reg_1329[1:0];

assign trunc_ln88_fu_1754_p1 = k_1_reg_1340[1:0];

assign trunc_ln97_1_fu_1929_p1 = wh_1_reg_1373[9:0];

assign trunc_ln97_2_fu_1958_p1 = wh_2_reg_1384[9:0];

assign trunc_ln97_3_fu_1987_p1 = wh_4_reg_1395[9:0];

assign trunc_ln97_fu_1900_p1 = wh_reg_1362[9:0];

assign xor_ln195_fu_3384_p2 = (tmp_19_fu_3376_p3 ^ 1'd1);

assign xor_ln305_1_fu_3431_p2 = (tmp_21_fu_3423_p3 ^ 1'd1);

assign xor_ln305_2_fu_3461_p2 = (tmp_22_fu_3453_p3 ^ 1'd1);

assign xor_ln305_fu_3177_p2 = (tmp_20_fu_3169_p3 ^ 1'd1);

assign zext_ln113_fu_2168_p1 = ki_1_reg_1440;

assign zext_ln122_fu_2354_p1 = $unsigned(grp_fu_3990_p4);

assign zext_ln147_11_fu_2720_p1 = lshr_ln147_5_reg_5336;

assign zext_ln147_13_fu_2761_p1 = lshr_ln147_6_reg_5346;

assign zext_ln147_15_fu_2768_p1 = lshr_ln147_7_reg_5356;

assign zext_ln147_17_fu_2809_p1 = lshr_ln147_8_reg_5366;

assign zext_ln147_19_fu_2816_p1 = lshr_ln147_9_reg_5376;

assign zext_ln147_1_fu_2435_p1 = lshr_ln2_fu_2426_p4;

assign zext_ln147_21_fu_2857_p1 = lshr_ln147_s_reg_5386;

assign zext_ln147_23_fu_2864_p1 = lshr_ln147_10_reg_5396;

assign zext_ln147_25_fu_2905_p1 = lshr_ln147_11_reg_5406;

assign zext_ln147_27_fu_2912_p1 = lshr_ln147_12_reg_5416;

assign zext_ln147_29_fu_2953_p1 = lshr_ln147_13_reg_5426;

assign zext_ln147_31_fu_2960_p1 = lshr_ln147_14_reg_5436;

assign zext_ln147_3_fu_2455_p1 = lshr_ln147_1_fu_2446_p4;

assign zext_ln147_5_fu_2665_p1 = lshr_ln147_2_reg_5306;

assign zext_ln147_7_fu_2672_p1 = lshr_ln147_3_reg_5316;

assign zext_ln147_9_fu_2713_p1 = lshr_ln147_4_reg_5326;

assign zext_ln183_fu_3133_p1 = i_reg_1551;

assign zext_ln196_1_fu_3205_p1 = add_ln193_fu_3200_p2;

assign zext_ln196_2_fu_3262_p1 = add_ln193_3_fu_3257_p2;

assign zext_ln196_3_fu_3390_p1 = add_ln193_2_fu_3371_p2;

assign zext_ln196_fu_3152_p1 = i_reg_1551;

assign zext_ln205_1_fu_3287_p1 = add_ln205_1_fu_3282_p2;

assign zext_ln205_2_fu_3296_p1 = add_ln205_2_fu_3292_p2;

assign zext_ln205_3_fu_3305_p1 = add_ln205_3_fu_3301_p2;

assign zext_ln205_fu_3277_p1 = add_ln205_fu_3272_p2;

assign zext_ln314_1_fu_3659_p1 = add_ln315_1_fu_3654_p2;

assign zext_ln314_2_fu_3674_p1 = add_ln315_2_fu_3669_p2;

assign zext_ln314_fu_3644_p1 = add_ln315_fu_3639_p2;

assign zext_ln330_fu_2084_p1 = tmp_2_fu_2077_p3;

assign zext_ln333_fu_3870_p1 = $unsigned(grp_fu_4304_p3);

assign zext_ln84_fu_1722_p1 = lshr_ln_reg_4507;

assign zext_ln88_fu_1776_p1 = lshr_ln1_reg_4530;

assign zext_ln97_1_fu_1942_p1 = add_ln97_1_fu_1938_p2;

assign zext_ln97_2_fu_1971_p1 = add_ln97_2_fu_1967_p2;

assign zext_ln97_3_fu_2001_p1 = add_ln97_3_reg_4822;

assign zext_ln97_fu_1913_p1 = add_ln97_fu_1909_p2;

always @ (posedge ap_clk) begin
    p_mid2_reg_4847[1:0] <= 2'b00;
    zext_ln330_reg_4872[1:0] <= 2'b00;
    zext_ln330_reg_4872[34] <= 1'b0;
    mul107_mid2_reg_4908[1:0] <= 2'b00;
    c_reg_4945[1:0] <= 2'b00;
    c_3_reg_4955[1:0] <= 2'b11;
    zext_ln183_reg_5940[31] <= 1'b0;
    zext_ln183_reg_5940_pp8_iter1_reg[31] <= 1'b0;
    zext_ln183_reg_5940_pp8_iter2_reg[31] <= 1'b0;
    zext_ln205_reg_6018[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln205_reg_6018_pp8_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln205_reg_6018_pp8_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln205_reg_6018_pp8_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln205_reg_6018_pp8_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //Conv_sysarr_dbbuf
