// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_dbbuf_Conv_sysarr_dbbuf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.186000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=3283,HLS_SYN_LUT=5464,HLS_VERSION=2020_1}" *)

module Conv_sysarr_dbbuf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 47'd1;
parameter    ap_ST_fsm_state2 = 47'd2;
parameter    ap_ST_fsm_state3 = 47'd4;
parameter    ap_ST_fsm_state4 = 47'd8;
parameter    ap_ST_fsm_state5 = 47'd16;
parameter    ap_ST_fsm_pp0_stage0 = 47'd32;
parameter    ap_ST_fsm_state8 = 47'd64;
parameter    ap_ST_fsm_state9 = 47'd128;
parameter    ap_ST_fsm_state10 = 47'd256;
parameter    ap_ST_fsm_state11 = 47'd512;
parameter    ap_ST_fsm_pp1_stage0 = 47'd1024;
parameter    ap_ST_fsm_state14 = 47'd2048;
parameter    ap_ST_fsm_state15 = 47'd4096;
parameter    ap_ST_fsm_pp2_stage0 = 47'd8192;
parameter    ap_ST_fsm_state18 = 47'd16384;
parameter    ap_ST_fsm_pp3_stage0 = 47'd32768;
parameter    ap_ST_fsm_state21 = 47'd65536;
parameter    ap_ST_fsm_pp4_stage0 = 47'd131072;
parameter    ap_ST_fsm_state24 = 47'd262144;
parameter    ap_ST_fsm_pp5_stage0 = 47'd524288;
parameter    ap_ST_fsm_state27 = 47'd1048576;
parameter    ap_ST_fsm_state28 = 47'd2097152;
parameter    ap_ST_fsm_state29 = 47'd4194304;
parameter    ap_ST_fsm_state30 = 47'd8388608;
parameter    ap_ST_fsm_pp6_stage0 = 47'd16777216;
parameter    ap_ST_fsm_state35 = 47'd33554432;
parameter    ap_ST_fsm_state36 = 47'd67108864;
parameter    ap_ST_fsm_state37 = 47'd134217728;
parameter    ap_ST_fsm_state38 = 47'd268435456;
parameter    ap_ST_fsm_state39 = 47'd536870912;
parameter    ap_ST_fsm_state40 = 47'd1073741824;
parameter    ap_ST_fsm_state41 = 47'd2147483648;
parameter    ap_ST_fsm_state42 = 47'd4294967296;
parameter    ap_ST_fsm_state43 = 47'd8589934592;
parameter    ap_ST_fsm_state44 = 47'd17179869184;
parameter    ap_ST_fsm_state45 = 47'd34359738368;
parameter    ap_ST_fsm_state46 = 47'd68719476736;
parameter    ap_ST_fsm_state47 = 47'd137438953472;
parameter    ap_ST_fsm_pp7_stage0 = 47'd274877906944;
parameter    ap_ST_fsm_state53 = 47'd549755813888;
parameter    ap_ST_fsm_pp8_stage0 = 47'd1099511627776;
parameter    ap_ST_fsm_state62 = 47'd2199023255552;
parameter    ap_ST_fsm_state63 = 47'd4398046511104;
parameter    ap_ST_fsm_state64 = 47'd8796093022208;
parameter    ap_ST_fsm_state65 = 47'd17592186044416;
parameter    ap_ST_fsm_pp9_stage0 = 47'd35184372088832;
parameter    ap_ST_fsm_state71 = 47'd70368744177664;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [63:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [63:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [63:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    weight_in_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln90_reg_4898;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln90_1_reg_4912;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] icmp_ln90_2_reg_4926;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln90_3_reg_4940;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp9_iter4;
wire    ap_block_pp9_stage0;
reg   [0:0] icmp_ln308_reg_6313;
reg   [0:0] icmp_ln308_reg_6313_pp9_iter3_reg;
reg   [7:0] k_reg_1339;
reg   [31:0] k_1_reg_1350;
reg   [15:0] wh_reg_1372;
reg   [15:0] wh_1_reg_1383;
reg   [15:0] wh_2_reg_1394;
reg   [15:0] wh_4_reg_1405;
reg   [15:0] indvar_flatten_reg_1460;
reg   [7:0] hi_reg_1471;
reg   [7:0] wi_reg_1482;
reg   [15:0] indvar_flatten15_reg_1526;
reg   [7:0] hi_1_reg_1537;
reg   [7:0] wi_1_reg_1548;
reg   [15:0] i_reg_1559;
reg   [23:0] indvar_flatten128_reg_1570;
reg   [5:0] k_2_reg_1581;
reg   [18:0] indvar_flatten111_reg_1592;
reg   [2:0] ki_reg_1603;
reg   [15:0] wh_3_reg_1614;
reg   [63:0] bias_in_V_read_reg_4497;
reg    ap_block_state1;
wire   [7:0] K_fu_1661_p1;
reg   [7:0] K_reg_4502;
reg   [63:0] bias_in_V_read_1_reg_4508;
wire   [7:0] C_fu_1665_p1;
reg   [7:0] C_reg_4513;
wire   [7:0] WH_fu_1669_p1;
reg   [7:0] WH_reg_4520;
wire   [7:0] WH_in_fu_1673_p1;
reg   [7:0] WH_in_reg_4528;
wire   [15:0] zext_ln56_fu_1677_p1;
reg   [15:0] zext_ln56_reg_4534;
wire   [8:0] zext_ln59_fu_1680_p1;
reg   [8:0] zext_ln59_reg_4539;
wire   [15:0] zext_ln59_1_fu_1683_p1;
reg   [15:0] zext_ln59_1_reg_4544;
wire   [15:0] zext_ln62_fu_1686_p1;
reg   [15:0] zext_ln62_reg_4549;
wire   [15:0] zext_ln69_fu_1689_p1;
reg   [15:0] zext_ln69_reg_4555;
wire   [7:0] RS_fu_1692_p1;
reg   [7:0] RS_reg_4561;
wire   [15:0] zext_ln74_fu_1696_p1;
reg   [15:0] zext_ln74_reg_4567;
wire   [0:0] icmp_ln78_fu_1700_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln78_fu_1705_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln80_fu_1711_p1;
reg   [1:0] trunc_ln80_reg_4582;
reg   [5:0] lshr_ln_reg_4586;
wire    ap_CS_fsm_state8;
wire   [15:0] tmp1_fu_1748_p2;
reg   [15:0] tmp1_reg_4596;
wire   [31:0] grp_fu_4162_p2;
reg   [31:0] mul42_reg_4607;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln82_fu_1756_p2;
wire    ap_block_state12_pp1_stage0_iter0;
reg    ap_block_state13_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [31:0] add_ln82_fu_1761_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln84_fu_1767_p1;
reg   [1:0] trunc_ln84_reg_4621;
reg   [8:0] lshr_ln1_reg_4625;
wire   [15:0] mul56_fu_1796_p2;
reg   [15:0] mul56_reg_4630;
wire    ap_CS_fsm_state14;
wire   [0:0] cmp57307_fu_1800_p2;
reg   [0:0] cmp57307_reg_4638;
reg   [5:0] trunc_ln1_reg_4642;
wire   [9:0] trunc_ln3_cast40_fu_1815_p1;
reg   [9:0] trunc_ln3_cast40_reg_4649;
wire  signed [9:0] empty_38_fu_1818_p1;
reg  signed [9:0] empty_38_reg_4654;
wire   [0:0] icmp_ln87_fu_1822_p2;
wire    ap_CS_fsm_state15;
wire   [5:0] add_ln87_fu_1827_p2;
reg   [5:0] add_ln87_reg_4664;
wire   [9:0] mul_ln90_fu_1837_p2;
reg   [9:0] mul_ln90_reg_4669;
wire   [15:0] mul163_fu_1842_p2;
reg   [15:0] mul163_reg_4821;
wire   [16:0] mul163_cast53_fu_1846_p1;
reg   [16:0] mul163_cast53_reg_4830;
wire   [15:0] input_rows_fu_1859_p2;
reg   [15:0] input_rows_reg_4838;
wire   [10:0] trunc_ln4_cast18_fu_1865_p1;
reg   [10:0] trunc_ln4_cast18_reg_4843;
wire   [5:0] div73_cast_fu_1868_p4;
reg   [5:0] div73_cast_reg_4848;
wire   [10:0] C_cast_fu_1877_p1;
reg   [10:0] C_cast_reg_4853;
wire   [8:0] WH_cast_fu_1880_p1;
reg   [8:0] WH_cast_reg_4861;
wire  signed [10:0] empty_42_fu_1883_p1;
reg  signed [10:0] empty_42_reg_4867;
wire   [11:0] bound78_fu_1893_p2;
reg   [11:0] bound78_reg_4887;
wire  signed [8:0] empty_43_fu_1899_p1;
reg  signed [8:0] empty_43_reg_4892;
wire   [0:0] icmp_ln90_fu_1903_p2;
wire    ap_block_state16_pp2_stage0_iter0;
reg    ap_block_state17_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [15:0] add_ln90_fu_1908_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [9:0] empty_41_fu_1914_p1;
reg   [9:0] empty_41_reg_4907;
wire   [0:0] icmp_ln90_1_fu_1932_p2;
wire    ap_block_state19_pp3_stage0_iter0;
reg    ap_block_state20_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [15:0] add_ln90_1_fu_1937_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [9:0] empty_60_fu_1943_p1;
reg   [9:0] empty_60_reg_4921;
wire   [0:0] icmp_ln90_2_fu_1961_p2;
wire    ap_block_state22_pp4_stage0_iter0;
reg    ap_block_state23_pp4_stage0_iter1;
reg    ap_block_pp4_stage0_11001;
wire   [15:0] add_ln90_2_fu_1966_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [9:0] empty_62_fu_1972_p1;
reg   [9:0] empty_62_reg_4935;
wire   [0:0] icmp_ln90_3_fu_1990_p2;
wire    ap_block_state25_pp5_stage0_iter0;
reg    ap_block_state26_pp5_stage0_iter1;
reg    ap_block_pp5_stage0_11001;
wire   [15:0] add_ln90_3_fu_1995_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [9:0] add_ln93_3_fu_2005_p2;
reg   [9:0] add_ln93_3_reg_4949;
wire   [11:0] add_ln98_fu_2024_p2;
reg   [11:0] add_ln98_reg_4957;
wire    ap_CS_fsm_state28;
wire   [5:0] select_ln98_fu_2035_p3;
reg   [5:0] select_ln98_reg_4962;
wire   [0:0] icmp_ln98_fu_2019_p2;
wire   [5:0] select_ln98_1_fu_2049_p3;
reg   [5:0] select_ln98_1_reg_4968;
wire   [7:0] p_mid_fu_2057_p3;
reg   [7:0] p_mid_reg_4973;
wire   [8:0] mul_ln98_fu_2069_p2;
reg   [8:0] mul_ln98_reg_4978;
wire   [10:0] mul_ln98_1_fu_2078_p2;
reg   [10:0] mul_ln98_1_reg_4990;
wire   [10:0] mul_ln98_2_fu_2093_p2;
reg   [10:0] mul_ln98_2_reg_4998;
wire   [10:0] mul_ln98_3_fu_2108_p2;
reg   [10:0] mul_ln98_3_reg_5006;
wire   [10:0] mul_ln98_4_fu_2123_p2;
reg   [10:0] mul_ln98_4_reg_5014;
wire   [7:0] tmp_18_fu_2128_p3;
reg   [7:0] tmp_18_reg_5022;
wire   [10:0] p_cast12_fu_2136_p1;
reg   [10:0] p_cast12_reg_5028;
wire   [10:0] zext_ln105_fu_2146_p1;
reg   [10:0] zext_ln105_reg_5036;
wire   [17:0] tmp_2_fu_2150_p3;
reg   [17:0] tmp_2_reg_5044;
wire   [2:0] add_ln105_fu_2170_p2;
reg   [2:0] add_ln105_reg_5062;
wire    ap_CS_fsm_state29;
wire   [1:0] empty_45_fu_2180_p1;
reg   [1:0] empty_45_reg_5067;
wire   [0:0] icmp_ln105_fu_2164_p2;
wire  signed [31:0] conv88_fu_2314_p1;
reg  signed [31:0] conv88_reg_5172;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln106_fu_2318_p2;
reg   [0:0] icmp_ln106_reg_5180;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state31_pp6_stage0_iter0;
wire    ap_block_state32_pp6_stage0_iter1;
wire    ap_block_state33_pp6_stage0_iter2;
wire    ap_block_state34_pp6_stage0_iter3;
wire    ap_block_pp6_stage0_11001;
wire   [15:0] add_ln106_fu_2323_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [7:0] select_ln106_fu_2334_p3;
reg   [7:0] select_ln106_reg_5189;
reg   [7:0] select_ln106_reg_5189_pp6_iter1_reg;
wire   [7:0] select_ln106_1_fu_2348_p3;
reg   [7:0] select_ln106_1_reg_5194;
wire   [7:0] add_ln107_fu_2360_p2;
wire  signed [10:0] grp_fu_4174_p2;
reg  signed [10:0] add117_2_cast_reg_5214;
wire    ap_CS_fsm_state38;
wire  signed [10:0] grp_fu_4179_p2;
reg  signed [10:0] add117_1_cast_reg_5219;
wire  signed [10:0] grp_fu_4184_p2;
reg  signed [10:0] add117_3_cast_reg_5224;
wire  signed [10:0] grp_fu_4189_p2;
reg  signed [10:0] add117_1_2_cast_reg_5229;
wire  signed [10:0] grp_fu_4194_p2;
reg  signed [10:0] add117_2_2_cast_reg_5234;
wire  signed [10:0] grp_fu_4199_p2;
reg  signed [10:0] add117_3_2_cast_reg_5239;
wire  signed [10:0] grp_fu_4204_p2;
reg  signed [10:0] add117_cast_reg_5244;
wire  signed [10:0] grp_fu_4209_p2;
reg  signed [10:0] add117_1342_cast_reg_5249;
wire  signed [10:0] grp_fu_4214_p2;
reg  signed [10:0] add117_2350_cast_reg_5254;
wire  signed [10:0] grp_fu_4219_p2;
reg  signed [10:0] add117_3358_cast_reg_5259;
wire  signed [10:0] grp_fu_4224_p2;
reg  signed [10:0] add117_1_1_cast_reg_5264;
wire  signed [10:0] grp_fu_4229_p2;
reg  signed [10:0] add117_1_3_cast_reg_5269;
wire  signed [10:0] grp_fu_4234_p2;
reg  signed [10:0] add117_2_1_cast_reg_5274;
wire  signed [10:0] grp_fu_4239_p2;
reg  signed [10:0] add117_2_3_cast_reg_5279;
wire  signed [10:0] grp_fu_4244_p2;
reg  signed [10:0] add117_3_1_cast_reg_5284;
wire  signed [10:0] grp_fu_4249_p2;
reg  signed [10:0] add117_3_3_cast_reg_5289;
wire   [9:0] mul_ln117_fu_2384_p2;
reg   [9:0] mul_ln117_reg_5294;
wire   [15:0] add_ln117_fu_2394_p2;
reg   [15:0] add_ln117_reg_5302;
wire    ap_CS_fsm_state39;
wire   [7:0] select_ln117_fu_2405_p3;
reg   [7:0] select_ln117_reg_5307;
wire   [0:0] icmp_ln117_fu_2389_p2;
wire   [7:0] select_ln117_1_fu_2419_p3;
reg   [7:0] select_ln117_1_reg_5313;
wire   [1:0] add_ln133_fu_2594_p2;
reg   [1:0] add_ln133_reg_5319;
wire   [1:0] add_ln133_1_fu_2624_p2;
reg   [1:0] add_ln133_1_reg_5344;
wire   [1:0] add_ln133_2_fu_2654_p2;
reg   [1:0] add_ln133_2_reg_5369;
reg   [8:0] lshr_ln133_2_reg_5374;
wire   [1:0] add_ln133_3_fu_2676_p2;
reg   [1:0] add_ln133_3_reg_5379;
reg   [8:0] lshr_ln133_3_reg_5384;
wire   [1:0] add_ln133_4_fu_2698_p2;
reg   [1:0] add_ln133_4_reg_5389;
reg   [8:0] lshr_ln133_4_reg_5394;
wire   [1:0] add_ln133_5_fu_2720_p2;
reg   [1:0] add_ln133_5_reg_5399;
reg   [8:0] lshr_ln133_5_reg_5404;
wire   [1:0] add_ln133_6_fu_2742_p2;
reg   [1:0] add_ln133_6_reg_5409;
reg   [8:0] lshr_ln133_6_reg_5414;
wire   [1:0] add_ln133_7_fu_2764_p2;
reg   [1:0] add_ln133_7_reg_5419;
reg   [8:0] lshr_ln133_7_reg_5424;
wire   [1:0] add_ln133_8_fu_2786_p2;
reg   [1:0] add_ln133_8_reg_5429;
reg   [8:0] lshr_ln133_8_reg_5434;
wire   [1:0] add_ln133_9_fu_2808_p2;
reg   [1:0] add_ln133_9_reg_5439;
reg   [8:0] lshr_ln133_9_reg_5444;
wire   [1:0] add_ln133_10_fu_2830_p2;
reg   [1:0] add_ln133_10_reg_5449;
reg   [8:0] lshr_ln133_s_reg_5454;
wire   [1:0] add_ln133_11_fu_2852_p2;
reg   [1:0] add_ln133_11_reg_5459;
reg   [8:0] lshr_ln133_10_reg_5464;
wire   [1:0] add_ln133_12_fu_2874_p2;
reg   [1:0] add_ln133_12_reg_5469;
reg   [8:0] lshr_ln133_11_reg_5474;
wire   [1:0] add_ln133_13_fu_2896_p2;
reg   [1:0] add_ln133_13_reg_5479;
reg   [8:0] lshr_ln133_12_reg_5484;
wire   [1:0] add_ln133_14_fu_2918_p2;
reg   [1:0] add_ln133_14_reg_5489;
reg   [8:0] lshr_ln133_13_reg_5494;
wire   [1:0] add_ln133_15_fu_2940_p2;
reg   [1:0] add_ln133_15_reg_5499;
reg   [8:0] lshr_ln133_14_reg_5504;
wire   [5:0] add_ln99_fu_2956_p2;
wire   [7:0] tmp_3_fu_2964_p6;
reg   [7:0] tmp_3_reg_5514;
wire    ap_CS_fsm_state40;
wire   [7:0] tmp_4_fu_2981_p6;
reg   [7:0] tmp_4_reg_5519;
wire   [7:0] tmp_5_fu_3012_p6;
reg   [7:0] tmp_5_reg_5564;
wire    ap_CS_fsm_state41;
wire   [7:0] tmp_6_fu_3029_p6;
reg   [7:0] tmp_6_reg_5569;
wire   [7:0] tmp_7_fu_3060_p6;
reg   [7:0] tmp_7_reg_5614;
wire    ap_CS_fsm_state42;
wire   [7:0] tmp_8_fu_3077_p6;
reg   [7:0] tmp_8_reg_5619;
wire   [7:0] tmp_9_fu_3108_p6;
reg   [7:0] tmp_9_reg_5664;
wire    ap_CS_fsm_state43;
wire   [7:0] tmp_s_fu_3125_p6;
reg   [7:0] tmp_s_reg_5669;
wire   [7:0] tmp_10_fu_3156_p6;
reg   [7:0] tmp_10_reg_5714;
wire    ap_CS_fsm_state44;
wire   [7:0] tmp_11_fu_3173_p6;
reg   [7:0] tmp_11_reg_5719;
wire   [7:0] tmp_12_fu_3204_p6;
reg   [7:0] tmp_12_reg_5764;
wire    ap_CS_fsm_state45;
wire   [7:0] tmp_13_fu_3221_p6;
reg   [7:0] tmp_13_reg_5769;
wire   [7:0] tmp_14_fu_3252_p6;
reg   [7:0] tmp_14_reg_5814;
wire    ap_CS_fsm_state46;
wire   [7:0] tmp_15_fu_3269_p6;
reg   [7:0] tmp_15_reg_5819;
wire   [8:0] zext_ln117_fu_3297_p1;
reg   [8:0] zext_ln117_reg_5864;
wire    ap_CS_fsm_state47;
wire   [9:0] zext_ln119_fu_3300_p1;
reg   [9:0] zext_ln119_reg_5869;
wire   [7:0] tmp_16_fu_3306_p6;
reg   [7:0] tmp_16_reg_5874;
wire   [7:0] tmp_17_fu_3323_p6;
reg   [7:0] tmp_17_reg_5879;
wire   [0:0] icmp_ln143_fu_3337_p2;
reg   [0:0] icmp_ln143_reg_5884;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state48_pp7_stage0_iter0;
wire    ap_block_state49_pp7_stage0_iter1;
wire    ap_block_state50_pp7_stage0_iter2;
wire    ap_block_state51_pp7_stage0_iter3;
wire    ap_block_state52_pp7_stage0_iter4;
wire    ap_block_pp7_stage0_11001;
reg   [0:0] icmp_ln143_reg_5884_pp7_iter1_reg;
reg   [0:0] icmp_ln143_reg_5884_pp7_iter2_reg;
reg   [0:0] icmp_ln143_reg_5884_pp7_iter3_reg;
wire   [15:0] add_ln143_fu_3342_p2;
reg    ap_enable_reg_pp7_iter0;
wire   [7:0] select_ln143_fu_3353_p3;
reg   [7:0] select_ln143_reg_5893;
reg   [7:0] select_ln143_reg_5893_pp7_iter1_reg;
reg   [7:0] select_ln143_reg_5893_pp7_iter2_reg;
wire   [7:0] select_ln143_1_fu_3367_p3;
reg   [7:0] select_ln143_1_reg_5899;
wire   [8:0] zext_ln143_fu_3375_p1;
wire   [7:0] add_ln144_fu_3379_p2;
wire   [8:0] grp_fu_4262_p3;
reg   [8:0] empty_52_reg_5919;
reg    ap_enable_reg_pp7_iter3;
wire  signed [15:0] p_cast46_fu_3416_p1;
reg  signed [15:0] p_cast46_reg_5944;
wire    ap_CS_fsm_state53;
wire  signed [15:0] p_cast59_fu_3419_p1;
reg  signed [15:0] p_cast59_reg_5949;
wire  signed [15:0] p_cast61_fu_3422_p1;
reg  signed [15:0] p_cast61_reg_5954;
wire  signed [15:0] p_cast63_fu_3425_p1;
reg  signed [15:0] p_cast63_reg_5959;
wire  signed [15:0] p_cast48_fu_3428_p1;
reg  signed [15:0] p_cast48_reg_5964;
wire  signed [15:0] p_cast65_fu_3431_p1;
reg  signed [15:0] p_cast65_reg_5969;
wire  signed [15:0] p_cast67_fu_3434_p1;
reg  signed [15:0] p_cast67_reg_5974;
wire  signed [15:0] p_cast69_fu_3437_p1;
reg  signed [15:0] p_cast69_reg_5979;
wire  signed [15:0] p_cast50_fu_3440_p1;
reg  signed [15:0] p_cast50_reg_5984;
wire  signed [15:0] p_cast71_fu_3443_p1;
reg  signed [15:0] p_cast71_reg_5989;
wire  signed [15:0] p_cast73_fu_3446_p1;
reg  signed [15:0] p_cast73_reg_5994;
wire  signed [15:0] p_cast75_fu_3449_p1;
reg  signed [15:0] p_cast75_reg_5999;
wire  signed [15:0] p_cast52_fu_3452_p1;
reg  signed [15:0] p_cast52_reg_6004;
wire  signed [15:0] p_cast77_fu_3455_p1;
reg  signed [15:0] p_cast77_reg_6009;
wire  signed [15:0] p_cast79_fu_3458_p1;
reg  signed [15:0] p_cast79_reg_6014;
wire  signed [15:0] sext_ln164_fu_3461_p1;
reg  signed [15:0] sext_ln164_reg_6019;
wire   [0:0] icmp_ln164_fu_3464_p2;
reg   [0:0] icmp_ln164_reg_6024;
wire    ap_CS_fsm_pp8_stage0;
wire    ap_block_state54_pp8_stage0_iter0;
wire    ap_block_state55_pp8_stage0_iter1;
wire    ap_block_state56_pp8_stage0_iter2;
wire    ap_block_state57_pp8_stage0_iter3;
wire    ap_block_state58_pp8_stage0_iter4;
wire    ap_block_state59_pp8_stage0_iter5;
wire    ap_block_state60_pp8_stage0_iter6;
wire    ap_block_state61_pp8_stage0_iter7;
wire    ap_block_pp8_stage0_11001;
reg   [0:0] icmp_ln164_reg_6024_pp8_iter1_reg;
reg   [0:0] icmp_ln164_reg_6024_pp8_iter2_reg;
reg   [0:0] icmp_ln164_reg_6024_pp8_iter3_reg;
reg   [0:0] icmp_ln164_reg_6024_pp8_iter4_reg;
reg   [0:0] icmp_ln164_reg_6024_pp8_iter5_reg;
wire   [15:0] add_ln164_fu_3469_p2;
reg    ap_enable_reg_pp8_iter0;
wire   [8:0] trunc_ln174_fu_3479_p1;
reg   [8:0] trunc_ln174_reg_6033;
reg   [8:0] trunc_ln174_reg_6033_pp8_iter1_reg;
reg   [8:0] trunc_ln174_reg_6033_pp8_iter2_reg;
reg   [8:0] trunc_ln174_reg_6033_pp8_iter3_reg;
reg   [8:0] trunc_ln174_reg_6033_pp8_iter4_reg;
reg   [8:0] trunc_ln174_reg_6033_pp8_iter5_reg;
reg   [8:0] trunc_ln174_reg_6033_pp8_iter6_reg;
wire   [0:0] icmp_ln173_fu_3488_p2;
reg   [0:0] icmp_ln173_reg_6049;
reg   [0:0] icmp_ln173_reg_6049_pp8_iter1_reg;
reg   [0:0] icmp_ln173_reg_6049_pp8_iter2_reg;
reg   [0:0] tmp_19_reg_6055;
reg   [0:0] tmp_19_reg_6055_pp8_iter1_reg;
reg   [0:0] tmp_19_reg_6055_pp8_iter2_reg;
reg   [0:0] tmp_20_reg_6061;
reg   [0:0] tmp_20_reg_6061_pp8_iter1_reg;
reg   [0:0] tmp_20_reg_6061_pp8_iter2_reg;
reg   [0:0] tmp_20_reg_6061_pp8_iter3_reg;
wire   [0:0] icmp_ln285_fu_3528_p2;
reg   [0:0] icmp_ln285_reg_6067;
reg   [0:0] icmp_ln285_reg_6067_pp8_iter1_reg;
reg   [0:0] icmp_ln285_reg_6067_pp8_iter2_reg;
reg   [0:0] icmp_ln285_reg_6067_pp8_iter3_reg;
reg   [0:0] icmp_ln285_reg_6067_pp8_iter4_reg;
reg   [0:0] icmp_ln285_reg_6067_pp8_iter5_reg;
reg   [0:0] icmp_ln285_reg_6067_pp8_iter6_reg;
wire   [0:0] icmp_ln285_1_fu_3539_p2;
reg   [0:0] icmp_ln285_1_reg_6071;
reg   [0:0] icmp_ln285_1_reg_6071_pp8_iter1_reg;
reg   [0:0] icmp_ln285_1_reg_6071_pp8_iter2_reg;
reg   [0:0] icmp_ln285_1_reg_6071_pp8_iter3_reg;
reg   [0:0] icmp_ln285_1_reg_6071_pp8_iter4_reg;
reg   [0:0] icmp_ln285_1_reg_6071_pp8_iter5_reg;
reg   [0:0] icmp_ln285_1_reg_6071_pp8_iter6_reg;
wire   [0:0] icmp_ln285_2_fu_3550_p2;
reg   [0:0] icmp_ln285_2_reg_6075;
reg   [0:0] icmp_ln285_2_reg_6075_pp8_iter1_reg;
reg   [0:0] icmp_ln285_2_reg_6075_pp8_iter2_reg;
reg   [0:0] icmp_ln285_2_reg_6075_pp8_iter3_reg;
reg   [0:0] icmp_ln285_2_reg_6075_pp8_iter4_reg;
reg   [0:0] icmp_ln285_2_reg_6075_pp8_iter5_reg;
reg   [0:0] icmp_ln285_2_reg_6075_pp8_iter6_reg;
wire   [0:0] icmp_ln285_3_fu_3555_p2;
reg   [0:0] icmp_ln285_3_reg_6079;
reg   [0:0] icmp_ln285_3_reg_6079_pp8_iter1_reg;
reg   [0:0] icmp_ln285_3_reg_6079_pp8_iter2_reg;
reg   [0:0] icmp_ln285_3_reg_6079_pp8_iter3_reg;
reg   [0:0] icmp_ln285_3_reg_6079_pp8_iter4_reg;
reg   [0:0] icmp_ln285_3_reg_6079_pp8_iter5_reg;
reg   [0:0] icmp_ln285_3_reg_6079_pp8_iter6_reg;
wire   [8:0] add_ln171_fu_3566_p2;
reg   [8:0] add_ln171_reg_6083;
wire   [8:0] add_ln173_fu_3633_p2;
reg   [8:0] add_ln173_reg_6118;
wire   [63:0] zext_ln183_fu_3643_p1;
reg   [63:0] zext_ln183_reg_6123;
reg   [63:0] zext_ln183_reg_6123_pp8_iter3_reg;
reg   [63:0] zext_ln183_reg_6123_pp8_iter4_reg;
reg   [63:0] zext_ln183_reg_6123_pp8_iter5_reg;
reg   [63:0] zext_ln183_reg_6123_pp8_iter6_reg;
wire   [31:0] output_l1_0_q1;
reg    ap_enable_reg_pp8_iter3;
reg    ap_enable_reg_pp8_iter4;
reg    ap_enable_reg_pp8_iter5;
reg    ap_enable_reg_pp8_iter6;
wire   [7:0] add_ln119_fu_3998_p2;
wire    ap_CS_fsm_state62;
wire   [18:0] bound109_fu_4003_p1;
reg   [18:0] bound109_reg_6298;
wire    ap_CS_fsm_state65;
wire   [23:0] grp_fu_4168_p2;
reg   [23:0] bound116_reg_6303;
wire   [0:0] icmp_ln310_fu_4006_p2;
reg   [0:0] icmp_ln310_reg_6308;
wire   [0:0] icmp_ln308_fu_4011_p2;
wire    ap_CS_fsm_pp9_stage0;
wire    ap_block_state66_pp9_stage0_iter0;
wire    ap_block_state67_pp9_stage0_iter1;
wire    ap_block_state68_pp9_stage0_iter2;
wire    ap_block_state69_pp9_stage0_iter3;
reg    ap_block_state70_pp9_stage0_iter4;
reg    ap_block_pp9_stage0_11001;
reg   [0:0] icmp_ln308_reg_6313_pp9_iter1_reg;
reg   [0:0] icmp_ln308_reg_6313_pp9_iter2_reg;
wire   [23:0] add_ln308_fu_4016_p2;
reg    ap_enable_reg_pp9_iter0;
wire   [0:0] icmp_ln309_fu_4022_p2;
reg   [0:0] icmp_ln309_reg_6322;
reg   [0:0] icmp_ln309_reg_6322_pp9_iter1_reg;
wire   [5:0] select_ln308_1_fu_4033_p3;
reg   [5:0] select_ln308_1_reg_6330;
wire   [18:0] select_ln309_3_fu_4051_p3;
wire   [1:0] select_ln309_1_fu_4111_p3;
reg   [1:0] select_ln309_1_reg_6345;
reg   [1:0] select_ln309_1_reg_6345_pp9_iter3_reg;
wire   [2:0] select_ln309_2_fu_4119_p3;
reg    ap_enable_reg_pp9_iter2;
wire   [15:0] add_ln310_fu_4131_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state16;
wire    ap_CS_fsm_state18;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state19;
wire    ap_CS_fsm_state21;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state22;
wire    ap_CS_fsm_state24;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state25;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state31;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state48;
reg    ap_enable_reg_pp7_iter1;
reg    ap_enable_reg_pp7_iter2;
reg    ap_enable_reg_pp7_iter4;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_flush_enable;
reg    ap_enable_reg_pp8_iter1;
reg    ap_enable_reg_pp8_iter2;
reg    ap_condition_pp8_exit_iter4_state58;
reg    ap_enable_reg_pp8_iter7;
reg    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_flush_enable;
reg    ap_enable_reg_pp9_iter1;
reg    ap_enable_reg_pp9_iter3;
reg    ap_condition_pp9_exit_iter2_state68;
reg   [8:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_q0;
reg   [8:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_q0;
reg   [8:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_q0;
reg   [8:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_q0;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_0_address1;
reg    weight_l2_0_ce1;
wire   [7:0] weight_l2_0_q1;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_1_address1;
reg    weight_l2_1_ce1;
wire   [7:0] weight_l2_1_q1;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_2_address1;
reg    weight_l2_2_ce1;
wire   [7:0] weight_l2_2_q1;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_q0;
reg   [8:0] weight_l2_3_address1;
reg    weight_l2_3_ce1;
wire   [7:0] weight_l2_3_q1;
reg   [9:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_d0;
wire   [7:0] data_l2_0_q0;
reg   [9:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_d0;
wire   [7:0] data_l2_1_q0;
reg   [9:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_d0;
wire   [7:0] data_l2_2_q0;
reg   [9:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_d0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] data_l1_0_0_address0;
reg    data_l1_0_0_ce0;
reg    data_l1_0_0_we0;
wire  signed [7:0] data_l1_0_0_q0;
reg   [8:0] data_l1_1_0_address0;
reg    data_l1_1_0_ce0;
reg    data_l1_1_0_we0;
wire   [7:0] data_l1_1_0_q0;
reg   [8:0] data_l1_2_0_address0;
reg    data_l1_2_0_ce0;
reg    data_l1_2_0_we0;
wire   [7:0] data_l1_2_0_q0;
reg   [8:0] data_l1_3_0_address0;
reg    data_l1_3_0_ce0;
reg    data_l1_3_0_we0;
wire   [7:0] data_l1_3_0_q0;
reg   [8:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
reg   [31:0] output_l1_0_d0;
reg   [8:0] output_l1_0_address1;
reg    output_l1_0_ce1;
reg   [8:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
reg   [31:0] output_l1_1_d0;
reg   [8:0] output_l1_1_address1;
reg    output_l1_1_ce1;
wire   [31:0] output_l1_1_q1;
reg   [8:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
reg   [31:0] output_l1_2_d0;
reg   [8:0] output_l1_2_address1;
reg    output_l1_2_ce1;
wire   [31:0] output_l1_2_q1;
reg   [8:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
reg   [31:0] output_l1_3_d0;
reg   [8:0] output_l1_3_address1;
reg    output_l1_3_ce1;
wire   [31:0] output_l1_3_q1;
reg   [5:0] co_reg_1361;
wire    ap_CS_fsm_state27;
reg   [11:0] indvar_flatten104_reg_1416;
reg   [5:0] ko_reg_1427;
reg   [5:0] co_1_reg_1438;
reg   [2:0] ki_1_reg_1449;
wire    ap_CS_fsm_state35;
reg   [7:0] ap_phi_mux_hi_phi_fu_1475_p4;
wire    ap_block_pp6_stage0;
reg   [15:0] indvar_flatten73_reg_1493;
reg   [7:0] r_reg_1504;
reg   [7:0] s_reg_1515;
reg   [7:0] ap_phi_mux_hi_1_phi_fu_1541_p4;
wire    ap_block_pp7_stage0;
reg   [5:0] ap_phi_mux_k_2_phi_fu_1585_p4;
wire   [63:0] zext_ln80_fu_1733_p1;
wire   [63:0] zext_ln84_fu_1789_p1;
wire   [63:0] zext_ln93_fu_1927_p1;
wire   [63:0] zext_ln93_1_fu_1956_p1;
wire   [63:0] zext_ln93_2_fu_1985_p1;
wire   [63:0] zext_ln93_3_fu_2015_p1;
wire   [63:0] newIndex66_cast_fu_2199_p1;
wire   [63:0] zext_ln110_fu_2374_p1;
wire   [63:0] zext_ln133_16_fu_2610_p1;
wire   [63:0] zext_ln133_17_fu_2640_p1;
wire   [63:0] zext_ln133_18_fu_2995_p1;
wire   [63:0] zext_ln133_19_fu_3002_p1;
wire   [63:0] zext_ln133_20_fu_3043_p1;
wire   [63:0] zext_ln133_21_fu_3050_p1;
wire   [63:0] zext_ln133_22_fu_3091_p1;
wire   [63:0] zext_ln133_23_fu_3098_p1;
wire   [63:0] zext_ln133_24_fu_3139_p1;
wire   [63:0] zext_ln133_25_fu_3146_p1;
wire   [63:0] zext_ln133_26_fu_3187_p1;
wire   [63:0] zext_ln133_27_fu_3194_p1;
wire   [63:0] zext_ln133_28_fu_3235_p1;
wire   [63:0] zext_ln133_29_fu_3242_p1;
wire   [63:0] zext_ln133_30_fu_3283_p1;
wire   [63:0] zext_ln133_31_fu_3290_p1;
wire   [63:0] p_cast84_fu_3401_p1;
wire   [63:0] zext_ln153_fu_3409_p1;
wire   [63:0] zext_ln174_fu_3483_p1;
wire    ap_block_pp8_stage0;
wire   [63:0] zext_ln174_1_fu_3571_p1;
wire   [63:0] zext_ln174_2_fu_3628_p1;
wire   [63:0] zext_ln183_1_fu_3653_p1;
wire   [63:0] zext_ln183_2_fu_3662_p1;
wire   [63:0] zext_ln183_3_fu_3671_p1;
wire   [63:0] zext_ln174_3_fu_3723_p1;
wire   [63:0] zext_ln292_fu_3903_p1;
wire   [63:0] zext_ln292_1_fu_3918_p1;
wire   [63:0] zext_ln292_2_fu_3933_p1;
wire   [63:0] zext_ln311_fu_4137_p1;
wire  signed [31:0] grp_fu_4400_p3;
wire  signed [31:0] grp_fu_4391_p3;
wire  signed [31:0] grp_fu_4382_p3;
wire  signed [31:0] grp_fu_4373_p3;
reg   [31:0] output_reg_3_2_1_fu_326;
wire  signed [31:0] grp_fu_4341_p3;
reg   [31:0] output_reg_3_1_1_fu_330;
wire  signed [31:0] grp_fu_4309_p3;
reg   [31:0] output_reg_3_0_1_fu_334;
wire  signed [31:0] grp_fu_4277_p3;
reg   [31:0] output_reg_2_2_1_fu_338;
wire  signed [31:0] grp_fu_4349_p3;
reg   [31:0] output_reg_2_1_1_fu_342;
wire  signed [31:0] grp_fu_4317_p3;
reg   [31:0] output_reg_2_0_1_fu_346;
wire  signed [31:0] grp_fu_4285_p3;
reg   [31:0] output_reg_1_2_1_fu_350;
wire  signed [31:0] grp_fu_4357_p3;
reg   [31:0] output_reg_1_1_1_fu_354;
wire  signed [31:0] grp_fu_4325_p3;
reg   [31:0] output_reg_1_0_1_fu_358;
wire  signed [31:0] grp_fu_4293_p3;
reg   [31:0] output_reg_0_2_1_fu_362;
wire  signed [31:0] grp_fu_4365_p3;
reg   [31:0] output_reg_0_1_1_fu_366;
wire  signed [31:0] grp_fu_4333_p3;
reg   [31:0] output_reg_0_0_1_fu_370;
wire  signed [31:0] grp_fu_4301_p3;
reg  signed [7:0] arrayidx2234_promoted711_fu_374;
reg  signed [7:0] arrayidx2234_1364_promoted718_fu_378;
reg  signed [7:0] arrayidx2234_2376_promoted725_fu_382;
reg  signed [7:0] arrayidx2234_3388_promoted732_fu_386;
reg  signed [7:0] arrayidx2234_1_promoted739_fu_390;
reg  signed [7:0] arrayidx2234_1_1_promoted746_fu_394;
reg  signed [7:0] arrayidx2234_1_2_promoted753_fu_398;
reg  signed [7:0] arrayidx2234_1_3_promoted760_fu_402;
reg  signed [7:0] arrayidx2234_2_promoted767_fu_406;
wire  signed [7:0] select_ln173_2_fu_3791_p3;
reg  signed [7:0] arrayidx2234_2_1_promoted774_fu_410;
wire  signed [7:0] select_ln173_1_fu_3716_p3;
reg  signed [7:0] arrayidx2234_2_2_promoted781_fu_414;
wire  signed [7:0] select_ln173_fu_3616_p3;
reg  signed [7:0] arrayidx2234_2_3_promoted788_fu_418;
reg    ap_block_pp9_stage0_01001;
wire   [7:0] trunc_ln708_fu_1725_p1;
wire   [7:0] trunc_ln708_1_fu_1781_p1;
wire   [7:0] tmp_fu_1740_p0;
wire   [7:0] tmp_fu_1740_p1;
wire   [15:0] tmp_fu_1740_p2;
wire   [7:0] tmp1_fu_1748_p0;
wire   [7:0] tmp1_fu_1748_p1;
wire   [7:0] mul56_fu_1796_p0;
wire   [7:0] mul56_fu_1796_p1;
wire   [5:0] mul_ln90_fu_1837_p0;
wire   [7:0] mul163_fu_1842_p0;
wire   [7:0] mul163_fu_1842_p1;
wire   [8:0] tmp2_fu_1850_p2;
wire   [15:0] tmp2_cast_fu_1855_p1;
wire   [5:0] bound78_fu_1893_p0;
wire   [5:0] bound78_fu_1893_p1;
wire   [9:0] add_ln93_fu_1923_p2;
wire   [9:0] add_ln93_1_fu_1952_p2;
wire   [9:0] add_ln93_2_fu_1981_p2;
wire   [9:0] empty_64_fu_2001_p1;
wire   [0:0] icmp_ln99_fu_2030_p2;
wire   [5:0] add_ln98_1_fu_2043_p2;
wire   [5:0] mul_ln98_fu_2069_p1;
wire   [7:0] mul_ln98_1_fu_2078_p0;
wire   [7:0] mul_ln98_1_fu_2078_p1;
wire   [7:0] or_ln98_fu_2083_p2;
wire   [7:0] mul_ln98_2_fu_2093_p0;
wire   [7:0] mul_ln98_2_fu_2093_p1;
wire   [7:0] or_ln98_1_fu_2098_p2;
wire   [7:0] mul_ln98_3_fu_2108_p0;
wire   [7:0] mul_ln98_3_fu_2108_p1;
wire   [7:0] or_ln98_2_fu_2113_p2;
wire   [7:0] mul_ln98_4_fu_2123_p0;
wire   [7:0] mul_ln98_4_fu_2123_p1;
wire   [7:0] empty_56_fu_2140_p2;
wire   [7:0] zext_ln105_1_fu_2176_p1;
wire   [7:0] empty_46_fu_2184_p2;
wire   [5:0] newIndex_fu_2189_p4;
wire   [7:0] empty_48_fu_2207_p2;
wire   [7:0] empty_49_fu_2216_p2;
wire   [10:0] p_cast13_fu_2221_p1;
wire   [10:0] p_cast15_fu_2212_p1;
wire   [63:0] tmp_1_fu_2300_p5;
wire   [7:0] tmp_1_fu_2300_p6;
wire   [0:0] icmp_ln107_fu_2329_p2;
wire   [7:0] add_ln106_1_fu_2342_p2;
wire   [8:0] wi_cast_fu_2366_p1;
wire   [8:0] grp_fu_4254_p3;
wire   [5:0] mul_ln117_fu_2384_p0;
wire   [0:0] icmp_ln119_fu_2400_p2;
wire   [7:0] add_ln117_17_fu_2413_p2;
wire   [7:0] mul_ln117_1_fu_2431_p0;
wire   [7:0] mul_ln117_1_fu_2431_p1;
wire   [10:0] mul_ln117_1_fu_2431_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_1_fu_2436_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_2_fu_2445_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_3_fu_2454_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_4_fu_2463_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_5_fu_2472_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_6_fu_2481_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_7_fu_2490_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_8_fu_2499_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_9_fu_2508_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_10_fu_2517_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_11_fu_2526_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_12_fu_2535_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_13_fu_2544_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_14_fu_2553_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_15_fu_2562_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln117_16_fu_2571_p2;
wire   [10:0] zext_ln119_1_fu_2580_p1;
wire   [1:0] trunc_ln117_fu_2441_p1;
wire   [1:0] trunc_ln134_fu_2584_p1;
wire   [10:0] add_ln134_fu_2588_p2;
wire   [8:0] lshr_ln2_fu_2600_p4;
wire   [1:0] trunc_ln117_1_fu_2450_p1;
wire   [10:0] add_ln134_1_fu_2618_p2;
wire   [8:0] lshr_ln133_1_fu_2630_p4;
wire   [1:0] trunc_ln117_2_fu_2459_p1;
wire   [10:0] add_ln134_2_fu_2648_p2;
wire   [1:0] trunc_ln117_3_fu_2468_p1;
wire   [10:0] add_ln134_3_fu_2670_p2;
wire   [1:0] trunc_ln117_4_fu_2477_p1;
wire   [10:0] add_ln134_4_fu_2692_p2;
wire   [1:0] trunc_ln117_5_fu_2486_p1;
wire   [10:0] add_ln134_5_fu_2714_p2;
wire   [1:0] trunc_ln117_6_fu_2495_p1;
wire   [10:0] add_ln134_6_fu_2736_p2;
wire   [1:0] trunc_ln117_7_fu_2504_p1;
wire   [10:0] add_ln134_7_fu_2758_p2;
wire   [1:0] trunc_ln117_8_fu_2513_p1;
wire   [10:0] add_ln134_8_fu_2780_p2;
wire   [1:0] trunc_ln117_9_fu_2522_p1;
wire   [10:0] add_ln134_9_fu_2802_p2;
wire   [1:0] trunc_ln117_10_fu_2531_p1;
wire   [10:0] add_ln134_10_fu_2824_p2;
wire   [1:0] trunc_ln117_11_fu_2540_p1;
wire   [10:0] add_ln134_11_fu_2846_p2;
wire   [1:0] trunc_ln117_12_fu_2549_p1;
wire   [10:0] add_ln134_12_fu_2868_p2;
wire   [1:0] trunc_ln117_13_fu_2558_p1;
wire   [10:0] add_ln134_13_fu_2890_p2;
wire   [1:0] trunc_ln117_14_fu_2567_p1;
wire   [10:0] add_ln134_14_fu_2912_p2;
wire   [1:0] trunc_ln117_15_fu_2576_p1;
wire   [10:0] add_ln134_15_fu_2934_p2;
wire   [63:0] tmp_3_fu_2964_p5;
wire   [63:0] tmp_4_fu_2981_p5;
wire   [63:0] tmp_5_fu_3012_p5;
wire   [63:0] tmp_6_fu_3029_p5;
wire   [63:0] tmp_7_fu_3060_p5;
wire   [63:0] tmp_8_fu_3077_p5;
wire   [63:0] tmp_9_fu_3108_p5;
wire   [63:0] tmp_s_fu_3125_p5;
wire   [63:0] tmp_10_fu_3156_p5;
wire   [63:0] tmp_11_fu_3173_p5;
wire   [63:0] tmp_12_fu_3204_p5;
wire   [63:0] tmp_13_fu_3221_p5;
wire   [63:0] tmp_14_fu_3252_p5;
wire   [63:0] tmp_15_fu_3269_p5;
wire   [63:0] tmp_16_fu_3306_p5;
wire   [63:0] tmp_17_fu_3323_p5;
wire   [0:0] icmp_ln144_fu_3348_p2;
wire   [7:0] add_ln143_3_fu_3361_p2;
wire   [9:0] wi_1_cast_fu_3388_p1;
wire   [9:0] tmp6_fu_3391_p2;
wire   [9:0] grp_fu_4269_p4;
(* use_dsp48 = "no" *) wire   [9:0] empty_51_fu_3396_p2;
wire   [16:0] zext_ln164_fu_3475_p1;
wire   [16:0] add_ln171_1_fu_3494_p2;
wire   [16:0] add_ln171_2_fu_3508_p2;
wire   [16:0] add_ln285_fu_3522_p2;
wire   [16:0] add_ln285_1_fu_3533_p2;
wire   [16:0] add_ln285_2_fu_3544_p2;
wire   [8:0] add_ln171_3_fu_3623_p2;
wire   [8:0] add_ln183_fu_3638_p2;
wire   [8:0] add_ln183_1_fu_3648_p2;
wire   [8:0] add_ln183_2_fu_3658_p2;
wire   [8:0] add_ln183_3_fu_3667_p2;
wire   [8:0] add_ln285_3_fu_3893_p2;
wire   [8:0] add_ln293_fu_3898_p2;
wire   [8:0] add_ln285_4_fu_3908_p2;
wire   [8:0] add_ln293_1_fu_3913_p2;
wire   [8:0] add_ln285_5_fu_3923_p2;
wire   [8:0] add_ln293_2_fu_3928_p2;
wire   [5:0] add_ln308_1_fu_4027_p2;
wire   [18:0] add_ln309_1_fu_4045_p2;
wire   [1:0] trunc_ln311_fu_4066_p1;
wire   [0:0] icmp_ln310_1_fu_4077_p2;
wire   [2:0] select_ln308_fu_4059_p3;
wire   [0:0] select_ln308_3_fu_4082_p3;
wire   [0:0] or_ln309_fu_4094_p2;
wire   [2:0] add_ln309_fu_4088_p2;
wire   [1:0] trunc_ln311_1_fu_4107_p1;
wire   [1:0] select_ln308_2_fu_4070_p3;
wire   [15:0] select_ln309_fu_4099_p3;
wire  signed [8:0] grp_fu_4409_p3;
wire   [31:0] p_Repl2_s_fu_4144_p6;
wire   [15:0] grp_fu_4162_p0;
wire   [15:0] grp_fu_4162_p1;
wire   [17:0] grp_fu_4168_p0;
wire   [5:0] grp_fu_4168_p1;
wire  signed [10:0] grp_fu_4174_p0;
wire  signed [10:0] grp_fu_4179_p0;
wire  signed [10:0] grp_fu_4184_p0;
wire  signed [10:0] grp_fu_4189_p0;
wire  signed [10:0] grp_fu_4194_p0;
wire  signed [10:0] grp_fu_4199_p0;
wire  signed [10:0] grp_fu_4204_p0;
wire  signed [10:0] grp_fu_4209_p0;
wire  signed [10:0] grp_fu_4214_p0;
wire  signed [10:0] grp_fu_4219_p0;
wire  signed [10:0] grp_fu_4224_p0;
wire  signed [10:0] grp_fu_4229_p0;
wire  signed [10:0] grp_fu_4234_p0;
wire  signed [10:0] grp_fu_4239_p0;
wire  signed [10:0] grp_fu_4244_p0;
wire  signed [10:0] grp_fu_4249_p0;
wire   [7:0] grp_fu_4254_p0;
wire   [7:0] grp_fu_4254_p1;
wire   [8:0] grp_fu_4254_p2;
wire   [7:0] grp_fu_4262_p0;
wire   [7:0] grp_fu_4262_p1;
wire   [7:0] grp_fu_4262_p2;
wire   [7:0] grp_fu_4269_p0;
wire   [7:0] grp_fu_4269_p1;
wire   [7:0] grp_fu_4269_p2;
wire   [7:0] grp_fu_4269_p3;
wire  signed [7:0] grp_fu_4277_p1;
wire   [31:0] grp_fu_4277_p2;
wire  signed [7:0] grp_fu_4285_p1;
wire   [31:0] grp_fu_4285_p2;
wire  signed [7:0] grp_fu_4293_p1;
wire   [31:0] grp_fu_4293_p2;
wire  signed [7:0] grp_fu_4301_p1;
wire  signed [7:0] grp_fu_4309_p1;
wire  signed [7:0] grp_fu_4317_p1;
wire  signed [7:0] grp_fu_4325_p1;
wire  signed [7:0] grp_fu_4333_p1;
wire  signed [7:0] grp_fu_4341_p1;
wire  signed [7:0] grp_fu_4349_p1;
wire  signed [7:0] grp_fu_4357_p1;
wire  signed [7:0] grp_fu_4365_p1;
wire  signed [7:0] grp_fu_4373_p0;
wire  signed [7:0] grp_fu_4382_p0;
wire  signed [7:0] grp_fu_4391_p0;
wire  signed [7:0] grp_fu_4400_p0;
wire   [5:0] grp_fu_4409_p0;
wire   [8:0] grp_fu_4409_p2;
reg    grp_fu_4409_ce;
wire    ap_CS_fsm_state71;
reg   [46:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_block_pp4;
reg    ap_block_pp5;
reg    ap_block_pp6;
reg    ap_block_pp7;
reg    ap_block_pp8;
reg    ap_block_pp9;
reg    ap_predicate_op975_load_state56;
reg    ap_enable_operation_975;
reg    ap_enable_state56_pp8_iter2_stage0;
reg    ap_predicate_op1011_load_state57;
reg    ap_enable_operation_1011;
reg    ap_enable_state57_pp8_iter3_stage0;
reg    ap_enable_operation_1158;
reg    ap_enable_state61_pp8_iter7_stage0;
reg    ap_predicate_op979_load_state56;
reg    ap_enable_operation_979;
reg    ap_predicate_op1013_load_state57;
reg    ap_enable_operation_1013;
reg    ap_enable_operation_1164;
reg    ap_predicate_op983_load_state56;
reg    ap_enable_operation_983;
reg    ap_predicate_op1015_load_state57;
reg    ap_enable_operation_1015;
reg    ap_enable_operation_1170;
reg    ap_enable_operation_987;
reg    ap_enable_operation_1017;
reg    ap_enable_operation_1173;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
wire   [11:0] bound78_fu_1893_p00;
wire   [11:0] bound78_fu_1893_p10;
wire   [31:0] grp_fu_4162_p00;
wire   [31:0] grp_fu_4162_p10;
wire   [23:0] grp_fu_4168_p00;
wire   [23:0] grp_fu_4168_p10;
wire   [8:0] grp_fu_4254_p00;
wire   [8:0] grp_fu_4262_p20;
wire   [8:0] grp_fu_4409_p00;
wire   [10:0] mul_ln117_1_fu_2431_p00;
wire   [9:0] mul_ln117_fu_2384_p00;
wire   [9:0] mul_ln90_fu_1837_p00;
wire   [10:0] mul_ln98_1_fu_2078_p10;
wire   [10:0] mul_ln98_2_fu_2093_p10;
wire   [10:0] mul_ln98_3_fu_2108_p10;
wire   [10:0] mul_ln98_4_fu_2123_p10;
wire   [8:0] mul_ln98_fu_2069_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter3 = 1'b0;
#0 ap_enable_reg_pp8_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter5 = 1'b0;
#0 ap_enable_reg_pp8_iter6 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter7 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter3 = 1'b0;
end

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(trunc_ln708_fu_1725_p1),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(trunc_ln708_fu_1725_p1),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(trunc_ln708_fu_1725_p1),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(trunc_ln708_fu_1725_p1),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(trunc_ln708_1_fu_1781_p1),
    .q0(weight_l2_0_q0),
    .address1(weight_l2_0_address1),
    .ce1(weight_l2_0_ce1),
    .q1(weight_l2_0_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(trunc_ln708_1_fu_1781_p1),
    .q0(weight_l2_1_q0),
    .address1(weight_l2_1_address1),
    .ce1(weight_l2_1_ce1),
    .q1(weight_l2_1_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(trunc_ln708_1_fu_1781_p1),
    .q0(weight_l2_2_q0),
    .address1(weight_l2_2_address1),
    .ce1(weight_l2_2_ce1),
    .q1(weight_l2_2_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(trunc_ln708_1_fu_1781_p1),
    .q0(weight_l2_3_q0),
    .address1(weight_l2_3_address1),
    .ce1(weight_l2_3_ce1),
    .q1(weight_l2_3_q1)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(data_l2_0_d0),
    .q0(data_l2_0_q0)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(data_l2_1_d0),
    .q0(data_l2_1_q0)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(data_l2_2_d0),
    .q0(data_l2_2_q0)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(data_l2_3_d0),
    .q0(data_l2_3_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_0_0_address0),
    .ce0(data_l1_0_0_ce0),
    .we0(data_l1_0_0_we0),
    .d0(data_l2_0_q0),
    .q0(data_l1_0_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_1_0_address0),
    .ce0(data_l1_1_0_ce0),
    .we0(data_l1_1_0_we0),
    .d0(data_l2_1_q0),
    .q0(data_l1_1_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_2_0_address0),
    .ce0(data_l1_2_0_ce0),
    .we0(data_l1_2_0_we0),
    .d0(data_l2_2_q0),
    .q0(data_l1_2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_3_0_address0),
    .ce0(data_l1_3_0_ce0),
    .we0(data_l1_3_0_we0),
    .d0(data_l2_3_q0),
    .q0(data_l1_3_0_q0)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(output_l1_0_d0),
    .address1(output_l1_0_address1),
    .ce1(output_l1_0_ce1),
    .q1(output_l1_0_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(output_l1_1_d0),
    .address1(output_l1_1_address1),
    .ce1(output_l1_1_ce1),
    .q1(output_l1_1_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(output_l1_2_d0),
    .address1(output_l1_2_address1),
    .ce1(output_l1_2_ce1),
    .q1(output_l1_2_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(output_l1_3_d0),
    .address1(output_l1_3_address1),
    .ce1(output_l1_3_ce1),
    .q1(output_l1_3_q1)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(tmp_fu_1740_p0),
    .din1(tmp_fu_1740_p1),
    .dout(tmp_fu_1740_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U2(
    .din0(tmp1_fu_1748_p0),
    .din1(tmp1_fu_1748_p1),
    .dout(tmp1_fu_1748_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U3(
    .din0(mul56_fu_1796_p0),
    .din1(mul56_fu_1796_p1),
    .dout(mul56_fu_1796_p2)
);

Conv_sysarr_dbbuf_mul_6ns_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_6ns_10s_10_1_1_U4(
    .din0(mul_ln90_fu_1837_p0),
    .din1(empty_38_reg_4654),
    .dout(mul_ln90_fu_1837_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U5(
    .din0(mul163_fu_1842_p0),
    .din1(mul163_fu_1842_p1),
    .dout(mul163_fu_1842_p2)
);

Conv_sysarr_dbbuf_mul_6ns_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6ns_6ns_12_1_1_U6(
    .din0(bound78_fu_1893_p0),
    .din1(bound78_fu_1893_p1),
    .dout(bound78_fu_1893_p2)
);

Conv_sysarr_dbbuf_mul_9s_6ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_9s_6ns_9_1_1_U7(
    .din0(empty_43_reg_4892),
    .din1(mul_ln98_fu_2069_p1),
    .dout(mul_ln98_fu_2069_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U8(
    .din0(mul_ln98_1_fu_2078_p0),
    .din1(mul_ln98_1_fu_2078_p1),
    .dout(mul_ln98_1_fu_2078_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U9(
    .din0(mul_ln98_2_fu_2093_p0),
    .din1(mul_ln98_2_fu_2093_p1),
    .dout(mul_ln98_2_fu_2093_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U10(
    .din0(mul_ln98_3_fu_2108_p0),
    .din1(mul_ln98_3_fu_2108_p1),
    .dout(mul_ln98_3_fu_2108_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U11(
    .din0(mul_ln98_4_fu_2123_p0),
    .din1(mul_ln98_4_fu_2123_p1),
    .dout(mul_ln98_4_fu_2123_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U12(
    .din0(bias_l2_0_q0),
    .din1(bias_l2_1_q0),
    .din2(bias_l2_2_q0),
    .din3(bias_l2_3_q0),
    .din4(tmp_1_fu_2300_p5),
    .dout(tmp_1_fu_2300_p6)
);

Conv_sysarr_dbbuf_mul_6ns_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_6ns_10s_10_1_1_U13(
    .din0(mul_ln117_fu_2384_p0),
    .din1(empty_38_reg_4654),
    .dout(mul_ln117_fu_2384_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U14(
    .din0(mul_ln117_1_fu_2431_p0),
    .din1(mul_ln117_1_fu_2431_p1),
    .dout(mul_ln117_1_fu_2431_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U15(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_3_fu_2964_p5),
    .dout(tmp_3_fu_2964_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U16(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_4_fu_2981_p5),
    .dout(tmp_4_fu_2981_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U17(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_5_fu_3012_p5),
    .dout(tmp_5_fu_3012_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U18(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_6_fu_3029_p5),
    .dout(tmp_6_fu_3029_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U19(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_7_fu_3060_p5),
    .dout(tmp_7_fu_3060_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U20(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_8_fu_3077_p5),
    .dout(tmp_8_fu_3077_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U21(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_9_fu_3108_p5),
    .dout(tmp_9_fu_3108_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U22(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_s_fu_3125_p5),
    .dout(tmp_s_fu_3125_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U23(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_10_fu_3156_p5),
    .dout(tmp_10_fu_3156_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U24(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_11_fu_3173_p5),
    .dout(tmp_11_fu_3173_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U25(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_12_fu_3204_p5),
    .dout(tmp_12_fu_3204_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U26(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_13_fu_3221_p5),
    .dout(tmp_13_fu_3221_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U27(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_14_fu_3252_p5),
    .dout(tmp_14_fu_3252_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U28(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_15_fu_3269_p5),
    .dout(tmp_15_fu_3269_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U29(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_16_fu_3306_p5),
    .dout(tmp_16_fu_3306_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U30(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_17_fu_3323_p5),
    .dout(tmp_17_fu_3323_p6)
);

Conv_sysarr_dbbuf_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U31(
    .din0(output_l1_0_q1),
    .din1(output_l1_1_q1),
    .din2(output_l1_2_q1),
    .din3(output_l1_3_q1),
    .din4(select_ln309_1_reg_6345_pp9_iter3_reg),
    .dout(p_Repl2_s_fu_4144_p6)
);

Conv_sysarr_dbbuf_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4162_p0),
    .din1(grp_fu_4162_p1),
    .ce(1'b1),
    .dout(grp_fu_4162_p2)
);

Conv_sysarr_dbbuf_mul_mul_18ns_6ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 24 ))
mul_mul_18ns_6ns_24_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4168_p0),
    .din1(grp_fu_4168_p1),
    .ce(1'b1),
    .dout(grp_fu_4168_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4174_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4174_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4179_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4179_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4184_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4184_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4189_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4189_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4194_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4194_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4199_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4199_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4204_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4204_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4209_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4209_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4214_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4214_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4219_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4219_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4224_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4224_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4229_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4229_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4234_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4234_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4239_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4239_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4244_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4244_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4249_p0),
    .din1(empty_42_reg_4867),
    .ce(1'b1),
    .dout(grp_fu_4249_p2)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_8ns_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_8ns_9ns_9_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4254_p0),
    .din1(grp_fu_4254_p1),
    .din2(grp_fu_4254_p2),
    .ce(1'b1),
    .dout(grp_fu_4254_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_8ns_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_8ns_8ns_9_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4262_p0),
    .din1(grp_fu_4262_p1),
    .din2(grp_fu_4262_p2),
    .ce(1'b1),
    .dout(grp_fu_4262_p3)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_8ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
ama_addmuladd_8ns_8ns_8ns_8ns_10_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4269_p0),
    .din1(grp_fu_4269_p1),
    .din2(grp_fu_4269_p2),
    .din3(grp_fu_4269_p3),
    .ce(1'b1),
    .dout(grp_fu_4269_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2234_3388_promoted732_fu_386),
    .din1(grp_fu_4277_p1),
    .din2(grp_fu_4277_p2),
    .ce(1'b1),
    .dout(grp_fu_4277_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2234_1_3_promoted760_fu_402),
    .din1(grp_fu_4285_p1),
    .din2(grp_fu_4285_p2),
    .ce(1'b1),
    .dout(grp_fu_4285_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2234_2_3_promoted788_fu_418),
    .din1(grp_fu_4293_p1),
    .din2(grp_fu_4293_p2),
    .ce(1'b1),
    .dout(grp_fu_4293_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1_0_0_q0),
    .din1(grp_fu_4301_p1),
    .din2(output_l1_0_q1),
    .ce(1'b1),
    .dout(grp_fu_4301_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2234_2376_promoted725_fu_382),
    .din1(grp_fu_4309_p1),
    .din2(output_reg_3_0_1_fu_334),
    .ce(1'b1),
    .dout(grp_fu_4309_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2234_1_2_promoted753_fu_398),
    .din1(grp_fu_4317_p1),
    .din2(output_reg_2_0_1_fu_346),
    .ce(1'b1),
    .dout(grp_fu_4317_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2234_2_2_promoted781_fu_414),
    .din1(grp_fu_4325_p1),
    .din2(output_reg_1_0_1_fu_358),
    .ce(1'b1),
    .dout(grp_fu_4325_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln173_fu_3616_p3),
    .din1(grp_fu_4333_p1),
    .din2(output_reg_0_0_1_fu_370),
    .ce(1'b1),
    .dout(grp_fu_4333_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2234_1364_promoted718_fu_378),
    .din1(grp_fu_4341_p1),
    .din2(output_reg_3_1_1_fu_330),
    .ce(1'b1),
    .dout(grp_fu_4341_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2234_1_1_promoted746_fu_394),
    .din1(grp_fu_4349_p1),
    .din2(output_reg_2_1_1_fu_342),
    .ce(1'b1),
    .dout(grp_fu_4349_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2234_2_1_promoted774_fu_410),
    .din1(grp_fu_4357_p1),
    .din2(output_reg_1_1_1_fu_354),
    .ce(1'b1),
    .dout(grp_fu_4357_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln173_1_fu_3716_p3),
    .din1(grp_fu_4365_p1),
    .din2(output_reg_0_1_1_fu_366),
    .ce(1'b1),
    .dout(grp_fu_4365_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4373_p0),
    .din1(arrayidx2234_promoted711_fu_374),
    .din2(output_reg_3_2_1_fu_326),
    .ce(1'b1),
    .dout(grp_fu_4373_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4382_p0),
    .din1(arrayidx2234_1_promoted739_fu_390),
    .din2(output_reg_2_2_1_fu_338),
    .ce(1'b1),
    .dout(grp_fu_4382_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4391_p0),
    .din1(arrayidx2234_2_promoted767_fu_406),
    .din2(output_reg_1_2_1_fu_350),
    .ce(1'b1),
    .dout(grp_fu_4391_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4400_p0),
    .din1(select_ln173_2_fu_3791_p3),
    .din2(output_reg_0_2_1_fu_362),
    .ce(1'b1),
    .dout(grp_fu_4400_p3)
);

Conv_sysarr_dbbuf_mac_muladd_6ns_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_6ns_9s_9ns_9_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4409_p0),
    .din1(empty_43_reg_4892),
    .din2(grp_fu_4409_p2),
    .ce(grp_fu_4409_ce),
    .dout(grp_fu_4409_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state16) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln87_fu_1822_p2 == 1'd0) & (cmp57307_reg_4638 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state16) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state16);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln87_fu_1822_p2 == 1'd0) & (cmp57307_reg_4638 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state19) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state19) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state19);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state22) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state22) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state22);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state25) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state25) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state25);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state31) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state31)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state31);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp6_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state48) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state48)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state48);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp7_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp8_flush_enable)) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state53)) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter3 <= ap_enable_reg_pp8_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter4 <= ap_enable_reg_pp8_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp8_exit_iter4_state58)) begin
                ap_enable_reg_pp8_iter5 <= ap_enable_reg_pp8_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp8_iter5 <= ap_enable_reg_pp8_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter6 <= ap_enable_reg_pp8_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter7 <= ap_enable_reg_pp8_iter6;
        end else if ((1'b1 == ap_CS_fsm_state53)) begin
            ap_enable_reg_pp8_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp9_flush_enable)) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state65)) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter2 <= ap_enable_reg_pp9_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp9_exit_iter2_state68)) begin
                ap_enable_reg_pp9_iter3 <= ap_enable_reg_pp9_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp9_iter3 <= ap_enable_reg_pp9_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter4 <= ap_enable_reg_pp9_iter3;
        end else if ((1'b1 == ap_CS_fsm_state65)) begin
            ap_enable_reg_pp9_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_fu_2389_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        co_1_reg_1438 <= add_ln99_fu_2956_p2;
    end else if (((icmp_ln87_fu_1822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        co_1_reg_1438 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        co_reg_1361 <= add_ln87_reg_4664;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        co_reg_1361 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln143_reg_5884 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        hi_1_reg_1537 <= select_ln143_1_reg_5899;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        hi_1_reg_1537 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_reg_5180 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        hi_reg_1471 <= select_ln106_1_reg_5194;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        hi_reg_1471 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln164_fu_3464_p2 == 1'd0))) begin
        i_reg_1559 <= add_ln164_fu_3469_p2;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        i_reg_1559 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_fu_2389_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        indvar_flatten104_reg_1416 <= add_ln98_reg_4957;
    end else if (((icmp_ln87_fu_1822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        indvar_flatten104_reg_1416 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln308_fu_4011_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        indvar_flatten111_reg_1592 <= select_ln309_3_fu_4051_p3;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        indvar_flatten111_reg_1592 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln308_fu_4011_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        indvar_flatten128_reg_1570 <= add_ln308_fu_4016_p2;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        indvar_flatten128_reg_1570 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln143_fu_3337_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        indvar_flatten15_reg_1526 <= add_ln143_fu_3342_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        indvar_flatten15_reg_1526 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        indvar_flatten73_reg_1493 <= add_ln117_reg_5302;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        indvar_flatten73_reg_1493 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln106_fu_2318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten_reg_1460 <= add_ln106_fu_2323_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        indvar_flatten_reg_1460 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_1_reg_1350 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln82_fu_1756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_1_reg_1350 <= add_ln82_fu_1761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln308_reg_6313 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        k_2_reg_1581 <= select_ln308_1_reg_6330;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        k_2_reg_1581 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        k_reg_1339 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln78_fu_1700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_1339 <= add_ln78_fu_1705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_fu_2019_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        ki_1_reg_1449 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ki_1_reg_1449 <= add_ln105_reg_5062;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln308_reg_6313_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        ki_reg_1603 <= select_ln309_2_fu_4119_p3;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        ki_reg_1603 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_fu_2389_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        ko_reg_1427 <= select_ln98_1_reg_4968;
    end else if (((icmp_ln87_fu_1822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        ko_reg_1427 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        r_reg_1504 <= select_ln117_1_reg_5313;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_reg_1504 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        s_reg_1515 <= add_ln119_fu_3998_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        s_reg_1515 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        wh_1_reg_1383 <= 16'd0;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln90_1_fu_1932_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        wh_1_reg_1383 <= add_ln90_1_fu_1937_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        wh_2_reg_1394 <= 16'd0;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln90_2_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        wh_2_reg_1394 <= add_ln90_2_fu_1966_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln308_reg_6313_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        wh_3_reg_1614 <= add_ln310_fu_4131_p2;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        wh_3_reg_1614 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        wh_4_reg_1405 <= 16'd0;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln90_3_fu_1990_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        wh_4_reg_1405 <= add_ln90_3_fu_1995_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1822_p2 == 1'd0) & (cmp57307_reg_4638 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        wh_reg_1372 <= 16'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln90_fu_1903_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        wh_reg_1372 <= add_ln90_fu_1908_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln143_fu_3337_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        wi_1_reg_1548 <= add_ln144_fu_3379_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        wi_1_reg_1548 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln106_fu_2318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        wi_reg_1482 <= add_ln107_fu_2360_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        wi_reg_1482 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        C_cast_reg_4853[7 : 0] <= C_cast_fu_1877_p1[7 : 0];
        WH_cast_reg_4861[7 : 0] <= WH_cast_fu_1880_p1[7 : 0];
        bound78_reg_4887 <= bound78_fu_1893_p2;
        div73_cast_reg_4848 <= {{bias_in_V_read_reg_4497[7:2]}};
        empty_42_reg_4867 <= empty_42_fu_1883_p1;
        empty_43_reg_4892 <= empty_43_fu_1899_p1;
        input_rows_reg_4838 <= input_rows_fu_1859_p2;
        mul163_cast53_reg_4830[15 : 0] <= mul163_cast53_fu_1846_p1[15 : 0];
        mul163_reg_4821 <= mul163_fu_1842_p2;
        trunc_ln4_cast18_reg_4843[7 : 0] <= trunc_ln4_cast18_fu_1865_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        C_reg_4513 <= C_fu_1665_p1;
        bias_in_V_read_1_reg_4508 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        K_reg_4502 <= K_fu_1661_p1;
        bias_in_V_read_reg_4497 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        RS_reg_4561 <= RS_fu_1692_p1;
        zext_ln56_reg_4534[7 : 0] <= zext_ln56_fu_1677_p1[7 : 0];
        zext_ln59_1_reg_4544[7 : 0] <= zext_ln59_1_fu_1683_p1[7 : 0];
        zext_ln59_reg_4539[7 : 0] <= zext_ln59_fu_1680_p1[7 : 0];
        zext_ln62_reg_4549[7 : 0] <= zext_ln62_fu_1686_p1[7 : 0];
        zext_ln69_reg_4555[7 : 0] <= zext_ln69_fu_1689_p1[7 : 0];
        zext_ln74_reg_4567[7 : 0] <= zext_ln74_fu_1696_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        WH_in_reg_4528 <= WH_in_fu_1673_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        WH_reg_4520 <= WH_fu_1669_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        add117_1342_cast_reg_5249 <= grp_fu_4209_p2;
        add117_1_1_cast_reg_5264 <= grp_fu_4224_p2;
        add117_1_2_cast_reg_5229 <= grp_fu_4189_p2;
        add117_1_3_cast_reg_5269 <= grp_fu_4229_p2;
        add117_1_cast_reg_5219 <= grp_fu_4179_p2;
        add117_2350_cast_reg_5254 <= grp_fu_4214_p2;
        add117_2_1_cast_reg_5274 <= grp_fu_4234_p2;
        add117_2_2_cast_reg_5234 <= grp_fu_4194_p2;
        add117_2_3_cast_reg_5279 <= grp_fu_4239_p2;
        add117_2_cast_reg_5214 <= grp_fu_4174_p2;
        add117_3358_cast_reg_5259 <= grp_fu_4219_p2;
        add117_3_1_cast_reg_5284 <= grp_fu_4244_p2;
        add117_3_2_cast_reg_5239 <= grp_fu_4199_p2;
        add117_3_3_cast_reg_5289 <= grp_fu_4249_p2;
        add117_3_cast_reg_5224 <= grp_fu_4184_p2;
        add117_cast_reg_5244 <= grp_fu_4204_p2;
        mul_ln117_reg_5294 <= mul_ln117_fu_2384_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln105_reg_5062 <= add_ln105_fu_2170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        add_ln117_reg_5302 <= add_ln117_fu_2394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_fu_2389_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        add_ln133_10_reg_5449 <= add_ln133_10_fu_2830_p2;
        add_ln133_11_reg_5459 <= add_ln133_11_fu_2852_p2;
        add_ln133_12_reg_5469 <= add_ln133_12_fu_2874_p2;
        add_ln133_13_reg_5479 <= add_ln133_13_fu_2896_p2;
        add_ln133_14_reg_5489 <= add_ln133_14_fu_2918_p2;
        add_ln133_15_reg_5499 <= add_ln133_15_fu_2940_p2;
        add_ln133_1_reg_5344 <= add_ln133_1_fu_2624_p2;
        add_ln133_2_reg_5369 <= add_ln133_2_fu_2654_p2;
        add_ln133_3_reg_5379 <= add_ln133_3_fu_2676_p2;
        add_ln133_4_reg_5389 <= add_ln133_4_fu_2698_p2;
        add_ln133_5_reg_5399 <= add_ln133_5_fu_2720_p2;
        add_ln133_6_reg_5409 <= add_ln133_6_fu_2742_p2;
        add_ln133_7_reg_5419 <= add_ln133_7_fu_2764_p2;
        add_ln133_8_reg_5429 <= add_ln133_8_fu_2786_p2;
        add_ln133_9_reg_5439 <= add_ln133_9_fu_2808_p2;
        add_ln133_reg_5319 <= add_ln133_fu_2594_p2;
        lshr_ln133_10_reg_5464 <= {{add_ln134_11_fu_2846_p2[10:2]}};
        lshr_ln133_11_reg_5474 <= {{add_ln134_12_fu_2868_p2[10:2]}};
        lshr_ln133_12_reg_5484 <= {{add_ln134_13_fu_2890_p2[10:2]}};
        lshr_ln133_13_reg_5494 <= {{add_ln134_14_fu_2912_p2[10:2]}};
        lshr_ln133_14_reg_5504 <= {{add_ln134_15_fu_2934_p2[10:2]}};
        lshr_ln133_2_reg_5374 <= {{add_ln134_2_fu_2648_p2[10:2]}};
        lshr_ln133_3_reg_5384 <= {{add_ln134_3_fu_2670_p2[10:2]}};
        lshr_ln133_4_reg_5394 <= {{add_ln134_4_fu_2692_p2[10:2]}};
        lshr_ln133_5_reg_5404 <= {{add_ln134_5_fu_2714_p2[10:2]}};
        lshr_ln133_6_reg_5414 <= {{add_ln134_6_fu_2736_p2[10:2]}};
        lshr_ln133_7_reg_5424 <= {{add_ln134_7_fu_2758_p2[10:2]}};
        lshr_ln133_8_reg_5434 <= {{add_ln134_8_fu_2780_p2[10:2]}};
        lshr_ln133_9_reg_5444 <= {{add_ln134_9_fu_2802_p2[10:2]}};
        lshr_ln133_s_reg_5454 <= {{add_ln134_10_fu_2824_p2[10:2]}};
        select_ln117_1_reg_5313 <= select_ln117_1_fu_2419_p3;
        select_ln117_reg_5307 <= select_ln117_fu_2405_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln164_reg_6024 == 1'd0))) begin
        add_ln171_reg_6083 <= add_ln171_fu_3566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln164_reg_6024_pp8_iter1_reg == 1'd0))) begin
        add_ln173_reg_6118 <= add_ln173_fu_3633_p2;
        zext_ln183_reg_6123[8 : 0] <= zext_ln183_fu_3643_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln87_reg_4664 <= add_ln87_fu_1827_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_3_fu_1990_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln93_3_reg_4949 <= add_ln93_3_fu_2005_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln98_reg_4957 <= add_ln98_fu_2024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter3 == 1'b1) & (icmp_ln164_reg_6024_pp8_iter2_reg == 1'd0))) begin
        arrayidx2234_1364_promoted718_fu_378 <= arrayidx2234_1_1_promoted746_fu_394;
        arrayidx2234_1_1_promoted746_fu_394 <= arrayidx2234_2_1_promoted774_fu_410;
        arrayidx2234_2_1_promoted774_fu_410 <= select_ln173_1_fu_3716_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln164_reg_6024_pp8_iter1_reg == 1'd0))) begin
        arrayidx2234_1_2_promoted753_fu_398 <= arrayidx2234_2_2_promoted781_fu_414;
        arrayidx2234_2376_promoted725_fu_382 <= arrayidx2234_1_2_promoted753_fu_398;
        arrayidx2234_2_2_promoted781_fu_414 <= select_ln173_fu_3616_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln164_reg_6024 == 1'd0))) begin
        arrayidx2234_1_3_promoted760_fu_402 <= arrayidx2234_2_3_promoted788_fu_418;
        arrayidx2234_2_3_promoted788_fu_418 <= data_l1_0_0_q0;
        arrayidx2234_3388_promoted732_fu_386 <= arrayidx2234_1_3_promoted760_fu_402;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln164_reg_6024_pp8_iter3_reg == 1'd0))) begin
        arrayidx2234_1_promoted739_fu_390 <= arrayidx2234_2_promoted767_fu_406;
        arrayidx2234_2_promoted767_fu_406 <= select_ln173_2_fu_3791_p3;
        arrayidx2234_promoted711_fu_374 <= arrayidx2234_1_promoted739_fu_390;
        output_reg_0_0_1_fu_370 <= grp_fu_4301_p3;
        output_reg_1_0_1_fu_358 <= grp_fu_4293_p3;
        output_reg_2_0_1_fu_346 <= grp_fu_4285_p3;
        output_reg_3_0_1_fu_334 <= grp_fu_4277_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        bound109_reg_6298[17 : 2] <= bound109_fu_4003_p1[17 : 2];
        bound116_reg_6303 <= grp_fu_4168_p2;
        icmp_ln310_reg_6308 <= icmp_ln310_fu_4006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        cmp57307_reg_4638 <= cmp57307_fu_1800_p2;
        empty_38_reg_4654 <= empty_38_fu_1818_p1;
        mul56_reg_4630 <= mul56_fu_1796_p2;
        trunc_ln1_reg_4642 <= {{bias_in_V_read_1_reg_4508[7:2]}};
        trunc_ln3_cast40_reg_4649[7 : 0] <= trunc_ln3_cast40_fu_1815_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        conv88_reg_5172 <= conv88_fu_2314_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_fu_1903_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        empty_41_reg_4907 <= empty_41_fu_1914_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln105_fu_2164_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        empty_45_reg_5067 <= empty_45_fu_2180_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (icmp_ln143_reg_5884_pp7_iter2_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        empty_52_reg_5919 <= grp_fu_4262_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_1_fu_1932_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        empty_60_reg_4921 <= empty_60_fu_1943_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_2_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        empty_62_reg_4935 <= empty_62_fu_1972_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln106_reg_5180 <= icmp_ln106_fu_2318_p2;
        select_ln106_reg_5189_pp6_iter1_reg <= select_ln106_reg_5189;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        icmp_ln143_reg_5884 <= icmp_ln143_fu_3337_p2;
        icmp_ln143_reg_5884_pp7_iter1_reg <= icmp_ln143_reg_5884;
        select_ln143_reg_5893_pp7_iter1_reg <= select_ln143_reg_5893;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp7_stage0_11001)) begin
        icmp_ln143_reg_5884_pp7_iter2_reg <= icmp_ln143_reg_5884_pp7_iter1_reg;
        icmp_ln143_reg_5884_pp7_iter3_reg <= icmp_ln143_reg_5884_pp7_iter2_reg;
        select_ln143_reg_5893_pp7_iter2_reg <= select_ln143_reg_5893_pp7_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        icmp_ln164_reg_6024 <= icmp_ln164_fu_3464_p2;
        icmp_ln164_reg_6024_pp8_iter1_reg <= icmp_ln164_reg_6024;
        icmp_ln173_reg_6049_pp8_iter1_reg <= icmp_ln173_reg_6049;
        icmp_ln285_1_reg_6071_pp8_iter1_reg <= icmp_ln285_1_reg_6071;
        icmp_ln285_2_reg_6075_pp8_iter1_reg <= icmp_ln285_2_reg_6075;
        icmp_ln285_3_reg_6079_pp8_iter1_reg <= icmp_ln285_3_reg_6079;
        icmp_ln285_reg_6067_pp8_iter1_reg <= icmp_ln285_reg_6067;
        tmp_19_reg_6055_pp8_iter1_reg <= tmp_19_reg_6055;
        tmp_20_reg_6061_pp8_iter1_reg <= tmp_20_reg_6061;
        trunc_ln174_reg_6033_pp8_iter1_reg <= trunc_ln174_reg_6033;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp8_stage0_11001)) begin
        icmp_ln164_reg_6024_pp8_iter2_reg <= icmp_ln164_reg_6024_pp8_iter1_reg;
        icmp_ln164_reg_6024_pp8_iter3_reg <= icmp_ln164_reg_6024_pp8_iter2_reg;
        icmp_ln164_reg_6024_pp8_iter4_reg <= icmp_ln164_reg_6024_pp8_iter3_reg;
        icmp_ln164_reg_6024_pp8_iter5_reg <= icmp_ln164_reg_6024_pp8_iter4_reg;
        icmp_ln173_reg_6049_pp8_iter2_reg <= icmp_ln173_reg_6049_pp8_iter1_reg;
        icmp_ln285_1_reg_6071_pp8_iter2_reg <= icmp_ln285_1_reg_6071_pp8_iter1_reg;
        icmp_ln285_1_reg_6071_pp8_iter3_reg <= icmp_ln285_1_reg_6071_pp8_iter2_reg;
        icmp_ln285_1_reg_6071_pp8_iter4_reg <= icmp_ln285_1_reg_6071_pp8_iter3_reg;
        icmp_ln285_1_reg_6071_pp8_iter5_reg <= icmp_ln285_1_reg_6071_pp8_iter4_reg;
        icmp_ln285_1_reg_6071_pp8_iter6_reg <= icmp_ln285_1_reg_6071_pp8_iter5_reg;
        icmp_ln285_2_reg_6075_pp8_iter2_reg <= icmp_ln285_2_reg_6075_pp8_iter1_reg;
        icmp_ln285_2_reg_6075_pp8_iter3_reg <= icmp_ln285_2_reg_6075_pp8_iter2_reg;
        icmp_ln285_2_reg_6075_pp8_iter4_reg <= icmp_ln285_2_reg_6075_pp8_iter3_reg;
        icmp_ln285_2_reg_6075_pp8_iter5_reg <= icmp_ln285_2_reg_6075_pp8_iter4_reg;
        icmp_ln285_2_reg_6075_pp8_iter6_reg <= icmp_ln285_2_reg_6075_pp8_iter5_reg;
        icmp_ln285_3_reg_6079_pp8_iter2_reg <= icmp_ln285_3_reg_6079_pp8_iter1_reg;
        icmp_ln285_3_reg_6079_pp8_iter3_reg <= icmp_ln285_3_reg_6079_pp8_iter2_reg;
        icmp_ln285_3_reg_6079_pp8_iter4_reg <= icmp_ln285_3_reg_6079_pp8_iter3_reg;
        icmp_ln285_3_reg_6079_pp8_iter5_reg <= icmp_ln285_3_reg_6079_pp8_iter4_reg;
        icmp_ln285_3_reg_6079_pp8_iter6_reg <= icmp_ln285_3_reg_6079_pp8_iter5_reg;
        icmp_ln285_reg_6067_pp8_iter2_reg <= icmp_ln285_reg_6067_pp8_iter1_reg;
        icmp_ln285_reg_6067_pp8_iter3_reg <= icmp_ln285_reg_6067_pp8_iter2_reg;
        icmp_ln285_reg_6067_pp8_iter4_reg <= icmp_ln285_reg_6067_pp8_iter3_reg;
        icmp_ln285_reg_6067_pp8_iter5_reg <= icmp_ln285_reg_6067_pp8_iter4_reg;
        icmp_ln285_reg_6067_pp8_iter6_reg <= icmp_ln285_reg_6067_pp8_iter5_reg;
        tmp_19_reg_6055_pp8_iter2_reg <= tmp_19_reg_6055_pp8_iter1_reg;
        tmp_20_reg_6061_pp8_iter2_reg <= tmp_20_reg_6061_pp8_iter1_reg;
        tmp_20_reg_6061_pp8_iter3_reg <= tmp_20_reg_6061_pp8_iter2_reg;
        trunc_ln174_reg_6033_pp8_iter2_reg <= trunc_ln174_reg_6033_pp8_iter1_reg;
        trunc_ln174_reg_6033_pp8_iter3_reg <= trunc_ln174_reg_6033_pp8_iter2_reg;
        trunc_ln174_reg_6033_pp8_iter4_reg <= trunc_ln174_reg_6033_pp8_iter3_reg;
        trunc_ln174_reg_6033_pp8_iter5_reg <= trunc_ln174_reg_6033_pp8_iter4_reg;
        trunc_ln174_reg_6033_pp8_iter6_reg <= trunc_ln174_reg_6033_pp8_iter5_reg;
        zext_ln183_reg_6123_pp8_iter3_reg[8 : 0] <= zext_ln183_reg_6123[8 : 0];
        zext_ln183_reg_6123_pp8_iter4_reg[8 : 0] <= zext_ln183_reg_6123_pp8_iter3_reg[8 : 0];
        zext_ln183_reg_6123_pp8_iter5_reg[8 : 0] <= zext_ln183_reg_6123_pp8_iter4_reg[8 : 0];
        zext_ln183_reg_6123_pp8_iter6_reg[8 : 0] <= zext_ln183_reg_6123_pp8_iter5_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln164_fu_3464_p2 == 1'd0))) begin
        icmp_ln173_reg_6049 <= icmp_ln173_fu_3488_p2;
        icmp_ln285_1_reg_6071 <= icmp_ln285_1_fu_3539_p2;
        icmp_ln285_2_reg_6075 <= icmp_ln285_2_fu_3550_p2;
        icmp_ln285_3_reg_6079 <= icmp_ln285_3_fu_3555_p2;
        icmp_ln285_reg_6067 <= icmp_ln285_fu_3528_p2;
        tmp_19_reg_6055 <= add_ln171_1_fu_3494_p2[32'd16];
        tmp_20_reg_6061 <= add_ln171_2_fu_3508_p2[32'd16];
        trunc_ln174_reg_6033 <= trunc_ln174_fu_3479_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        icmp_ln308_reg_6313 <= icmp_ln308_fu_4011_p2;
        icmp_ln308_reg_6313_pp9_iter1_reg <= icmp_ln308_reg_6313;
        icmp_ln309_reg_6322_pp9_iter1_reg <= icmp_ln309_reg_6322;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp9_stage0_11001)) begin
        icmp_ln308_reg_6313_pp9_iter2_reg <= icmp_ln308_reg_6313_pp9_iter1_reg;
        icmp_ln308_reg_6313_pp9_iter3_reg <= icmp_ln308_reg_6313_pp9_iter2_reg;
        select_ln309_1_reg_6345_pp9_iter3_reg <= select_ln309_1_reg_6345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln308_fu_4011_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        icmp_ln309_reg_6322 <= icmp_ln309_fu_4022_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln90_1_reg_4912 <= icmp_ln90_1_fu_1932_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln90_2_reg_4926 <= icmp_ln90_2_fu_1961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln90_3_reg_4940 <= icmp_ln90_3_fu_1990_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln90_reg_4898 <= icmp_ln90_fu_1903_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_1756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln1_reg_4625 <= {{k_1_reg_1350[10:2]}};
        trunc_ln84_reg_4621 <= trunc_ln84_fu_1767_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_1700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln_reg_4586 <= {{k_reg_1339[7:2]}};
        trunc_ln80_reg_4582 <= trunc_ln80_fu_1711_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul42_reg_4607 <= grp_fu_4162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1822_p2 == 1'd0) & (cmp57307_reg_4638 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        mul_ln90_reg_4669 <= mul_ln90_fu_1837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_fu_2019_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        mul_ln98_1_reg_4990 <= mul_ln98_1_fu_2078_p2;
        mul_ln98_2_reg_4998 <= mul_ln98_2_fu_2093_p2;
        mul_ln98_3_reg_5006 <= mul_ln98_3_fu_2108_p2;
        mul_ln98_4_reg_5014 <= mul_ln98_4_fu_2123_p2;
        mul_ln98_reg_4978 <= mul_ln98_fu_2069_p2;
        p_cast12_reg_5028[7 : 2] <= p_cast12_fu_2136_p1[7 : 2];
        p_mid_reg_4973[7 : 2] <= p_mid_fu_2057_p3[7 : 2];
        select_ln98_1_reg_4968 <= select_ln98_1_fu_2049_p3;
        select_ln98_reg_4962 <= select_ln98_fu_2035_p3;
        tmp_18_reg_5022[7 : 2] <= tmp_18_fu_2128_p3[7 : 2];
        zext_ln105_reg_5036[7 : 2] <= zext_ln105_fu_2146_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter5 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln164_reg_6024_pp8_iter4_reg == 1'd0))) begin
        output_reg_0_1_1_fu_366 <= grp_fu_4333_p3;
        output_reg_1_1_1_fu_354 <= grp_fu_4325_p3;
        output_reg_2_1_1_fu_342 <= grp_fu_4317_p3;
        output_reg_3_1_1_fu_330 <= grp_fu_4309_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter6 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln164_reg_6024_pp8_iter5_reg == 1'd0))) begin
        output_reg_0_2_1_fu_362 <= grp_fu_4365_p3;
        output_reg_1_2_1_fu_350 <= grp_fu_4357_p3;
        output_reg_2_2_1_fu_338 <= grp_fu_4349_p3;
        output_reg_3_2_1_fu_326 <= grp_fu_4341_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        p_cast46_reg_5944 <= p_cast46_fu_3416_p1;
        p_cast48_reg_5964 <= p_cast48_fu_3428_p1;
        p_cast50_reg_5984 <= p_cast50_fu_3440_p1;
        p_cast52_reg_6004 <= p_cast52_fu_3452_p1;
        p_cast59_reg_5949 <= p_cast59_fu_3419_p1;
        p_cast61_reg_5954 <= p_cast61_fu_3422_p1;
        p_cast63_reg_5959 <= p_cast63_fu_3425_p1;
        p_cast65_reg_5969 <= p_cast65_fu_3431_p1;
        p_cast67_reg_5974 <= p_cast67_fu_3434_p1;
        p_cast69_reg_5979 <= p_cast69_fu_3437_p1;
        p_cast71_reg_5989 <= p_cast71_fu_3443_p1;
        p_cast73_reg_5994 <= p_cast73_fu_3446_p1;
        p_cast75_reg_5999 <= p_cast75_fu_3449_p1;
        p_cast77_reg_6009 <= p_cast77_fu_3455_p1;
        p_cast79_reg_6014 <= p_cast79_fu_3458_p1;
        sext_ln164_reg_6019 <= sext_ln164_fu_3461_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln106_fu_2318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln106_1_reg_5194 <= select_ln106_1_fu_2348_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_2318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln106_reg_5189 <= select_ln106_fu_2334_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln143_fu_3337_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        select_ln143_1_reg_5899 <= select_ln143_1_fu_3367_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln143_fu_3337_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        select_ln143_reg_5893 <= select_ln143_fu_3353_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln308_fu_4011_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        select_ln308_1_reg_6330 <= select_ln308_1_fu_4033_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln308_reg_6313_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        select_ln309_1_reg_6345 <= select_ln309_1_fu_4111_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp1_reg_4596 <= tmp1_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_10_reg_5714 <= tmp_10_fu_3156_p6;
        tmp_11_reg_5719 <= tmp_11_fu_3173_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_12_reg_5764 <= tmp_12_fu_3204_p6;
        tmp_13_reg_5769 <= tmp_13_fu_3221_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_14_reg_5814 <= tmp_14_fu_3252_p6;
        tmp_15_reg_5819 <= tmp_15_fu_3269_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        tmp_16_reg_5874 <= tmp_16_fu_3306_p6;
        tmp_17_reg_5879 <= tmp_17_fu_3323_p6;
        zext_ln117_reg_5864[7 : 0] <= zext_ln117_fu_3297_p1[7 : 0];
        zext_ln119_reg_5869[7 : 0] <= zext_ln119_fu_3300_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_fu_2019_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        tmp_2_reg_5044[17 : 2] <= tmp_2_fu_2150_p3[17 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_3_reg_5514 <= tmp_3_fu_2964_p6;
        tmp_4_reg_5519 <= tmp_4_fu_2981_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        tmp_5_reg_5564 <= tmp_5_fu_3012_p6;
        tmp_6_reg_5569 <= tmp_6_fu_3029_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        tmp_7_reg_5614 <= tmp_7_fu_3060_p6;
        tmp_8_reg_5619 <= tmp_8_fu_3077_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_9_reg_5664 <= tmp_9_fu_3108_p6;
        tmp_s_reg_5669 <= tmp_s_fu_3125_p6;
    end
end

always @ (*) begin
    if ((icmp_ln78_fu_1700_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln82_fu_1756_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln90_fu_1903_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln90_1_fu_1932_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln90_2_fu_1961_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln90_3_fu_1990_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln106_fu_2318_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln143_fu_3337_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state48 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state48 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter4 == 1'b1) & (ap_enable_reg_pp8_iter3 == 1'b0))) begin
        ap_condition_pp8_exit_iter4_state58 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter4_state58 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln164_fu_3464_p2 == 1'd1))) begin
        ap_condition_pp8_flush_enable = 1'b1;
    end else begin
        ap_condition_pp8_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b1))) begin
        ap_condition_pp9_exit_iter2_state68 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter2_state68 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln308_fu_4011_p2 == 1'd1) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
        ap_condition_pp9_flush_enable = 1'b1;
    end else begin
        ap_condition_pp9_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter6 == 1'b0) & (ap_enable_reg_pp8_iter5 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b0) & (ap_enable_reg_pp8_iter3 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter4 == 1'b0) & (ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln143_reg_5884 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        ap_phi_mux_hi_1_phi_fu_1541_p4 = select_ln143_1_reg_5899;
    end else begin
        ap_phi_mux_hi_1_phi_fu_1541_p4 = hi_1_reg_1537;
    end
end

always @ (*) begin
    if (((icmp_ln106_reg_5180 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_hi_phi_fu_1475_p4 = select_ln106_1_reg_5194;
    end else begin
        ap_phi_mux_hi_phi_fu_1475_p4 = hi_reg_1471;
    end
end

always @ (*) begin
    if (((icmp_ln308_reg_6313 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        ap_phi_mux_k_2_phi_fu_1585_p4 = select_ln308_1_reg_6330;
    end else begin
        ap_phi_mux_k_2_phi_fu_1585_p4 = k_2_reg_1581;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_0_address0 = newIndex66_cast_fu_2199_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_address0 = zext_ln80_fu_1733_p1;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln80_reg_4582 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_1_address0 = newIndex66_cast_fu_2199_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_address0 = zext_ln80_fu_1733_p1;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln80_reg_4582 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_2_address0 = newIndex66_cast_fu_2199_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_address0 = zext_ln80_fu_1733_p1;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln80_reg_4582 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_3_address0 = newIndex66_cast_fu_2199_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_address0 = zext_ln80_fu_1733_p1;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln80_reg_4582 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln308_reg_6313_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln308_reg_6313_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln90_3_reg_4940 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln90_2_reg_4926 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln90_1_reg_4912 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln90_reg_4898 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln90_3_reg_4940 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln90_2_reg_4926 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln90_1_reg_4912 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln90_reg_4898 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        data_l1_0_0_address0 = zext_ln174_fu_3483_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_0_0_address0 = zext_ln153_fu_3409_p1;
    end else begin
        data_l1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        data_l1_0_0_ce0 = 1'b1;
    end else begin
        data_l1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln143_reg_5884_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_0_0_we0 = 1'b1;
    end else begin
        data_l1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        data_l1_1_0_address0 = zext_ln174_1_fu_3571_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_1_0_address0 = zext_ln153_fu_3409_p1;
    end else begin
        data_l1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        data_l1_1_0_ce0 = 1'b1;
    end else begin
        data_l1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln143_reg_5884_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_1_0_we0 = 1'b1;
    end else begin
        data_l1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        data_l1_2_0_address0 = zext_ln174_2_fu_3628_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_2_0_address0 = zext_ln153_fu_3409_p1;
    end else begin
        data_l1_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        data_l1_2_0_ce0 = 1'b1;
    end else begin
        data_l1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln143_reg_5884_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_2_0_we0 = 1'b1;
    end else begin
        data_l1_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter3 == 1'b1))) begin
        data_l1_3_0_address0 = zext_ln174_3_fu_3723_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_3_0_address0 = zext_ln153_fu_3409_p1;
    end else begin
        data_l1_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter3 == 1'b1)))) begin
        data_l1_3_0_ce0 = 1'b1;
    end else begin
        data_l1_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln143_reg_5884_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_3_0_we0 = 1'b1;
    end else begin
        data_l1_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_0_address0 = p_cast84_fu_3401_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_0_address0 = zext_ln93_fu_1927_p1;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_0_ce0 = 1'b1;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln90_reg_4898 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_1_address0 = p_cast84_fu_3401_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        data_l2_1_address0 = zext_ln93_1_fu_1956_p1;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        data_l2_1_ce0 = 1'b1;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln90_1_reg_4912 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_2_address0 = p_cast84_fu_3401_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_2_address0 = zext_ln93_2_fu_1985_p1;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_2_ce0 = 1'b1;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln90_2_reg_4926 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_3_address0 = p_cast84_fu_3401_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l2_3_address0 = zext_ln93_3_fu_2015_p1;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        data_l2_3_ce0 = 1'b1;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln90_3_reg_4940 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        grp_fu_4409_ce = 1'b1;
    end else begin
        grp_fu_4409_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_0_address0 = zext_ln183_reg_6123_pp8_iter6_reg;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_address0 = zext_ln110_fu_2374_p1;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_0_address1 = zext_ln311_fu_4137_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_0_address1 = zext_ln183_3_fu_3671_p1;
    end else begin
        output_l1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_0_ce0 = 1'b1;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_0_ce1 = 1'b1;
    end else begin
        output_l1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_0_d0 = grp_fu_4400_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_d0 = conv88_reg_5172;
    end else begin
        output_l1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_45_reg_5067 == 2'd0) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln285_3_reg_6079_pp8_iter6_reg == 1'd1)))) begin
        output_l1_0_we0 = 1'b1;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_1_address0 = zext_ln292_2_fu_3933_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_address0 = zext_ln110_fu_2374_p1;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_1_address1 = zext_ln311_fu_4137_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_1_address1 = zext_ln183_2_fu_3662_p1;
    end else begin
        output_l1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_1_ce0 = 1'b1;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_1_ce1 = 1'b1;
    end else begin
        output_l1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_1_d0 = grp_fu_4391_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_d0 = conv88_reg_5172;
    end else begin
        output_l1_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_45_reg_5067 == 2'd1) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln285_2_reg_6075_pp8_iter6_reg == 1'd1)))) begin
        output_l1_1_we0 = 1'b1;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_2_address0 = zext_ln292_1_fu_3918_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_address0 = zext_ln110_fu_2374_p1;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_2_address1 = zext_ln311_fu_4137_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_2_address1 = zext_ln183_1_fu_3653_p1;
    end else begin
        output_l1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_2_ce0 = 1'b1;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_2_ce1 = 1'b1;
    end else begin
        output_l1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_2_d0 = grp_fu_4382_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_d0 = conv88_reg_5172;
    end else begin
        output_l1_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_45_reg_5067 == 2'd2) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln285_1_reg_6071_pp8_iter6_reg == 1'd1)))) begin
        output_l1_2_we0 = 1'b1;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_3_address0 = zext_ln292_fu_3903_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_address0 = zext_ln110_fu_2374_p1;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_3_address1 = zext_ln311_fu_4137_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_3_address1 = zext_ln183_fu_3643_p1;
    end else begin
        output_l1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_3_ce0 = 1'b1;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_3_ce1 = 1'b1;
    end else begin
        output_l1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_3_d0 = grp_fu_4373_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_d0 = conv88_reg_5172;
    end else begin
        output_l1_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_45_reg_5067 == 2'd3) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln285_reg_6067_pp8_iter6_reg == 1'd1)))) begin
        output_l1_3_we0 = 1'b1;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_0_address0 = zext_ln133_30_fu_3283_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_0_address0 = zext_ln133_28_fu_3235_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_0_address0 = zext_ln133_26_fu_3187_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_0_address0 = zext_ln133_24_fu_3139_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_0_address0 = zext_ln133_22_fu_3091_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_l2_0_address0 = zext_ln133_20_fu_3043_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weight_l2_0_address0 = zext_ln133_18_fu_2995_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address0 = zext_ln133_17_fu_2640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = zext_ln84_fu_1789_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_0_address1 = zext_ln133_31_fu_3290_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_0_address1 = zext_ln133_29_fu_3242_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_0_address1 = zext_ln133_27_fu_3194_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_0_address1 = zext_ln133_25_fu_3146_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_0_address1 = zext_ln133_23_fu_3098_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_l2_0_address1 = zext_ln133_21_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weight_l2_0_address1 = zext_ln133_19_fu_3002_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address1 = zext_ln133_16_fu_2610_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4621 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_1_address0 = zext_ln133_30_fu_3283_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_1_address0 = zext_ln133_28_fu_3235_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_1_address0 = zext_ln133_26_fu_3187_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_1_address0 = zext_ln133_24_fu_3139_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_1_address0 = zext_ln133_22_fu_3091_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_l2_1_address0 = zext_ln133_20_fu_3043_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weight_l2_1_address0 = zext_ln133_18_fu_2995_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address0 = zext_ln133_17_fu_2640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = zext_ln84_fu_1789_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_1_address1 = zext_ln133_31_fu_3290_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_1_address1 = zext_ln133_29_fu_3242_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_1_address1 = zext_ln133_27_fu_3194_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_1_address1 = zext_ln133_25_fu_3146_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_1_address1 = zext_ln133_23_fu_3098_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_l2_1_address1 = zext_ln133_21_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weight_l2_1_address1 = zext_ln133_19_fu_3002_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address1 = zext_ln133_16_fu_2610_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4621 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_2_address0 = zext_ln133_30_fu_3283_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_2_address0 = zext_ln133_28_fu_3235_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_2_address0 = zext_ln133_26_fu_3187_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_2_address0 = zext_ln133_24_fu_3139_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_2_address0 = zext_ln133_22_fu_3091_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_l2_2_address0 = zext_ln133_20_fu_3043_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weight_l2_2_address0 = zext_ln133_18_fu_2995_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address0 = zext_ln133_17_fu_2640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = zext_ln84_fu_1789_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_2_address1 = zext_ln133_31_fu_3290_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_2_address1 = zext_ln133_29_fu_3242_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_2_address1 = zext_ln133_27_fu_3194_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_2_address1 = zext_ln133_25_fu_3146_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_2_address1 = zext_ln133_23_fu_3098_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_l2_2_address1 = zext_ln133_21_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weight_l2_2_address1 = zext_ln133_19_fu_3002_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address1 = zext_ln133_16_fu_2610_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4621 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_3_address0 = zext_ln133_30_fu_3283_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_3_address0 = zext_ln133_28_fu_3235_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_3_address0 = zext_ln133_26_fu_3187_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_3_address0 = zext_ln133_24_fu_3139_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_3_address0 = zext_ln133_22_fu_3091_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_l2_3_address0 = zext_ln133_20_fu_3043_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weight_l2_3_address0 = zext_ln133_18_fu_2995_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address0 = zext_ln133_17_fu_2640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = zext_ln84_fu_1789_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_3_address1 = zext_ln133_31_fu_3290_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_3_address1 = zext_ln133_29_fu_3242_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_3_address1 = zext_ln133_27_fu_3194_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_3_address1 = zext_ln133_25_fu_3146_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_3_address1 = zext_ln133_23_fu_3098_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_l2_3_address1 = zext_ln133_21_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        weight_l2_3_address1 = zext_ln133_19_fu_3002_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address1 = zext_ln133_16_fu_2610_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4621 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln78_fu_1700_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln78_fu_1700_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln82_fu_1756_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln82_fu_1756_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln87_fu_1822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else if (((icmp_ln87_fu_1822_p2 == 1'd0) & (cmp57307_reg_4638 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln90_fu_1903_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln90_fu_1903_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln90_1_fu_1932_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln90_1_fu_1932_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln90_2_fu_1961_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln90_2_fu_1961_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln90_3_fu_1990_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln90_3_fu_1990_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln98_fu_2019_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln105_fu_2164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln106_fu_2318_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter3 == 1'b1) & (ap_enable_reg_pp6_iter2 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln106_fu_2318_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (ap_enable_reg_pp6_iter2 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((icmp_ln117_fu_2389_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln143_fu_3337_p2 == 1'd1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)) & ~((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln143_fu_3337_p2 == 1'd1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_pp8_stage0;
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter5 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter3 == 1'b0)) & ~((ap_enable_reg_pp8_iter7 == 1'b1) & (ap_enable_reg_pp8_iter6 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (ap_enable_reg_pp8_iter6 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone)) | ((ap_enable_reg_pp8_iter5 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        end
        ap_ST_fsm_pp9_stage0 : begin
            if ((~((ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone)) & ~((ap_enable_reg_pp9_iter4 == 1'b1) & (ap_enable_reg_pp9_iter3 == 1'b0) & (1'b0 == ap_block_pp9_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if ((((ap_enable_reg_pp9_iter4 == 1'b1) & (ap_enable_reg_pp9_iter3 == 1'b0) & (1'b0 == ap_block_pp9_stage0_subdone)) | ((ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_cast_fu_1877_p1 = C_reg_4513;

assign C_fu_1665_p1 = bias_in_V_dout[7:0];

assign K_fu_1661_p1 = bias_in_V_dout[7:0];

assign RS_fu_1692_p1 = bias_in_V_dout[7:0];

assign WH_cast_fu_1880_p1 = WH_reg_4520;

assign WH_fu_1669_p1 = bias_in_V_dout[7:0];

assign WH_in_fu_1673_p1 = bias_in_V_dout[7:0];

assign add_ln105_fu_2170_p2 = (ki_1_reg_1449 + 3'd1);

assign add_ln106_1_fu_2342_p2 = (ap_phi_mux_hi_phi_fu_1475_p4 + 8'd1);

assign add_ln106_fu_2323_p2 = (indvar_flatten_reg_1460 + 16'd1);

assign add_ln107_fu_2360_p2 = (select_ln106_fu_2334_p3 + 8'd1);

assign add_ln117_10_fu_2517_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_2_1_cast_reg_5274));

assign add_ln117_11_fu_2526_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_2_2_cast_reg_5234));

assign add_ln117_12_fu_2535_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_2_3_cast_reg_5279));

assign add_ln117_13_fu_2544_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_3_cast_reg_5224));

assign add_ln117_14_fu_2553_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_3_1_cast_reg_5284));

assign add_ln117_15_fu_2562_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_3_2_cast_reg_5239));

assign add_ln117_16_fu_2571_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_3_3_cast_reg_5289));

assign add_ln117_17_fu_2413_p2 = (8'd1 + r_reg_1504);

assign add_ln117_1_fu_2436_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_cast_reg_5244));

assign add_ln117_2_fu_2445_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_1342_cast_reg_5249));

assign add_ln117_3_fu_2454_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_2350_cast_reg_5254));

assign add_ln117_4_fu_2463_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_3358_cast_reg_5259));

assign add_ln117_5_fu_2472_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_1_cast_reg_5219));

assign add_ln117_6_fu_2481_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_1_1_cast_reg_5264));

assign add_ln117_7_fu_2490_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_1_2_cast_reg_5229));

assign add_ln117_8_fu_2499_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_1_3_cast_reg_5269));

assign add_ln117_9_fu_2508_p2 = ($signed(mul_ln117_1_fu_2431_p2) + $signed(add117_2_cast_reg_5214));

assign add_ln117_fu_2394_p2 = (indvar_flatten73_reg_1493 + 16'd1);

assign add_ln119_fu_3998_p2 = (select_ln117_reg_5307 + 8'd1);

assign add_ln133_10_fu_2830_p2 = (trunc_ln117_10_fu_2531_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_11_fu_2852_p2 = (trunc_ln117_11_fu_2540_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_12_fu_2874_p2 = (trunc_ln117_12_fu_2549_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_13_fu_2896_p2 = (trunc_ln117_13_fu_2558_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_14_fu_2918_p2 = (trunc_ln117_14_fu_2567_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_15_fu_2940_p2 = (trunc_ln117_15_fu_2576_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_1_fu_2624_p2 = (trunc_ln117_1_fu_2450_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_2_fu_2654_p2 = (trunc_ln117_2_fu_2459_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_3_fu_2676_p2 = (trunc_ln117_3_fu_2468_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_4_fu_2698_p2 = (trunc_ln117_4_fu_2477_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_5_fu_2720_p2 = (trunc_ln117_5_fu_2486_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_6_fu_2742_p2 = (trunc_ln117_6_fu_2495_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_7_fu_2764_p2 = (trunc_ln117_7_fu_2504_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_8_fu_2786_p2 = (trunc_ln117_8_fu_2513_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_9_fu_2808_p2 = (trunc_ln117_9_fu_2522_p1 + trunc_ln134_fu_2584_p1);

assign add_ln133_fu_2594_p2 = (trunc_ln117_fu_2441_p1 + trunc_ln134_fu_2584_p1);

assign add_ln134_10_fu_2824_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_11_fu_2526_p2);

assign add_ln134_11_fu_2846_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_12_fu_2535_p2);

assign add_ln134_12_fu_2868_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_13_fu_2544_p2);

assign add_ln134_13_fu_2890_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_14_fu_2553_p2);

assign add_ln134_14_fu_2912_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_15_fu_2562_p2);

assign add_ln134_15_fu_2934_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_16_fu_2571_p2);

assign add_ln134_1_fu_2618_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_2_fu_2445_p2);

assign add_ln134_2_fu_2648_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_3_fu_2454_p2);

assign add_ln134_3_fu_2670_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_4_fu_2463_p2);

assign add_ln134_4_fu_2692_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_5_fu_2472_p2);

assign add_ln134_5_fu_2714_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_6_fu_2481_p2);

assign add_ln134_6_fu_2736_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_7_fu_2490_p2);

assign add_ln134_7_fu_2758_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_8_fu_2499_p2);

assign add_ln134_8_fu_2780_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_9_fu_2508_p2);

assign add_ln134_9_fu_2802_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_10_fu_2517_p2);

assign add_ln134_fu_2588_p2 = (zext_ln119_1_fu_2580_p1 + add_ln117_1_fu_2436_p2);

assign add_ln143_3_fu_3361_p2 = (ap_phi_mux_hi_1_phi_fu_1541_p4 + 8'd1);

assign add_ln143_fu_3342_p2 = (indvar_flatten15_reg_1526 + 16'd1);

assign add_ln144_fu_3379_p2 = (select_ln143_fu_3353_p3 + 8'd1);

assign add_ln164_fu_3469_p2 = (i_reg_1559 + 16'd1);

assign add_ln171_1_fu_3494_p2 = ($signed(17'd131070) + $signed(zext_ln164_fu_3475_p1));

assign add_ln171_2_fu_3508_p2 = ($signed(17'd131069) + $signed(zext_ln164_fu_3475_p1));

assign add_ln171_3_fu_3623_p2 = ($signed(9'd510) + $signed(trunc_ln174_reg_6033_pp8_iter1_reg));

assign add_ln171_fu_3566_p2 = ($signed(9'd511) + $signed(trunc_ln174_reg_6033));

assign add_ln173_fu_3633_p2 = ($signed(9'd509) + $signed(trunc_ln174_reg_6033_pp8_iter1_reg));

assign add_ln183_1_fu_3648_p2 = (mul_ln98_reg_4978 + add_ln171_3_fu_3623_p2);

assign add_ln183_2_fu_3658_p2 = (mul_ln98_reg_4978 + add_ln171_reg_6083);

assign add_ln183_3_fu_3667_p2 = (mul_ln98_reg_4978 + trunc_ln174_reg_6033_pp8_iter1_reg);

assign add_ln183_fu_3638_p2 = (mul_ln98_reg_4978 + add_ln173_fu_3633_p2);

assign add_ln285_1_fu_3533_p2 = ($signed(zext_ln164_fu_3475_p1) + $signed(17'd131067));

assign add_ln285_2_fu_3544_p2 = ($signed(zext_ln164_fu_3475_p1) + $signed(17'd131068));

assign add_ln285_3_fu_3893_p2 = ($signed(9'd506) + $signed(trunc_ln174_reg_6033_pp8_iter6_reg));

assign add_ln285_4_fu_3908_p2 = ($signed(trunc_ln174_reg_6033_pp8_iter6_reg) + $signed(9'd507));

assign add_ln285_5_fu_3923_p2 = ($signed(trunc_ln174_reg_6033_pp8_iter6_reg) + $signed(9'd508));

assign add_ln285_fu_3522_p2 = ($signed(17'd131066) + $signed(zext_ln164_fu_3475_p1));

assign add_ln293_1_fu_3913_p2 = (add_ln285_4_fu_3908_p2 + mul_ln98_reg_4978);

assign add_ln293_2_fu_3928_p2 = (add_ln285_5_fu_3923_p2 + mul_ln98_reg_4978);

assign add_ln293_fu_3898_p2 = (add_ln285_3_fu_3893_p2 + mul_ln98_reg_4978);

assign add_ln308_1_fu_4027_p2 = (6'd1 + ap_phi_mux_k_2_phi_fu_1585_p4);

assign add_ln308_fu_4016_p2 = (indvar_flatten128_reg_1570 + 24'd1);

assign add_ln309_1_fu_4045_p2 = (19'd1 + indvar_flatten111_reg_1592);

assign add_ln309_fu_4088_p2 = (3'd1 + select_ln308_fu_4059_p3);

assign add_ln310_fu_4131_p2 = (16'd1 + select_ln309_fu_4099_p3);

assign add_ln78_fu_1705_p2 = (k_reg_1339 + 8'd1);

assign add_ln82_fu_1761_p2 = (k_1_reg_1350 + 32'd1);

assign add_ln87_fu_1827_p2 = (co_reg_1361 + 6'd1);

assign add_ln90_1_fu_1937_p2 = (wh_1_reg_1383 + 16'd1);

assign add_ln90_2_fu_1966_p2 = (wh_2_reg_1394 + 16'd1);

assign add_ln90_3_fu_1995_p2 = (wh_4_reg_1405 + 16'd1);

assign add_ln90_fu_1908_p2 = (wh_reg_1372 + 16'd1);

assign add_ln93_1_fu_1952_p2 = (empty_60_reg_4921 + mul_ln90_reg_4669);

assign add_ln93_2_fu_1981_p2 = (empty_62_reg_4935 + mul_ln90_reg_4669);

assign add_ln93_3_fu_2005_p2 = (empty_64_fu_2001_p1 + mul_ln90_reg_4669);

assign add_ln93_fu_1923_p2 = (empty_41_reg_4907 + mul_ln90_reg_4669);

assign add_ln98_1_fu_2043_p2 = (ko_reg_1427 + 6'd1);

assign add_ln98_fu_2024_p2 = (indvar_flatten104_reg_1416 + 12'd1);

assign add_ln99_fu_2956_p2 = (select_ln98_reg_4962 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1 = ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_reg_4898 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_reg_4898 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_1_reg_4912 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_1_reg_4912 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp4 = ((1'b1 == ap_block_pp4_stage0_subdone) & (ap_ST_fsm_pp4_stage0 == ap_CS_fsm));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_2_reg_4926 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_2_reg_4926 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp5 = ((1'b1 == ap_block_pp5_stage0_subdone) & (ap_ST_fsm_pp5_stage0 == ap_CS_fsm));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_3_reg_4940 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_3_reg_4940 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp6 = ((1'b1 == ap_block_pp6_stage0_subdone) & (ap_ST_fsm_pp6_stage0 == ap_CS_fsm));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7 = ((1'b1 == ap_block_pp7_stage0_subdone) & (ap_ST_fsm_pp7_stage0 == ap_CS_fsm));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8 = ((1'b1 == ap_block_pp8_stage0_subdone) & (ap_ST_fsm_pp8_stage0 == ap_CS_fsm));
end

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9 = ((1'b1 == ap_block_pp9_stage0_subdone) & (ap_ST_fsm_pp9_stage0 == ap_CS_fsm));
end

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln308_reg_6313_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln308_reg_6313_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln308_reg_6313_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp1_stage0_iter1 = (weight_in_V_empty_n == 1'b0);
end

assign ap_block_state16_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp2_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_reg_4898 == 1'd0));
end

assign ap_block_state19_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp3_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_1_reg_4912 == 1'd0));
end

assign ap_block_state22_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp4_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_2_reg_4926 == 1'd0));
end

assign ap_block_state25_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_pp5_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln90_3_reg_4940 == 1'd0));
end

assign ap_block_state31_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp8_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp8_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp8_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp8_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp8_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp9_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp9_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state70_pp9_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln308_reg_6313_pp9_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (bias_in_V_empty_n == 1'b0);
end

always @ (*) begin
    ap_enable_operation_1011 = (ap_predicate_op1011_load_state57 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_1013 = (ap_predicate_op1013_load_state57 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_1015 = (ap_predicate_op1015_load_state57 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_1017 = (icmp_ln164_reg_6024_pp8_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1158 = (icmp_ln285_reg_6067_pp8_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1164 = (icmp_ln285_1_reg_6071_pp8_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1170 = (icmp_ln285_2_reg_6075_pp8_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1173 = (icmp_ln285_3_reg_6079_pp8_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_975 = (ap_predicate_op975_load_state56 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_979 = (ap_predicate_op979_load_state56 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_983 = (ap_predicate_op983_load_state56 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_987 = (icmp_ln164_reg_6024_pp8_iter1_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

always @ (*) begin
    ap_enable_state56_pp8_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state57_pp8_iter3_stage0 = ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter3 == 1'b1));
end

always @ (*) begin
    ap_enable_state61_pp8_iter7_stage0 = ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter7 == 1'b1));
end

always @ (*) begin
    ap_predicate_op1011_load_state57 = ((tmp_20_reg_6061_pp8_iter2_reg == 1'd0) & (icmp_ln164_reg_6024_pp8_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op1013_load_state57 = ((tmp_19_reg_6055_pp8_iter2_reg == 1'd0) & (icmp_ln164_reg_6024_pp8_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op1015_load_state57 = ((icmp_ln173_reg_6049_pp8_iter2_reg == 1'd1) & (icmp_ln164_reg_6024_pp8_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op975_load_state56 = ((tmp_20_reg_6061_pp8_iter1_reg == 1'd0) & (icmp_ln164_reg_6024_pp8_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op979_load_state56 = ((tmp_19_reg_6055_pp8_iter1_reg == 1'd0) & (icmp_ln164_reg_6024_pp8_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op983_load_state56 = ((icmp_ln173_reg_6049_pp8_iter1_reg == 1'd1) & (icmp_ln164_reg_6024_pp8_iter1_reg == 1'd0));
end

assign bound109_fu_4003_p1 = tmp_2_reg_5044;

assign bound78_fu_1893_p0 = bound78_fu_1893_p00;

assign bound78_fu_1893_p00 = trunc_ln1_reg_4642;

assign bound78_fu_1893_p1 = bound78_fu_1893_p10;

assign bound78_fu_1893_p10 = div73_cast_fu_1868_p4;

assign cmp57307_fu_1800_p2 = ((mul56_fu_1796_p2 == 16'd0) ? 1'b1 : 1'b0);

assign conv88_fu_2314_p1 = $signed(tmp_1_fu_2300_p6);

assign conv_out_V_din = p_Repl2_s_fu_4144_p6;

assign data_l2_0_d0 = data_in_V_dout[7:0];

assign data_l2_1_d0 = data_in_V_dout[7:0];

assign data_l2_2_d0 = data_in_V_dout[7:0];

assign data_l2_3_d0 = data_in_V_dout[7:0];

assign div73_cast_fu_1868_p4 = {{bias_in_V_read_reg_4497[7:2]}};

assign empty_38_fu_1818_p1 = mul56_fu_1796_p2[9:0];

assign empty_41_fu_1914_p1 = wh_reg_1372[9:0];

assign empty_42_fu_1883_p1 = tmp1_reg_4596[10:0];

assign empty_43_fu_1899_p1 = mul163_fu_1842_p2[8:0];

assign empty_45_fu_2180_p1 = ki_1_reg_1449[1:0];

assign empty_46_fu_2184_p2 = (p_mid_reg_4973 + zext_ln105_1_fu_2176_p1);

assign empty_48_fu_2207_p2 = (tmp_18_reg_5022 | 8'd1);

assign empty_49_fu_2216_p2 = (tmp_18_reg_5022 | 8'd2);

assign empty_51_fu_3396_p2 = (tmp6_fu_3391_p2 + grp_fu_4269_p4);

assign empty_56_fu_2140_p2 = (tmp_18_fu_2128_p3 | 8'd3);

assign empty_60_fu_1943_p1 = wh_1_reg_1383[9:0];

assign empty_62_fu_1972_p1 = wh_2_reg_1394[9:0];

assign empty_64_fu_2001_p1 = wh_4_reg_1405[9:0];

assign grp_fu_4162_p0 = grp_fu_4162_p00;

assign grp_fu_4162_p00 = tmp1_fu_1748_p2;

assign grp_fu_4162_p1 = grp_fu_4162_p10;

assign grp_fu_4162_p10 = tmp_fu_1740_p2;

assign grp_fu_4168_p0 = grp_fu_4168_p00;

assign grp_fu_4168_p00 = tmp_2_fu_2150_p3;

assign grp_fu_4168_p1 = grp_fu_4168_p10;

assign grp_fu_4168_p10 = div73_cast_reg_4848;

assign grp_fu_4174_p0 = (p_cast12_reg_5028 + mul_ln98_3_reg_5006);

assign grp_fu_4179_p0 = (p_cast12_reg_5028 + mul_ln98_2_reg_4998);

assign grp_fu_4184_p0 = (p_cast12_reg_5028 + mul_ln98_4_reg_5014);

assign grp_fu_4189_p0 = (p_cast13_fu_2221_p1 + mul_ln98_2_reg_4998);

assign grp_fu_4194_p0 = (p_cast13_fu_2221_p1 + mul_ln98_3_reg_5006);

assign grp_fu_4199_p0 = (p_cast13_fu_2221_p1 + mul_ln98_4_reg_5014);

assign grp_fu_4204_p0 = (p_cast12_reg_5028 + mul_ln98_1_reg_4990);

assign grp_fu_4209_p0 = (p_cast15_fu_2212_p1 + mul_ln98_1_reg_4990);

assign grp_fu_4214_p0 = (p_cast13_fu_2221_p1 + mul_ln98_1_reg_4990);

assign grp_fu_4219_p0 = (zext_ln105_reg_5036 + mul_ln98_1_reg_4990);

assign grp_fu_4224_p0 = (p_cast15_fu_2212_p1 + mul_ln98_2_reg_4998);

assign grp_fu_4229_p0 = (zext_ln105_reg_5036 + mul_ln98_2_reg_4998);

assign grp_fu_4234_p0 = (p_cast15_fu_2212_p1 + mul_ln98_3_reg_5006);

assign grp_fu_4239_p0 = (zext_ln105_reg_5036 + mul_ln98_3_reg_5006);

assign grp_fu_4244_p0 = (p_cast15_fu_2212_p1 + mul_ln98_4_reg_5014);

assign grp_fu_4249_p0 = (zext_ln105_reg_5036 + mul_ln98_4_reg_5014);

assign grp_fu_4254_p0 = grp_fu_4254_p00;

assign grp_fu_4254_p00 = select_ln106_1_fu_2348_p3;

assign grp_fu_4254_p1 = WH_cast_reg_4861;

assign grp_fu_4254_p2 = (wi_cast_fu_2366_p1 + mul_ln98_reg_4978);

assign grp_fu_4262_p0 = zext_ln143_fu_3375_p1;

assign grp_fu_4262_p1 = WH_cast_reg_4861;

assign grp_fu_4262_p2 = grp_fu_4262_p20;

assign grp_fu_4262_p20 = select_ln143_reg_5893_pp7_iter1_reg;

assign grp_fu_4269_p0 = zext_ln143_fu_3375_p1;

assign grp_fu_4269_p1 = zext_ln117_reg_5864;

assign grp_fu_4269_p2 = trunc_ln3_cast40_reg_4649;

assign grp_fu_4269_p3 = zext_ln119_reg_5869;

assign grp_fu_4277_p1 = p_cast63_reg_5959;

assign grp_fu_4277_p2 = ((tmp_20_reg_6061_pp8_iter2_reg[0:0] === 1'b1) ? 32'd0 : output_l1_3_q1);

assign grp_fu_4285_p1 = p_cast69_reg_5979;

assign grp_fu_4285_p2 = ((tmp_19_reg_6055_pp8_iter2_reg[0:0] === 1'b1) ? 32'd0 : output_l1_2_q1);

assign grp_fu_4293_p1 = p_cast75_reg_5999;

assign grp_fu_4293_p2 = ((icmp_ln173_reg_6049_pp8_iter2_reg[0:0] === 1'b1) ? output_l1_1_q1 : 32'd0);

assign grp_fu_4301_p1 = sext_ln164_reg_6019;

assign grp_fu_4309_p1 = p_cast61_reg_5954;

assign grp_fu_4317_p1 = p_cast67_reg_5974;

assign grp_fu_4325_p1 = p_cast73_reg_5994;

assign grp_fu_4333_p1 = p_cast79_reg_6014;

assign grp_fu_4341_p1 = p_cast59_reg_5949;

assign grp_fu_4349_p1 = p_cast65_reg_5969;

assign grp_fu_4357_p1 = p_cast71_reg_5989;

assign grp_fu_4365_p1 = p_cast77_reg_6009;

assign grp_fu_4373_p0 = p_cast46_reg_5944;

assign grp_fu_4382_p0 = p_cast48_reg_5964;

assign grp_fu_4391_p0 = p_cast50_reg_5984;

assign grp_fu_4400_p0 = p_cast52_reg_6004;

assign grp_fu_4409_p0 = grp_fu_4409_p00;

assign grp_fu_4409_p00 = select_ln308_1_fu_4033_p3;

assign grp_fu_4409_p2 = select_ln309_fu_4099_p3[8:0];

assign icmp_ln105_fu_2164_p2 = ((ki_1_reg_1449 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_2318_p2 = ((indvar_flatten_reg_1460 == mul163_reg_4821) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_2329_p2 = ((wi_reg_1482 == WH_reg_4520) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_2389_p2 = ((indvar_flatten73_reg_1493 == tmp1_reg_4596) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_2400_p2 = ((s_reg_1515 == RS_reg_4561) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_3337_p2 = ((indvar_flatten15_reg_1526 == mul163_reg_4821) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_3348_p2 = ((wi_1_reg_1548 == WH_reg_4520) ? 1'b1 : 1'b0);

assign icmp_ln164_fu_3464_p2 = ((i_reg_1559 == input_rows_reg_4838) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_3488_p2 = ((i_reg_1559 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln285_1_fu_3539_p2 = ((add_ln285_1_fu_3533_p2 < mul163_cast53_reg_4830) ? 1'b1 : 1'b0);

assign icmp_ln285_2_fu_3550_p2 = ((add_ln285_2_fu_3544_p2 < mul163_cast53_reg_4830) ? 1'b1 : 1'b0);

assign icmp_ln285_3_fu_3555_p2 = ((add_ln171_2_fu_3508_p2 < mul163_cast53_reg_4830) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_3528_p2 = ((add_ln285_fu_3522_p2 < mul163_cast53_reg_4830) ? 1'b1 : 1'b0);

assign icmp_ln308_fu_4011_p2 = ((indvar_flatten128_reg_1570 == bound116_reg_6303) ? 1'b1 : 1'b0);

assign icmp_ln309_fu_4022_p2 = ((indvar_flatten111_reg_1592 == bound109_reg_6298) ? 1'b1 : 1'b0);

assign icmp_ln310_1_fu_4077_p2 = ((wh_3_reg_1614 == mul163_reg_4821) ? 1'b1 : 1'b0);

assign icmp_ln310_fu_4006_p2 = ((mul163_reg_4821 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1700_p2 = ((k_reg_1339 == K_reg_4502) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1756_p2 = ((k_1_reg_1350 == mul42_reg_4607) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_1822_p2 = ((co_reg_1361 == trunc_ln1_reg_4642) ? 1'b1 : 1'b0);

assign icmp_ln90_1_fu_1932_p2 = ((wh_1_reg_1383 == mul56_reg_4630) ? 1'b1 : 1'b0);

assign icmp_ln90_2_fu_1961_p2 = ((wh_2_reg_1394 == mul56_reg_4630) ? 1'b1 : 1'b0);

assign icmp_ln90_3_fu_1990_p2 = ((wh_4_reg_1405 == mul56_reg_4630) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_1903_p2 = ((wh_reg_1372 == mul56_reg_4630) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_2019_p2 = ((indvar_flatten104_reg_1416 == bound78_reg_4887) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_2030_p2 = ((co_1_reg_1438 == trunc_ln1_reg_4642) ? 1'b1 : 1'b0);

assign input_rows_fu_1859_p2 = (tmp2_cast_fu_1855_p1 + mul163_fu_1842_p2);

assign lshr_ln133_1_fu_2630_p4 = {{add_ln134_1_fu_2618_p2[10:2]}};

assign lshr_ln2_fu_2600_p4 = {{add_ln134_fu_2588_p2[10:2]}};

assign mul163_cast53_fu_1846_p1 = mul163_fu_1842_p2;

assign mul163_fu_1842_p0 = zext_ln62_reg_4549;

assign mul163_fu_1842_p1 = zext_ln62_reg_4549;

assign mul56_fu_1796_p0 = zext_ln69_reg_4555;

assign mul56_fu_1796_p1 = zext_ln69_reg_4555;

assign mul_ln117_1_fu_2431_p0 = mul_ln117_1_fu_2431_p00;

assign mul_ln117_1_fu_2431_p00 = select_ln117_1_fu_2419_p3;

assign mul_ln117_1_fu_2431_p1 = trunc_ln4_cast18_reg_4843;

assign mul_ln117_fu_2384_p0 = mul_ln117_fu_2384_p00;

assign mul_ln117_fu_2384_p00 = select_ln98_reg_4962;

assign mul_ln90_fu_1837_p0 = mul_ln90_fu_1837_p00;

assign mul_ln90_fu_1837_p00 = co_reg_1361;

assign mul_ln98_1_fu_2078_p0 = C_cast_reg_4853;

assign mul_ln98_1_fu_2078_p1 = mul_ln98_1_fu_2078_p10;

assign mul_ln98_1_fu_2078_p10 = p_mid_fu_2057_p3;

assign mul_ln98_2_fu_2093_p0 = C_cast_reg_4853;

assign mul_ln98_2_fu_2093_p1 = mul_ln98_2_fu_2093_p10;

assign mul_ln98_2_fu_2093_p10 = or_ln98_fu_2083_p2;

assign mul_ln98_3_fu_2108_p0 = C_cast_reg_4853;

assign mul_ln98_3_fu_2108_p1 = mul_ln98_3_fu_2108_p10;

assign mul_ln98_3_fu_2108_p10 = or_ln98_1_fu_2098_p2;

assign mul_ln98_4_fu_2123_p0 = C_cast_reg_4853;

assign mul_ln98_4_fu_2123_p1 = mul_ln98_4_fu_2123_p10;

assign mul_ln98_4_fu_2123_p10 = or_ln98_2_fu_2113_p2;

assign mul_ln98_fu_2069_p1 = mul_ln98_fu_2069_p10;

assign mul_ln98_fu_2069_p10 = select_ln98_1_fu_2049_p3;

assign newIndex66_cast_fu_2199_p1 = newIndex_fu_2189_p4;

assign newIndex_fu_2189_p4 = {{empty_46_fu_2184_p2[7:2]}};

assign or_ln309_fu_4094_p2 = (select_ln308_3_fu_4082_p3 | icmp_ln309_reg_6322_pp9_iter1_reg);

assign or_ln98_1_fu_2098_p2 = (p_mid_fu_2057_p3 | 8'd2);

assign or_ln98_2_fu_2113_p2 = (p_mid_fu_2057_p3 | 8'd3);

assign or_ln98_fu_2083_p2 = (p_mid_fu_2057_p3 | 8'd1);

assign p_cast12_fu_2136_p1 = tmp_18_fu_2128_p3;

assign p_cast13_fu_2221_p1 = empty_49_fu_2216_p2;

assign p_cast15_fu_2212_p1 = empty_48_fu_2207_p2;

assign p_cast46_fu_3416_p1 = $signed(tmp_17_reg_5879);

assign p_cast48_fu_3428_p1 = $signed(tmp_13_reg_5769);

assign p_cast50_fu_3440_p1 = $signed(tmp_s_reg_5669);

assign p_cast52_fu_3452_p1 = $signed(tmp_6_reg_5569);

assign p_cast59_fu_3419_p1 = $signed(tmp_16_reg_5874);

assign p_cast61_fu_3422_p1 = $signed(tmp_15_reg_5819);

assign p_cast63_fu_3425_p1 = $signed(tmp_14_reg_5814);

assign p_cast65_fu_3431_p1 = $signed(tmp_12_reg_5764);

assign p_cast67_fu_3434_p1 = $signed(tmp_11_reg_5719);

assign p_cast69_fu_3437_p1 = $signed(tmp_10_reg_5714);

assign p_cast71_fu_3443_p1 = $signed(tmp_9_reg_5664);

assign p_cast73_fu_3446_p1 = $signed(tmp_8_reg_5619);

assign p_cast75_fu_3449_p1 = $signed(tmp_7_reg_5614);

assign p_cast77_fu_3455_p1 = $signed(tmp_5_reg_5564);

assign p_cast79_fu_3458_p1 = $signed(tmp_4_reg_5519);

assign p_cast84_fu_3401_p1 = empty_51_fu_3396_p2;

assign p_mid_fu_2057_p3 = {{select_ln98_1_fu_2049_p3}, {2'd0}};

assign select_ln106_1_fu_2348_p3 = ((icmp_ln107_fu_2329_p2[0:0] === 1'b1) ? add_ln106_1_fu_2342_p2 : ap_phi_mux_hi_phi_fu_1475_p4);

assign select_ln106_fu_2334_p3 = ((icmp_ln107_fu_2329_p2[0:0] === 1'b1) ? 8'd0 : wi_reg_1482);

assign select_ln117_1_fu_2419_p3 = ((icmp_ln119_fu_2400_p2[0:0] === 1'b1) ? add_ln117_17_fu_2413_p2 : r_reg_1504);

assign select_ln117_fu_2405_p3 = ((icmp_ln119_fu_2400_p2[0:0] === 1'b1) ? 8'd0 : s_reg_1515);

assign select_ln143_1_fu_3367_p3 = ((icmp_ln144_fu_3348_p2[0:0] === 1'b1) ? add_ln143_3_fu_3361_p2 : ap_phi_mux_hi_1_phi_fu_1541_p4);

assign select_ln143_fu_3353_p3 = ((icmp_ln144_fu_3348_p2[0:0] === 1'b1) ? 8'd0 : wi_1_reg_1548);

assign select_ln173_1_fu_3716_p3 = ((tmp_19_reg_6055_pp8_iter2_reg[0:0] === 1'b1) ? 8'd0 : data_l1_2_0_q0);

assign select_ln173_2_fu_3791_p3 = ((tmp_20_reg_6061_pp8_iter3_reg[0:0] === 1'b1) ? 8'd0 : data_l1_3_0_q0);

assign select_ln173_fu_3616_p3 = ((icmp_ln173_reg_6049_pp8_iter1_reg[0:0] === 1'b1) ? data_l1_1_0_q0 : 8'd0);

assign select_ln308_1_fu_4033_p3 = ((icmp_ln309_fu_4022_p2[0:0] === 1'b1) ? add_ln308_1_fu_4027_p2 : ap_phi_mux_k_2_phi_fu_1585_p4);

assign select_ln308_2_fu_4070_p3 = ((icmp_ln309_reg_6322_pp9_iter1_reg[0:0] === 1'b1) ? 2'd0 : trunc_ln311_fu_4066_p1);

assign select_ln308_3_fu_4082_p3 = ((icmp_ln309_reg_6322_pp9_iter1_reg[0:0] === 1'b1) ? icmp_ln310_reg_6308 : icmp_ln310_1_fu_4077_p2);

assign select_ln308_fu_4059_p3 = ((icmp_ln309_reg_6322_pp9_iter1_reg[0:0] === 1'b1) ? 3'd0 : ki_reg_1603);

assign select_ln309_1_fu_4111_p3 = ((select_ln308_3_fu_4082_p3[0:0] === 1'b1) ? trunc_ln311_1_fu_4107_p1 : select_ln308_2_fu_4070_p3);

assign select_ln309_2_fu_4119_p3 = ((select_ln308_3_fu_4082_p3[0:0] === 1'b1) ? add_ln309_fu_4088_p2 : select_ln308_fu_4059_p3);

assign select_ln309_3_fu_4051_p3 = ((icmp_ln309_fu_4022_p2[0:0] === 1'b1) ? 19'd1 : add_ln309_1_fu_4045_p2);

assign select_ln309_fu_4099_p3 = ((or_ln309_fu_4094_p2[0:0] === 1'b1) ? 16'd0 : wh_3_reg_1614);

assign select_ln98_1_fu_2049_p3 = ((icmp_ln99_fu_2030_p2[0:0] === 1'b1) ? add_ln98_1_fu_2043_p2 : ko_reg_1427);

assign select_ln98_fu_2035_p3 = ((icmp_ln99_fu_2030_p2[0:0] === 1'b1) ? 6'd0 : co_1_reg_1438);

assign sext_ln164_fu_3461_p1 = $signed(tmp_3_reg_5514);

assign tmp1_fu_1748_p0 = zext_ln74_reg_4567;

assign tmp1_fu_1748_p1 = zext_ln74_reg_4567;

assign tmp2_cast_fu_1855_p1 = tmp2_fu_1850_p2;

assign tmp2_fu_1850_p2 = (9'd6 + zext_ln59_reg_4539);

assign tmp6_fu_3391_p2 = (wi_1_cast_fu_3388_p1 + mul_ln117_reg_5294);

assign tmp_10_fu_3156_p5 = add_ln133_8_reg_5429;

assign tmp_11_fu_3173_p5 = add_ln133_9_reg_5439;

assign tmp_12_fu_3204_p5 = add_ln133_10_reg_5449;

assign tmp_13_fu_3221_p5 = add_ln133_11_reg_5459;

assign tmp_14_fu_3252_p5 = add_ln133_12_reg_5469;

assign tmp_15_fu_3269_p5 = add_ln133_13_reg_5479;

assign tmp_16_fu_3306_p5 = add_ln133_14_reg_5489;

assign tmp_17_fu_3323_p5 = add_ln133_15_reg_5499;

assign tmp_18_fu_2128_p3 = {{select_ln98_fu_2035_p3}, {2'd0}};

assign tmp_1_fu_2300_p5 = empty_45_reg_5067;

assign tmp_2_fu_2150_p3 = {{mul163_reg_4821}, {2'd0}};

assign tmp_3_fu_2964_p5 = add_ln133_reg_5319;

assign tmp_4_fu_2981_p5 = add_ln133_1_reg_5344;

assign tmp_5_fu_3012_p5 = add_ln133_2_reg_5369;

assign tmp_6_fu_3029_p5 = add_ln133_3_reg_5379;

assign tmp_7_fu_3060_p5 = add_ln133_4_reg_5389;

assign tmp_8_fu_3077_p5 = add_ln133_5_reg_5399;

assign tmp_9_fu_3108_p5 = add_ln133_6_reg_5409;

assign tmp_fu_1740_p0 = zext_ln59_1_reg_4544;

assign tmp_fu_1740_p1 = zext_ln56_reg_4534;

assign tmp_s_fu_3125_p5 = add_ln133_7_reg_5419;

assign trunc_ln117_10_fu_2531_p1 = add_ln117_11_fu_2526_p2[1:0];

assign trunc_ln117_11_fu_2540_p1 = add_ln117_12_fu_2535_p2[1:0];

assign trunc_ln117_12_fu_2549_p1 = add_ln117_13_fu_2544_p2[1:0];

assign trunc_ln117_13_fu_2558_p1 = add_ln117_14_fu_2553_p2[1:0];

assign trunc_ln117_14_fu_2567_p1 = add_ln117_15_fu_2562_p2[1:0];

assign trunc_ln117_15_fu_2576_p1 = add_ln117_16_fu_2571_p2[1:0];

assign trunc_ln117_1_fu_2450_p1 = add_ln117_2_fu_2445_p2[1:0];

assign trunc_ln117_2_fu_2459_p1 = add_ln117_3_fu_2454_p2[1:0];

assign trunc_ln117_3_fu_2468_p1 = add_ln117_4_fu_2463_p2[1:0];

assign trunc_ln117_4_fu_2477_p1 = add_ln117_5_fu_2472_p2[1:0];

assign trunc_ln117_5_fu_2486_p1 = add_ln117_6_fu_2481_p2[1:0];

assign trunc_ln117_6_fu_2495_p1 = add_ln117_7_fu_2490_p2[1:0];

assign trunc_ln117_7_fu_2504_p1 = add_ln117_8_fu_2499_p2[1:0];

assign trunc_ln117_8_fu_2513_p1 = add_ln117_9_fu_2508_p2[1:0];

assign trunc_ln117_9_fu_2522_p1 = add_ln117_10_fu_2517_p2[1:0];

assign trunc_ln117_fu_2441_p1 = add_ln117_1_fu_2436_p2[1:0];

assign trunc_ln134_fu_2584_p1 = select_ln117_fu_2405_p3[1:0];

assign trunc_ln174_fu_3479_p1 = i_reg_1559[8:0];

assign trunc_ln311_1_fu_4107_p1 = add_ln309_fu_4088_p2[1:0];

assign trunc_ln311_fu_4066_p1 = ki_reg_1603[1:0];

assign trunc_ln3_cast40_fu_1815_p1 = WH_in_reg_4528;

assign trunc_ln4_cast18_fu_1865_p1 = RS_reg_4561;

assign trunc_ln708_1_fu_1781_p1 = weight_in_V_dout[7:0];

assign trunc_ln708_fu_1725_p1 = bias_in_V_dout[7:0];

assign trunc_ln80_fu_1711_p1 = k_reg_1339[1:0];

assign trunc_ln84_fu_1767_p1 = k_1_reg_1350[1:0];

assign wi_1_cast_fu_3388_p1 = select_ln143_reg_5893_pp7_iter2_reg;

assign wi_cast_fu_2366_p1 = select_ln106_reg_5189_pp6_iter1_reg;

assign zext_ln105_1_fu_2176_p1 = ki_1_reg_1449;

assign zext_ln105_fu_2146_p1 = empty_56_fu_2140_p2;

assign zext_ln110_fu_2374_p1 = grp_fu_4254_p3;

assign zext_ln117_fu_3297_p1 = select_ln117_1_reg_5313;

assign zext_ln119_1_fu_2580_p1 = select_ln117_fu_2405_p3;

assign zext_ln119_fu_3300_p1 = select_ln117_reg_5307;

assign zext_ln133_16_fu_2610_p1 = lshr_ln2_fu_2600_p4;

assign zext_ln133_17_fu_2640_p1 = lshr_ln133_1_fu_2630_p4;

assign zext_ln133_18_fu_2995_p1 = lshr_ln133_2_reg_5374;

assign zext_ln133_19_fu_3002_p1 = lshr_ln133_3_reg_5384;

assign zext_ln133_20_fu_3043_p1 = lshr_ln133_4_reg_5394;

assign zext_ln133_21_fu_3050_p1 = lshr_ln133_5_reg_5404;

assign zext_ln133_22_fu_3091_p1 = lshr_ln133_6_reg_5414;

assign zext_ln133_23_fu_3098_p1 = lshr_ln133_7_reg_5424;

assign zext_ln133_24_fu_3139_p1 = lshr_ln133_8_reg_5434;

assign zext_ln133_25_fu_3146_p1 = lshr_ln133_9_reg_5444;

assign zext_ln133_26_fu_3187_p1 = lshr_ln133_s_reg_5454;

assign zext_ln133_27_fu_3194_p1 = lshr_ln133_10_reg_5464;

assign zext_ln133_28_fu_3235_p1 = lshr_ln133_11_reg_5474;

assign zext_ln133_29_fu_3242_p1 = lshr_ln133_12_reg_5484;

assign zext_ln133_30_fu_3283_p1 = lshr_ln133_13_reg_5494;

assign zext_ln133_31_fu_3290_p1 = lshr_ln133_14_reg_5504;

assign zext_ln143_fu_3375_p1 = select_ln143_1_fu_3367_p3;

assign zext_ln153_fu_3409_p1 = empty_52_reg_5919;

assign zext_ln164_fu_3475_p1 = i_reg_1559;

assign zext_ln174_1_fu_3571_p1 = add_ln171_fu_3566_p2;

assign zext_ln174_2_fu_3628_p1 = add_ln171_3_fu_3623_p2;

assign zext_ln174_3_fu_3723_p1 = add_ln173_reg_6118;

assign zext_ln174_fu_3483_p1 = i_reg_1559;

assign zext_ln183_1_fu_3653_p1 = add_ln183_1_fu_3648_p2;

assign zext_ln183_2_fu_3662_p1 = add_ln183_2_fu_3658_p2;

assign zext_ln183_3_fu_3671_p1 = add_ln183_3_fu_3667_p2;

assign zext_ln183_fu_3643_p1 = add_ln183_fu_3638_p2;

assign zext_ln292_1_fu_3918_p1 = add_ln293_1_fu_3913_p2;

assign zext_ln292_2_fu_3933_p1 = add_ln293_2_fu_3928_p2;

assign zext_ln292_fu_3903_p1 = add_ln293_fu_3898_p2;

assign zext_ln311_fu_4137_p1 = $unsigned(grp_fu_4409_p3);

assign zext_ln56_fu_1677_p1 = K_reg_4502;

assign zext_ln59_1_fu_1683_p1 = C_reg_4513;

assign zext_ln59_fu_1680_p1 = C_reg_4513;

assign zext_ln62_fu_1686_p1 = WH_reg_4520;

assign zext_ln69_fu_1689_p1 = WH_in_reg_4528;

assign zext_ln74_fu_1696_p1 = RS_fu_1692_p1;

assign zext_ln80_fu_1733_p1 = lshr_ln_reg_4586;

assign zext_ln84_fu_1789_p1 = lshr_ln1_reg_4625;

assign zext_ln93_1_fu_1956_p1 = add_ln93_1_fu_1952_p2;

assign zext_ln93_2_fu_1985_p1 = add_ln93_2_fu_1981_p2;

assign zext_ln93_3_fu_2015_p1 = add_ln93_3_reg_4949;

assign zext_ln93_fu_1927_p1 = add_ln93_fu_1923_p2;

always @ (posedge ap_clk) begin
    zext_ln56_reg_4534[15:8] <= 8'b00000000;
    zext_ln59_reg_4539[8] <= 1'b0;
    zext_ln59_1_reg_4544[15:8] <= 8'b00000000;
    zext_ln62_reg_4549[15:8] <= 8'b00000000;
    zext_ln69_reg_4555[15:8] <= 8'b00000000;
    zext_ln74_reg_4567[15:8] <= 8'b00000000;
    trunc_ln3_cast40_reg_4649[9:8] <= 2'b00;
    mul163_cast53_reg_4830[16] <= 1'b0;
    trunc_ln4_cast18_reg_4843[10:8] <= 3'b000;
    C_cast_reg_4853[10:8] <= 3'b000;
    WH_cast_reg_4861[8] <= 1'b0;
    p_mid_reg_4973[1:0] <= 2'b00;
    tmp_18_reg_5022[1:0] <= 2'b00;
    p_cast12_reg_5028[1:0] <= 2'b00;
    p_cast12_reg_5028[10:8] <= 3'b000;
    zext_ln105_reg_5036[1:0] <= 2'b11;
    zext_ln105_reg_5036[10:8] <= 3'b000;
    tmp_2_reg_5044[1:0] <= 2'b00;
    zext_ln117_reg_5864[8] <= 1'b0;
    zext_ln119_reg_5869[9:8] <= 2'b00;
    zext_ln183_reg_6123[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln183_reg_6123_pp8_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln183_reg_6123_pp8_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln183_reg_6123_pp8_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln183_reg_6123_pp8_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    bound109_reg_6298[1:0] <= 2'b00;
    bound109_reg_6298[18] <= 1'b0;
end

endmodule //Conv_sysarr_dbbuf
