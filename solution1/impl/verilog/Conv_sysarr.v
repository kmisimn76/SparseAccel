// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_Conv_sysarr,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.584000,HLS_SYN_LAT=26898,HLS_SYN_TPT=none,HLS_SYN_MEM=44,HLS_SYN_DSP=0,HLS_SYN_FF=11266,HLS_SYN_LUT=11390,HLS_VERSION=2020_1}" *)

module Conv_sysarr (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        param,
        bias_in,
        weight_in,
        data_in,
        conv_out_i,
        conv_out_o,
        conv_out_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1183:0] param;
input  [7:0] bias_in;
input  [7:0] weight_in;
input  [7:0] data_in;
input  [31:0] conv_out_i;
output  [31:0] conv_out_o;
output   conv_out_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] conv_out_o;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] param_L2_TILENUM_S_reg_195;
reg   [31:0] trunc_ln_reg_200;
reg   [31:0] trunc_ln334_4_reg_205;
reg   [31:0] trunc_ln334_5_reg_210;
reg   [31:0] trunc_ln334_6_reg_215;
reg   [31:0] trunc_ln334_7_reg_220;
wire   [31:0] grp_dataflow_parent_loop_proc24_fu_82_conv_out_o;
wire    grp_dataflow_parent_loop_proc24_fu_82_conv_out_o_ap_vld;
wire    grp_dataflow_parent_loop_proc24_fu_82_ap_start;
wire    grp_dataflow_parent_loop_proc24_fu_82_ap_done;
wire    grp_dataflow_parent_loop_proc24_fu_82_ap_ready;
wire    grp_dataflow_parent_loop_proc24_fu_82_ap_idle;
reg    grp_dataflow_parent_loop_proc24_fu_82_ap_continue;
reg    grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_ready;
wire    ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_done;
reg    ap_block_state2_on_subcall_done;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done = 1'b0;
end

Conv_sysarr_dataflow_parent_loop_proc24 grp_dataflow_parent_loop_proc24_fu_82(
    .lshr_ln334_8_cast(trunc_ln334_7_reg_220),
    .lshr_ln334_7_cast(trunc_ln334_6_reg_215),
    .lshr_ln334_6_cast(trunc_ln334_5_reg_210),
    .lshr_ln334_5_cast(trunc_ln334_4_reg_205),
    .lshr_ln334_4_cast(trunc_ln_reg_200),
    .param_L2_TILENUM_S(param_L2_TILENUM_S_reg_195),
    .conv_out_i(conv_out_i),
    .conv_out_o(grp_dataflow_parent_loop_proc24_fu_82_conv_out_o),
    .bias_in(bias_in),
    .weight_in(weight_in),
    .data_in(data_in),
    .param(param),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .lshr_ln334_7_cast_ap_vld(1'b1),
    .lshr_ln334_6_cast_ap_vld(1'b1),
    .lshr_ln334_5_cast_ap_vld(1'b1),
    .lshr_ln334_4_cast_ap_vld(1'b1),
    .param_L2_TILENUM_S_ap_vld(1'b1),
    .conv_out_i_ap_vld(1'b1),
    .conv_out_o_ap_vld(grp_dataflow_parent_loop_proc24_fu_82_conv_out_o_ap_vld),
    .bias_in_ap_vld(1'b1),
    .weight_in_ap_vld(1'b1),
    .data_in_ap_vld(1'b1),
    .param_ap_vld(1'b1),
    .ap_start(grp_dataflow_parent_loop_proc24_fu_82_ap_start),
    .ap_done(grp_dataflow_parent_loop_proc24_fu_82_ap_done),
    .ap_ready(grp_dataflow_parent_loop_proc24_fu_82_ap_ready),
    .ap_idle(grp_dataflow_parent_loop_proc24_fu_82_ap_idle),
    .ap_continue(grp_dataflow_parent_loop_proc24_fu_82_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc24_fu_82_ap_done == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc24_fu_82_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg <= 1'b1;
        end else if ((grp_dataflow_parent_loop_proc24_fu_82_ap_ready == 1'b1)) begin
            grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        param_L2_TILENUM_S_reg_195 <= {{param[351:320]}};
        trunc_ln334_4_reg_205 <= {{param[255:224]}};
        trunc_ln334_5_reg_210 <= {{param[287:256]}};
        trunc_ln334_6_reg_215 <= {{param[223:192]}};
        trunc_ln334_7_reg_220 <= {{param[191:160]}};
        trunc_ln_reg_200 <= {{param[319:288]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_dataflow_parent_loop_proc24_fu_82_conv_out_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        conv_out_o = grp_dataflow_parent_loop_proc24_fu_82_conv_out_o;
    end else begin
        conv_out_o = conv_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        grp_dataflow_parent_loop_proc24_fu_82_ap_continue = 1'b1;
    end else begin
        grp_dataflow_parent_loop_proc24_fu_82_ap_continue = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_ready & ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_done) == 1'b0);
end

assign ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_done = (grp_dataflow_parent_loop_proc24_fu_82_ap_done | ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_done);

assign ap_sync_grp_dataflow_parent_loop_proc24_fu_82_ap_ready = (grp_dataflow_parent_loop_proc24_fu_82_ap_ready | ap_sync_reg_grp_dataflow_parent_loop_proc24_fu_82_ap_ready);

assign conv_out_o_ap_vld = grp_dataflow_parent_loop_proc24_fu_82_conv_out_o_ap_vld;

assign grp_dataflow_parent_loop_proc24_fu_82_ap_start = grp_dataflow_parent_loop_proc24_fu_82_ap_start_reg;

endmodule //Conv_sysarr
