// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_Conv_sysarr,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.340000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=36,HLS_SYN_DSP=0,HLS_SYN_FF=9327,HLS_SYN_LUT=10209,HLS_VERSION=2020_1}" *)

module Conv_sysarr (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        param_in_V_dout,
        param_in_V_empty_n,
        param_in_V_read,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 54'd1;
parameter    ap_ST_fsm_state2 = 54'd2;
parameter    ap_ST_fsm_state3 = 54'd4;
parameter    ap_ST_fsm_state4 = 54'd8;
parameter    ap_ST_fsm_state5 = 54'd16;
parameter    ap_ST_fsm_state6 = 54'd32;
parameter    ap_ST_fsm_state7 = 54'd64;
parameter    ap_ST_fsm_state8 = 54'd128;
parameter    ap_ST_fsm_state9 = 54'd256;
parameter    ap_ST_fsm_state10 = 54'd512;
parameter    ap_ST_fsm_state11 = 54'd1024;
parameter    ap_ST_fsm_state12 = 54'd2048;
parameter    ap_ST_fsm_state13 = 54'd4096;
parameter    ap_ST_fsm_state14 = 54'd8192;
parameter    ap_ST_fsm_state15 = 54'd16384;
parameter    ap_ST_fsm_state16 = 54'd32768;
parameter    ap_ST_fsm_state17 = 54'd65536;
parameter    ap_ST_fsm_state18 = 54'd131072;
parameter    ap_ST_fsm_state19 = 54'd262144;
parameter    ap_ST_fsm_state20 = 54'd524288;
parameter    ap_ST_fsm_state21 = 54'd1048576;
parameter    ap_ST_fsm_state22 = 54'd2097152;
parameter    ap_ST_fsm_state23 = 54'd4194304;
parameter    ap_ST_fsm_state24 = 54'd8388608;
parameter    ap_ST_fsm_state25 = 54'd16777216;
parameter    ap_ST_fsm_state26 = 54'd33554432;
parameter    ap_ST_fsm_state27 = 54'd67108864;
parameter    ap_ST_fsm_state28 = 54'd134217728;
parameter    ap_ST_fsm_state29 = 54'd268435456;
parameter    ap_ST_fsm_state30 = 54'd536870912;
parameter    ap_ST_fsm_state31 = 54'd1073741824;
parameter    ap_ST_fsm_state32 = 54'd2147483648;
parameter    ap_ST_fsm_state33 = 54'd4294967296;
parameter    ap_ST_fsm_state34 = 54'd8589934592;
parameter    ap_ST_fsm_state35 = 54'd17179869184;
parameter    ap_ST_fsm_state36 = 54'd34359738368;
parameter    ap_ST_fsm_state37 = 54'd68719476736;
parameter    ap_ST_fsm_state38 = 54'd137438953472;
parameter    ap_ST_fsm_state39 = 54'd274877906944;
parameter    ap_ST_fsm_state40 = 54'd549755813888;
parameter    ap_ST_fsm_state41 = 54'd1099511627776;
parameter    ap_ST_fsm_state42 = 54'd2199023255552;
parameter    ap_ST_fsm_state43 = 54'd4398046511104;
parameter    ap_ST_fsm_state44 = 54'd8796093022208;
parameter    ap_ST_fsm_pp0_stage0 = 54'd17592186044416;
parameter    ap_ST_fsm_state47 = 54'd35184372088832;
parameter    ap_ST_fsm_state48 = 54'd70368744177664;
parameter    ap_ST_fsm_pp1_stage0 = 54'd140737488355328;
parameter    ap_ST_fsm_state53 = 54'd281474976710656;
parameter    ap_ST_fsm_pp2_stage0 = 54'd562949953421312;
parameter    ap_ST_fsm_state58 = 54'd1125899906842624;
parameter    ap_ST_fsm_state59 = 54'd2251799813685248;
parameter    ap_ST_fsm_pp3_stage0 = 54'd4503599627370496;
parameter    ap_ST_fsm_state65 = 54'd9007199254740992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [255:0] param_in_V_dout;
input   param_in_V_empty_n;
output   param_in_V_read;
input  [255:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [255:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [255:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [255:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg param_in_V_read;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    param_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln212_reg_1216;
reg    weight_in_V_blk_n;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln221_reg_1245;
reg   [0:0] icmp_ln221_reg_1245_pp1_iter2_reg;
reg    data_in_V_blk_n;
reg    ap_enable_reg_pp2_iter3;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln234_reg_1290;
reg   [0:0] icmp_ln234_reg_1290_pp2_iter2_reg;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp3_iter4;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln290_reg_1339;
reg   [0:0] icmp_ln290_reg_1339_pp3_iter3_reg;
reg   [29:0] ko_reg_419;
reg   [61:0] indvar_flatten_reg_431;
reg   [31:0] crs_reg_442;
reg   [29:0] ko_1_reg_453;
reg   [61:0] indvar_flatten6_reg_464;
reg   [31:0] wh_reg_475;
reg   [29:0] co_reg_486;
reg   [61:0] indvar_flatten13_reg_497;
reg   [29:0] ko_2_reg_508;
reg   [31:0] wh_1_reg_519;
reg   [29:0] div55_cast_reg_1111;
reg    ap_block_state1;
reg   [255:0] param_in_V_read_1_reg_1120;
wire  signed [31:0] C_fu_578_p1;
reg  signed [31:0] C_reg_1125;
wire   [8:0] trunc_ln185_fu_582_p1;
reg   [8:0] trunc_ln185_reg_1130;
reg   [255:0] param_in_V_read_2_reg_1135;
wire  signed [31:0] WH_fu_586_p1;
reg  signed [31:0] WH_reg_1140;
reg   [255:0] param_in_V_read_3_reg_1148;
wire  signed [31:0] WH_in_fu_590_p1;
reg  signed [31:0] WH_in_reg_1153;
wire  signed [31:0] RS_fu_594_p1;
reg  signed [31:0] RS_reg_1159;
wire   [8:0] trunc_ln191_fu_598_p1;
reg   [8:0] trunc_ln191_reg_1167;
wire   [31:0] TILESIZE_W_fu_602_p1;
reg   [31:0] TILESIZE_W_reg_1172;
wire   [31:0] TILESIZE_H_fu_606_p1;
reg   [31:0] TILESIZE_H_reg_1178;
wire   [31:0] TILESIZE_R_fu_610_p1;
reg   [31:0] TILESIZE_R_reg_1184;
wire   [31:0] TILESIZE_S_fu_626_p1;
reg   [31:0] TILESIZE_S_reg_1190;
wire   [31:0] grp_fu_614_p2;
reg   [31:0] TILES_W_reg_1196;
wire    ap_CS_fsm_state44;
wire   [31:0] grp_fu_618_p2;
reg   [31:0] TILES_H_reg_1201;
wire   [31:0] grp_fu_622_p2;
reg   [31:0] TILES_R_reg_1206;
wire   [31:0] grp_fu_630_p2;
reg   [31:0] TILES_S_reg_1211;
wire   [0:0] icmp_ln212_fu_635_p2;
wire    ap_block_state45_pp0_stage0_iter0;
reg    ap_block_state46_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [29:0] add_ln212_fu_640_p2;
reg   [29:0] add_ln212_reg_1220;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] mul70_fu_696_p2;
reg   [31:0] mul70_reg_1225;
wire    ap_CS_fsm_state47;
wire  signed [8:0] trunc_ln221_fu_701_p1;
reg  signed [8:0] trunc_ln221_reg_1230;
wire   [61:0] cast1_fu_708_p1;
reg   [61:0] cast1_reg_1235;
wire    ap_CS_fsm_state48;
wire   [61:0] bound_fu_711_p2;
reg   [61:0] bound_reg_1240;
wire   [0:0] icmp_ln221_fu_717_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state49_pp1_stage0_iter0;
wire    ap_block_state50_pp1_stage0_iter1;
wire    ap_block_state51_pp1_stage0_iter2;
reg    ap_block_state52_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln221_reg_1245_pp1_iter1_reg;
wire   [61:0] add_ln221_fu_722_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] select_ln221_1_fu_747_p3;
reg   [31:0] select_ln221_1_reg_1254;
wire   [8:0] trunc_ln221_1_fu_755_p1;
reg   [8:0] trunc_ln221_1_reg_1259;
reg   [8:0] trunc_ln221_1_reg_1259_pp1_iter1_reg;
wire   [29:0] add_ln223_fu_763_p2;
wire  signed [8:0] empty_86_fu_818_p1;
reg  signed [8:0] empty_86_reg_1274;
wire    ap_CS_fsm_state53;
wire   [29:0] div101_cast_fu_822_p4;
reg   [29:0] div101_cast_reg_1279;
wire   [61:0] bound4_fu_839_p2;
reg   [61:0] bound4_reg_1285;
wire   [0:0] icmp_ln234_fu_845_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state54_pp2_stage0_iter0;
wire    ap_block_state55_pp2_stage0_iter1;
wire    ap_block_state56_pp2_stage0_iter2;
reg    ap_block_state57_pp2_stage0_iter3;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln234_reg_1290_pp2_iter1_reg;
wire   [61:0] add_ln234_fu_850_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] select_ln234_1_fu_875_p3;
reg   [31:0] select_ln234_1_reg_1299;
wire   [8:0] trunc_ln234_fu_883_p1;
reg   [8:0] trunc_ln234_reg_1304;
reg   [8:0] trunc_ln234_reg_1304_pp2_iter1_reg;
wire   [29:0] add_ln236_fu_891_p2;
wire   [8:0] empty_88_fu_942_p1;
reg   [8:0] empty_88_reg_1319;
wire    ap_CS_fsm_state58;
wire   [8:0] empty_89_fu_946_p1;
reg   [8:0] empty_89_reg_1324;
wire  signed [8:0] trunc_ln290_fu_954_p1;
reg  signed [8:0] trunc_ln290_reg_1329;
wire   [61:0] bound11_fu_962_p2;
reg   [61:0] bound11_reg_1334;
wire   [0:0] icmp_ln290_fu_967_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state60_pp3_stage0_iter0;
wire    ap_block_state61_pp3_stage0_iter1;
wire    ap_block_state62_pp3_stage0_iter2;
wire    ap_block_state63_pp3_stage0_iter3;
reg    ap_block_state64_pp3_stage0_iter4;
reg    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln290_reg_1339_pp3_iter1_reg;
reg   [0:0] icmp_ln290_reg_1339_pp3_iter2_reg;
wire   [61:0] add_ln290_fu_972_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln292_fu_978_p2;
reg   [0:0] icmp_ln292_reg_1348;
reg   [0:0] icmp_ln292_reg_1348_pp3_iter1_reg;
wire   [29:0] select_ln290_fu_983_p3;
reg   [29:0] select_ln290_reg_1353;
reg   [29:0] select_ln290_reg_1353_pp3_iter1_reg;
reg   [29:0] select_ln290_reg_1353_pp3_iter2_reg;
wire   [29:0] add_ln292_fu_995_p2;
wire   [31:0] select_ln290_1_fu_1007_p3;
reg   [31:0] select_ln290_1_reg_1368;
reg    ap_enable_reg_pp3_iter2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state45;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state49;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state54;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state59;
wire    grp_dataflow_parent_loop_proc20_fu_530_ap_ready;
wire    grp_dataflow_parent_loop_proc20_fu_530_ap_done;
wire    ap_sync_grp_dataflow_parent_loop_proc20_fu_530_ap_ready;
wire    ap_sync_grp_dataflow_parent_loop_proc20_fu_530_ap_done;
reg    ap_block_state59_on_subcall_done;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_flush_enable;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter3;
reg    ap_condition_pp3_exit_iter2_state62;
reg   [8:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_d0;
wire   [7:0] bias_l2_0_q0;
reg   [8:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_d0;
wire   [7:0] bias_l2_1_q0;
reg   [8:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_d0;
wire   [7:0] bias_l2_2_q0;
reg   [8:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_d0;
wire   [7:0] bias_l2_3_q0;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_d0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_d0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_d0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_d0;
wire   [7:0] weight_l2_3_q0;
reg   [8:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_d0;
wire   [7:0] data_l2_0_q0;
reg   [8:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_d0;
wire   [7:0] data_l2_1_q0;
reg   [8:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_d0;
wire   [7:0] data_l2_2_q0;
reg   [8:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_d0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] output_l2_0_address0;
reg    output_l2_0_ce0;
reg    output_l2_0_we0;
wire   [31:0] output_l2_0_q0;
reg   [8:0] output_l2_1_address0;
reg    output_l2_1_ce0;
reg    output_l2_1_we0;
wire   [31:0] output_l2_1_q0;
reg   [8:0] output_l2_2_address0;
reg    output_l2_2_ce0;
reg    output_l2_2_we0;
wire   [31:0] output_l2_2_q0;
reg   [8:0] output_l2_3_address0;
reg    output_l2_3_ce0;
reg    output_l2_3_we0;
wire   [31:0] output_l2_3_q0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_ce0;
wire   [31:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_ce1;
wire   [31:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_ce0;
wire   [31:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_ce1;
wire   [31:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_ce0;
wire   [31:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_ce1;
wire   [31:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_we1;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_address0;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_ce0;
wire   [31:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_d0;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_we0;
wire   [8:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_address1;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_ce1;
wire   [31:0] grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_d1;
wire    grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_we1;
wire    grp_dataflow_parent_loop_proc20_fu_530_ap_start;
wire    grp_dataflow_parent_loop_proc20_fu_530_ap_idle;
reg    grp_dataflow_parent_loop_proc20_fu_530_ap_continue;
reg   [29:0] ap_phi_mux_ko_phi_fu_423_p4;
reg   [31:0] ap_phi_mux_crs_phi_fu_446_p4;
reg   [31:0] ap_phi_mux_wh_phi_fu_479_p4;
reg   [31:0] ap_phi_mux_wh_1_phi_fu_523_p4;
reg    grp_dataflow_parent_loop_proc20_fu_530_ap_start_reg;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_ready;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_done;
wire   [63:0] ko_cast_fu_646_p1;
wire   [63:0] idxprom92_fu_769_p1;
wire   [63:0] idxprom118_fu_897_p1;
wire   [63:0] idxprom163_fu_1025_p1;
wire   [63:0] ko_4_cast128_fu_1018_p1;
reg    ap_block_pp3_stage0_01001;
wire   [31:0] grp_fu_630_p1;
wire  signed [31:0] tmp_fu_692_p2;
wire   [29:0] bound_fu_711_p0;
wire   [31:0] bound_fu_711_p1;
wire   [0:0] icmp_ln223_fu_728_p2;
wire   [31:0] add_ln221_1_fu_741_p2;
wire   [29:0] select_ln221_fu_733_p3;
wire  signed [8:0] grp_fu_1089_p3;
wire   [31:0] mul99_fu_814_p2;
wire   [29:0] bound4_fu_839_p0;
wire   [31:0] bound4_fu_839_p1;
wire   [0:0] icmp_ln236_fu_856_p2;
wire   [31:0] add_ln234_1_fu_869_p2;
wire   [29:0] select_ln234_fu_861_p3;
wire  signed [8:0] grp_fu_1096_p3;
wire   [31:0] mul152_fu_950_p2;
wire   [29:0] bound11_fu_962_p0;
wire   [31:0] bound11_fu_962_p1;
wire   [31:0] add_ln290_1_fu_1001_p2;
wire  signed [8:0] grp_fu_1103_p3;
wire  signed [31:0] sext_ln298_fu_1032_p1;
wire  signed [31:0] sext_ln298_1_fu_1042_p1;
wire  signed [31:0] sext_ln298_2_fu_1052_p1;
wire  signed [31:0] sext_ln298_3_fu_1062_p1;
wire   [31:0] add_ln298_3_fu_1066_p2;
wire   [31:0] add_ln298_2_fu_1056_p2;
wire   [31:0] add_ln298_1_fu_1046_p2;
wire   [31:0] add_ln298_fu_1036_p2;
wire   [127:0] p_Result_12_3_fu_1072_p5;
wire  signed [8:0] grp_fu_1089_p0;
wire  signed [8:0] grp_fu_1096_p0;
wire  signed [8:0] grp_fu_1103_p0;
wire   [8:0] grp_fu_1103_p2;
reg    grp_fu_614_ap_start;
wire    grp_fu_614_ap_done;
reg    grp_fu_614_ce;
wire    ap_CS_fsm_state65;
reg    grp_fu_618_ap_start;
wire    grp_fu_618_ap_done;
reg    grp_fu_618_ce;
reg    grp_fu_622_ap_start;
wire    grp_fu_622_ap_done;
reg    grp_fu_622_ce;
reg    grp_fu_630_ap_start;
wire    grp_fu_630_ap_done;
reg    grp_fu_630_ce;
reg    grp_fu_1089_ce;
reg    grp_fu_1096_ce;
reg    grp_fu_1103_ce;
reg   [53:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [61:0] bound11_fu_962_p10;
wire   [61:0] bound4_fu_839_p00;
wire   [61:0] bound4_fu_839_p10;
wire   [61:0] bound_fu_711_p00;
wire   [61:0] bound_fu_711_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 grp_dataflow_parent_loop_proc20_fu_530_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_ready = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_done = 1'b0;
end

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(bias_l2_0_d0),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(bias_l2_1_d0),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(bias_l2_2_d0),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(bias_l2_3_d0),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(weight_l2_0_d0),
    .q0(weight_l2_0_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(weight_l2_1_d0),
    .q0(weight_l2_1_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(weight_l2_2_d0),
    .q0(weight_l2_2_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(weight_l2_3_d0),
    .q0(weight_l2_3_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(data_l2_0_d0),
    .q0(data_l2_0_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(data_l2_1_d0),
    .q0(data_l2_1_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(data_l2_2_d0),
    .q0(data_l2_2_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(data_l2_3_d0),
    .q0(data_l2_3_q0)
);

Conv_sysarr_output_l2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l2_0_address0),
    .ce0(output_l2_0_ce0),
    .we0(output_l2_0_we0),
    .d0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_d0),
    .q0(output_l2_0_q0)
);

Conv_sysarr_output_l2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l2_1_address0),
    .ce0(output_l2_1_ce0),
    .we0(output_l2_1_we0),
    .d0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_d0),
    .q0(output_l2_1_q0)
);

Conv_sysarr_output_l2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l2_2_address0),
    .ce0(output_l2_2_ce0),
    .we0(output_l2_2_we0),
    .d0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_d0),
    .q0(output_l2_2_q0)
);

Conv_sysarr_output_l2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l2_3_address0),
    .ce0(output_l2_3_ce0),
    .we0(output_l2_3_we0),
    .d0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_d0),
    .q0(output_l2_3_q0)
);

Conv_sysarr_dataflow_parent_loop_proc20 grp_dataflow_parent_loop_proc20_fu_530(
    .div55_cast126(div55_cast_reg_1111),
    .div101_cast127(div101_cast_reg_1279),
    .TILES_H(TILES_H_reg_1201),
    .TILES_W(TILES_W_reg_1196),
    .TILES_R(TILES_R_reg_1206),
    .TILES_S(TILES_S_reg_1211),
    .weight_l2_0_address0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_address0),
    .weight_l2_0_ce0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_ce0),
    .weight_l2_0_d0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_d0),
    .weight_l2_0_q0(weight_l2_0_q0),
    .weight_l2_0_we0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_we0),
    .weight_l2_0_address1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_address1),
    .weight_l2_0_ce1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_ce1),
    .weight_l2_0_d1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_d1),
    .weight_l2_0_q1(8'd0),
    .weight_l2_0_we1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_we1),
    .weight_l2_1_address0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_address0),
    .weight_l2_1_ce0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_ce0),
    .weight_l2_1_d0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_d0),
    .weight_l2_1_q0(weight_l2_1_q0),
    .weight_l2_1_we0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_we0),
    .weight_l2_1_address1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_address1),
    .weight_l2_1_ce1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_ce1),
    .weight_l2_1_d1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_d1),
    .weight_l2_1_q1(8'd0),
    .weight_l2_1_we1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_we1),
    .weight_l2_2_address0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_address0),
    .weight_l2_2_ce0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_ce0),
    .weight_l2_2_d0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_d0),
    .weight_l2_2_q0(weight_l2_2_q0),
    .weight_l2_2_we0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_we0),
    .weight_l2_2_address1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_address1),
    .weight_l2_2_ce1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_ce1),
    .weight_l2_2_d1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_d1),
    .weight_l2_2_q1(8'd0),
    .weight_l2_2_we1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_we1),
    .weight_l2_3_address0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_address0),
    .weight_l2_3_ce0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_ce0),
    .weight_l2_3_d0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_d0),
    .weight_l2_3_q0(weight_l2_3_q0),
    .weight_l2_3_we0(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_we0),
    .weight_l2_3_address1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_address1),
    .weight_l2_3_ce1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_ce1),
    .weight_l2_3_d1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_d1),
    .weight_l2_3_q1(8'd0),
    .weight_l2_3_we1(grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_we1),
    .p_read(trunc_ln185_reg_1130),
    .p_read1(trunc_ln191_reg_1167),
    .data_l2_0_address0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_address0),
    .data_l2_0_ce0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_ce0),
    .data_l2_0_d0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_d0),
    .data_l2_0_q0(data_l2_0_q0),
    .data_l2_0_we0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_we0),
    .data_l2_0_address1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_address1),
    .data_l2_0_ce1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_ce1),
    .data_l2_0_d1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_d1),
    .data_l2_0_q1(8'd0),
    .data_l2_0_we1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_we1),
    .data_l2_1_address0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_address0),
    .data_l2_1_ce0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_ce0),
    .data_l2_1_d0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_d0),
    .data_l2_1_q0(data_l2_1_q0),
    .data_l2_1_we0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_we0),
    .data_l2_1_address1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_address1),
    .data_l2_1_ce1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_ce1),
    .data_l2_1_d1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_d1),
    .data_l2_1_q1(8'd0),
    .data_l2_1_we1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_we1),
    .data_l2_2_address0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_address0),
    .data_l2_2_ce0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_ce0),
    .data_l2_2_d0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_d0),
    .data_l2_2_q0(data_l2_2_q0),
    .data_l2_2_we0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_we0),
    .data_l2_2_address1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_address1),
    .data_l2_2_ce1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_ce1),
    .data_l2_2_d1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_d1),
    .data_l2_2_q1(8'd0),
    .data_l2_2_we1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_we1),
    .data_l2_3_address0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_address0),
    .data_l2_3_ce0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_ce0),
    .data_l2_3_d0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_d0),
    .data_l2_3_q0(data_l2_3_q0),
    .data_l2_3_we0(grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_we0),
    .data_l2_3_address1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_address1),
    .data_l2_3_ce1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_ce1),
    .data_l2_3_d1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_d1),
    .data_l2_3_q1(8'd0),
    .data_l2_3_we1(grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_we1),
    .p_read2(TILESIZE_H_reg_1178),
    .p_read3(TILESIZE_W_reg_1172),
    .p_read4(empty_88_reg_1319),
    .p_read5(TILESIZE_R_reg_1184),
    .p_read6(TILESIZE_S_reg_1190),
    .output_l2_0_address0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_address0),
    .output_l2_0_ce0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_ce0),
    .output_l2_0_d0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_d0),
    .output_l2_0_q0(32'd0),
    .output_l2_0_we0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_we0),
    .output_l2_0_address1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_address1),
    .output_l2_0_ce1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_ce1),
    .output_l2_0_d1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_d1),
    .output_l2_0_q1(32'd0),
    .output_l2_0_we1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_we1),
    .output_l2_1_address0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_address0),
    .output_l2_1_ce0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_ce0),
    .output_l2_1_d0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_d0),
    .output_l2_1_q0(32'd0),
    .output_l2_1_we0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_we0),
    .output_l2_1_address1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_address1),
    .output_l2_1_ce1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_ce1),
    .output_l2_1_d1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_d1),
    .output_l2_1_q1(32'd0),
    .output_l2_1_we1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_we1),
    .output_l2_2_address0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_address0),
    .output_l2_2_ce0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_ce0),
    .output_l2_2_d0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_d0),
    .output_l2_2_q0(32'd0),
    .output_l2_2_we0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_we0),
    .output_l2_2_address1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_address1),
    .output_l2_2_ce1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_ce1),
    .output_l2_2_d1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_d1),
    .output_l2_2_q1(32'd0),
    .output_l2_2_we1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_we1),
    .output_l2_3_address0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_address0),
    .output_l2_3_ce0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_ce0),
    .output_l2_3_d0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_d0),
    .output_l2_3_q0(32'd0),
    .output_l2_3_we0(grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_we0),
    .output_l2_3_address1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_address1),
    .output_l2_3_ce1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_ce1),
    .output_l2_3_d1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_d1),
    .output_l2_3_q1(32'd0),
    .output_l2_3_we1(grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_we1),
    .p_read7(empty_89_reg_1324),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .div101_cast127_ap_vld(1'b1),
    .TILES_H_ap_vld(1'b1),
    .TILES_W_ap_vld(1'b1),
    .TILES_R_ap_vld(1'b1),
    .TILES_S_ap_vld(1'b1),
    .p_read_ap_vld(1'b1),
    .p_read1_ap_vld(1'b1),
    .p_read2_ap_vld(1'b1),
    .p_read3_ap_vld(1'b1),
    .p_read4_ap_vld(1'b1),
    .p_read5_ap_vld(1'b1),
    .p_read6_ap_vld(1'b1),
    .p_read7_ap_vld(1'b1),
    .ap_start(grp_dataflow_parent_loop_proc20_fu_530_ap_start),
    .ap_done(grp_dataflow_parent_loop_proc20_fu_530_ap_done),
    .ap_ready(grp_dataflow_parent_loop_proc20_fu_530_ap_ready),
    .ap_idle(grp_dataflow_parent_loop_proc20_fu_530_ap_idle),
    .ap_continue(grp_dataflow_parent_loop_proc20_fu_530_ap_continue)
);

Conv_sysarr_udiv_32s_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
udiv_32s_32ns_32_36_seq_1_U418(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_614_ap_start),
    .done(grp_fu_614_ap_done),
    .din0(WH_reg_1140),
    .din1(TILESIZE_W_reg_1172),
    .ce(grp_fu_614_ce),
    .dout(grp_fu_614_p2)
);

Conv_sysarr_udiv_32s_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
udiv_32s_32ns_32_36_seq_1_U419(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_618_ap_start),
    .done(grp_fu_618_ap_done),
    .din0(WH_reg_1140),
    .din1(TILESIZE_H_reg_1178),
    .ce(grp_fu_618_ce),
    .dout(grp_fu_618_p2)
);

Conv_sysarr_udiv_32s_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
udiv_32s_32ns_32_36_seq_1_U420(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_622_ap_start),
    .done(grp_fu_622_ap_done),
    .din0(RS_reg_1159),
    .din1(TILESIZE_R_reg_1184),
    .ce(grp_fu_622_ce),
    .dout(grp_fu_622_p2)
);

Conv_sysarr_udiv_32s_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
udiv_32s_32ns_32_36_seq_1_U421(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_630_ap_start),
    .done(grp_fu_630_ap_done),
    .din0(RS_reg_1159),
    .din1(grp_fu_630_p1),
    .ce(grp_fu_630_ce),
    .dout(grp_fu_630_p2)
);

Conv_sysarr_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U422(
    .din0(C_reg_1125),
    .din1(RS_reg_1159),
    .dout(tmp_fu_692_p2)
);

Conv_sysarr_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U423(
    .din0(tmp_fu_692_p2),
    .din1(RS_reg_1159),
    .dout(mul70_fu_696_p2)
);

Conv_sysarr_mul_30ns_32ns_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_30ns_32ns_62_1_1_U424(
    .din0(bound_fu_711_p0),
    .din1(bound_fu_711_p1),
    .dout(bound_fu_711_p2)
);

Conv_sysarr_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U425(
    .din0(WH_in_reg_1153),
    .din1(WH_in_reg_1153),
    .dout(mul99_fu_814_p2)
);

Conv_sysarr_mul_30ns_32ns_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_30ns_32ns_62_1_1_U426(
    .din0(bound4_fu_839_p0),
    .din1(bound4_fu_839_p1),
    .dout(bound4_fu_839_p2)
);

Conv_sysarr_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U427(
    .din0(WH_reg_1140),
    .din1(WH_reg_1140),
    .dout(mul152_fu_950_p2)
);

Conv_sysarr_mul_30ns_32ns_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_30ns_32ns_62_1_1_U428(
    .din0(bound11_fu_962_p0),
    .din1(bound11_fu_962_p1),
    .dout(bound11_fu_962_p2)
);

Conv_sysarr_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U429(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1089_p0),
    .din1(trunc_ln221_reg_1230),
    .din2(trunc_ln221_1_reg_1259_pp1_iter1_reg),
    .ce(grp_fu_1089_ce),
    .dout(grp_fu_1089_p3)
);

Conv_sysarr_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U430(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1096_p0),
    .din1(empty_86_reg_1274),
    .din2(trunc_ln234_reg_1304_pp2_iter1_reg),
    .ce(grp_fu_1096_ce),
    .dout(grp_fu_1096_p3)
);

Conv_sysarr_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U431(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1103_p0),
    .din1(trunc_ln290_reg_1329),
    .din2(grp_fu_1103_p2),
    .ce(grp_fu_1103_ce),
    .dout(grp_fu_1103_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state45) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state45) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state45);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state49) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state49)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state49);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state54) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state53)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state54)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state54);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state53)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter2_state62)) begin
                ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_done <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_done <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc20_fu_530_ap_done == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_ready <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc20_fu_530_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dataflow_parent_loop_proc20_fu_530_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state58) | ((ap_sync_grp_dataflow_parent_loop_proc20_fu_530_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state59)))) begin
            grp_dataflow_parent_loop_proc20_fu_530_ap_start_reg <= 1'b1;
        end else if ((grp_dataflow_parent_loop_proc20_fu_530_ap_ready == 1'b1)) begin
            grp_dataflow_parent_loop_proc20_fu_530_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln234_fu_845_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        co_reg_486 <= add_ln236_fu_891_p2;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        co_reg_486 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln221_reg_1245 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        crs_reg_442 <= select_ln221_1_reg_1254;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        crs_reg_442 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln290_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten13_reg_497 <= add_ln290_fu_972_p2;
    end else if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
        indvar_flatten13_reg_497 <= 62'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln234_fu_845_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten6_reg_464 <= add_ln234_fu_850_p2;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        indvar_flatten6_reg_464 <= 62'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln221_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_reg_431 <= add_ln221_fu_722_p2;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        indvar_flatten_reg_431 <= 62'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln221_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ko_1_reg_453 <= add_ln223_fu_763_p2;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        ko_1_reg_453 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln290_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        ko_2_reg_508 <= add_ln292_fu_995_p2;
    end else if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
        ko_2_reg_508 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        ko_reg_419 <= 30'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_1216 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ko_reg_419 <= add_ln212_reg_1220;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln290_reg_1339_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        wh_1_reg_519 <= select_ln290_1_reg_1368;
    end else if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
        wh_1_reg_519 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln234_reg_1290 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        wh_reg_475 <= select_ln234_1_reg_1299;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        wh_reg_475 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        C_reg_1125 <= C_fu_578_p1;
        param_in_V_read_1_reg_1120 <= param_in_V_dout;
        trunc_ln185_reg_1130 <= trunc_ln185_fu_582_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        RS_reg_1159 <= RS_fu_594_p1;
        trunc_ln191_reg_1167 <= trunc_ln191_fu_598_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        TILESIZE_H_reg_1178 <= TILESIZE_H_fu_606_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        TILESIZE_R_reg_1184 <= TILESIZE_R_fu_610_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        TILESIZE_S_reg_1190 <= TILESIZE_S_fu_626_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        TILESIZE_W_reg_1172 <= TILESIZE_W_fu_602_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        TILES_H_reg_1201 <= grp_fu_618_p2;
        TILES_R_reg_1206 <= grp_fu_622_p2;
        TILES_S_reg_1211 <= grp_fu_630_p2;
        TILES_W_reg_1196 <= grp_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        WH_in_reg_1153 <= WH_in_fu_590_p1;
        param_in_V_read_3_reg_1148 <= param_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        WH_reg_1140 <= WH_fu_586_p1;
        param_in_V_read_2_reg_1135 <= param_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln212_reg_1220 <= add_ln212_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        bound11_reg_1334 <= bound11_fu_962_p2;
        empty_88_reg_1319 <= empty_88_fu_942_p1;
        empty_89_reg_1324 <= empty_89_fu_946_p1;
        trunc_ln290_reg_1329 <= trunc_ln290_fu_954_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bound4_reg_1285 <= bound4_fu_839_p2;
        div101_cast_reg_1279 <= {{param_in_V_read_1_reg_1120[31:2]}};
        empty_86_reg_1274 <= empty_86_fu_818_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        bound_reg_1240 <= bound_fu_711_p2;
        cast1_reg_1235[29 : 0] <= cast1_fu_708_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((param_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        div55_cast_reg_1111 <= {{param_in_V_dout[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln212_reg_1216 <= icmp_ln212_fu_635_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln221_reg_1245 <= icmp_ln221_fu_717_p2;
        icmp_ln221_reg_1245_pp1_iter1_reg <= icmp_ln221_reg_1245;
        trunc_ln221_1_reg_1259_pp1_iter1_reg <= trunc_ln221_1_reg_1259;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln221_reg_1245_pp1_iter2_reg <= icmp_ln221_reg_1245_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln234_reg_1290 <= icmp_ln234_fu_845_p2;
        icmp_ln234_reg_1290_pp2_iter1_reg <= icmp_ln234_reg_1290;
        trunc_ln234_reg_1304_pp2_iter1_reg <= trunc_ln234_reg_1304;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln234_reg_1290_pp2_iter2_reg <= icmp_ln234_reg_1290_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln290_reg_1339 <= icmp_ln290_fu_967_p2;
        icmp_ln290_reg_1339_pp3_iter1_reg <= icmp_ln290_reg_1339;
        icmp_ln292_reg_1348_pp3_iter1_reg <= icmp_ln292_reg_1348;
        select_ln290_reg_1353_pp3_iter1_reg <= select_ln290_reg_1353;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln290_reg_1339_pp3_iter2_reg <= icmp_ln290_reg_1339_pp3_iter1_reg;
        icmp_ln290_reg_1339_pp3_iter3_reg <= icmp_ln290_reg_1339_pp3_iter2_reg;
        select_ln290_reg_1353_pp3_iter2_reg <= select_ln290_reg_1353_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln290_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln292_reg_1348 <= icmp_ln292_fu_978_p2;
        select_ln290_reg_1353 <= select_ln290_fu_983_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        mul70_reg_1225 <= mul70_fu_696_p2;
        trunc_ln221_reg_1230 <= trunc_ln221_fu_701_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln221_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln221_1_reg_1254 <= select_ln221_1_fu_747_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln234_fu_845_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln234_1_reg_1299 <= select_ln234_1_fu_875_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln290_reg_1339_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln290_1_reg_1368 <= select_ln290_1_fu_1007_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        trunc_ln221_1_reg_1259 <= trunc_ln221_1_fu_755_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln234_fu_845_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        trunc_ln234_reg_1304 <= trunc_ln234_fu_883_p1;
    end
end

always @ (*) begin
    if ((icmp_ln212_fu_635_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state45 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state45 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln221_fu_717_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state49 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state49 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln234_fu_845_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state54 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state54 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        ap_condition_pp3_exit_iter2_state62 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter2_state62 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln290_fu_967_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln221_reg_1245 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_crs_phi_fu_446_p4 = select_ln221_1_reg_1254;
    end else begin
        ap_phi_mux_crs_phi_fu_446_p4 = crs_reg_442;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_1216 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_ko_phi_fu_423_p4 = add_ln212_reg_1220;
    end else begin
        ap_phi_mux_ko_phi_fu_423_p4 = ko_reg_419;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln290_reg_1339_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_wh_1_phi_fu_523_p4 = select_ln290_1_reg_1368;
    end else begin
        ap_phi_mux_wh_1_phi_fu_523_p4 = wh_1_reg_519;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln234_reg_1290 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_wh_phi_fu_479_p4 = select_ln234_1_reg_1299;
    end else begin
        ap_phi_mux_wh_phi_fu_479_p4 = wh_reg_475;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_1216 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_1216 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        bias_l2_0_address0 = ko_4_cast128_fu_1018_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_address0 = ko_cast_fu_646_p1;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_1216 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        bias_l2_1_address0 = ko_4_cast128_fu_1018_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_address0 = ko_cast_fu_646_p1;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_1216 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        bias_l2_2_address0 = ko_4_cast128_fu_1018_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_address0 = ko_cast_fu_646_p1;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_1216 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        bias_l2_3_address0 = ko_4_cast128_fu_1018_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_address0 = ko_cast_fu_646_p1;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_1216 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln290_reg_1339_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln290_reg_1339_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln234_reg_1290_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln234_reg_1290_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_0_address0 = idxprom118_fu_897_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        data_l2_0_address0 = grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_address0;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        data_l2_0_ce0 = grp_dataflow_parent_loop_proc20_fu_530_data_l2_0_ce0;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln234_reg_1290_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_1_address0 = idxprom118_fu_897_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        data_l2_1_address0 = grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_address0;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        data_l2_1_ce0 = grp_dataflow_parent_loop_proc20_fu_530_data_l2_1_ce0;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln234_reg_1290_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_2_address0 = idxprom118_fu_897_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        data_l2_2_address0 = grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_address0;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        data_l2_2_ce0 = grp_dataflow_parent_loop_proc20_fu_530_data_l2_2_ce0;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln234_reg_1290_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_3_address0 = idxprom118_fu_897_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        data_l2_3_address0 = grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_address0;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        data_l2_3_ce0 = grp_dataflow_parent_loop_proc20_fu_530_data_l2_3_ce0;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln234_reg_1290_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
        grp_dataflow_parent_loop_proc20_fu_530_ap_continue = 1'b1;
    end else begin
        grp_dataflow_parent_loop_proc20_fu_530_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        grp_fu_1089_ce = 1'b1;
    end else begin
        grp_fu_1089_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        grp_fu_1096_ce = 1'b1;
    end else begin
        grp_fu_1096_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        grp_fu_1103_ce = 1'b1;
    end else begin
        grp_fu_1103_ce = 1'b0;
    end
end

always @ (*) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_614_ap_start = 1'b1;
    end else begin
        grp_fu_614_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_pp3_stage0) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_pp2_stage0) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_pp1_stage0) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_pp0_stage0) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_614_ce = 1'b0;
    end else begin
        grp_fu_614_ce = 1'b1;
    end
end

always @ (*) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_618_ap_start = 1'b1;
    end else begin
        grp_fu_618_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_pp3_stage0) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_pp2_stage0) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_pp1_stage0) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_pp0_stage0) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_618_ce = 1'b0;
    end else begin
        grp_fu_618_ce = 1'b1;
    end
end

always @ (*) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_622_ap_start = 1'b1;
    end else begin
        grp_fu_622_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_pp3_stage0) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_pp2_stage0) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_pp1_stage0) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_pp0_stage0) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_622_ce = 1'b0;
    end else begin
        grp_fu_622_ce = 1'b1;
    end
end

always @ (*) begin
    if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_630_ap_start = 1'b1;
    end else begin
        grp_fu_630_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_pp3_stage0) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_pp2_stage0) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_pp1_stage0) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_pp0_stage0) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_630_ce = 1'b0;
    end else begin
        grp_fu_630_ce = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l2_0_address0 = idxprom163_fu_1025_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_0_address0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_address0;
    end else begin
        output_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        output_l2_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_0_ce0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_ce0;
    end else begin
        output_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_0_we0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_0_we0;
    end else begin
        output_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l2_1_address0 = idxprom163_fu_1025_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_1_address0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_address0;
    end else begin
        output_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        output_l2_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_1_ce0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_ce0;
    end else begin
        output_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_1_we0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_1_we0;
    end else begin
        output_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l2_2_address0 = idxprom163_fu_1025_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_2_address0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_address0;
    end else begin
        output_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        output_l2_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_2_ce0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_ce0;
    end else begin
        output_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_2_we0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_2_we0;
    end else begin
        output_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l2_3_address0 = idxprom163_fu_1025_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_3_address0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_address0;
    end else begin
        output_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        output_l2_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_3_ce0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_ce0;
    end else begin
        output_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        output_l2_3_we0 = grp_dataflow_parent_loop_proc20_fu_530_output_l2_3_we0;
    end else begin
        output_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        param_in_V_blk_n = param_in_V_empty_n;
    end else begin
        param_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | (~((param_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        param_in_V_read = 1'b1;
    end else begin
        param_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln221_reg_1245_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln221_reg_1245_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = idxprom92_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weight_l2_0_address0 = grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_address0;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weight_l2_0_ce0 = grp_dataflow_parent_loop_proc20_fu_530_weight_l2_0_ce0;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln221_reg_1245_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = idxprom92_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weight_l2_1_address0 = grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_address0;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weight_l2_1_ce0 = grp_dataflow_parent_loop_proc20_fu_530_weight_l2_1_ce0;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln221_reg_1245_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = idxprom92_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weight_l2_2_address0 = grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_address0;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weight_l2_2_ce0 = grp_dataflow_parent_loop_proc20_fu_530_weight_l2_2_ce0;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln221_reg_1245_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = idxprom92_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weight_l2_3_address0 = grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_address0;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        weight_l2_3_ce0 = grp_dataflow_parent_loop_proc20_fu_530_weight_l2_3_ce0;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln221_reg_1245_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((param_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((param_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln212_fu_635_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln212_fu_635_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln221_fu_717_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln221_fu_717_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln234_fu_845_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln234_fu_845_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_fu_578_p1 = param_in_V_dout[31:0];

assign RS_fu_594_p1 = param_in_V_dout[31:0];

assign TILESIZE_H_fu_606_p1 = param_in_V_dout[31:0];

assign TILESIZE_R_fu_610_p1 = param_in_V_dout[31:0];

assign TILESIZE_S_fu_626_p1 = param_in_V_dout[31:0];

assign TILESIZE_W_fu_602_p1 = param_in_V_dout[31:0];

assign WH_fu_586_p1 = param_in_V_dout[31:0];

assign WH_in_fu_590_p1 = param_in_V_dout[31:0];

assign add_ln212_fu_640_p2 = (ap_phi_mux_ko_phi_fu_423_p4 + 30'd1);

assign add_ln221_1_fu_741_p2 = (32'd1 + ap_phi_mux_crs_phi_fu_446_p4);

assign add_ln221_fu_722_p2 = (indvar_flatten_reg_431 + 62'd1);

assign add_ln223_fu_763_p2 = (30'd1 + select_ln221_fu_733_p3);

assign add_ln234_1_fu_869_p2 = (32'd1 + ap_phi_mux_wh_phi_fu_479_p4);

assign add_ln234_fu_850_p2 = (indvar_flatten6_reg_464 + 62'd1);

assign add_ln236_fu_891_p2 = (30'd1 + select_ln234_fu_861_p3);

assign add_ln290_1_fu_1001_p2 = (32'd1 + ap_phi_mux_wh_1_phi_fu_523_p4);

assign add_ln290_fu_972_p2 = (indvar_flatten13_reg_497 + 62'd1);

assign add_ln292_fu_995_p2 = (30'd1 + select_ln290_fu_983_p3);

assign add_ln298_1_fu_1046_p2 = ($signed(output_l2_1_q0) + $signed(sext_ln298_1_fu_1042_p1));

assign add_ln298_2_fu_1056_p2 = ($signed(output_l2_2_q0) + $signed(sext_ln298_2_fu_1052_p1));

assign add_ln298_3_fu_1066_p2 = ($signed(output_l2_3_q0) + $signed(sext_ln298_3_fu_1062_p1));

assign add_ln298_fu_1036_p2 = ($signed(output_l2_0_q0) + $signed(sext_ln298_fu_1032_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((bias_in_V_empty_n == 1'b0) & (icmp_ln212_reg_1216 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((bias_in_V_empty_n == 1'b0) & (icmp_ln212_reg_1216 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_V_empty_n == 1'b0) & (icmp_ln221_reg_1245_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_V_empty_n == 1'b0) & (icmp_ln221_reg_1245_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln234_reg_1290_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln234_reg_1290_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln290_reg_1339_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln290_reg_1339_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln290_reg_1339_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((param_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state45_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state46_pp0_stage0_iter1 = ((bias_in_V_empty_n == 1'b0) & (icmp_ln212_reg_1216 == 1'd0));
end

assign ap_block_state49_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state52_pp1_stage0_iter3 = ((weight_in_V_empty_n == 1'b0) & (icmp_ln221_reg_1245_pp1_iter2_reg == 1'd0));
end

assign ap_block_state54_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state57_pp2_stage0_iter3 = ((data_in_V_empty_n == 1'b0) & (icmp_ln234_reg_1290_pp2_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_state59_on_subcall_done = ((ap_sync_grp_dataflow_parent_loop_proc20_fu_530_ap_ready & ap_sync_grp_dataflow_parent_loop_proc20_fu_530_ap_done) == 1'b0);
end

assign ap_block_state60_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state64_pp3_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln290_reg_1339_pp3_iter3_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_sync_grp_dataflow_parent_loop_proc20_fu_530_ap_done = (grp_dataflow_parent_loop_proc20_fu_530_ap_done | ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_done);

assign ap_sync_grp_dataflow_parent_loop_proc20_fu_530_ap_ready = (grp_dataflow_parent_loop_proc20_fu_530_ap_ready | ap_sync_reg_grp_dataflow_parent_loop_proc20_fu_530_ap_ready);

assign bias_l2_0_d0 = bias_in_V_dout[7:0];

assign bias_l2_1_d0 = {{bias_in_V_dout[15:8]}};

assign bias_l2_2_d0 = {{bias_in_V_dout[23:16]}};

assign bias_l2_3_d0 = {{bias_in_V_dout[31:24]}};

assign bound11_fu_962_p0 = cast1_reg_1235;

assign bound11_fu_962_p1 = bound11_fu_962_p10;

assign bound11_fu_962_p10 = mul152_fu_950_p2;

assign bound4_fu_839_p0 = bound4_fu_839_p00;

assign bound4_fu_839_p00 = div101_cast_fu_822_p4;

assign bound4_fu_839_p1 = bound4_fu_839_p10;

assign bound4_fu_839_p10 = mul99_fu_814_p2;

assign bound_fu_711_p0 = bound_fu_711_p00;

assign bound_fu_711_p00 = div55_cast_reg_1111;

assign bound_fu_711_p1 = bound_fu_711_p10;

assign bound_fu_711_p10 = mul70_reg_1225;

assign cast1_fu_708_p1 = div55_cast_reg_1111;

assign conv_out_V_din = p_Result_12_3_fu_1072_p5;

assign data_l2_0_d0 = data_in_V_dout[7:0];

assign data_l2_1_d0 = {{data_in_V_dout[15:8]}};

assign data_l2_2_d0 = {{data_in_V_dout[23:16]}};

assign data_l2_3_d0 = {{data_in_V_dout[31:24]}};

assign div101_cast_fu_822_p4 = {{param_in_V_read_1_reg_1120[31:2]}};

assign empty_86_fu_818_p1 = mul99_fu_814_p2[8:0];

assign empty_88_fu_942_p1 = param_in_V_read_3_reg_1148[8:0];

assign empty_89_fu_946_p1 = param_in_V_read_2_reg_1135[8:0];

assign grp_dataflow_parent_loop_proc20_fu_530_ap_start = grp_dataflow_parent_loop_proc20_fu_530_ap_start_reg;

assign grp_fu_1089_p0 = select_ln221_fu_733_p3[8:0];

assign grp_fu_1096_p0 = select_ln234_fu_861_p3[8:0];

assign grp_fu_1103_p0 = select_ln290_fu_983_p3[8:0];

assign grp_fu_1103_p2 = select_ln290_1_fu_1007_p3[8:0];

assign grp_fu_630_p1 = param_in_V_dout[31:0];

assign icmp_ln212_fu_635_p2 = ((ap_phi_mux_ko_phi_fu_423_p4 == div55_cast_reg_1111) ? 1'b1 : 1'b0);

assign icmp_ln221_fu_717_p2 = ((indvar_flatten_reg_431 == bound_reg_1240) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_728_p2 = ((ko_1_reg_453 == div55_cast_reg_1111) ? 1'b1 : 1'b0);

assign icmp_ln234_fu_845_p2 = ((indvar_flatten6_reg_464 == bound4_reg_1285) ? 1'b1 : 1'b0);

assign icmp_ln236_fu_856_p2 = ((co_reg_486 == div101_cast_reg_1279) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_967_p2 = ((indvar_flatten13_reg_497 == bound11_reg_1334) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_978_p2 = ((ko_2_reg_508 == div55_cast_reg_1111) ? 1'b1 : 1'b0);

assign idxprom118_fu_897_p1 = $unsigned(grp_fu_1096_p3);

assign idxprom163_fu_1025_p1 = $unsigned(grp_fu_1103_p3);

assign idxprom92_fu_769_p1 = $unsigned(grp_fu_1089_p3);

assign ko_4_cast128_fu_1018_p1 = select_ln290_reg_1353_pp3_iter2_reg;

assign ko_cast_fu_646_p1 = ko_reg_419;

assign p_Result_12_3_fu_1072_p5 = {{{{add_ln298_3_fu_1066_p2}, {add_ln298_2_fu_1056_p2}}, {add_ln298_1_fu_1046_p2}}, {add_ln298_fu_1036_p2}};

assign select_ln221_1_fu_747_p3 = ((icmp_ln223_fu_728_p2[0:0] === 1'b1) ? add_ln221_1_fu_741_p2 : ap_phi_mux_crs_phi_fu_446_p4);

assign select_ln221_fu_733_p3 = ((icmp_ln223_fu_728_p2[0:0] === 1'b1) ? 30'd0 : ko_1_reg_453);

assign select_ln234_1_fu_875_p3 = ((icmp_ln236_fu_856_p2[0:0] === 1'b1) ? add_ln234_1_fu_869_p2 : ap_phi_mux_wh_phi_fu_479_p4);

assign select_ln234_fu_861_p3 = ((icmp_ln236_fu_856_p2[0:0] === 1'b1) ? 30'd0 : co_reg_486);

assign select_ln290_1_fu_1007_p3 = ((icmp_ln292_reg_1348_pp3_iter1_reg[0:0] === 1'b1) ? add_ln290_1_fu_1001_p2 : ap_phi_mux_wh_1_phi_fu_523_p4);

assign select_ln290_fu_983_p3 = ((icmp_ln292_fu_978_p2[0:0] === 1'b1) ? 30'd0 : ko_2_reg_508);

assign sext_ln298_1_fu_1042_p1 = $signed(bias_l2_1_q0);

assign sext_ln298_2_fu_1052_p1 = $signed(bias_l2_2_q0);

assign sext_ln298_3_fu_1062_p1 = $signed(bias_l2_3_q0);

assign sext_ln298_fu_1032_p1 = $signed(bias_l2_0_q0);

assign trunc_ln185_fu_582_p1 = param_in_V_dout[8:0];

assign trunc_ln191_fu_598_p1 = param_in_V_dout[8:0];

assign trunc_ln221_1_fu_755_p1 = select_ln221_1_fu_747_p3[8:0];

assign trunc_ln221_fu_701_p1 = mul70_fu_696_p2[8:0];

assign trunc_ln234_fu_883_p1 = select_ln234_1_fu_875_p3[8:0];

assign trunc_ln290_fu_954_p1 = mul152_fu_950_p2[8:0];

assign weight_l2_0_d0 = weight_in_V_dout[7:0];

assign weight_l2_1_d0 = {{weight_in_V_dout[15:8]}};

assign weight_l2_2_d0 = {{weight_in_V_dout[23:16]}};

assign weight_l2_3_d0 = {{weight_in_V_dout[31:24]}};

always @ (posedge ap_clk) begin
    cast1_reg_1235[61:30] <= 32'b00000000000000000000000000000000;
end

endmodule //Conv_sysarr
