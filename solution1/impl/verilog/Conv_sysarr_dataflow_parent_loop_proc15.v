// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_sysarr_dataflow_parent_loop_proc15 (
        param_L1_TILENUM_S,
        param,
        ko_1,
        co,
        ro,
        ho,
        wo,
        data_l2_0_address0,
        data_l2_0_ce0,
        data_l2_0_d0,
        data_l2_0_q0,
        data_l2_0_we0,
        data_l2_0_address1,
        data_l2_0_ce1,
        data_l2_0_d1,
        data_l2_0_q1,
        data_l2_0_we1,
        output_l2_0_address0,
        output_l2_0_ce0,
        output_l2_0_d0,
        output_l2_0_q0,
        output_l2_0_we0,
        output_l2_0_address1,
        output_l2_0_ce1,
        output_l2_0_d1,
        output_l2_0_q1,
        output_l2_0_we1,
        weight_l2_0_address0,
        weight_l2_0_ce0,
        weight_l2_0_d0,
        weight_l2_0_q0,
        weight_l2_0_we0,
        weight_l2_0_address1,
        weight_l2_0_ce1,
        weight_l2_0_d1,
        weight_l2_0_q1,
        weight_l2_0_we1,
        ap_clk,
        ap_rst,
        param_ap_vld,
        ko_1_ap_vld,
        co_ap_vld,
        ro_ap_vld,
        ho_ap_vld,
        wo_ap_vld,
        data_l2_0_empty_n,
        data_l2_0_read,
        output_l2_0_full_n,
        output_l2_0_write,
        weight_l2_0_empty_n,
        weight_l2_0_read,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] param_L1_TILENUM_S;
input  [1183:0] param;
input  [11:0] ko_1;
input  [31:0] co;
input  [31:0] ro;
input  [10:0] ho;
input  [10:0] wo;
output  [10:0] data_l2_0_address0;
output   data_l2_0_ce0;
output  [7:0] data_l2_0_d0;
input  [7:0] data_l2_0_q0;
output   data_l2_0_we0;
output  [10:0] data_l2_0_address1;
output   data_l2_0_ce1;
output  [7:0] data_l2_0_d1;
input  [7:0] data_l2_0_q1;
output   data_l2_0_we1;
output  [10:0] output_l2_0_address0;
output   output_l2_0_ce0;
output  [31:0] output_l2_0_d0;
input  [31:0] output_l2_0_q0;
output   output_l2_0_we0;
output  [10:0] output_l2_0_address1;
output   output_l2_0_ce1;
output  [31:0] output_l2_0_d1;
input  [31:0] output_l2_0_q1;
output   output_l2_0_we1;
output  [11:0] weight_l2_0_address0;
output   weight_l2_0_ce0;
output  [7:0] weight_l2_0_d0;
input  [7:0] weight_l2_0_q0;
output   weight_l2_0_we0;
output  [11:0] weight_l2_0_address1;
output   weight_l2_0_ce1;
output  [7:0] weight_l2_0_d1;
input  [7:0] weight_l2_0_q1;
output   weight_l2_0_we1;
input   ap_clk;
input   ap_rst;
input   param_ap_vld;
input   ko_1_ap_vld;
input   co_ap_vld;
input   ro_ap_vld;
input   ho_ap_vld;
input   wo_ap_vld;
input   data_l2_0_empty_n;
output   data_l2_0_read;
input   output_l2_0_full_n;
output   output_l2_0_write;
input   weight_l2_0_empty_n;
output   weight_l2_0_read;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg ap_done;
reg ap_ready;
reg ap_idle;

wire   [10:0] dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_address0;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_ce0;
wire   [7:0] dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_d0;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_we0;
wire   [10:0] dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_address1;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_ce1;
wire   [7:0] dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_d1;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_we1;
wire   [10:0] dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_address0;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_ce0;
wire   [31:0] dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_d0;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_we0;
wire   [10:0] dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_address1;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_ce1;
wire   [31:0] dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_d1;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_we1;
wire   [11:0] dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_address0;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_ce0;
wire   [7:0] dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_d0;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_we0;
wire   [11:0] dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_address1;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_ce1;
wire   [7:0] dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_d1;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_we1;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_ap_start;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_read;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_read;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_write;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_ap_done;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_ap_ready;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_ap_idle;
reg    dataflow_in_loop_LOOP_S_OUTER_U0_ap_continue;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_full_n;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_write;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_full_n;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_write;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
reg   [31:0] loop_dataflow_input_count;
reg   [31:0] loop_dataflow_output_count;
wire   [31:0] bound_minus_1;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_start_full_n;
wire    dataflow_in_loop_LOOP_S_OUTER_U0_start_write;

// power-on initialization
initial begin
#0 loop_dataflow_input_count = 32'd0;
#0 loop_dataflow_output_count = 32'd0;
end

Conv_sysarr_dataflow_in_loop_LOOP_S_OUTER dataflow_in_loop_LOOP_S_OUTER_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .param(param),
    .ko_1(ko_1),
    .co(co),
    .ro(ro),
    .so(loop_dataflow_input_count),
    .ho(ho),
    .wo(wo),
    .data_l2_0_address0(dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_address0),
    .data_l2_0_ce0(dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_ce0),
    .data_l2_0_d0(dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_d0),
    .data_l2_0_q0(data_l2_0_q0),
    .data_l2_0_we0(dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_we0),
    .data_l2_0_address1(dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_address1),
    .data_l2_0_ce1(dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_ce1),
    .data_l2_0_d1(dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_d1),
    .data_l2_0_q1(8'd0),
    .data_l2_0_we1(dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_we1),
    .output_l2_0_address0(dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_address0),
    .output_l2_0_ce0(dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_ce0),
    .output_l2_0_d0(dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_d0),
    .output_l2_0_q0(32'd0),
    .output_l2_0_we0(dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_we0),
    .output_l2_0_address1(dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_address1),
    .output_l2_0_ce1(dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_ce1),
    .output_l2_0_d1(dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_d1),
    .output_l2_0_q1(32'd0),
    .output_l2_0_we1(dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_we1),
    .weight_l2_0_address0(dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_address0),
    .weight_l2_0_ce0(dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_ce0),
    .weight_l2_0_d0(dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_d0),
    .weight_l2_0_q0(weight_l2_0_q0),
    .weight_l2_0_we0(dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_we0),
    .weight_l2_0_address1(dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_address1),
    .weight_l2_0_ce1(dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_ce1),
    .weight_l2_0_d1(dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_d1),
    .weight_l2_0_q1(8'd0),
    .weight_l2_0_we1(dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_we1),
    .param_ap_vld(param_ap_vld),
    .ko_1_ap_vld(ko_1_ap_vld),
    .co_ap_vld(co_ap_vld),
    .ro_ap_vld(ro_ap_vld),
    .so_ap_vld(1'b0),
    .ho_ap_vld(ho_ap_vld),
    .wo_ap_vld(wo_ap_vld),
    .ap_start(dataflow_in_loop_LOOP_S_OUTER_U0_ap_start),
    .weight_l2_0_empty_n(1'b0),
    .weight_l2_0_read(dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_read),
    .data_l2_0_empty_n(1'b0),
    .data_l2_0_read(dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_read),
    .output_l2_0_full_n(output_l2_0_full_n),
    .output_l2_0_write(dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_write),
    .ap_done(dataflow_in_loop_LOOP_S_OUTER_U0_ap_done),
    .ap_ready(dataflow_in_loop_LOOP_S_OUTER_U0_ap_ready),
    .ap_idle(dataflow_in_loop_LOOP_S_OUTER_U0_ap_idle),
    .ap_continue(dataflow_in_loop_LOOP_S_OUTER_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_input_count <= 32'd0;
    end else begin
        if ((~(loop_dataflow_input_count == bound_minus_1) & (dataflow_in_loop_LOOP_S_OUTER_U0_ap_ready == 1'b1) & (ap_start == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 32'd1);
        end else if (((dataflow_in_loop_LOOP_S_OUTER_U0_ap_ready == 1'b1) & (loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1))) begin
            loop_dataflow_input_count <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_output_count <= 32'd0;
    end else begin
        if ((~(loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_LOOP_S_OUTER_U0_ap_done == 1'b1) & (dataflow_in_loop_LOOP_S_OUTER_U0_ap_continue == 1'b1))) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 32'd1);
        end else if (((dataflow_in_loop_LOOP_S_OUTER_U0_ap_done == 1'b1) & (loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_LOOP_S_OUTER_U0_ap_continue == 1'b1))) begin
            loop_dataflow_output_count <= 32'd0;
        end
    end
end

always @ (*) begin
    if (((dataflow_in_loop_LOOP_S_OUTER_U0_ap_done == 1'b1) & (loop_dataflow_output_count == bound_minus_1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((dataflow_in_loop_LOOP_S_OUTER_U0_ap_idle == 1'b1) & (loop_dataflow_output_count == 32'd0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((dataflow_in_loop_LOOP_S_OUTER_U0_ap_ready == 1'b1) & (loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~(loop_dataflow_output_count == bound_minus_1) | (ap_continue == 1'b1))) begin
        dataflow_in_loop_LOOP_S_OUTER_U0_ap_continue = 1'b1;
    end else begin
        dataflow_in_loop_LOOP_S_OUTER_U0_ap_continue = 1'b0;
    end
end

assign ap_sync_continue = ap_continue;

assign ap_sync_done = dataflow_in_loop_LOOP_S_OUTER_U0_ap_done;

assign ap_sync_ready = dataflow_in_loop_LOOP_S_OUTER_U0_ap_ready;

assign bound_minus_1 = (param_L1_TILENUM_S - 32'd1);

assign data_l2_0_address0 = dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_address0;

assign data_l2_0_address1 = 11'd0;

assign data_l2_0_ce0 = dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_ce0;

assign data_l2_0_ce1 = 1'b0;

assign data_l2_0_d0 = 8'd0;

assign data_l2_0_d1 = 8'd0;

assign data_l2_0_read = dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_write;

assign data_l2_0_we0 = 1'b0;

assign data_l2_0_we1 = 1'b0;

assign dataflow_in_loop_LOOP_S_OUTER_U0_ap_start = ap_start;

assign dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_full_n = data_l2_0_empty_n;

assign dataflow_in_loop_LOOP_S_OUTER_U0_data_l2_0_write = 1'b0;

assign dataflow_in_loop_LOOP_S_OUTER_U0_start_full_n = 1'b1;

assign dataflow_in_loop_LOOP_S_OUTER_U0_start_write = 1'b0;

assign dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_full_n = weight_l2_0_empty_n;

assign dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_write = 1'b0;

assign output_l2_0_address0 = dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_address0;

assign output_l2_0_address1 = 11'd0;

assign output_l2_0_ce0 = dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_ce0;

assign output_l2_0_ce1 = 1'b0;

assign output_l2_0_d0 = dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_d0;

assign output_l2_0_d1 = 32'd0;

assign output_l2_0_we0 = dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_we0;

assign output_l2_0_we1 = 1'b0;

assign output_l2_0_write = dataflow_in_loop_LOOP_S_OUTER_U0_output_l2_0_write;

assign weight_l2_0_address0 = dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_address0;

assign weight_l2_0_address1 = 12'd0;

assign weight_l2_0_ce0 = dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_ce0;

assign weight_l2_0_ce1 = 1'b0;

assign weight_l2_0_d0 = 8'd0;

assign weight_l2_0_d1 = 8'd0;

assign weight_l2_0_read = dataflow_in_loop_LOOP_S_OUTER_U0_weight_l2_0_write;

assign weight_l2_0_we0 = 1'b0;

assign weight_l2_0_we1 = 1'b0;

endmodule //Conv_sysarr_dataflow_parent_loop_proc15
