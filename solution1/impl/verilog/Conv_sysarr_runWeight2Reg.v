// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_sysarr_runWeight2Reg (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        weight_l2_0_address0,
        weight_l2_0_ce0,
        weight_l2_0_q0,
        weight_l2_0_address1,
        weight_l2_0_ce1,
        weight_l2_0_q1,
        weight_l2_1_address0,
        weight_l2_1_ce0,
        weight_l2_1_q0,
        weight_l2_1_address1,
        weight_l2_1_ce1,
        weight_l2_1_q1,
        weight_l2_2_address0,
        weight_l2_2_ce0,
        weight_l2_2_q0,
        weight_l2_2_address1,
        weight_l2_2_ce1,
        weight_l2_2_q1,
        weight_l2_3_address0,
        weight_l2_3_ce0,
        weight_l2_3_q0,
        weight_l2_3_address1,
        weight_l2_3_ce1,
        weight_l2_3_q1,
        weight_l2_4_address0,
        weight_l2_4_ce0,
        weight_l2_4_q0,
        weight_l2_4_address1,
        weight_l2_4_ce1,
        weight_l2_4_q1,
        weight_l2_5_address0,
        weight_l2_5_ce0,
        weight_l2_5_q0,
        weight_l2_5_address1,
        weight_l2_5_ce1,
        weight_l2_5_q1,
        weight_l2_6_address0,
        weight_l2_6_ce0,
        weight_l2_6_q0,
        weight_l2_6_address1,
        weight_l2_6_ce1,
        weight_l2_6_q1,
        weight_l2_7_address0,
        weight_l2_7_ce0,
        weight_l2_7_q0,
        weight_l2_7_address1,
        weight_l2_7_ce1,
        weight_l2_7_q1,
        weight_l2_8_address0,
        weight_l2_8_ce0,
        weight_l2_8_q0,
        weight_l2_8_address1,
        weight_l2_8_ce1,
        weight_l2_8_q1,
        weight_l2_9_address0,
        weight_l2_9_ce0,
        weight_l2_9_q0,
        weight_l2_9_address1,
        weight_l2_9_ce1,
        weight_l2_9_q1,
        weight_l2_10_address0,
        weight_l2_10_ce0,
        weight_l2_10_q0,
        weight_l2_10_address1,
        weight_l2_10_ce1,
        weight_l2_10_q1,
        weight_l2_11_address0,
        weight_l2_11_ce0,
        weight_l2_11_q0,
        weight_l2_11_address1,
        weight_l2_11_ce1,
        weight_l2_11_q1,
        weight_l2_12_address0,
        weight_l2_12_ce0,
        weight_l2_12_q0,
        weight_l2_12_address1,
        weight_l2_12_ce1,
        weight_l2_12_q1,
        weight_l2_13_address0,
        weight_l2_13_ce0,
        weight_l2_13_q0,
        weight_l2_13_address1,
        weight_l2_13_ce1,
        weight_l2_13_q1,
        weight_l2_14_address0,
        weight_l2_14_ce0,
        weight_l2_14_q0,
        weight_l2_14_address1,
        weight_l2_14_ce1,
        weight_l2_14_q1,
        weight_l2_15_address0,
        weight_l2_15_ce0,
        weight_l2_15_q0,
        weight_l2_15_address1,
        weight_l2_15_ce1,
        weight_l2_15_q1,
        C_L2_dout,
        C_L2_empty_n,
        C_L2_read,
        R_L2_dout,
        R_L2_empty_n,
        R_L2_read,
        S_L2_dout,
        S_L2_empty_n,
        S_L2_read,
        ko_3_dout,
        ko_3_empty_n,
        ko_3_read,
        co_dout,
        co_empty_n,
        co_read,
        ro_dout,
        ro_empty_n,
        ro_read,
        so_dout,
        so_empty_n,
        so_read,
        ko_3_out_din,
        ko_3_out_full_n,
        ko_3_out_write,
        co_out_din,
        co_out_full_n,
        co_out_write,
        ro_out_din,
        ro_out_full_n,
        ro_out_write,
        so_out_din,
        so_out_full_n,
        so_out_write,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53,
        ap_return_54,
        ap_return_55,
        ap_return_56,
        ap_return_57,
        ap_return_58,
        ap_return_59,
        ap_return_60,
        ap_return_61,
        ap_return_62,
        ap_return_63,
        ap_return_64,
        ap_return_65,
        ap_return_66,
        ap_return_67,
        ap_return_68,
        ap_return_69,
        ap_return_70,
        ap_return_71,
        ap_return_72,
        ap_return_73,
        ap_return_74,
        ap_return_75,
        ap_return_76,
        ap_return_77,
        ap_return_78,
        ap_return_79,
        ap_return_80,
        ap_return_81,
        ap_return_82,
        ap_return_83,
        ap_return_84,
        ap_return_85,
        ap_return_86,
        ap_return_87,
        ap_return_88,
        ap_return_89,
        ap_return_90,
        ap_return_91,
        ap_return_92,
        ap_return_93,
        ap_return_94,
        ap_return_95,
        ap_return_96,
        ap_return_97,
        ap_return_98,
        ap_return_99,
        ap_return_100,
        ap_return_101,
        ap_return_102,
        ap_return_103,
        ap_return_104,
        ap_return_105,
        ap_return_106,
        ap_return_107,
        ap_return_108,
        ap_return_109,
        ap_return_110,
        ap_return_111,
        ap_return_112,
        ap_return_113,
        ap_return_114,
        ap_return_115,
        ap_return_116,
        ap_return_117,
        ap_return_118,
        ap_return_119,
        ap_return_120,
        ap_return_121,
        ap_return_122,
        ap_return_123,
        ap_return_124,
        ap_return_125,
        ap_return_126,
        ap_return_127,
        ap_return_128,
        ap_return_129,
        ap_return_130,
        ap_return_131,
        ap_return_132,
        ap_return_133,
        ap_return_134,
        ap_return_135,
        ap_return_136,
        ap_return_137,
        ap_return_138,
        ap_return_139,
        ap_return_140,
        ap_return_141,
        ap_return_142,
        ap_return_143,
        ap_return_144,
        ap_return_145,
        ap_return_146,
        ap_return_147,
        ap_return_148,
        ap_return_149,
        ap_return_150,
        ap_return_151,
        ap_return_152,
        ap_return_153,
        ap_return_154,
        ap_return_155,
        ap_return_156,
        ap_return_157,
        ap_return_158,
        ap_return_159,
        ap_return_160,
        ap_return_161,
        ap_return_162,
        ap_return_163,
        ap_return_164,
        ap_return_165,
        ap_return_166,
        ap_return_167,
        ap_return_168,
        ap_return_169,
        ap_return_170,
        ap_return_171,
        ap_return_172,
        ap_return_173,
        ap_return_174,
        ap_return_175,
        ap_return_176,
        ap_return_177,
        ap_return_178,
        ap_return_179,
        ap_return_180,
        ap_return_181,
        ap_return_182,
        ap_return_183,
        ap_return_184,
        ap_return_185,
        ap_return_186,
        ap_return_187,
        ap_return_188,
        ap_return_189,
        ap_return_190,
        ap_return_191,
        ap_return_192,
        ap_return_193,
        ap_return_194,
        ap_return_195,
        ap_return_196,
        ap_return_197,
        ap_return_198,
        ap_return_199,
        ap_return_200,
        ap_return_201,
        ap_return_202,
        ap_return_203,
        ap_return_204,
        ap_return_205,
        ap_return_206,
        ap_return_207,
        ap_return_208,
        ap_return_209,
        ap_return_210,
        ap_return_211,
        ap_return_212,
        ap_return_213,
        ap_return_214,
        ap_return_215,
        ap_return_216,
        ap_return_217,
        ap_return_218,
        ap_return_219,
        ap_return_220,
        ap_return_221,
        ap_return_222,
        ap_return_223,
        ap_return_224,
        ap_return_225,
        ap_return_226,
        ap_return_227,
        ap_return_228,
        ap_return_229,
        ap_return_230,
        ap_return_231,
        ap_return_232,
        ap_return_233,
        ap_return_234,
        ap_return_235,
        ap_return_236,
        ap_return_237,
        ap_return_238,
        ap_return_239,
        ap_return_240,
        ap_return_241,
        ap_return_242,
        ap_return_243,
        ap_return_244,
        ap_return_245,
        ap_return_246,
        ap_return_247,
        ap_return_248,
        ap_return_249,
        ap_return_250,
        ap_return_251,
        ap_return_252,
        ap_return_253,
        ap_return_254,
        ap_return_255
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [11:0] weight_l2_0_address0;
output   weight_l2_0_ce0;
input  [7:0] weight_l2_0_q0;
output  [11:0] weight_l2_0_address1;
output   weight_l2_0_ce1;
input  [7:0] weight_l2_0_q1;
output  [11:0] weight_l2_1_address0;
output   weight_l2_1_ce0;
input  [7:0] weight_l2_1_q0;
output  [11:0] weight_l2_1_address1;
output   weight_l2_1_ce1;
input  [7:0] weight_l2_1_q1;
output  [11:0] weight_l2_2_address0;
output   weight_l2_2_ce0;
input  [7:0] weight_l2_2_q0;
output  [11:0] weight_l2_2_address1;
output   weight_l2_2_ce1;
input  [7:0] weight_l2_2_q1;
output  [11:0] weight_l2_3_address0;
output   weight_l2_3_ce0;
input  [7:0] weight_l2_3_q0;
output  [11:0] weight_l2_3_address1;
output   weight_l2_3_ce1;
input  [7:0] weight_l2_3_q1;
output  [11:0] weight_l2_4_address0;
output   weight_l2_4_ce0;
input  [7:0] weight_l2_4_q0;
output  [11:0] weight_l2_4_address1;
output   weight_l2_4_ce1;
input  [7:0] weight_l2_4_q1;
output  [11:0] weight_l2_5_address0;
output   weight_l2_5_ce0;
input  [7:0] weight_l2_5_q0;
output  [11:0] weight_l2_5_address1;
output   weight_l2_5_ce1;
input  [7:0] weight_l2_5_q1;
output  [11:0] weight_l2_6_address0;
output   weight_l2_6_ce0;
input  [7:0] weight_l2_6_q0;
output  [11:0] weight_l2_6_address1;
output   weight_l2_6_ce1;
input  [7:0] weight_l2_6_q1;
output  [11:0] weight_l2_7_address0;
output   weight_l2_7_ce0;
input  [7:0] weight_l2_7_q0;
output  [11:0] weight_l2_7_address1;
output   weight_l2_7_ce1;
input  [7:0] weight_l2_7_q1;
output  [11:0] weight_l2_8_address0;
output   weight_l2_8_ce0;
input  [7:0] weight_l2_8_q0;
output  [11:0] weight_l2_8_address1;
output   weight_l2_8_ce1;
input  [7:0] weight_l2_8_q1;
output  [11:0] weight_l2_9_address0;
output   weight_l2_9_ce0;
input  [7:0] weight_l2_9_q0;
output  [11:0] weight_l2_9_address1;
output   weight_l2_9_ce1;
input  [7:0] weight_l2_9_q1;
output  [11:0] weight_l2_10_address0;
output   weight_l2_10_ce0;
input  [7:0] weight_l2_10_q0;
output  [11:0] weight_l2_10_address1;
output   weight_l2_10_ce1;
input  [7:0] weight_l2_10_q1;
output  [11:0] weight_l2_11_address0;
output   weight_l2_11_ce0;
input  [7:0] weight_l2_11_q0;
output  [11:0] weight_l2_11_address1;
output   weight_l2_11_ce1;
input  [7:0] weight_l2_11_q1;
output  [11:0] weight_l2_12_address0;
output   weight_l2_12_ce0;
input  [7:0] weight_l2_12_q0;
output  [11:0] weight_l2_12_address1;
output   weight_l2_12_ce1;
input  [7:0] weight_l2_12_q1;
output  [11:0] weight_l2_13_address0;
output   weight_l2_13_ce0;
input  [7:0] weight_l2_13_q0;
output  [11:0] weight_l2_13_address1;
output   weight_l2_13_ce1;
input  [7:0] weight_l2_13_q1;
output  [11:0] weight_l2_14_address0;
output   weight_l2_14_ce0;
input  [7:0] weight_l2_14_q0;
output  [11:0] weight_l2_14_address1;
output   weight_l2_14_ce1;
input  [7:0] weight_l2_14_q1;
output  [11:0] weight_l2_15_address0;
output   weight_l2_15_ce0;
input  [7:0] weight_l2_15_q0;
output  [11:0] weight_l2_15_address1;
output   weight_l2_15_ce1;
input  [7:0] weight_l2_15_q1;
input  [11:0] C_L2_dout;
input   C_L2_empty_n;
output   C_L2_read;
input  [11:0] R_L2_dout;
input   R_L2_empty_n;
output   R_L2_read;
input  [11:0] S_L2_dout;
input   S_L2_empty_n;
output   S_L2_read;
input  [11:0] ko_3_dout;
input   ko_3_empty_n;
output   ko_3_read;
input  [31:0] co_dout;
input   co_empty_n;
output   co_read;
input  [31:0] ro_dout;
input   ro_empty_n;
output   ro_read;
input  [31:0] so_dout;
input   so_empty_n;
output   so_read;
output  [7:0] ko_3_out_din;
input   ko_3_out_full_n;
output   ko_3_out_write;
output  [31:0] co_out_din;
input   co_out_full_n;
output   co_out_write;
output  [31:0] ro_out_din;
input   ro_out_full_n;
output   ro_out_write;
output  [31:0] so_out_din;
input   so_out_full_n;
output   so_out_write;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [7:0] ap_return_6;
output  [7:0] ap_return_7;
output  [7:0] ap_return_8;
output  [7:0] ap_return_9;
output  [7:0] ap_return_10;
output  [7:0] ap_return_11;
output  [7:0] ap_return_12;
output  [7:0] ap_return_13;
output  [7:0] ap_return_14;
output  [7:0] ap_return_15;
output  [7:0] ap_return_16;
output  [7:0] ap_return_17;
output  [7:0] ap_return_18;
output  [7:0] ap_return_19;
output  [7:0] ap_return_20;
output  [7:0] ap_return_21;
output  [7:0] ap_return_22;
output  [7:0] ap_return_23;
output  [7:0] ap_return_24;
output  [7:0] ap_return_25;
output  [7:0] ap_return_26;
output  [7:0] ap_return_27;
output  [7:0] ap_return_28;
output  [7:0] ap_return_29;
output  [7:0] ap_return_30;
output  [7:0] ap_return_31;
output  [7:0] ap_return_32;
output  [7:0] ap_return_33;
output  [7:0] ap_return_34;
output  [7:0] ap_return_35;
output  [7:0] ap_return_36;
output  [7:0] ap_return_37;
output  [7:0] ap_return_38;
output  [7:0] ap_return_39;
output  [7:0] ap_return_40;
output  [7:0] ap_return_41;
output  [7:0] ap_return_42;
output  [7:0] ap_return_43;
output  [7:0] ap_return_44;
output  [7:0] ap_return_45;
output  [7:0] ap_return_46;
output  [7:0] ap_return_47;
output  [7:0] ap_return_48;
output  [7:0] ap_return_49;
output  [7:0] ap_return_50;
output  [7:0] ap_return_51;
output  [7:0] ap_return_52;
output  [7:0] ap_return_53;
output  [7:0] ap_return_54;
output  [7:0] ap_return_55;
output  [7:0] ap_return_56;
output  [7:0] ap_return_57;
output  [7:0] ap_return_58;
output  [7:0] ap_return_59;
output  [7:0] ap_return_60;
output  [7:0] ap_return_61;
output  [7:0] ap_return_62;
output  [7:0] ap_return_63;
output  [7:0] ap_return_64;
output  [7:0] ap_return_65;
output  [7:0] ap_return_66;
output  [7:0] ap_return_67;
output  [7:0] ap_return_68;
output  [7:0] ap_return_69;
output  [7:0] ap_return_70;
output  [7:0] ap_return_71;
output  [7:0] ap_return_72;
output  [7:0] ap_return_73;
output  [7:0] ap_return_74;
output  [7:0] ap_return_75;
output  [7:0] ap_return_76;
output  [7:0] ap_return_77;
output  [7:0] ap_return_78;
output  [7:0] ap_return_79;
output  [7:0] ap_return_80;
output  [7:0] ap_return_81;
output  [7:0] ap_return_82;
output  [7:0] ap_return_83;
output  [7:0] ap_return_84;
output  [7:0] ap_return_85;
output  [7:0] ap_return_86;
output  [7:0] ap_return_87;
output  [7:0] ap_return_88;
output  [7:0] ap_return_89;
output  [7:0] ap_return_90;
output  [7:0] ap_return_91;
output  [7:0] ap_return_92;
output  [7:0] ap_return_93;
output  [7:0] ap_return_94;
output  [7:0] ap_return_95;
output  [7:0] ap_return_96;
output  [7:0] ap_return_97;
output  [7:0] ap_return_98;
output  [7:0] ap_return_99;
output  [7:0] ap_return_100;
output  [7:0] ap_return_101;
output  [7:0] ap_return_102;
output  [7:0] ap_return_103;
output  [7:0] ap_return_104;
output  [7:0] ap_return_105;
output  [7:0] ap_return_106;
output  [7:0] ap_return_107;
output  [7:0] ap_return_108;
output  [7:0] ap_return_109;
output  [7:0] ap_return_110;
output  [7:0] ap_return_111;
output  [7:0] ap_return_112;
output  [7:0] ap_return_113;
output  [7:0] ap_return_114;
output  [7:0] ap_return_115;
output  [7:0] ap_return_116;
output  [7:0] ap_return_117;
output  [7:0] ap_return_118;
output  [7:0] ap_return_119;
output  [7:0] ap_return_120;
output  [7:0] ap_return_121;
output  [7:0] ap_return_122;
output  [7:0] ap_return_123;
output  [7:0] ap_return_124;
output  [7:0] ap_return_125;
output  [7:0] ap_return_126;
output  [7:0] ap_return_127;
output  [7:0] ap_return_128;
output  [7:0] ap_return_129;
output  [7:0] ap_return_130;
output  [7:0] ap_return_131;
output  [7:0] ap_return_132;
output  [7:0] ap_return_133;
output  [7:0] ap_return_134;
output  [7:0] ap_return_135;
output  [7:0] ap_return_136;
output  [7:0] ap_return_137;
output  [7:0] ap_return_138;
output  [7:0] ap_return_139;
output  [7:0] ap_return_140;
output  [7:0] ap_return_141;
output  [7:0] ap_return_142;
output  [7:0] ap_return_143;
output  [7:0] ap_return_144;
output  [7:0] ap_return_145;
output  [7:0] ap_return_146;
output  [7:0] ap_return_147;
output  [7:0] ap_return_148;
output  [7:0] ap_return_149;
output  [7:0] ap_return_150;
output  [7:0] ap_return_151;
output  [7:0] ap_return_152;
output  [7:0] ap_return_153;
output  [7:0] ap_return_154;
output  [7:0] ap_return_155;
output  [7:0] ap_return_156;
output  [7:0] ap_return_157;
output  [7:0] ap_return_158;
output  [7:0] ap_return_159;
output  [7:0] ap_return_160;
output  [7:0] ap_return_161;
output  [7:0] ap_return_162;
output  [7:0] ap_return_163;
output  [7:0] ap_return_164;
output  [7:0] ap_return_165;
output  [7:0] ap_return_166;
output  [7:0] ap_return_167;
output  [7:0] ap_return_168;
output  [7:0] ap_return_169;
output  [7:0] ap_return_170;
output  [7:0] ap_return_171;
output  [7:0] ap_return_172;
output  [7:0] ap_return_173;
output  [7:0] ap_return_174;
output  [7:0] ap_return_175;
output  [7:0] ap_return_176;
output  [7:0] ap_return_177;
output  [7:0] ap_return_178;
output  [7:0] ap_return_179;
output  [7:0] ap_return_180;
output  [7:0] ap_return_181;
output  [7:0] ap_return_182;
output  [7:0] ap_return_183;
output  [7:0] ap_return_184;
output  [7:0] ap_return_185;
output  [7:0] ap_return_186;
output  [7:0] ap_return_187;
output  [7:0] ap_return_188;
output  [7:0] ap_return_189;
output  [7:0] ap_return_190;
output  [7:0] ap_return_191;
output  [7:0] ap_return_192;
output  [7:0] ap_return_193;
output  [7:0] ap_return_194;
output  [7:0] ap_return_195;
output  [7:0] ap_return_196;
output  [7:0] ap_return_197;
output  [7:0] ap_return_198;
output  [7:0] ap_return_199;
output  [7:0] ap_return_200;
output  [7:0] ap_return_201;
output  [7:0] ap_return_202;
output  [7:0] ap_return_203;
output  [7:0] ap_return_204;
output  [7:0] ap_return_205;
output  [7:0] ap_return_206;
output  [7:0] ap_return_207;
output  [7:0] ap_return_208;
output  [7:0] ap_return_209;
output  [7:0] ap_return_210;
output  [7:0] ap_return_211;
output  [7:0] ap_return_212;
output  [7:0] ap_return_213;
output  [7:0] ap_return_214;
output  [7:0] ap_return_215;
output  [7:0] ap_return_216;
output  [7:0] ap_return_217;
output  [7:0] ap_return_218;
output  [7:0] ap_return_219;
output  [7:0] ap_return_220;
output  [7:0] ap_return_221;
output  [7:0] ap_return_222;
output  [7:0] ap_return_223;
output  [7:0] ap_return_224;
output  [7:0] ap_return_225;
output  [7:0] ap_return_226;
output  [7:0] ap_return_227;
output  [7:0] ap_return_228;
output  [7:0] ap_return_229;
output  [7:0] ap_return_230;
output  [7:0] ap_return_231;
output  [7:0] ap_return_232;
output  [7:0] ap_return_233;
output  [7:0] ap_return_234;
output  [7:0] ap_return_235;
output  [7:0] ap_return_236;
output  [7:0] ap_return_237;
output  [7:0] ap_return_238;
output  [7:0] ap_return_239;
output  [7:0] ap_return_240;
output  [7:0] ap_return_241;
output  [7:0] ap_return_242;
output  [7:0] ap_return_243;
output  [7:0] ap_return_244;
output  [7:0] ap_return_245;
output  [7:0] ap_return_246;
output  [7:0] ap_return_247;
output  [7:0] ap_return_248;
output  [7:0] ap_return_249;
output  [7:0] ap_return_250;
output  [7:0] ap_return_251;
output  [7:0] ap_return_252;
output  [7:0] ap_return_253;
output  [7:0] ap_return_254;
output  [7:0] ap_return_255;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] weight_l2_0_address0;
reg weight_l2_0_ce0;
reg[11:0] weight_l2_0_address1;
reg weight_l2_0_ce1;
reg[11:0] weight_l2_1_address0;
reg weight_l2_1_ce0;
reg[11:0] weight_l2_1_address1;
reg weight_l2_1_ce1;
reg[11:0] weight_l2_2_address0;
reg weight_l2_2_ce0;
reg[11:0] weight_l2_2_address1;
reg weight_l2_2_ce1;
reg[11:0] weight_l2_3_address0;
reg weight_l2_3_ce0;
reg[11:0] weight_l2_3_address1;
reg weight_l2_3_ce1;
reg[11:0] weight_l2_4_address0;
reg weight_l2_4_ce0;
reg[11:0] weight_l2_4_address1;
reg weight_l2_4_ce1;
reg[11:0] weight_l2_5_address0;
reg weight_l2_5_ce0;
reg[11:0] weight_l2_5_address1;
reg weight_l2_5_ce1;
reg[11:0] weight_l2_6_address0;
reg weight_l2_6_ce0;
reg[11:0] weight_l2_6_address1;
reg weight_l2_6_ce1;
reg[11:0] weight_l2_7_address0;
reg weight_l2_7_ce0;
reg[11:0] weight_l2_7_address1;
reg weight_l2_7_ce1;
reg[11:0] weight_l2_8_address0;
reg weight_l2_8_ce0;
reg[11:0] weight_l2_8_address1;
reg weight_l2_8_ce1;
reg[11:0] weight_l2_9_address0;
reg weight_l2_9_ce0;
reg[11:0] weight_l2_9_address1;
reg weight_l2_9_ce1;
reg[11:0] weight_l2_10_address0;
reg weight_l2_10_ce0;
reg[11:0] weight_l2_10_address1;
reg weight_l2_10_ce1;
reg[11:0] weight_l2_11_address0;
reg weight_l2_11_ce0;
reg[11:0] weight_l2_11_address1;
reg weight_l2_11_ce1;
reg[11:0] weight_l2_12_address0;
reg weight_l2_12_ce0;
reg[11:0] weight_l2_12_address1;
reg weight_l2_12_ce1;
reg[11:0] weight_l2_13_address0;
reg weight_l2_13_ce0;
reg[11:0] weight_l2_13_address1;
reg weight_l2_13_ce1;
reg[11:0] weight_l2_14_address0;
reg weight_l2_14_ce0;
reg[11:0] weight_l2_14_address1;
reg weight_l2_14_ce1;
reg[11:0] weight_l2_15_address0;
reg weight_l2_15_ce0;
reg[11:0] weight_l2_15_address1;
reg weight_l2_15_ce1;
reg C_L2_read;
reg R_L2_read;
reg S_L2_read;
reg ko_3_read;
reg co_read;
reg ro_read;
reg so_read;
reg ko_3_out_write;
reg co_out_write;
reg ro_out_write;
reg so_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    C_L2_blk_n;
reg    R_L2_blk_n;
reg    S_L2_blk_n;
reg    ko_3_blk_n;
reg    co_blk_n;
reg    ro_blk_n;
reg    so_blk_n;
reg    ko_3_out_blk_n;
reg    co_out_blk_n;
reg    ro_out_blk_n;
reg    so_out_blk_n;
reg    ap_block_state1;
reg  signed [11:0] R_L2_read_reg_4396;
reg  signed [11:0] S_L2_read_reg_4416;
wire   [11:0] trunc_ln865_fu_2388_p1;
reg   [11:0] trunc_ln865_reg_4441;
wire   [11:0] trunc_ln867_fu_2392_p1;
reg   [11:0] trunc_ln867_reg_4461;
wire   [7:0] empty_fu_2396_p1;
reg   [7:0] empty_reg_4481;
wire   [11:0] c_fu_2400_p3;
reg   [11:0] c_reg_4486;
wire    ap_CS_fsm_state4;
wire  signed [11:0] grp_fu_4179_p2;
reg  signed [11:0] mul4_i_i_reg_4504;
(* use_dsp48 = "no" *) wire  signed [11:0] mul52_i_i_fu_2407_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul58_i_i_fu_2418_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul512_i_i_fu_2428_p2;
wire    ap_CS_fsm_state5;
(* use_dsp48 = "no" *) wire  signed [11:0] mul516_i_i_fu_2438_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul520_i_i_fu_2448_p2;
wire    ap_CS_fsm_state6;
(* use_dsp48 = "no" *) wire  signed [11:0] mul524_i_i_fu_2458_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul528_i_i_fu_2468_p2;
wire    ap_CS_fsm_state7;
(* use_dsp48 = "no" *) wire  signed [11:0] mul532_i_i_fu_2478_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul536_i_i_fu_2488_p2;
wire    ap_CS_fsm_state8;
(* use_dsp48 = "no" *) wire  signed [11:0] mul540_i_i_fu_2498_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul544_i_i_fu_2508_p2;
wire    ap_CS_fsm_state9;
(* use_dsp48 = "no" *) wire  signed [11:0] mul548_i_i_fu_2518_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul552_i_i_fu_2528_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul556_i_i_fu_2538_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul560_i_i_fu_2548_p2;
(* use_dsp48 = "no" *) wire  signed [11:0] mul564_i_i_fu_2558_p2;
wire    ap_CS_fsm_state10;
reg   [7:0] weight_l2_0_load_reg_4762;
wire    ap_CS_fsm_state11;
reg   [7:0] weight_l2_1_load_reg_4767;
reg   [7:0] weight_l2_2_load_reg_4772;
reg   [7:0] weight_l2_3_load_reg_4777;
reg   [7:0] weight_l2_4_load_reg_4782;
reg   [7:0] weight_l2_5_load_reg_4787;
reg   [7:0] weight_l2_6_load_reg_4792;
reg   [7:0] weight_l2_7_load_reg_4797;
reg   [7:0] weight_l2_8_load_reg_4802;
reg   [7:0] weight_l2_9_load_reg_4807;
reg   [7:0] weight_l2_10_load_reg_4812;
reg   [7:0] weight_l2_11_load_reg_4817;
reg   [7:0] weight_l2_12_load_reg_4822;
reg   [7:0] weight_l2_13_load_reg_4827;
reg   [7:0] weight_l2_14_load_reg_4832;
reg   [7:0] weight_l2_15_load_reg_4837;
reg   [7:0] weight_l2_0_load_1_reg_4842;
reg   [7:0] weight_l2_1_load_1_reg_4847;
reg   [7:0] weight_l2_2_load_1_reg_4852;
reg   [7:0] weight_l2_3_load_1_reg_4857;
reg   [7:0] weight_l2_4_load_1_reg_4862;
reg   [7:0] weight_l2_5_load_1_reg_4867;
reg   [7:0] weight_l2_6_load_1_reg_4872;
reg   [7:0] weight_l2_7_load_1_reg_4877;
reg   [7:0] weight_l2_8_load_1_reg_4882;
reg   [7:0] weight_l2_9_load_1_reg_4887;
reg   [7:0] weight_l2_10_load_1_reg_4892;
reg   [7:0] weight_l2_11_load_1_reg_4897;
reg   [7:0] weight_l2_12_load_1_reg_4902;
reg   [7:0] weight_l2_13_load_1_reg_4907;
reg   [7:0] weight_l2_14_load_1_reg_4912;
reg   [7:0] weight_l2_15_load_1_reg_4917;
reg   [7:0] weight_l2_0_load_2_reg_5082;
wire    ap_CS_fsm_state12;
reg   [7:0] weight_l2_1_load_2_reg_5087;
reg   [7:0] weight_l2_2_load_2_reg_5092;
reg   [7:0] weight_l2_3_load_2_reg_5097;
reg   [7:0] weight_l2_4_load_2_reg_5102;
reg   [7:0] weight_l2_5_load_2_reg_5107;
reg   [7:0] weight_l2_6_load_2_reg_5112;
reg   [7:0] weight_l2_7_load_2_reg_5117;
reg   [7:0] weight_l2_8_load_2_reg_5122;
reg   [7:0] weight_l2_9_load_2_reg_5127;
reg   [7:0] weight_l2_10_load_2_reg_5132;
reg   [7:0] weight_l2_11_load_2_reg_5137;
reg   [7:0] weight_l2_12_load_2_reg_5142;
reg   [7:0] weight_l2_13_load_2_reg_5147;
reg   [7:0] weight_l2_14_load_2_reg_5152;
reg   [7:0] weight_l2_15_load_2_reg_5157;
reg   [7:0] weight_l2_0_load_3_reg_5162;
reg   [7:0] weight_l2_1_load_3_reg_5167;
reg   [7:0] weight_l2_2_load_3_reg_5172;
reg   [7:0] weight_l2_3_load_3_reg_5177;
reg   [7:0] weight_l2_4_load_3_reg_5182;
reg   [7:0] weight_l2_5_load_3_reg_5187;
reg   [7:0] weight_l2_6_load_3_reg_5192;
reg   [7:0] weight_l2_7_load_3_reg_5197;
reg   [7:0] weight_l2_8_load_3_reg_5202;
reg   [7:0] weight_l2_9_load_3_reg_5207;
reg   [7:0] weight_l2_10_load_3_reg_5212;
reg   [7:0] weight_l2_11_load_3_reg_5217;
reg   [7:0] weight_l2_12_load_3_reg_5222;
reg   [7:0] weight_l2_13_load_3_reg_5227;
reg   [7:0] weight_l2_14_load_3_reg_5232;
reg   [7:0] weight_l2_15_load_3_reg_5237;
reg   [7:0] weight_l2_0_load_4_reg_5402;
wire    ap_CS_fsm_state13;
reg   [7:0] weight_l2_1_load_4_reg_5407;
reg   [7:0] weight_l2_2_load_4_reg_5412;
reg   [7:0] weight_l2_3_load_4_reg_5417;
reg   [7:0] weight_l2_4_load_4_reg_5422;
reg   [7:0] weight_l2_5_load_4_reg_5427;
reg   [7:0] weight_l2_6_load_4_reg_5432;
reg   [7:0] weight_l2_7_load_4_reg_5437;
reg   [7:0] weight_l2_8_load_4_reg_5442;
reg   [7:0] weight_l2_9_load_4_reg_5447;
reg   [7:0] weight_l2_10_load_4_reg_5452;
reg   [7:0] weight_l2_11_load_4_reg_5457;
reg   [7:0] weight_l2_12_load_4_reg_5462;
reg   [7:0] weight_l2_13_load_4_reg_5467;
reg   [7:0] weight_l2_14_load_4_reg_5472;
reg   [7:0] weight_l2_15_load_4_reg_5477;
reg   [7:0] weight_l2_0_load_5_reg_5482;
reg   [7:0] weight_l2_1_load_5_reg_5487;
reg   [7:0] weight_l2_2_load_5_reg_5492;
reg   [7:0] weight_l2_3_load_5_reg_5497;
reg   [7:0] weight_l2_4_load_5_reg_5502;
reg   [7:0] weight_l2_5_load_5_reg_5507;
reg   [7:0] weight_l2_6_load_5_reg_5512;
reg   [7:0] weight_l2_7_load_5_reg_5517;
reg   [7:0] weight_l2_8_load_5_reg_5522;
reg   [7:0] weight_l2_9_load_5_reg_5527;
reg   [7:0] weight_l2_10_load_5_reg_5532;
reg   [7:0] weight_l2_11_load_5_reg_5537;
reg   [7:0] weight_l2_12_load_5_reg_5542;
reg   [7:0] weight_l2_13_load_5_reg_5547;
reg   [7:0] weight_l2_14_load_5_reg_5552;
reg   [7:0] weight_l2_15_load_5_reg_5557;
reg   [7:0] weight_l2_0_load_6_reg_5722;
wire    ap_CS_fsm_state14;
reg   [7:0] weight_l2_1_load_6_reg_5727;
reg   [7:0] weight_l2_2_load_6_reg_5732;
reg   [7:0] weight_l2_3_load_6_reg_5737;
reg   [7:0] weight_l2_4_load_6_reg_5742;
reg   [7:0] weight_l2_5_load_6_reg_5747;
reg   [7:0] weight_l2_6_load_6_reg_5752;
reg   [7:0] weight_l2_7_load_6_reg_5757;
reg   [7:0] weight_l2_8_load_6_reg_5762;
reg   [7:0] weight_l2_9_load_6_reg_5767;
reg   [7:0] weight_l2_10_load_6_reg_5772;
reg   [7:0] weight_l2_11_load_6_reg_5777;
reg   [7:0] weight_l2_12_load_6_reg_5782;
reg   [7:0] weight_l2_13_load_6_reg_5787;
reg   [7:0] weight_l2_14_load_6_reg_5792;
reg   [7:0] weight_l2_15_load_6_reg_5797;
reg   [7:0] weight_l2_0_load_7_reg_5802;
reg   [7:0] weight_l2_1_load_7_reg_5807;
reg   [7:0] weight_l2_2_load_7_reg_5812;
reg   [7:0] weight_l2_3_load_7_reg_5817;
reg   [7:0] weight_l2_4_load_7_reg_5822;
reg   [7:0] weight_l2_5_load_7_reg_5827;
reg   [7:0] weight_l2_6_load_7_reg_5832;
reg   [7:0] weight_l2_7_load_7_reg_5837;
reg   [7:0] weight_l2_8_load_7_reg_5842;
reg   [7:0] weight_l2_9_load_7_reg_5847;
reg   [7:0] weight_l2_10_load_7_reg_5852;
reg   [7:0] weight_l2_11_load_7_reg_5857;
reg   [7:0] weight_l2_12_load_7_reg_5862;
reg   [7:0] weight_l2_13_load_7_reg_5867;
reg   [7:0] weight_l2_14_load_7_reg_5872;
reg   [7:0] weight_l2_15_load_7_reg_5877;
reg   [7:0] weight_l2_0_load_8_reg_6042;
wire    ap_CS_fsm_state15;
reg   [7:0] weight_l2_1_load_8_reg_6047;
reg   [7:0] weight_l2_2_load_8_reg_6052;
reg   [7:0] weight_l2_3_load_8_reg_6057;
reg   [7:0] weight_l2_4_load_8_reg_6062;
reg   [7:0] weight_l2_5_load_8_reg_6067;
reg   [7:0] weight_l2_6_load_8_reg_6072;
reg   [7:0] weight_l2_7_load_8_reg_6077;
reg   [7:0] weight_l2_8_load_8_reg_6082;
reg   [7:0] weight_l2_9_load_8_reg_6087;
reg   [7:0] weight_l2_10_load_8_reg_6092;
reg   [7:0] weight_l2_11_load_8_reg_6097;
reg   [7:0] weight_l2_12_load_8_reg_6102;
reg   [7:0] weight_l2_13_load_8_reg_6107;
reg   [7:0] weight_l2_14_load_8_reg_6112;
reg   [7:0] weight_l2_15_load_8_reg_6117;
reg   [7:0] weight_l2_0_load_9_reg_6122;
reg   [7:0] weight_l2_1_load_9_reg_6127;
reg   [7:0] weight_l2_2_load_9_reg_6132;
reg   [7:0] weight_l2_3_load_9_reg_6137;
reg   [7:0] weight_l2_4_load_9_reg_6142;
reg   [7:0] weight_l2_5_load_9_reg_6147;
reg   [7:0] weight_l2_6_load_9_reg_6152;
reg   [7:0] weight_l2_7_load_9_reg_6157;
reg   [7:0] weight_l2_8_load_9_reg_6162;
reg   [7:0] weight_l2_9_load_9_reg_6167;
reg   [7:0] weight_l2_10_load_9_reg_6172;
reg   [7:0] weight_l2_11_load_9_reg_6177;
reg   [7:0] weight_l2_12_load_9_reg_6182;
reg   [7:0] weight_l2_13_load_9_reg_6187;
reg   [7:0] weight_l2_14_load_9_reg_6192;
reg   [7:0] weight_l2_15_load_9_reg_6197;
wire  signed [11:0] grp_fu_4363_p4;
reg  signed [11:0] add12_12_i_i_reg_6362;
wire  signed [11:0] grp_fu_4370_p4;
reg  signed [11:0] add12_13_i_i_reg_6367;
wire  signed [11:0] grp_fu_4377_p4;
reg  signed [11:0] add12_14_i_i_reg_6372;
wire  signed [11:0] grp_fu_4384_p4;
reg  signed [11:0] add12_15_i_i_reg_6377;
reg   [7:0] weight_l2_0_load_10_reg_6382;
wire    ap_CS_fsm_state16;
reg   [7:0] weight_l2_1_load_10_reg_6387;
reg   [7:0] weight_l2_2_load_10_reg_6392;
reg   [7:0] weight_l2_3_load_10_reg_6397;
reg   [7:0] weight_l2_4_load_10_reg_6402;
reg   [7:0] weight_l2_5_load_10_reg_6407;
reg   [7:0] weight_l2_6_load_10_reg_6412;
reg   [7:0] weight_l2_7_load_10_reg_6417;
reg   [7:0] weight_l2_8_load_10_reg_6422;
reg   [7:0] weight_l2_9_load_10_reg_6427;
reg   [7:0] weight_l2_10_load_10_reg_6432;
reg   [7:0] weight_l2_11_load_10_reg_6437;
reg   [7:0] weight_l2_12_load_10_reg_6442;
reg   [7:0] weight_l2_13_load_10_reg_6447;
reg   [7:0] weight_l2_14_load_10_reg_6452;
reg   [7:0] weight_l2_15_load_10_reg_6457;
reg   [7:0] weight_l2_0_load_11_reg_6462;
reg   [7:0] weight_l2_1_load_11_reg_6467;
reg   [7:0] weight_l2_2_load_11_reg_6472;
reg   [7:0] weight_l2_3_load_11_reg_6477;
reg   [7:0] weight_l2_4_load_11_reg_6482;
reg   [7:0] weight_l2_5_load_11_reg_6487;
reg   [7:0] weight_l2_6_load_11_reg_6492;
reg   [7:0] weight_l2_7_load_11_reg_6497;
reg   [7:0] weight_l2_8_load_11_reg_6502;
reg   [7:0] weight_l2_9_load_11_reg_6507;
reg   [7:0] weight_l2_10_load_11_reg_6512;
reg   [7:0] weight_l2_11_load_11_reg_6517;
reg   [7:0] weight_l2_12_load_11_reg_6522;
reg   [7:0] weight_l2_13_load_11_reg_6527;
reg   [7:0] weight_l2_14_load_11_reg_6532;
reg   [7:0] weight_l2_15_load_11_reg_6537;
reg   [7:0] weight_l2_0_load_12_reg_6702;
wire    ap_CS_fsm_state17;
reg   [7:0] weight_l2_1_load_12_reg_6707;
reg   [7:0] weight_l2_2_load_12_reg_6712;
reg   [7:0] weight_l2_3_load_12_reg_6717;
reg   [7:0] weight_l2_4_load_12_reg_6722;
reg   [7:0] weight_l2_5_load_12_reg_6727;
reg   [7:0] weight_l2_6_load_12_reg_6732;
reg   [7:0] weight_l2_7_load_12_reg_6737;
reg   [7:0] weight_l2_8_load_12_reg_6742;
reg   [7:0] weight_l2_9_load_12_reg_6747;
reg   [7:0] weight_l2_10_load_12_reg_6752;
reg   [7:0] weight_l2_11_load_12_reg_6757;
reg   [7:0] weight_l2_12_load_12_reg_6762;
reg   [7:0] weight_l2_13_load_12_reg_6767;
reg   [7:0] weight_l2_14_load_12_reg_6772;
reg   [7:0] weight_l2_15_load_12_reg_6777;
reg   [7:0] weight_l2_0_load_13_reg_6782;
reg   [7:0] weight_l2_1_load_13_reg_6787;
reg   [7:0] weight_l2_2_load_13_reg_6792;
reg   [7:0] weight_l2_3_load_13_reg_6797;
reg   [7:0] weight_l2_4_load_13_reg_6802;
reg   [7:0] weight_l2_5_load_13_reg_6807;
reg   [7:0] weight_l2_6_load_13_reg_6812;
reg   [7:0] weight_l2_7_load_13_reg_6817;
reg   [7:0] weight_l2_8_load_13_reg_6822;
reg   [7:0] weight_l2_9_load_13_reg_6827;
reg   [7:0] weight_l2_10_load_13_reg_6832;
reg   [7:0] weight_l2_11_load_13_reg_6837;
reg   [7:0] weight_l2_12_load_13_reg_6842;
reg   [7:0] weight_l2_13_load_13_reg_6847;
reg   [7:0] weight_l2_14_load_13_reg_6852;
reg   [7:0] weight_l2_15_load_13_reg_6857;
wire   [63:0] idxprom13_i_i_fu_2563_p1;
wire   [63:0] idxprom13_1_i_i_fu_2582_p1;
wire   [63:0] idxprom13_2_i_i_fu_2601_p1;
wire   [63:0] idxprom13_3_i_i_fu_2620_p1;
wire   [63:0] idxprom13_4_i_i_fu_2639_p1;
wire   [63:0] idxprom13_5_i_i_fu_2658_p1;
wire   [63:0] idxprom13_6_i_i_fu_2677_p1;
wire   [63:0] idxprom13_7_i_i_fu_2696_p1;
wire   [63:0] idxprom13_8_i_i_fu_2715_p1;
wire   [63:0] idxprom13_9_i_i_fu_2734_p1;
wire   [63:0] idxprom13_10_i_i_fu_2753_p1;
wire   [63:0] idxprom13_11_i_i_fu_2772_p1;
wire   [63:0] idxprom13_12_i_i_fu_2791_p1;
wire   [63:0] idxprom13_13_i_i_fu_2810_p1;
wire   [63:0] idxprom13_14_i_i_fu_2829_p1;
wire   [63:0] idxprom13_15_i_i_fu_2848_p1;
wire   [7:0] trunc_ln859_fu_2383_p1;
wire  signed [11:0] trunc_ln859_fu_2383_p0;
wire   [11:0] c_1_fu_2412_p2;
wire   [11:0] c_2_fu_2423_p2;
wire   [11:0] c_3_fu_2433_p2;
wire   [11:0] c_4_fu_2443_p2;
wire   [11:0] c_5_fu_2453_p2;
wire   [11:0] c_6_fu_2463_p2;
wire   [11:0] c_7_fu_2473_p2;
wire   [11:0] c_8_fu_2483_p2;
wire   [11:0] c_9_fu_2493_p2;
wire   [11:0] c_10_fu_2503_p2;
wire   [11:0] c_11_fu_2513_p2;
wire   [11:0] c_12_fu_2523_p2;
wire   [11:0] c_13_fu_2533_p2;
wire   [11:0] c_14_fu_2543_p2;
wire   [11:0] c_15_fu_2553_p2;
wire  signed [11:0] grp_fu_4217_p4;
wire  signed [11:0] grp_fu_4225_p4;
wire  signed [11:0] grp_fu_4243_p4;
wire  signed [11:0] grp_fu_4251_p4;
wire  signed [11:0] grp_fu_4269_p4;
wire  signed [11:0] grp_fu_4277_p4;
wire  signed [11:0] grp_fu_4315_p4;
wire  signed [11:0] grp_fu_4323_p4;
wire  signed [11:0] grp_fu_4331_p4;
wire  signed [11:0] grp_fu_4339_p4;
wire  signed [11:0] grp_fu_4347_p4;
wire  signed [11:0] grp_fu_4355_p4;
wire    ap_CS_fsm_state18;
wire  signed [11:0] grp_fu_4187_p2;
wire  signed [11:0] grp_fu_4192_p2;
wire  signed [11:0] grp_fu_4197_p2;
wire  signed [11:0] grp_fu_4202_p2;
wire  signed [11:0] grp_fu_4207_p2;
wire  signed [11:0] grp_fu_4212_p2;
wire  signed [11:0] grp_fu_4233_p2;
wire  signed [11:0] grp_fu_4238_p2;
wire  signed [11:0] grp_fu_4259_p2;
wire  signed [11:0] grp_fu_4264_p2;
wire  signed [11:0] grp_fu_4285_p2;
wire  signed [11:0] grp_fu_4290_p2;
wire  signed [11:0] grp_fu_4295_p2;
wire  signed [11:0] grp_fu_4300_p2;
wire  signed [11:0] grp_fu_4305_p2;
wire  signed [11:0] grp_fu_4310_p2;
reg    grp_fu_4179_ce;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 18'd1;
end

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U310(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ko_3_dout),
    .din1(C_L2_dout),
    .ce(grp_fu_4179_ce),
    .dout(grp_fu_4179_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U311(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul52_i_i_fu_2407_p2),
    .ce(1'b1),
    .dout(grp_fu_4187_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U312(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul58_i_i_fu_2418_p2),
    .ce(1'b1),
    .dout(grp_fu_4192_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U313(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul512_i_i_fu_2428_p2),
    .ce(1'b1),
    .dout(grp_fu_4197_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U314(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul516_i_i_fu_2438_p2),
    .ce(1'b1),
    .dout(grp_fu_4202_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U315(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul520_i_i_fu_2448_p2),
    .ce(1'b1),
    .dout(grp_fu_4207_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U316(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul524_i_i_fu_2458_p2),
    .ce(1'b1),
    .dout(grp_fu_4212_p2)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U317(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4187_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4217_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U318(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4192_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4225_p4)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U319(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul528_i_i_fu_2468_p2),
    .ce(1'b1),
    .dout(grp_fu_4233_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U320(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul532_i_i_fu_2478_p2),
    .ce(1'b1),
    .dout(grp_fu_4238_p2)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U321(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4197_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4243_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U322(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4202_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4251_p4)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U323(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul536_i_i_fu_2488_p2),
    .ce(1'b1),
    .dout(grp_fu_4259_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U324(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul540_i_i_fu_2498_p2),
    .ce(1'b1),
    .dout(grp_fu_4264_p2)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U325(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4207_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4269_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U326(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4212_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4277_p4)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U327(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul544_i_i_fu_2508_p2),
    .ce(1'b1),
    .dout(grp_fu_4285_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U328(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul548_i_i_fu_2518_p2),
    .ce(1'b1),
    .dout(grp_fu_4290_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U329(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul552_i_i_fu_2528_p2),
    .ce(1'b1),
    .dout(grp_fu_4295_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U330(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul556_i_i_fu_2538_p2),
    .ce(1'b1),
    .dout(grp_fu_4300_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U331(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul560_i_i_fu_2548_p2),
    .ce(1'b1),
    .dout(grp_fu_4305_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U332(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_4396),
    .din1(mul564_i_i_fu_2558_p2),
    .ce(1'b1),
    .dout(grp_fu_4310_p2)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U333(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4233_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4315_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U334(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4238_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4323_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U335(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4259_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4331_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U336(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4264_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4339_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U337(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4285_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4347_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U338(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4290_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4355_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U339(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4295_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4363_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U340(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4300_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4370_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U341(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4305_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4377_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U342(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln865_reg_4441),
    .din1(grp_fu_4310_p2),
    .din2(S_L2_read_reg_4416),
    .din3(trunc_ln867_reg_4461),
    .ce(1'b1),
    .dout(grp_fu_4384_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        R_L2_read_reg_4396 <= R_L2_dout;
        S_L2_read_reg_4416 <= S_L2_dout;
        empty_reg_4481 <= empty_fu_2396_p1;
        trunc_ln865_reg_4441 <= trunc_ln865_fu_2388_p1;
        trunc_ln867_reg_4461 <= trunc_ln867_fu_2392_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add12_12_i_i_reg_6362 <= grp_fu_4363_p4;
        add12_13_i_i_reg_6367 <= grp_fu_4370_p4;
        add12_14_i_i_reg_6372 <= grp_fu_4377_p4;
        add12_15_i_i_reg_6377 <= grp_fu_4384_p4;
        weight_l2_0_load_8_reg_6042 <= weight_l2_0_q1;
        weight_l2_0_load_9_reg_6122 <= weight_l2_0_q0;
        weight_l2_10_load_8_reg_6092 <= weight_l2_10_q1;
        weight_l2_10_load_9_reg_6172 <= weight_l2_10_q0;
        weight_l2_11_load_8_reg_6097 <= weight_l2_11_q1;
        weight_l2_11_load_9_reg_6177 <= weight_l2_11_q0;
        weight_l2_12_load_8_reg_6102 <= weight_l2_12_q1;
        weight_l2_12_load_9_reg_6182 <= weight_l2_12_q0;
        weight_l2_13_load_8_reg_6107 <= weight_l2_13_q1;
        weight_l2_13_load_9_reg_6187 <= weight_l2_13_q0;
        weight_l2_14_load_8_reg_6112 <= weight_l2_14_q1;
        weight_l2_14_load_9_reg_6192 <= weight_l2_14_q0;
        weight_l2_15_load_8_reg_6117 <= weight_l2_15_q1;
        weight_l2_15_load_9_reg_6197 <= weight_l2_15_q0;
        weight_l2_1_load_8_reg_6047 <= weight_l2_1_q1;
        weight_l2_1_load_9_reg_6127 <= weight_l2_1_q0;
        weight_l2_2_load_8_reg_6052 <= weight_l2_2_q1;
        weight_l2_2_load_9_reg_6132 <= weight_l2_2_q0;
        weight_l2_3_load_8_reg_6057 <= weight_l2_3_q1;
        weight_l2_3_load_9_reg_6137 <= weight_l2_3_q0;
        weight_l2_4_load_8_reg_6062 <= weight_l2_4_q1;
        weight_l2_4_load_9_reg_6142 <= weight_l2_4_q0;
        weight_l2_5_load_8_reg_6067 <= weight_l2_5_q1;
        weight_l2_5_load_9_reg_6147 <= weight_l2_5_q0;
        weight_l2_6_load_8_reg_6072 <= weight_l2_6_q1;
        weight_l2_6_load_9_reg_6152 <= weight_l2_6_q0;
        weight_l2_7_load_8_reg_6077 <= weight_l2_7_q1;
        weight_l2_7_load_9_reg_6157 <= weight_l2_7_q0;
        weight_l2_8_load_8_reg_6082 <= weight_l2_8_q1;
        weight_l2_8_load_9_reg_6162 <= weight_l2_8_q0;
        weight_l2_9_load_8_reg_6087 <= weight_l2_9_q1;
        weight_l2_9_load_9_reg_6167 <= weight_l2_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c_reg_4486[11 : 4] <= c_fu_2400_p3[11 : 4];
        mul4_i_i_reg_4504 <= grp_fu_4179_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_0_load_10_reg_6382 <= weight_l2_0_q1;
        weight_l2_0_load_11_reg_6462 <= weight_l2_0_q0;
        weight_l2_10_load_10_reg_6432 <= weight_l2_10_q1;
        weight_l2_10_load_11_reg_6512 <= weight_l2_10_q0;
        weight_l2_11_load_10_reg_6437 <= weight_l2_11_q1;
        weight_l2_11_load_11_reg_6517 <= weight_l2_11_q0;
        weight_l2_12_load_10_reg_6442 <= weight_l2_12_q1;
        weight_l2_12_load_11_reg_6522 <= weight_l2_12_q0;
        weight_l2_13_load_10_reg_6447 <= weight_l2_13_q1;
        weight_l2_13_load_11_reg_6527 <= weight_l2_13_q0;
        weight_l2_14_load_10_reg_6452 <= weight_l2_14_q1;
        weight_l2_14_load_11_reg_6532 <= weight_l2_14_q0;
        weight_l2_15_load_10_reg_6457 <= weight_l2_15_q1;
        weight_l2_15_load_11_reg_6537 <= weight_l2_15_q0;
        weight_l2_1_load_10_reg_6387 <= weight_l2_1_q1;
        weight_l2_1_load_11_reg_6467 <= weight_l2_1_q0;
        weight_l2_2_load_10_reg_6392 <= weight_l2_2_q1;
        weight_l2_2_load_11_reg_6472 <= weight_l2_2_q0;
        weight_l2_3_load_10_reg_6397 <= weight_l2_3_q1;
        weight_l2_3_load_11_reg_6477 <= weight_l2_3_q0;
        weight_l2_4_load_10_reg_6402 <= weight_l2_4_q1;
        weight_l2_4_load_11_reg_6482 <= weight_l2_4_q0;
        weight_l2_5_load_10_reg_6407 <= weight_l2_5_q1;
        weight_l2_5_load_11_reg_6487 <= weight_l2_5_q0;
        weight_l2_6_load_10_reg_6412 <= weight_l2_6_q1;
        weight_l2_6_load_11_reg_6492 <= weight_l2_6_q0;
        weight_l2_7_load_10_reg_6417 <= weight_l2_7_q1;
        weight_l2_7_load_11_reg_6497 <= weight_l2_7_q0;
        weight_l2_8_load_10_reg_6422 <= weight_l2_8_q1;
        weight_l2_8_load_11_reg_6502 <= weight_l2_8_q0;
        weight_l2_9_load_10_reg_6427 <= weight_l2_9_q1;
        weight_l2_9_load_11_reg_6507 <= weight_l2_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_0_load_12_reg_6702 <= weight_l2_0_q1;
        weight_l2_0_load_13_reg_6782 <= weight_l2_0_q0;
        weight_l2_10_load_12_reg_6752 <= weight_l2_10_q1;
        weight_l2_10_load_13_reg_6832 <= weight_l2_10_q0;
        weight_l2_11_load_12_reg_6757 <= weight_l2_11_q1;
        weight_l2_11_load_13_reg_6837 <= weight_l2_11_q0;
        weight_l2_12_load_12_reg_6762 <= weight_l2_12_q1;
        weight_l2_12_load_13_reg_6842 <= weight_l2_12_q0;
        weight_l2_13_load_12_reg_6767 <= weight_l2_13_q1;
        weight_l2_13_load_13_reg_6847 <= weight_l2_13_q0;
        weight_l2_14_load_12_reg_6772 <= weight_l2_14_q1;
        weight_l2_14_load_13_reg_6852 <= weight_l2_14_q0;
        weight_l2_15_load_12_reg_6777 <= weight_l2_15_q1;
        weight_l2_15_load_13_reg_6857 <= weight_l2_15_q0;
        weight_l2_1_load_12_reg_6707 <= weight_l2_1_q1;
        weight_l2_1_load_13_reg_6787 <= weight_l2_1_q0;
        weight_l2_2_load_12_reg_6712 <= weight_l2_2_q1;
        weight_l2_2_load_13_reg_6792 <= weight_l2_2_q0;
        weight_l2_3_load_12_reg_6717 <= weight_l2_3_q1;
        weight_l2_3_load_13_reg_6797 <= weight_l2_3_q0;
        weight_l2_4_load_12_reg_6722 <= weight_l2_4_q1;
        weight_l2_4_load_13_reg_6802 <= weight_l2_4_q0;
        weight_l2_5_load_12_reg_6727 <= weight_l2_5_q1;
        weight_l2_5_load_13_reg_6807 <= weight_l2_5_q0;
        weight_l2_6_load_12_reg_6732 <= weight_l2_6_q1;
        weight_l2_6_load_13_reg_6812 <= weight_l2_6_q0;
        weight_l2_7_load_12_reg_6737 <= weight_l2_7_q1;
        weight_l2_7_load_13_reg_6817 <= weight_l2_7_q0;
        weight_l2_8_load_12_reg_6742 <= weight_l2_8_q1;
        weight_l2_8_load_13_reg_6822 <= weight_l2_8_q0;
        weight_l2_9_load_12_reg_6747 <= weight_l2_9_q1;
        weight_l2_9_load_13_reg_6827 <= weight_l2_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_0_load_1_reg_4842 <= weight_l2_0_q0;
        weight_l2_0_load_reg_4762 <= weight_l2_0_q1;
        weight_l2_10_load_1_reg_4892 <= weight_l2_10_q0;
        weight_l2_10_load_reg_4812 <= weight_l2_10_q1;
        weight_l2_11_load_1_reg_4897 <= weight_l2_11_q0;
        weight_l2_11_load_reg_4817 <= weight_l2_11_q1;
        weight_l2_12_load_1_reg_4902 <= weight_l2_12_q0;
        weight_l2_12_load_reg_4822 <= weight_l2_12_q1;
        weight_l2_13_load_1_reg_4907 <= weight_l2_13_q0;
        weight_l2_13_load_reg_4827 <= weight_l2_13_q1;
        weight_l2_14_load_1_reg_4912 <= weight_l2_14_q0;
        weight_l2_14_load_reg_4832 <= weight_l2_14_q1;
        weight_l2_15_load_1_reg_4917 <= weight_l2_15_q0;
        weight_l2_15_load_reg_4837 <= weight_l2_15_q1;
        weight_l2_1_load_1_reg_4847 <= weight_l2_1_q0;
        weight_l2_1_load_reg_4767 <= weight_l2_1_q1;
        weight_l2_2_load_1_reg_4852 <= weight_l2_2_q0;
        weight_l2_2_load_reg_4772 <= weight_l2_2_q1;
        weight_l2_3_load_1_reg_4857 <= weight_l2_3_q0;
        weight_l2_3_load_reg_4777 <= weight_l2_3_q1;
        weight_l2_4_load_1_reg_4862 <= weight_l2_4_q0;
        weight_l2_4_load_reg_4782 <= weight_l2_4_q1;
        weight_l2_5_load_1_reg_4867 <= weight_l2_5_q0;
        weight_l2_5_load_reg_4787 <= weight_l2_5_q1;
        weight_l2_6_load_1_reg_4872 <= weight_l2_6_q0;
        weight_l2_6_load_reg_4792 <= weight_l2_6_q1;
        weight_l2_7_load_1_reg_4877 <= weight_l2_7_q0;
        weight_l2_7_load_reg_4797 <= weight_l2_7_q1;
        weight_l2_8_load_1_reg_4882 <= weight_l2_8_q0;
        weight_l2_8_load_reg_4802 <= weight_l2_8_q1;
        weight_l2_9_load_1_reg_4887 <= weight_l2_9_q0;
        weight_l2_9_load_reg_4807 <= weight_l2_9_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_0_load_2_reg_5082 <= weight_l2_0_q1;
        weight_l2_0_load_3_reg_5162 <= weight_l2_0_q0;
        weight_l2_10_load_2_reg_5132 <= weight_l2_10_q1;
        weight_l2_10_load_3_reg_5212 <= weight_l2_10_q0;
        weight_l2_11_load_2_reg_5137 <= weight_l2_11_q1;
        weight_l2_11_load_3_reg_5217 <= weight_l2_11_q0;
        weight_l2_12_load_2_reg_5142 <= weight_l2_12_q1;
        weight_l2_12_load_3_reg_5222 <= weight_l2_12_q0;
        weight_l2_13_load_2_reg_5147 <= weight_l2_13_q1;
        weight_l2_13_load_3_reg_5227 <= weight_l2_13_q0;
        weight_l2_14_load_2_reg_5152 <= weight_l2_14_q1;
        weight_l2_14_load_3_reg_5232 <= weight_l2_14_q0;
        weight_l2_15_load_2_reg_5157 <= weight_l2_15_q1;
        weight_l2_15_load_3_reg_5237 <= weight_l2_15_q0;
        weight_l2_1_load_2_reg_5087 <= weight_l2_1_q1;
        weight_l2_1_load_3_reg_5167 <= weight_l2_1_q0;
        weight_l2_2_load_2_reg_5092 <= weight_l2_2_q1;
        weight_l2_2_load_3_reg_5172 <= weight_l2_2_q0;
        weight_l2_3_load_2_reg_5097 <= weight_l2_3_q1;
        weight_l2_3_load_3_reg_5177 <= weight_l2_3_q0;
        weight_l2_4_load_2_reg_5102 <= weight_l2_4_q1;
        weight_l2_4_load_3_reg_5182 <= weight_l2_4_q0;
        weight_l2_5_load_2_reg_5107 <= weight_l2_5_q1;
        weight_l2_5_load_3_reg_5187 <= weight_l2_5_q0;
        weight_l2_6_load_2_reg_5112 <= weight_l2_6_q1;
        weight_l2_6_load_3_reg_5192 <= weight_l2_6_q0;
        weight_l2_7_load_2_reg_5117 <= weight_l2_7_q1;
        weight_l2_7_load_3_reg_5197 <= weight_l2_7_q0;
        weight_l2_8_load_2_reg_5122 <= weight_l2_8_q1;
        weight_l2_8_load_3_reg_5202 <= weight_l2_8_q0;
        weight_l2_9_load_2_reg_5127 <= weight_l2_9_q1;
        weight_l2_9_load_3_reg_5207 <= weight_l2_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_0_load_4_reg_5402 <= weight_l2_0_q1;
        weight_l2_0_load_5_reg_5482 <= weight_l2_0_q0;
        weight_l2_10_load_4_reg_5452 <= weight_l2_10_q1;
        weight_l2_10_load_5_reg_5532 <= weight_l2_10_q0;
        weight_l2_11_load_4_reg_5457 <= weight_l2_11_q1;
        weight_l2_11_load_5_reg_5537 <= weight_l2_11_q0;
        weight_l2_12_load_4_reg_5462 <= weight_l2_12_q1;
        weight_l2_12_load_5_reg_5542 <= weight_l2_12_q0;
        weight_l2_13_load_4_reg_5467 <= weight_l2_13_q1;
        weight_l2_13_load_5_reg_5547 <= weight_l2_13_q0;
        weight_l2_14_load_4_reg_5472 <= weight_l2_14_q1;
        weight_l2_14_load_5_reg_5552 <= weight_l2_14_q0;
        weight_l2_15_load_4_reg_5477 <= weight_l2_15_q1;
        weight_l2_15_load_5_reg_5557 <= weight_l2_15_q0;
        weight_l2_1_load_4_reg_5407 <= weight_l2_1_q1;
        weight_l2_1_load_5_reg_5487 <= weight_l2_1_q0;
        weight_l2_2_load_4_reg_5412 <= weight_l2_2_q1;
        weight_l2_2_load_5_reg_5492 <= weight_l2_2_q0;
        weight_l2_3_load_4_reg_5417 <= weight_l2_3_q1;
        weight_l2_3_load_5_reg_5497 <= weight_l2_3_q0;
        weight_l2_4_load_4_reg_5422 <= weight_l2_4_q1;
        weight_l2_4_load_5_reg_5502 <= weight_l2_4_q0;
        weight_l2_5_load_4_reg_5427 <= weight_l2_5_q1;
        weight_l2_5_load_5_reg_5507 <= weight_l2_5_q0;
        weight_l2_6_load_4_reg_5432 <= weight_l2_6_q1;
        weight_l2_6_load_5_reg_5512 <= weight_l2_6_q0;
        weight_l2_7_load_4_reg_5437 <= weight_l2_7_q1;
        weight_l2_7_load_5_reg_5517 <= weight_l2_7_q0;
        weight_l2_8_load_4_reg_5442 <= weight_l2_8_q1;
        weight_l2_8_load_5_reg_5522 <= weight_l2_8_q0;
        weight_l2_9_load_4_reg_5447 <= weight_l2_9_q1;
        weight_l2_9_load_5_reg_5527 <= weight_l2_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_0_load_6_reg_5722 <= weight_l2_0_q1;
        weight_l2_0_load_7_reg_5802 <= weight_l2_0_q0;
        weight_l2_10_load_6_reg_5772 <= weight_l2_10_q1;
        weight_l2_10_load_7_reg_5852 <= weight_l2_10_q0;
        weight_l2_11_load_6_reg_5777 <= weight_l2_11_q1;
        weight_l2_11_load_7_reg_5857 <= weight_l2_11_q0;
        weight_l2_12_load_6_reg_5782 <= weight_l2_12_q1;
        weight_l2_12_load_7_reg_5862 <= weight_l2_12_q0;
        weight_l2_13_load_6_reg_5787 <= weight_l2_13_q1;
        weight_l2_13_load_7_reg_5867 <= weight_l2_13_q0;
        weight_l2_14_load_6_reg_5792 <= weight_l2_14_q1;
        weight_l2_14_load_7_reg_5872 <= weight_l2_14_q0;
        weight_l2_15_load_6_reg_5797 <= weight_l2_15_q1;
        weight_l2_15_load_7_reg_5877 <= weight_l2_15_q0;
        weight_l2_1_load_6_reg_5727 <= weight_l2_1_q1;
        weight_l2_1_load_7_reg_5807 <= weight_l2_1_q0;
        weight_l2_2_load_6_reg_5732 <= weight_l2_2_q1;
        weight_l2_2_load_7_reg_5812 <= weight_l2_2_q0;
        weight_l2_3_load_6_reg_5737 <= weight_l2_3_q1;
        weight_l2_3_load_7_reg_5817 <= weight_l2_3_q0;
        weight_l2_4_load_6_reg_5742 <= weight_l2_4_q1;
        weight_l2_4_load_7_reg_5822 <= weight_l2_4_q0;
        weight_l2_5_load_6_reg_5747 <= weight_l2_5_q1;
        weight_l2_5_load_7_reg_5827 <= weight_l2_5_q0;
        weight_l2_6_load_6_reg_5752 <= weight_l2_6_q1;
        weight_l2_6_load_7_reg_5832 <= weight_l2_6_q0;
        weight_l2_7_load_6_reg_5757 <= weight_l2_7_q1;
        weight_l2_7_load_7_reg_5837 <= weight_l2_7_q0;
        weight_l2_8_load_6_reg_5762 <= weight_l2_8_q1;
        weight_l2_8_load_7_reg_5842 <= weight_l2_8_q0;
        weight_l2_9_load_6_reg_5767 <= weight_l2_9_q1;
        weight_l2_9_load_7_reg_5847 <= weight_l2_9_q0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        C_L2_blk_n = C_L2_empty_n;
    end else begin
        C_L2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        C_L2_read = 1'b1;
    end else begin
        C_L2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        R_L2_blk_n = R_L2_empty_n;
    end else begin
        R_L2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        R_L2_read = 1'b1;
    end else begin
        R_L2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        S_L2_blk_n = S_L2_empty_n;
    end else begin
        S_L2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        S_L2_read = 1'b1;
    end else begin
        S_L2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_blk_n = co_empty_n;
    end else begin
        co_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_out_blk_n = co_out_full_n;
    end else begin
        co_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_out_write = 1'b1;
    end else begin
        co_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_read = 1'b1;
    end else begin
        co_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_4179_ce = 1'b1;
    end else begin
        grp_fu_4179_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ko_3_blk_n = ko_3_empty_n;
    end else begin
        ko_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ko_3_out_blk_n = ko_3_out_full_n;
    end else begin
        ko_3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ko_3_out_write = 1'b1;
    end else begin
        ko_3_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ko_3_read = 1'b1;
    end else begin
        ko_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ro_blk_n = ro_empty_n;
    end else begin
        ro_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ro_out_blk_n = ro_out_full_n;
    end else begin
        ro_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ro_out_write = 1'b1;
    end else begin
        ro_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ro_read = 1'b1;
    end else begin
        ro_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        so_blk_n = so_empty_n;
    end else begin
        so_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        so_out_blk_n = so_out_full_n;
    end else begin
        so_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        so_out_write = 1'b1;
    end else begin
        so_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        so_read = 1'b1;
    end else begin
        so_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_0_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_0_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_0_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_0_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_0_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_0_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_0_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_0_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_0_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_0_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_0_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_0_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_0_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_0_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_0_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_0_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_10_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_10_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_10_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_10_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_10_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_10_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_10_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_10_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_10_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_10_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_10_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_10_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_10_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_10_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_10_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_10_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_10_ce0 = 1'b1;
    end else begin
        weight_l2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_10_ce1 = 1'b1;
    end else begin
        weight_l2_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_11_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_11_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_11_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_11_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_11_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_11_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_11_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_11_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_11_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_11_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_11_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_11_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_11_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_11_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_11_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_11_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_11_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_11_ce0 = 1'b1;
    end else begin
        weight_l2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_11_ce1 = 1'b1;
    end else begin
        weight_l2_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_12_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_12_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_12_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_12_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_12_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_12_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_12_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_12_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_12_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_12_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_12_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_12_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_12_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_12_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_12_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_12_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_12_ce0 = 1'b1;
    end else begin
        weight_l2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_12_ce1 = 1'b1;
    end else begin
        weight_l2_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_13_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_13_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_13_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_13_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_13_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_13_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_13_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_13_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_13_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_13_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_13_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_13_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_13_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_13_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_13_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_13_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_13_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_13_ce0 = 1'b1;
    end else begin
        weight_l2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_13_ce1 = 1'b1;
    end else begin
        weight_l2_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_14_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_14_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_14_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_14_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_14_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_14_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_14_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_14_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_14_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_14_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_14_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_14_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_14_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_14_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_14_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_14_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_14_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_14_ce0 = 1'b1;
    end else begin
        weight_l2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_14_ce1 = 1'b1;
    end else begin
        weight_l2_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_15_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_15_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_15_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_15_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_15_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_15_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_15_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_15_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_15_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_15_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_15_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_15_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_15_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_15_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_15_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_15_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_15_ce0 = 1'b1;
    end else begin
        weight_l2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_15_ce1 = 1'b1;
    end else begin
        weight_l2_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_1_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_1_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_1_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_1_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_1_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_1_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_1_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_1_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_1_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_1_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_1_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_1_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_1_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_1_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_1_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_1_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_2_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_2_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_2_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_2_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_2_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_2_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_2_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_2_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_2_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_2_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_2_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_2_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_2_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_2_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_2_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_2_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_3_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_3_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_3_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_3_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_3_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_3_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_3_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_3_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_3_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_3_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_3_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_3_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_3_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_3_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_3_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_3_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_4_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_4_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_4_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_4_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_4_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_4_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_4_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_4_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_4_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_4_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_4_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_4_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_4_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_4_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_4_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_4_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_4_ce0 = 1'b1;
    end else begin
        weight_l2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_4_ce1 = 1'b1;
    end else begin
        weight_l2_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_5_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_5_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_5_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_5_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_5_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_5_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_5_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_5_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_5_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_5_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_5_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_5_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_5_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_5_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_5_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_5_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_5_ce0 = 1'b1;
    end else begin
        weight_l2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_5_ce1 = 1'b1;
    end else begin
        weight_l2_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_6_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_6_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_6_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_6_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_6_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_6_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_6_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_6_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_6_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_6_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_6_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_6_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_6_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_6_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_6_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_6_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_6_ce0 = 1'b1;
    end else begin
        weight_l2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_6_ce1 = 1'b1;
    end else begin
        weight_l2_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_7_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_7_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_7_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_7_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_7_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_7_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_7_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_7_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_7_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_7_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_7_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_7_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_7_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_7_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_7_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_7_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_7_ce0 = 1'b1;
    end else begin
        weight_l2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_7_ce1 = 1'b1;
    end else begin
        weight_l2_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_8_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_8_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_8_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_8_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_8_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_8_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_8_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_8_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_8_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_8_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_8_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_8_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_8_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_8_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_8_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_8_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_8_ce0 = 1'b1;
    end else begin
        weight_l2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_8_ce1 = 1'b1;
    end else begin
        weight_l2_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_9_address0 = idxprom13_15_i_i_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_9_address0 = idxprom13_13_i_i_fu_2810_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_9_address0 = idxprom13_11_i_i_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_9_address0 = idxprom13_9_i_i_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_9_address0 = idxprom13_7_i_i_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_9_address0 = idxprom13_5_i_i_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_9_address0 = idxprom13_3_i_i_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_9_address0 = idxprom13_1_i_i_fu_2582_p1;
    end else begin
        weight_l2_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_9_address1 = idxprom13_14_i_i_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_9_address1 = idxprom13_12_i_i_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_9_address1 = idxprom13_10_i_i_fu_2753_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_9_address1 = idxprom13_8_i_i_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_9_address1 = idxprom13_6_i_i_fu_2677_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_9_address1 = idxprom13_4_i_i_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_9_address1 = idxprom13_2_i_i_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_9_address1 = idxprom13_i_i_fu_2563_p1;
    end else begin
        weight_l2_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_9_ce0 = 1'b1;
    end else begin
        weight_l2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_l2_9_ce1 = 1'b1;
    end else begin
        weight_l2_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0));
end

assign ap_return_0 = weight_l2_0_load_reg_4762;

assign ap_return_1 = weight_l2_0_load_1_reg_4842;

assign ap_return_10 = weight_l2_0_load_10_reg_6382;

assign ap_return_100 = weight_l2_6_load_4_reg_5432;

assign ap_return_101 = weight_l2_6_load_5_reg_5512;

assign ap_return_102 = weight_l2_6_load_6_reg_5752;

assign ap_return_103 = weight_l2_6_load_7_reg_5832;

assign ap_return_104 = weight_l2_6_load_8_reg_6072;

assign ap_return_105 = weight_l2_6_load_9_reg_6152;

assign ap_return_106 = weight_l2_6_load_10_reg_6412;

assign ap_return_107 = weight_l2_6_load_11_reg_6492;

assign ap_return_108 = weight_l2_6_load_12_reg_6732;

assign ap_return_109 = weight_l2_6_load_13_reg_6812;

assign ap_return_11 = weight_l2_0_load_11_reg_6462;

assign ap_return_110 = weight_l2_6_q1;

assign ap_return_111 = weight_l2_6_q0;

assign ap_return_112 = weight_l2_7_load_reg_4797;

assign ap_return_113 = weight_l2_7_load_1_reg_4877;

assign ap_return_114 = weight_l2_7_load_2_reg_5117;

assign ap_return_115 = weight_l2_7_load_3_reg_5197;

assign ap_return_116 = weight_l2_7_load_4_reg_5437;

assign ap_return_117 = weight_l2_7_load_5_reg_5517;

assign ap_return_118 = weight_l2_7_load_6_reg_5757;

assign ap_return_119 = weight_l2_7_load_7_reg_5837;

assign ap_return_12 = weight_l2_0_load_12_reg_6702;

assign ap_return_120 = weight_l2_7_load_8_reg_6077;

assign ap_return_121 = weight_l2_7_load_9_reg_6157;

assign ap_return_122 = weight_l2_7_load_10_reg_6417;

assign ap_return_123 = weight_l2_7_load_11_reg_6497;

assign ap_return_124 = weight_l2_7_load_12_reg_6737;

assign ap_return_125 = weight_l2_7_load_13_reg_6817;

assign ap_return_126 = weight_l2_7_q1;

assign ap_return_127 = weight_l2_7_q0;

assign ap_return_128 = weight_l2_8_load_reg_4802;

assign ap_return_129 = weight_l2_8_load_1_reg_4882;

assign ap_return_13 = weight_l2_0_load_13_reg_6782;

assign ap_return_130 = weight_l2_8_load_2_reg_5122;

assign ap_return_131 = weight_l2_8_load_3_reg_5202;

assign ap_return_132 = weight_l2_8_load_4_reg_5442;

assign ap_return_133 = weight_l2_8_load_5_reg_5522;

assign ap_return_134 = weight_l2_8_load_6_reg_5762;

assign ap_return_135 = weight_l2_8_load_7_reg_5842;

assign ap_return_136 = weight_l2_8_load_8_reg_6082;

assign ap_return_137 = weight_l2_8_load_9_reg_6162;

assign ap_return_138 = weight_l2_8_load_10_reg_6422;

assign ap_return_139 = weight_l2_8_load_11_reg_6502;

assign ap_return_14 = weight_l2_0_q1;

assign ap_return_140 = weight_l2_8_load_12_reg_6742;

assign ap_return_141 = weight_l2_8_load_13_reg_6822;

assign ap_return_142 = weight_l2_8_q1;

assign ap_return_143 = weight_l2_8_q0;

assign ap_return_144 = weight_l2_9_load_reg_4807;

assign ap_return_145 = weight_l2_9_load_1_reg_4887;

assign ap_return_146 = weight_l2_9_load_2_reg_5127;

assign ap_return_147 = weight_l2_9_load_3_reg_5207;

assign ap_return_148 = weight_l2_9_load_4_reg_5447;

assign ap_return_149 = weight_l2_9_load_5_reg_5527;

assign ap_return_15 = weight_l2_0_q0;

assign ap_return_150 = weight_l2_9_load_6_reg_5767;

assign ap_return_151 = weight_l2_9_load_7_reg_5847;

assign ap_return_152 = weight_l2_9_load_8_reg_6087;

assign ap_return_153 = weight_l2_9_load_9_reg_6167;

assign ap_return_154 = weight_l2_9_load_10_reg_6427;

assign ap_return_155 = weight_l2_9_load_11_reg_6507;

assign ap_return_156 = weight_l2_9_load_12_reg_6747;

assign ap_return_157 = weight_l2_9_load_13_reg_6827;

assign ap_return_158 = weight_l2_9_q1;

assign ap_return_159 = weight_l2_9_q0;

assign ap_return_16 = weight_l2_1_load_reg_4767;

assign ap_return_160 = weight_l2_10_load_reg_4812;

assign ap_return_161 = weight_l2_10_load_1_reg_4892;

assign ap_return_162 = weight_l2_10_load_2_reg_5132;

assign ap_return_163 = weight_l2_10_load_3_reg_5212;

assign ap_return_164 = weight_l2_10_load_4_reg_5452;

assign ap_return_165 = weight_l2_10_load_5_reg_5532;

assign ap_return_166 = weight_l2_10_load_6_reg_5772;

assign ap_return_167 = weight_l2_10_load_7_reg_5852;

assign ap_return_168 = weight_l2_10_load_8_reg_6092;

assign ap_return_169 = weight_l2_10_load_9_reg_6172;

assign ap_return_17 = weight_l2_1_load_1_reg_4847;

assign ap_return_170 = weight_l2_10_load_10_reg_6432;

assign ap_return_171 = weight_l2_10_load_11_reg_6512;

assign ap_return_172 = weight_l2_10_load_12_reg_6752;

assign ap_return_173 = weight_l2_10_load_13_reg_6832;

assign ap_return_174 = weight_l2_10_q1;

assign ap_return_175 = weight_l2_10_q0;

assign ap_return_176 = weight_l2_11_load_reg_4817;

assign ap_return_177 = weight_l2_11_load_1_reg_4897;

assign ap_return_178 = weight_l2_11_load_2_reg_5137;

assign ap_return_179 = weight_l2_11_load_3_reg_5217;

assign ap_return_18 = weight_l2_1_load_2_reg_5087;

assign ap_return_180 = weight_l2_11_load_4_reg_5457;

assign ap_return_181 = weight_l2_11_load_5_reg_5537;

assign ap_return_182 = weight_l2_11_load_6_reg_5777;

assign ap_return_183 = weight_l2_11_load_7_reg_5857;

assign ap_return_184 = weight_l2_11_load_8_reg_6097;

assign ap_return_185 = weight_l2_11_load_9_reg_6177;

assign ap_return_186 = weight_l2_11_load_10_reg_6437;

assign ap_return_187 = weight_l2_11_load_11_reg_6517;

assign ap_return_188 = weight_l2_11_load_12_reg_6757;

assign ap_return_189 = weight_l2_11_load_13_reg_6837;

assign ap_return_19 = weight_l2_1_load_3_reg_5167;

assign ap_return_190 = weight_l2_11_q1;

assign ap_return_191 = weight_l2_11_q0;

assign ap_return_192 = weight_l2_12_load_reg_4822;

assign ap_return_193 = weight_l2_12_load_1_reg_4902;

assign ap_return_194 = weight_l2_12_load_2_reg_5142;

assign ap_return_195 = weight_l2_12_load_3_reg_5222;

assign ap_return_196 = weight_l2_12_load_4_reg_5462;

assign ap_return_197 = weight_l2_12_load_5_reg_5542;

assign ap_return_198 = weight_l2_12_load_6_reg_5782;

assign ap_return_199 = weight_l2_12_load_7_reg_5862;

assign ap_return_2 = weight_l2_0_load_2_reg_5082;

assign ap_return_20 = weight_l2_1_load_4_reg_5407;

assign ap_return_200 = weight_l2_12_load_8_reg_6102;

assign ap_return_201 = weight_l2_12_load_9_reg_6182;

assign ap_return_202 = weight_l2_12_load_10_reg_6442;

assign ap_return_203 = weight_l2_12_load_11_reg_6522;

assign ap_return_204 = weight_l2_12_load_12_reg_6762;

assign ap_return_205 = weight_l2_12_load_13_reg_6842;

assign ap_return_206 = weight_l2_12_q1;

assign ap_return_207 = weight_l2_12_q0;

assign ap_return_208 = weight_l2_13_load_reg_4827;

assign ap_return_209 = weight_l2_13_load_1_reg_4907;

assign ap_return_21 = weight_l2_1_load_5_reg_5487;

assign ap_return_210 = weight_l2_13_load_2_reg_5147;

assign ap_return_211 = weight_l2_13_load_3_reg_5227;

assign ap_return_212 = weight_l2_13_load_4_reg_5467;

assign ap_return_213 = weight_l2_13_load_5_reg_5547;

assign ap_return_214 = weight_l2_13_load_6_reg_5787;

assign ap_return_215 = weight_l2_13_load_7_reg_5867;

assign ap_return_216 = weight_l2_13_load_8_reg_6107;

assign ap_return_217 = weight_l2_13_load_9_reg_6187;

assign ap_return_218 = weight_l2_13_load_10_reg_6447;

assign ap_return_219 = weight_l2_13_load_11_reg_6527;

assign ap_return_22 = weight_l2_1_load_6_reg_5727;

assign ap_return_220 = weight_l2_13_load_12_reg_6767;

assign ap_return_221 = weight_l2_13_load_13_reg_6847;

assign ap_return_222 = weight_l2_13_q1;

assign ap_return_223 = weight_l2_13_q0;

assign ap_return_224 = weight_l2_14_load_reg_4832;

assign ap_return_225 = weight_l2_14_load_1_reg_4912;

assign ap_return_226 = weight_l2_14_load_2_reg_5152;

assign ap_return_227 = weight_l2_14_load_3_reg_5232;

assign ap_return_228 = weight_l2_14_load_4_reg_5472;

assign ap_return_229 = weight_l2_14_load_5_reg_5552;

assign ap_return_23 = weight_l2_1_load_7_reg_5807;

assign ap_return_230 = weight_l2_14_load_6_reg_5792;

assign ap_return_231 = weight_l2_14_load_7_reg_5872;

assign ap_return_232 = weight_l2_14_load_8_reg_6112;

assign ap_return_233 = weight_l2_14_load_9_reg_6192;

assign ap_return_234 = weight_l2_14_load_10_reg_6452;

assign ap_return_235 = weight_l2_14_load_11_reg_6532;

assign ap_return_236 = weight_l2_14_load_12_reg_6772;

assign ap_return_237 = weight_l2_14_load_13_reg_6852;

assign ap_return_238 = weight_l2_14_q1;

assign ap_return_239 = weight_l2_14_q0;

assign ap_return_24 = weight_l2_1_load_8_reg_6047;

assign ap_return_240 = weight_l2_15_load_reg_4837;

assign ap_return_241 = weight_l2_15_load_1_reg_4917;

assign ap_return_242 = weight_l2_15_load_2_reg_5157;

assign ap_return_243 = weight_l2_15_load_3_reg_5237;

assign ap_return_244 = weight_l2_15_load_4_reg_5477;

assign ap_return_245 = weight_l2_15_load_5_reg_5557;

assign ap_return_246 = weight_l2_15_load_6_reg_5797;

assign ap_return_247 = weight_l2_15_load_7_reg_5877;

assign ap_return_248 = weight_l2_15_load_8_reg_6117;

assign ap_return_249 = weight_l2_15_load_9_reg_6197;

assign ap_return_25 = weight_l2_1_load_9_reg_6127;

assign ap_return_250 = weight_l2_15_load_10_reg_6457;

assign ap_return_251 = weight_l2_15_load_11_reg_6537;

assign ap_return_252 = weight_l2_15_load_12_reg_6777;

assign ap_return_253 = weight_l2_15_load_13_reg_6857;

assign ap_return_254 = weight_l2_15_q1;

assign ap_return_255 = weight_l2_15_q0;

assign ap_return_26 = weight_l2_1_load_10_reg_6387;

assign ap_return_27 = weight_l2_1_load_11_reg_6467;

assign ap_return_28 = weight_l2_1_load_12_reg_6707;

assign ap_return_29 = weight_l2_1_load_13_reg_6787;

assign ap_return_3 = weight_l2_0_load_3_reg_5162;

assign ap_return_30 = weight_l2_1_q1;

assign ap_return_31 = weight_l2_1_q0;

assign ap_return_32 = weight_l2_2_load_reg_4772;

assign ap_return_33 = weight_l2_2_load_1_reg_4852;

assign ap_return_34 = weight_l2_2_load_2_reg_5092;

assign ap_return_35 = weight_l2_2_load_3_reg_5172;

assign ap_return_36 = weight_l2_2_load_4_reg_5412;

assign ap_return_37 = weight_l2_2_load_5_reg_5492;

assign ap_return_38 = weight_l2_2_load_6_reg_5732;

assign ap_return_39 = weight_l2_2_load_7_reg_5812;

assign ap_return_4 = weight_l2_0_load_4_reg_5402;

assign ap_return_40 = weight_l2_2_load_8_reg_6052;

assign ap_return_41 = weight_l2_2_load_9_reg_6132;

assign ap_return_42 = weight_l2_2_load_10_reg_6392;

assign ap_return_43 = weight_l2_2_load_11_reg_6472;

assign ap_return_44 = weight_l2_2_load_12_reg_6712;

assign ap_return_45 = weight_l2_2_load_13_reg_6792;

assign ap_return_46 = weight_l2_2_q1;

assign ap_return_47 = weight_l2_2_q0;

assign ap_return_48 = weight_l2_3_load_reg_4777;

assign ap_return_49 = weight_l2_3_load_1_reg_4857;

assign ap_return_5 = weight_l2_0_load_5_reg_5482;

assign ap_return_50 = weight_l2_3_load_2_reg_5097;

assign ap_return_51 = weight_l2_3_load_3_reg_5177;

assign ap_return_52 = weight_l2_3_load_4_reg_5417;

assign ap_return_53 = weight_l2_3_load_5_reg_5497;

assign ap_return_54 = weight_l2_3_load_6_reg_5737;

assign ap_return_55 = weight_l2_3_load_7_reg_5817;

assign ap_return_56 = weight_l2_3_load_8_reg_6057;

assign ap_return_57 = weight_l2_3_load_9_reg_6137;

assign ap_return_58 = weight_l2_3_load_10_reg_6397;

assign ap_return_59 = weight_l2_3_load_11_reg_6477;

assign ap_return_6 = weight_l2_0_load_6_reg_5722;

assign ap_return_60 = weight_l2_3_load_12_reg_6717;

assign ap_return_61 = weight_l2_3_load_13_reg_6797;

assign ap_return_62 = weight_l2_3_q1;

assign ap_return_63 = weight_l2_3_q0;

assign ap_return_64 = weight_l2_4_load_reg_4782;

assign ap_return_65 = weight_l2_4_load_1_reg_4862;

assign ap_return_66 = weight_l2_4_load_2_reg_5102;

assign ap_return_67 = weight_l2_4_load_3_reg_5182;

assign ap_return_68 = weight_l2_4_load_4_reg_5422;

assign ap_return_69 = weight_l2_4_load_5_reg_5502;

assign ap_return_7 = weight_l2_0_load_7_reg_5802;

assign ap_return_70 = weight_l2_4_load_6_reg_5742;

assign ap_return_71 = weight_l2_4_load_7_reg_5822;

assign ap_return_72 = weight_l2_4_load_8_reg_6062;

assign ap_return_73 = weight_l2_4_load_9_reg_6142;

assign ap_return_74 = weight_l2_4_load_10_reg_6402;

assign ap_return_75 = weight_l2_4_load_11_reg_6482;

assign ap_return_76 = weight_l2_4_load_12_reg_6722;

assign ap_return_77 = weight_l2_4_load_13_reg_6802;

assign ap_return_78 = weight_l2_4_q1;

assign ap_return_79 = weight_l2_4_q0;

assign ap_return_8 = weight_l2_0_load_8_reg_6042;

assign ap_return_80 = weight_l2_5_load_reg_4787;

assign ap_return_81 = weight_l2_5_load_1_reg_4867;

assign ap_return_82 = weight_l2_5_load_2_reg_5107;

assign ap_return_83 = weight_l2_5_load_3_reg_5187;

assign ap_return_84 = weight_l2_5_load_4_reg_5427;

assign ap_return_85 = weight_l2_5_load_5_reg_5507;

assign ap_return_86 = weight_l2_5_load_6_reg_5747;

assign ap_return_87 = weight_l2_5_load_7_reg_5827;

assign ap_return_88 = weight_l2_5_load_8_reg_6067;

assign ap_return_89 = weight_l2_5_load_9_reg_6147;

assign ap_return_9 = weight_l2_0_load_9_reg_6122;

assign ap_return_90 = weight_l2_5_load_10_reg_6407;

assign ap_return_91 = weight_l2_5_load_11_reg_6487;

assign ap_return_92 = weight_l2_5_load_12_reg_6727;

assign ap_return_93 = weight_l2_5_load_13_reg_6807;

assign ap_return_94 = weight_l2_5_q1;

assign ap_return_95 = weight_l2_5_q0;

assign ap_return_96 = weight_l2_6_load_reg_4792;

assign ap_return_97 = weight_l2_6_load_1_reg_4872;

assign ap_return_98 = weight_l2_6_load_2_reg_5112;

assign ap_return_99 = weight_l2_6_load_3_reg_5192;

assign c_10_fu_2503_p2 = (c_reg_4486 | 12'd10);

assign c_11_fu_2513_p2 = (c_reg_4486 | 12'd11);

assign c_12_fu_2523_p2 = (c_reg_4486 | 12'd12);

assign c_13_fu_2533_p2 = (c_reg_4486 | 12'd13);

assign c_14_fu_2543_p2 = (c_reg_4486 | 12'd14);

assign c_15_fu_2553_p2 = (c_reg_4486 | 12'd15);

assign c_1_fu_2412_p2 = (c_fu_2400_p3 | 12'd1);

assign c_2_fu_2423_p2 = (c_reg_4486 | 12'd2);

assign c_3_fu_2433_p2 = (c_reg_4486 | 12'd3);

assign c_4_fu_2443_p2 = (c_reg_4486 | 12'd4);

assign c_5_fu_2453_p2 = (c_reg_4486 | 12'd5);

assign c_6_fu_2463_p2 = (c_reg_4486 | 12'd6);

assign c_7_fu_2473_p2 = (c_reg_4486 | 12'd7);

assign c_8_fu_2483_p2 = (c_reg_4486 | 12'd8);

assign c_9_fu_2493_p2 = (c_reg_4486 | 12'd9);

assign c_fu_2400_p3 = {{empty_reg_4481}, {4'd0}};

assign co_out_din = co_dout;

assign empty_fu_2396_p1 = co_dout[7:0];

assign idxprom13_10_i_i_fu_2753_p1 = $unsigned(grp_fu_4347_p4);

assign idxprom13_11_i_i_fu_2772_p1 = $unsigned(grp_fu_4355_p4);

assign idxprom13_12_i_i_fu_2791_p1 = $unsigned(add12_12_i_i_reg_6362);

assign idxprom13_13_i_i_fu_2810_p1 = $unsigned(add12_13_i_i_reg_6367);

assign idxprom13_14_i_i_fu_2829_p1 = $unsigned(add12_14_i_i_reg_6372);

assign idxprom13_15_i_i_fu_2848_p1 = $unsigned(add12_15_i_i_reg_6377);

assign idxprom13_1_i_i_fu_2582_p1 = $unsigned(grp_fu_4225_p4);

assign idxprom13_2_i_i_fu_2601_p1 = $unsigned(grp_fu_4243_p4);

assign idxprom13_3_i_i_fu_2620_p1 = $unsigned(grp_fu_4251_p4);

assign idxprom13_4_i_i_fu_2639_p1 = $unsigned(grp_fu_4269_p4);

assign idxprom13_5_i_i_fu_2658_p1 = $unsigned(grp_fu_4277_p4);

assign idxprom13_6_i_i_fu_2677_p1 = $unsigned(grp_fu_4315_p4);

assign idxprom13_7_i_i_fu_2696_p1 = $unsigned(grp_fu_4323_p4);

assign idxprom13_8_i_i_fu_2715_p1 = $unsigned(grp_fu_4331_p4);

assign idxprom13_9_i_i_fu_2734_p1 = $unsigned(grp_fu_4339_p4);

assign idxprom13_i_i_fu_2563_p1 = $unsigned(grp_fu_4217_p4);

assign ko_3_out_din = trunc_ln859_fu_2383_p1;

assign mul512_i_i_fu_2428_p2 = ($signed(c_2_fu_2423_p2) + $signed(mul4_i_i_reg_4504));

assign mul516_i_i_fu_2438_p2 = ($signed(c_3_fu_2433_p2) + $signed(mul4_i_i_reg_4504));

assign mul520_i_i_fu_2448_p2 = ($signed(c_4_fu_2443_p2) + $signed(mul4_i_i_reg_4504));

assign mul524_i_i_fu_2458_p2 = ($signed(c_5_fu_2453_p2) + $signed(mul4_i_i_reg_4504));

assign mul528_i_i_fu_2468_p2 = ($signed(c_6_fu_2463_p2) + $signed(mul4_i_i_reg_4504));

assign mul52_i_i_fu_2407_p2 = ($signed(c_fu_2400_p3) + $signed(grp_fu_4179_p2));

assign mul532_i_i_fu_2478_p2 = ($signed(c_7_fu_2473_p2) + $signed(mul4_i_i_reg_4504));

assign mul536_i_i_fu_2488_p2 = ($signed(c_8_fu_2483_p2) + $signed(mul4_i_i_reg_4504));

assign mul540_i_i_fu_2498_p2 = ($signed(c_9_fu_2493_p2) + $signed(mul4_i_i_reg_4504));

assign mul544_i_i_fu_2508_p2 = ($signed(c_10_fu_2503_p2) + $signed(mul4_i_i_reg_4504));

assign mul548_i_i_fu_2518_p2 = ($signed(c_11_fu_2513_p2) + $signed(mul4_i_i_reg_4504));

assign mul552_i_i_fu_2528_p2 = ($signed(c_12_fu_2523_p2) + $signed(mul4_i_i_reg_4504));

assign mul556_i_i_fu_2538_p2 = ($signed(c_13_fu_2533_p2) + $signed(mul4_i_i_reg_4504));

assign mul560_i_i_fu_2548_p2 = ($signed(c_14_fu_2543_p2) + $signed(mul4_i_i_reg_4504));

assign mul564_i_i_fu_2558_p2 = ($signed(c_15_fu_2553_p2) + $signed(mul4_i_i_reg_4504));

assign mul58_i_i_fu_2418_p2 = ($signed(c_1_fu_2412_p2) + $signed(grp_fu_4179_p2));

assign ro_out_din = ro_dout;

assign so_out_din = so_dout;

assign trunc_ln859_fu_2383_p0 = ko_3_dout;

assign trunc_ln859_fu_2383_p1 = trunc_ln859_fu_2383_p0[7:0];

assign trunc_ln865_fu_2388_p1 = ro_dout[11:0];

assign trunc_ln867_fu_2392_p1 = so_dout[11:0];

always @ (posedge ap_clk) begin
    c_reg_4486[3:0] <= 4'b0000;
end

endmodule //Conv_sysarr_runWeight2Reg
