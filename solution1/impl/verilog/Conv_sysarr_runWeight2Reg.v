// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_sysarr_runWeight2Reg (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        weight_regfile_0_01_i,
        weight_regfile_0_01_i_ap_vld,
        weight_regfile_0_12_i,
        weight_regfile_0_12_i_ap_vld,
        weight_regfile_0_23_i,
        weight_regfile_0_23_i_ap_vld,
        weight_regfile_0_34_i,
        weight_regfile_0_34_i_ap_vld,
        weight_regfile_0_45_i,
        weight_regfile_0_45_i_ap_vld,
        weight_regfile_0_56_i,
        weight_regfile_0_56_i_ap_vld,
        weight_regfile_0_67_i,
        weight_regfile_0_67_i_ap_vld,
        weight_regfile_0_78_i,
        weight_regfile_0_78_i_ap_vld,
        weight_regfile_0_89_i,
        weight_regfile_0_89_i_ap_vld,
        weight_regfile_0_910_i,
        weight_regfile_0_910_i_ap_vld,
        weight_regfile_0_1011_i,
        weight_regfile_0_1011_i_ap_vld,
        weight_regfile_0_1112_i,
        weight_regfile_0_1112_i_ap_vld,
        weight_regfile_0_1213_i,
        weight_regfile_0_1213_i_ap_vld,
        weight_regfile_0_1314_i,
        weight_regfile_0_1314_i_ap_vld,
        weight_regfile_0_1415_i,
        weight_regfile_0_1415_i_ap_vld,
        weight_regfile_0_1516_i,
        weight_regfile_0_1516_i_ap_vld,
        weight_regfile_1_017_i,
        weight_regfile_1_017_i_ap_vld,
        weight_regfile_1_118_i,
        weight_regfile_1_118_i_ap_vld,
        weight_regfile_1_219_i,
        weight_regfile_1_219_i_ap_vld,
        weight_regfile_1_320_i,
        weight_regfile_1_320_i_ap_vld,
        weight_regfile_1_421_i,
        weight_regfile_1_421_i_ap_vld,
        weight_regfile_1_522_i,
        weight_regfile_1_522_i_ap_vld,
        weight_regfile_1_623_i,
        weight_regfile_1_623_i_ap_vld,
        weight_regfile_1_724_i,
        weight_regfile_1_724_i_ap_vld,
        weight_regfile_1_825_i,
        weight_regfile_1_825_i_ap_vld,
        weight_regfile_1_926_i,
        weight_regfile_1_926_i_ap_vld,
        weight_regfile_1_1027_i,
        weight_regfile_1_1027_i_ap_vld,
        weight_regfile_1_1128_i,
        weight_regfile_1_1128_i_ap_vld,
        weight_regfile_1_1229_i,
        weight_regfile_1_1229_i_ap_vld,
        weight_regfile_1_1330_i,
        weight_regfile_1_1330_i_ap_vld,
        weight_regfile_1_1431_i,
        weight_regfile_1_1431_i_ap_vld,
        weight_regfile_1_1532_i,
        weight_regfile_1_1532_i_ap_vld,
        weight_regfile_2_033_i,
        weight_regfile_2_033_i_ap_vld,
        weight_regfile_2_134_i,
        weight_regfile_2_134_i_ap_vld,
        weight_regfile_2_235_i,
        weight_regfile_2_235_i_ap_vld,
        weight_regfile_2_336_i,
        weight_regfile_2_336_i_ap_vld,
        weight_regfile_2_437_i,
        weight_regfile_2_437_i_ap_vld,
        weight_regfile_2_538_i,
        weight_regfile_2_538_i_ap_vld,
        weight_regfile_2_639_i,
        weight_regfile_2_639_i_ap_vld,
        weight_regfile_2_740_i,
        weight_regfile_2_740_i_ap_vld,
        weight_regfile_2_841_i,
        weight_regfile_2_841_i_ap_vld,
        weight_regfile_2_942_i,
        weight_regfile_2_942_i_ap_vld,
        weight_regfile_2_1043_i,
        weight_regfile_2_1043_i_ap_vld,
        weight_regfile_2_1144_i,
        weight_regfile_2_1144_i_ap_vld,
        weight_regfile_2_1245_i,
        weight_regfile_2_1245_i_ap_vld,
        weight_regfile_2_1346_i,
        weight_regfile_2_1346_i_ap_vld,
        weight_regfile_2_1447_i,
        weight_regfile_2_1447_i_ap_vld,
        weight_regfile_2_1548_i,
        weight_regfile_2_1548_i_ap_vld,
        weight_regfile_3_049_i,
        weight_regfile_3_049_i_ap_vld,
        weight_regfile_3_150_i,
        weight_regfile_3_150_i_ap_vld,
        weight_regfile_3_251_i,
        weight_regfile_3_251_i_ap_vld,
        weight_regfile_3_352_i,
        weight_regfile_3_352_i_ap_vld,
        weight_regfile_3_453_i,
        weight_regfile_3_453_i_ap_vld,
        weight_regfile_3_554_i,
        weight_regfile_3_554_i_ap_vld,
        weight_regfile_3_655_i,
        weight_regfile_3_655_i_ap_vld,
        weight_regfile_3_756_i,
        weight_regfile_3_756_i_ap_vld,
        weight_regfile_3_857_i,
        weight_regfile_3_857_i_ap_vld,
        weight_regfile_3_958_i,
        weight_regfile_3_958_i_ap_vld,
        weight_regfile_3_1059_i,
        weight_regfile_3_1059_i_ap_vld,
        weight_regfile_3_1160_i,
        weight_regfile_3_1160_i_ap_vld,
        weight_regfile_3_1261_i,
        weight_regfile_3_1261_i_ap_vld,
        weight_regfile_3_1362_i,
        weight_regfile_3_1362_i_ap_vld,
        weight_regfile_3_1463_i,
        weight_regfile_3_1463_i_ap_vld,
        weight_regfile_3_1564_i,
        weight_regfile_3_1564_i_ap_vld,
        weight_regfile_4_065_i,
        weight_regfile_4_065_i_ap_vld,
        weight_regfile_4_166_i,
        weight_regfile_4_166_i_ap_vld,
        weight_regfile_4_267_i,
        weight_regfile_4_267_i_ap_vld,
        weight_regfile_4_368_i,
        weight_regfile_4_368_i_ap_vld,
        weight_regfile_4_469_i,
        weight_regfile_4_469_i_ap_vld,
        weight_regfile_4_570_i,
        weight_regfile_4_570_i_ap_vld,
        weight_regfile_4_671_i,
        weight_regfile_4_671_i_ap_vld,
        weight_regfile_4_772_i,
        weight_regfile_4_772_i_ap_vld,
        weight_regfile_4_873_i,
        weight_regfile_4_873_i_ap_vld,
        weight_regfile_4_974_i,
        weight_regfile_4_974_i_ap_vld,
        weight_regfile_4_1075_i,
        weight_regfile_4_1075_i_ap_vld,
        weight_regfile_4_1176_i,
        weight_regfile_4_1176_i_ap_vld,
        weight_regfile_4_1277_i,
        weight_regfile_4_1277_i_ap_vld,
        weight_regfile_4_1378_i,
        weight_regfile_4_1378_i_ap_vld,
        weight_regfile_4_1479_i,
        weight_regfile_4_1479_i_ap_vld,
        weight_regfile_4_1580_i,
        weight_regfile_4_1580_i_ap_vld,
        weight_regfile_5_081_i,
        weight_regfile_5_081_i_ap_vld,
        weight_regfile_5_182_i,
        weight_regfile_5_182_i_ap_vld,
        weight_regfile_5_283_i,
        weight_regfile_5_283_i_ap_vld,
        weight_regfile_5_384_i,
        weight_regfile_5_384_i_ap_vld,
        weight_regfile_5_485_i,
        weight_regfile_5_485_i_ap_vld,
        weight_regfile_5_586_i,
        weight_regfile_5_586_i_ap_vld,
        weight_regfile_5_687_i,
        weight_regfile_5_687_i_ap_vld,
        weight_regfile_5_788_i,
        weight_regfile_5_788_i_ap_vld,
        weight_regfile_5_889_i,
        weight_regfile_5_889_i_ap_vld,
        weight_regfile_5_990_i,
        weight_regfile_5_990_i_ap_vld,
        weight_regfile_5_1091_i,
        weight_regfile_5_1091_i_ap_vld,
        weight_regfile_5_1192_i,
        weight_regfile_5_1192_i_ap_vld,
        weight_regfile_5_1293_i,
        weight_regfile_5_1293_i_ap_vld,
        weight_regfile_5_1394_i,
        weight_regfile_5_1394_i_ap_vld,
        weight_regfile_5_1495_i,
        weight_regfile_5_1495_i_ap_vld,
        weight_regfile_5_1596_i,
        weight_regfile_5_1596_i_ap_vld,
        weight_regfile_6_097_i,
        weight_regfile_6_097_i_ap_vld,
        weight_regfile_6_198_i,
        weight_regfile_6_198_i_ap_vld,
        weight_regfile_6_299_i,
        weight_regfile_6_299_i_ap_vld,
        weight_regfile_6_3100_i,
        weight_regfile_6_3100_i_ap_vld,
        weight_regfile_6_4101_i,
        weight_regfile_6_4101_i_ap_vld,
        weight_regfile_6_5102_i,
        weight_regfile_6_5102_i_ap_vld,
        weight_regfile_6_6103_i,
        weight_regfile_6_6103_i_ap_vld,
        weight_regfile_6_7104_i,
        weight_regfile_6_7104_i_ap_vld,
        weight_regfile_6_8105_i,
        weight_regfile_6_8105_i_ap_vld,
        weight_regfile_6_9106_i,
        weight_regfile_6_9106_i_ap_vld,
        weight_regfile_6_10107_i,
        weight_regfile_6_10107_i_ap_vld,
        weight_regfile_6_11108_i,
        weight_regfile_6_11108_i_ap_vld,
        weight_regfile_6_12109_i,
        weight_regfile_6_12109_i_ap_vld,
        weight_regfile_6_13110_i,
        weight_regfile_6_13110_i_ap_vld,
        weight_regfile_6_14111_i,
        weight_regfile_6_14111_i_ap_vld,
        weight_regfile_6_15112_i,
        weight_regfile_6_15112_i_ap_vld,
        weight_regfile_7_0113_i,
        weight_regfile_7_0113_i_ap_vld,
        weight_regfile_7_1114_i,
        weight_regfile_7_1114_i_ap_vld,
        weight_regfile_7_2115_i,
        weight_regfile_7_2115_i_ap_vld,
        weight_regfile_7_3116_i,
        weight_regfile_7_3116_i_ap_vld,
        weight_regfile_7_4117_i,
        weight_regfile_7_4117_i_ap_vld,
        weight_regfile_7_5118_i,
        weight_regfile_7_5118_i_ap_vld,
        weight_regfile_7_6119_i,
        weight_regfile_7_6119_i_ap_vld,
        weight_regfile_7_7120_i,
        weight_regfile_7_7120_i_ap_vld,
        weight_regfile_7_8121_i,
        weight_regfile_7_8121_i_ap_vld,
        weight_regfile_7_9122_i,
        weight_regfile_7_9122_i_ap_vld,
        weight_regfile_7_10123_i,
        weight_regfile_7_10123_i_ap_vld,
        weight_regfile_7_11124_i,
        weight_regfile_7_11124_i_ap_vld,
        weight_regfile_7_12125_i,
        weight_regfile_7_12125_i_ap_vld,
        weight_regfile_7_13126_i,
        weight_regfile_7_13126_i_ap_vld,
        weight_regfile_7_14127_i,
        weight_regfile_7_14127_i_ap_vld,
        weight_regfile_7_15128_i,
        weight_regfile_7_15128_i_ap_vld,
        weight_regfile_8_0129_i,
        weight_regfile_8_0129_i_ap_vld,
        weight_regfile_8_1130_i,
        weight_regfile_8_1130_i_ap_vld,
        weight_regfile_8_2131_i,
        weight_regfile_8_2131_i_ap_vld,
        weight_regfile_8_3132_i,
        weight_regfile_8_3132_i_ap_vld,
        weight_regfile_8_4133_i,
        weight_regfile_8_4133_i_ap_vld,
        weight_regfile_8_5134_i,
        weight_regfile_8_5134_i_ap_vld,
        weight_regfile_8_6135_i,
        weight_regfile_8_6135_i_ap_vld,
        weight_regfile_8_7136_i,
        weight_regfile_8_7136_i_ap_vld,
        weight_regfile_8_8137_i,
        weight_regfile_8_8137_i_ap_vld,
        weight_regfile_8_9138_i,
        weight_regfile_8_9138_i_ap_vld,
        weight_regfile_8_10139_i,
        weight_regfile_8_10139_i_ap_vld,
        weight_regfile_8_11140_i,
        weight_regfile_8_11140_i_ap_vld,
        weight_regfile_8_12141_i,
        weight_regfile_8_12141_i_ap_vld,
        weight_regfile_8_13142_i,
        weight_regfile_8_13142_i_ap_vld,
        weight_regfile_8_14143_i,
        weight_regfile_8_14143_i_ap_vld,
        weight_regfile_8_15144_i,
        weight_regfile_8_15144_i_ap_vld,
        weight_regfile_9_0145_i,
        weight_regfile_9_0145_i_ap_vld,
        weight_regfile_9_1146_i,
        weight_regfile_9_1146_i_ap_vld,
        weight_regfile_9_2147_i,
        weight_regfile_9_2147_i_ap_vld,
        weight_regfile_9_3148_i,
        weight_regfile_9_3148_i_ap_vld,
        weight_regfile_9_4149_i,
        weight_regfile_9_4149_i_ap_vld,
        weight_regfile_9_5150_i,
        weight_regfile_9_5150_i_ap_vld,
        weight_regfile_9_6151_i,
        weight_regfile_9_6151_i_ap_vld,
        weight_regfile_9_7152_i,
        weight_regfile_9_7152_i_ap_vld,
        weight_regfile_9_8153_i,
        weight_regfile_9_8153_i_ap_vld,
        weight_regfile_9_9154_i,
        weight_regfile_9_9154_i_ap_vld,
        weight_regfile_9_10155_i,
        weight_regfile_9_10155_i_ap_vld,
        weight_regfile_9_11156_i,
        weight_regfile_9_11156_i_ap_vld,
        weight_regfile_9_12157_i,
        weight_regfile_9_12157_i_ap_vld,
        weight_regfile_9_13158_i,
        weight_regfile_9_13158_i_ap_vld,
        weight_regfile_9_14159_i,
        weight_regfile_9_14159_i_ap_vld,
        weight_regfile_9_15160_i,
        weight_regfile_9_15160_i_ap_vld,
        weight_regfile_10_0161_i,
        weight_regfile_10_0161_i_ap_vld,
        weight_regfile_10_1162_i,
        weight_regfile_10_1162_i_ap_vld,
        weight_regfile_10_2163_i,
        weight_regfile_10_2163_i_ap_vld,
        weight_regfile_10_3164_i,
        weight_regfile_10_3164_i_ap_vld,
        weight_regfile_10_4165_i,
        weight_regfile_10_4165_i_ap_vld,
        weight_regfile_10_5166_i,
        weight_regfile_10_5166_i_ap_vld,
        weight_regfile_10_6167_i,
        weight_regfile_10_6167_i_ap_vld,
        weight_regfile_10_7168_i,
        weight_regfile_10_7168_i_ap_vld,
        weight_regfile_10_8169_i,
        weight_regfile_10_8169_i_ap_vld,
        weight_regfile_10_9170_i,
        weight_regfile_10_9170_i_ap_vld,
        weight_regfile_10_10171_i,
        weight_regfile_10_10171_i_ap_vld,
        weight_regfile_10_11172_i,
        weight_regfile_10_11172_i_ap_vld,
        weight_regfile_10_12173_i,
        weight_regfile_10_12173_i_ap_vld,
        weight_regfile_10_13174_i,
        weight_regfile_10_13174_i_ap_vld,
        weight_regfile_10_14175_i,
        weight_regfile_10_14175_i_ap_vld,
        weight_regfile_10_15176_i,
        weight_regfile_10_15176_i_ap_vld,
        weight_regfile_11_0177_i,
        weight_regfile_11_0177_i_ap_vld,
        weight_regfile_11_1178_i,
        weight_regfile_11_1178_i_ap_vld,
        weight_regfile_11_2179_i,
        weight_regfile_11_2179_i_ap_vld,
        weight_regfile_11_3180_i,
        weight_regfile_11_3180_i_ap_vld,
        weight_regfile_11_4181_i,
        weight_regfile_11_4181_i_ap_vld,
        weight_regfile_11_5182_i,
        weight_regfile_11_5182_i_ap_vld,
        weight_regfile_11_6183_i,
        weight_regfile_11_6183_i_ap_vld,
        weight_regfile_11_7184_i,
        weight_regfile_11_7184_i_ap_vld,
        weight_regfile_11_8185_i,
        weight_regfile_11_8185_i_ap_vld,
        weight_regfile_11_9186_i,
        weight_regfile_11_9186_i_ap_vld,
        weight_regfile_11_10187_i,
        weight_regfile_11_10187_i_ap_vld,
        weight_regfile_11_11188_i,
        weight_regfile_11_11188_i_ap_vld,
        weight_regfile_11_12189_i,
        weight_regfile_11_12189_i_ap_vld,
        weight_regfile_11_13190_i,
        weight_regfile_11_13190_i_ap_vld,
        weight_regfile_11_14191_i,
        weight_regfile_11_14191_i_ap_vld,
        weight_regfile_11_15192_i,
        weight_regfile_11_15192_i_ap_vld,
        weight_regfile_12_0193_i,
        weight_regfile_12_0193_i_ap_vld,
        weight_regfile_12_1194_i,
        weight_regfile_12_1194_i_ap_vld,
        weight_regfile_12_2195_i,
        weight_regfile_12_2195_i_ap_vld,
        weight_regfile_12_3196_i,
        weight_regfile_12_3196_i_ap_vld,
        weight_regfile_12_4197_i,
        weight_regfile_12_4197_i_ap_vld,
        weight_regfile_12_5198_i,
        weight_regfile_12_5198_i_ap_vld,
        weight_regfile_12_6199_i,
        weight_regfile_12_6199_i_ap_vld,
        weight_regfile_12_7200_i,
        weight_regfile_12_7200_i_ap_vld,
        weight_regfile_12_8201_i,
        weight_regfile_12_8201_i_ap_vld,
        weight_regfile_12_9202_i,
        weight_regfile_12_9202_i_ap_vld,
        weight_regfile_12_10203_i,
        weight_regfile_12_10203_i_ap_vld,
        weight_regfile_12_11204_i,
        weight_regfile_12_11204_i_ap_vld,
        weight_regfile_12_12205_i,
        weight_regfile_12_12205_i_ap_vld,
        weight_regfile_12_13206_i,
        weight_regfile_12_13206_i_ap_vld,
        weight_regfile_12_14207_i,
        weight_regfile_12_14207_i_ap_vld,
        weight_regfile_12_15208_i,
        weight_regfile_12_15208_i_ap_vld,
        weight_regfile_13_0209_i,
        weight_regfile_13_0209_i_ap_vld,
        weight_regfile_13_1210_i,
        weight_regfile_13_1210_i_ap_vld,
        weight_regfile_13_2211_i,
        weight_regfile_13_2211_i_ap_vld,
        weight_regfile_13_3212_i,
        weight_regfile_13_3212_i_ap_vld,
        weight_regfile_13_4213_i,
        weight_regfile_13_4213_i_ap_vld,
        weight_regfile_13_5214_i,
        weight_regfile_13_5214_i_ap_vld,
        weight_regfile_13_6215_i,
        weight_regfile_13_6215_i_ap_vld,
        weight_regfile_13_7216_i,
        weight_regfile_13_7216_i_ap_vld,
        weight_regfile_13_8217_i,
        weight_regfile_13_8217_i_ap_vld,
        weight_regfile_13_9218_i,
        weight_regfile_13_9218_i_ap_vld,
        weight_regfile_13_10219_i,
        weight_regfile_13_10219_i_ap_vld,
        weight_regfile_13_11220_i,
        weight_regfile_13_11220_i_ap_vld,
        weight_regfile_13_12221_i,
        weight_regfile_13_12221_i_ap_vld,
        weight_regfile_13_13222_i,
        weight_regfile_13_13222_i_ap_vld,
        weight_regfile_13_14223_i,
        weight_regfile_13_14223_i_ap_vld,
        weight_regfile_13_15224_i,
        weight_regfile_13_15224_i_ap_vld,
        weight_regfile_14_0225_i,
        weight_regfile_14_0225_i_ap_vld,
        weight_regfile_14_1226_i,
        weight_regfile_14_1226_i_ap_vld,
        weight_regfile_14_2227_i,
        weight_regfile_14_2227_i_ap_vld,
        weight_regfile_14_3228_i,
        weight_regfile_14_3228_i_ap_vld,
        weight_regfile_14_4229_i,
        weight_regfile_14_4229_i_ap_vld,
        weight_regfile_14_5230_i,
        weight_regfile_14_5230_i_ap_vld,
        weight_regfile_14_6231_i,
        weight_regfile_14_6231_i_ap_vld,
        weight_regfile_14_7232_i,
        weight_regfile_14_7232_i_ap_vld,
        weight_regfile_14_8233_i,
        weight_regfile_14_8233_i_ap_vld,
        weight_regfile_14_9234_i,
        weight_regfile_14_9234_i_ap_vld,
        weight_regfile_14_10235_i,
        weight_regfile_14_10235_i_ap_vld,
        weight_regfile_14_11236_i,
        weight_regfile_14_11236_i_ap_vld,
        weight_regfile_14_12237_i,
        weight_regfile_14_12237_i_ap_vld,
        weight_regfile_14_13238_i,
        weight_regfile_14_13238_i_ap_vld,
        weight_regfile_14_14239_i,
        weight_regfile_14_14239_i_ap_vld,
        weight_regfile_14_15240_i,
        weight_regfile_14_15240_i_ap_vld,
        weight_regfile_15_0241_i,
        weight_regfile_15_0241_i_ap_vld,
        weight_regfile_15_1242_i,
        weight_regfile_15_1242_i_ap_vld,
        weight_regfile_15_2243_i,
        weight_regfile_15_2243_i_ap_vld,
        weight_regfile_15_3244_i,
        weight_regfile_15_3244_i_ap_vld,
        weight_regfile_15_4245_i,
        weight_regfile_15_4245_i_ap_vld,
        weight_regfile_15_5246_i,
        weight_regfile_15_5246_i_ap_vld,
        weight_regfile_15_6247_i,
        weight_regfile_15_6247_i_ap_vld,
        weight_regfile_15_7248_i,
        weight_regfile_15_7248_i_ap_vld,
        weight_regfile_15_8249_i,
        weight_regfile_15_8249_i_ap_vld,
        weight_regfile_15_9250_i,
        weight_regfile_15_9250_i_ap_vld,
        weight_regfile_15_10251_i,
        weight_regfile_15_10251_i_ap_vld,
        weight_regfile_15_11252_i,
        weight_regfile_15_11252_i_ap_vld,
        weight_regfile_15_12253_i,
        weight_regfile_15_12253_i_ap_vld,
        weight_regfile_15_13254_i,
        weight_regfile_15_13254_i_ap_vld,
        weight_regfile_15_14255_i,
        weight_regfile_15_14255_i_ap_vld,
        weight_regfile_15_15256_i,
        weight_regfile_15_15256_i_ap_vld,
        C_L2_dout,
        C_L2_empty_n,
        C_L2_read,
        R_L2_dout,
        R_L2_empty_n,
        R_L2_read,
        S_L2_dout,
        S_L2_empty_n,
        S_L2_read,
        ko_3_dout,
        ko_3_empty_n,
        ko_3_read,
        co_dout,
        co_empty_n,
        co_read,
        ro_dout,
        ro_empty_n,
        ro_read,
        so_dout,
        so_empty_n,
        so_read,
        weight_l2_0_address0,
        weight_l2_0_ce0,
        weight_l2_0_q0,
        weight_l2_0_address1,
        weight_l2_0_ce1,
        weight_l2_0_q1,
        weight_l2_1_address0,
        weight_l2_1_ce0,
        weight_l2_1_q0,
        weight_l2_1_address1,
        weight_l2_1_ce1,
        weight_l2_1_q1,
        weight_l2_10_address0,
        weight_l2_10_ce0,
        weight_l2_10_q0,
        weight_l2_10_address1,
        weight_l2_10_ce1,
        weight_l2_10_q1,
        weight_l2_11_address0,
        weight_l2_11_ce0,
        weight_l2_11_q0,
        weight_l2_11_address1,
        weight_l2_11_ce1,
        weight_l2_11_q1,
        weight_l2_12_address0,
        weight_l2_12_ce0,
        weight_l2_12_q0,
        weight_l2_12_address1,
        weight_l2_12_ce1,
        weight_l2_12_q1,
        weight_l2_13_address0,
        weight_l2_13_ce0,
        weight_l2_13_q0,
        weight_l2_13_address1,
        weight_l2_13_ce1,
        weight_l2_13_q1,
        weight_l2_14_address0,
        weight_l2_14_ce0,
        weight_l2_14_q0,
        weight_l2_14_address1,
        weight_l2_14_ce1,
        weight_l2_14_q1,
        weight_l2_15_address0,
        weight_l2_15_ce0,
        weight_l2_15_q0,
        weight_l2_15_address1,
        weight_l2_15_ce1,
        weight_l2_15_q1,
        weight_l2_2_address0,
        weight_l2_2_ce0,
        weight_l2_2_q0,
        weight_l2_2_address1,
        weight_l2_2_ce1,
        weight_l2_2_q1,
        weight_l2_3_address0,
        weight_l2_3_ce0,
        weight_l2_3_q0,
        weight_l2_3_address1,
        weight_l2_3_ce1,
        weight_l2_3_q1,
        weight_l2_4_address0,
        weight_l2_4_ce0,
        weight_l2_4_q0,
        weight_l2_4_address1,
        weight_l2_4_ce1,
        weight_l2_4_q1,
        weight_l2_5_address0,
        weight_l2_5_ce0,
        weight_l2_5_q0,
        weight_l2_5_address1,
        weight_l2_5_ce1,
        weight_l2_5_q1,
        weight_l2_6_address0,
        weight_l2_6_ce0,
        weight_l2_6_q0,
        weight_l2_6_address1,
        weight_l2_6_ce1,
        weight_l2_6_q1,
        weight_l2_7_address0,
        weight_l2_7_ce0,
        weight_l2_7_q0,
        weight_l2_7_address1,
        weight_l2_7_ce1,
        weight_l2_7_q1,
        weight_l2_8_address0,
        weight_l2_8_ce0,
        weight_l2_8_q0,
        weight_l2_8_address1,
        weight_l2_8_ce1,
        weight_l2_8_q1,
        weight_l2_9_address0,
        weight_l2_9_ce0,
        weight_l2_9_q0,
        weight_l2_9_address1,
        weight_l2_9_ce1,
        weight_l2_9_q1,
        ko_3_out_din,
        ko_3_out_full_n,
        ko_3_out_write,
        co_out_din,
        co_out_full_n,
        co_out_write,
        ro_out_din,
        ro_out_full_n,
        ro_out_write,
        so_out_din,
        so_out_full_n,
        so_out_write
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [7:0] weight_regfile_0_01_i;
output   weight_regfile_0_01_i_ap_vld;
output  [7:0] weight_regfile_0_12_i;
output   weight_regfile_0_12_i_ap_vld;
output  [7:0] weight_regfile_0_23_i;
output   weight_regfile_0_23_i_ap_vld;
output  [7:0] weight_regfile_0_34_i;
output   weight_regfile_0_34_i_ap_vld;
output  [7:0] weight_regfile_0_45_i;
output   weight_regfile_0_45_i_ap_vld;
output  [7:0] weight_regfile_0_56_i;
output   weight_regfile_0_56_i_ap_vld;
output  [7:0] weight_regfile_0_67_i;
output   weight_regfile_0_67_i_ap_vld;
output  [7:0] weight_regfile_0_78_i;
output   weight_regfile_0_78_i_ap_vld;
output  [7:0] weight_regfile_0_89_i;
output   weight_regfile_0_89_i_ap_vld;
output  [7:0] weight_regfile_0_910_i;
output   weight_regfile_0_910_i_ap_vld;
output  [7:0] weight_regfile_0_1011_i;
output   weight_regfile_0_1011_i_ap_vld;
output  [7:0] weight_regfile_0_1112_i;
output   weight_regfile_0_1112_i_ap_vld;
output  [7:0] weight_regfile_0_1213_i;
output   weight_regfile_0_1213_i_ap_vld;
output  [7:0] weight_regfile_0_1314_i;
output   weight_regfile_0_1314_i_ap_vld;
output  [7:0] weight_regfile_0_1415_i;
output   weight_regfile_0_1415_i_ap_vld;
output  [7:0] weight_regfile_0_1516_i;
output   weight_regfile_0_1516_i_ap_vld;
output  [7:0] weight_regfile_1_017_i;
output   weight_regfile_1_017_i_ap_vld;
output  [7:0] weight_regfile_1_118_i;
output   weight_regfile_1_118_i_ap_vld;
output  [7:0] weight_regfile_1_219_i;
output   weight_regfile_1_219_i_ap_vld;
output  [7:0] weight_regfile_1_320_i;
output   weight_regfile_1_320_i_ap_vld;
output  [7:0] weight_regfile_1_421_i;
output   weight_regfile_1_421_i_ap_vld;
output  [7:0] weight_regfile_1_522_i;
output   weight_regfile_1_522_i_ap_vld;
output  [7:0] weight_regfile_1_623_i;
output   weight_regfile_1_623_i_ap_vld;
output  [7:0] weight_regfile_1_724_i;
output   weight_regfile_1_724_i_ap_vld;
output  [7:0] weight_regfile_1_825_i;
output   weight_regfile_1_825_i_ap_vld;
output  [7:0] weight_regfile_1_926_i;
output   weight_regfile_1_926_i_ap_vld;
output  [7:0] weight_regfile_1_1027_i;
output   weight_regfile_1_1027_i_ap_vld;
output  [7:0] weight_regfile_1_1128_i;
output   weight_regfile_1_1128_i_ap_vld;
output  [7:0] weight_regfile_1_1229_i;
output   weight_regfile_1_1229_i_ap_vld;
output  [7:0] weight_regfile_1_1330_i;
output   weight_regfile_1_1330_i_ap_vld;
output  [7:0] weight_regfile_1_1431_i;
output   weight_regfile_1_1431_i_ap_vld;
output  [7:0] weight_regfile_1_1532_i;
output   weight_regfile_1_1532_i_ap_vld;
output  [7:0] weight_regfile_2_033_i;
output   weight_regfile_2_033_i_ap_vld;
output  [7:0] weight_regfile_2_134_i;
output   weight_regfile_2_134_i_ap_vld;
output  [7:0] weight_regfile_2_235_i;
output   weight_regfile_2_235_i_ap_vld;
output  [7:0] weight_regfile_2_336_i;
output   weight_regfile_2_336_i_ap_vld;
output  [7:0] weight_regfile_2_437_i;
output   weight_regfile_2_437_i_ap_vld;
output  [7:0] weight_regfile_2_538_i;
output   weight_regfile_2_538_i_ap_vld;
output  [7:0] weight_regfile_2_639_i;
output   weight_regfile_2_639_i_ap_vld;
output  [7:0] weight_regfile_2_740_i;
output   weight_regfile_2_740_i_ap_vld;
output  [7:0] weight_regfile_2_841_i;
output   weight_regfile_2_841_i_ap_vld;
output  [7:0] weight_regfile_2_942_i;
output   weight_regfile_2_942_i_ap_vld;
output  [7:0] weight_regfile_2_1043_i;
output   weight_regfile_2_1043_i_ap_vld;
output  [7:0] weight_regfile_2_1144_i;
output   weight_regfile_2_1144_i_ap_vld;
output  [7:0] weight_regfile_2_1245_i;
output   weight_regfile_2_1245_i_ap_vld;
output  [7:0] weight_regfile_2_1346_i;
output   weight_regfile_2_1346_i_ap_vld;
output  [7:0] weight_regfile_2_1447_i;
output   weight_regfile_2_1447_i_ap_vld;
output  [7:0] weight_regfile_2_1548_i;
output   weight_regfile_2_1548_i_ap_vld;
output  [7:0] weight_regfile_3_049_i;
output   weight_regfile_3_049_i_ap_vld;
output  [7:0] weight_regfile_3_150_i;
output   weight_regfile_3_150_i_ap_vld;
output  [7:0] weight_regfile_3_251_i;
output   weight_regfile_3_251_i_ap_vld;
output  [7:0] weight_regfile_3_352_i;
output   weight_regfile_3_352_i_ap_vld;
output  [7:0] weight_regfile_3_453_i;
output   weight_regfile_3_453_i_ap_vld;
output  [7:0] weight_regfile_3_554_i;
output   weight_regfile_3_554_i_ap_vld;
output  [7:0] weight_regfile_3_655_i;
output   weight_regfile_3_655_i_ap_vld;
output  [7:0] weight_regfile_3_756_i;
output   weight_regfile_3_756_i_ap_vld;
output  [7:0] weight_regfile_3_857_i;
output   weight_regfile_3_857_i_ap_vld;
output  [7:0] weight_regfile_3_958_i;
output   weight_regfile_3_958_i_ap_vld;
output  [7:0] weight_regfile_3_1059_i;
output   weight_regfile_3_1059_i_ap_vld;
output  [7:0] weight_regfile_3_1160_i;
output   weight_regfile_3_1160_i_ap_vld;
output  [7:0] weight_regfile_3_1261_i;
output   weight_regfile_3_1261_i_ap_vld;
output  [7:0] weight_regfile_3_1362_i;
output   weight_regfile_3_1362_i_ap_vld;
output  [7:0] weight_regfile_3_1463_i;
output   weight_regfile_3_1463_i_ap_vld;
output  [7:0] weight_regfile_3_1564_i;
output   weight_regfile_3_1564_i_ap_vld;
output  [7:0] weight_regfile_4_065_i;
output   weight_regfile_4_065_i_ap_vld;
output  [7:0] weight_regfile_4_166_i;
output   weight_regfile_4_166_i_ap_vld;
output  [7:0] weight_regfile_4_267_i;
output   weight_regfile_4_267_i_ap_vld;
output  [7:0] weight_regfile_4_368_i;
output   weight_regfile_4_368_i_ap_vld;
output  [7:0] weight_regfile_4_469_i;
output   weight_regfile_4_469_i_ap_vld;
output  [7:0] weight_regfile_4_570_i;
output   weight_regfile_4_570_i_ap_vld;
output  [7:0] weight_regfile_4_671_i;
output   weight_regfile_4_671_i_ap_vld;
output  [7:0] weight_regfile_4_772_i;
output   weight_regfile_4_772_i_ap_vld;
output  [7:0] weight_regfile_4_873_i;
output   weight_regfile_4_873_i_ap_vld;
output  [7:0] weight_regfile_4_974_i;
output   weight_regfile_4_974_i_ap_vld;
output  [7:0] weight_regfile_4_1075_i;
output   weight_regfile_4_1075_i_ap_vld;
output  [7:0] weight_regfile_4_1176_i;
output   weight_regfile_4_1176_i_ap_vld;
output  [7:0] weight_regfile_4_1277_i;
output   weight_regfile_4_1277_i_ap_vld;
output  [7:0] weight_regfile_4_1378_i;
output   weight_regfile_4_1378_i_ap_vld;
output  [7:0] weight_regfile_4_1479_i;
output   weight_regfile_4_1479_i_ap_vld;
output  [7:0] weight_regfile_4_1580_i;
output   weight_regfile_4_1580_i_ap_vld;
output  [7:0] weight_regfile_5_081_i;
output   weight_regfile_5_081_i_ap_vld;
output  [7:0] weight_regfile_5_182_i;
output   weight_regfile_5_182_i_ap_vld;
output  [7:0] weight_regfile_5_283_i;
output   weight_regfile_5_283_i_ap_vld;
output  [7:0] weight_regfile_5_384_i;
output   weight_regfile_5_384_i_ap_vld;
output  [7:0] weight_regfile_5_485_i;
output   weight_regfile_5_485_i_ap_vld;
output  [7:0] weight_regfile_5_586_i;
output   weight_regfile_5_586_i_ap_vld;
output  [7:0] weight_regfile_5_687_i;
output   weight_regfile_5_687_i_ap_vld;
output  [7:0] weight_regfile_5_788_i;
output   weight_regfile_5_788_i_ap_vld;
output  [7:0] weight_regfile_5_889_i;
output   weight_regfile_5_889_i_ap_vld;
output  [7:0] weight_regfile_5_990_i;
output   weight_regfile_5_990_i_ap_vld;
output  [7:0] weight_regfile_5_1091_i;
output   weight_regfile_5_1091_i_ap_vld;
output  [7:0] weight_regfile_5_1192_i;
output   weight_regfile_5_1192_i_ap_vld;
output  [7:0] weight_regfile_5_1293_i;
output   weight_regfile_5_1293_i_ap_vld;
output  [7:0] weight_regfile_5_1394_i;
output   weight_regfile_5_1394_i_ap_vld;
output  [7:0] weight_regfile_5_1495_i;
output   weight_regfile_5_1495_i_ap_vld;
output  [7:0] weight_regfile_5_1596_i;
output   weight_regfile_5_1596_i_ap_vld;
output  [7:0] weight_regfile_6_097_i;
output   weight_regfile_6_097_i_ap_vld;
output  [7:0] weight_regfile_6_198_i;
output   weight_regfile_6_198_i_ap_vld;
output  [7:0] weight_regfile_6_299_i;
output   weight_regfile_6_299_i_ap_vld;
output  [7:0] weight_regfile_6_3100_i;
output   weight_regfile_6_3100_i_ap_vld;
output  [7:0] weight_regfile_6_4101_i;
output   weight_regfile_6_4101_i_ap_vld;
output  [7:0] weight_regfile_6_5102_i;
output   weight_regfile_6_5102_i_ap_vld;
output  [7:0] weight_regfile_6_6103_i;
output   weight_regfile_6_6103_i_ap_vld;
output  [7:0] weight_regfile_6_7104_i;
output   weight_regfile_6_7104_i_ap_vld;
output  [7:0] weight_regfile_6_8105_i;
output   weight_regfile_6_8105_i_ap_vld;
output  [7:0] weight_regfile_6_9106_i;
output   weight_regfile_6_9106_i_ap_vld;
output  [7:0] weight_regfile_6_10107_i;
output   weight_regfile_6_10107_i_ap_vld;
output  [7:0] weight_regfile_6_11108_i;
output   weight_regfile_6_11108_i_ap_vld;
output  [7:0] weight_regfile_6_12109_i;
output   weight_regfile_6_12109_i_ap_vld;
output  [7:0] weight_regfile_6_13110_i;
output   weight_regfile_6_13110_i_ap_vld;
output  [7:0] weight_regfile_6_14111_i;
output   weight_regfile_6_14111_i_ap_vld;
output  [7:0] weight_regfile_6_15112_i;
output   weight_regfile_6_15112_i_ap_vld;
output  [7:0] weight_regfile_7_0113_i;
output   weight_regfile_7_0113_i_ap_vld;
output  [7:0] weight_regfile_7_1114_i;
output   weight_regfile_7_1114_i_ap_vld;
output  [7:0] weight_regfile_7_2115_i;
output   weight_regfile_7_2115_i_ap_vld;
output  [7:0] weight_regfile_7_3116_i;
output   weight_regfile_7_3116_i_ap_vld;
output  [7:0] weight_regfile_7_4117_i;
output   weight_regfile_7_4117_i_ap_vld;
output  [7:0] weight_regfile_7_5118_i;
output   weight_regfile_7_5118_i_ap_vld;
output  [7:0] weight_regfile_7_6119_i;
output   weight_regfile_7_6119_i_ap_vld;
output  [7:0] weight_regfile_7_7120_i;
output   weight_regfile_7_7120_i_ap_vld;
output  [7:0] weight_regfile_7_8121_i;
output   weight_regfile_7_8121_i_ap_vld;
output  [7:0] weight_regfile_7_9122_i;
output   weight_regfile_7_9122_i_ap_vld;
output  [7:0] weight_regfile_7_10123_i;
output   weight_regfile_7_10123_i_ap_vld;
output  [7:0] weight_regfile_7_11124_i;
output   weight_regfile_7_11124_i_ap_vld;
output  [7:0] weight_regfile_7_12125_i;
output   weight_regfile_7_12125_i_ap_vld;
output  [7:0] weight_regfile_7_13126_i;
output   weight_regfile_7_13126_i_ap_vld;
output  [7:0] weight_regfile_7_14127_i;
output   weight_regfile_7_14127_i_ap_vld;
output  [7:0] weight_regfile_7_15128_i;
output   weight_regfile_7_15128_i_ap_vld;
output  [7:0] weight_regfile_8_0129_i;
output   weight_regfile_8_0129_i_ap_vld;
output  [7:0] weight_regfile_8_1130_i;
output   weight_regfile_8_1130_i_ap_vld;
output  [7:0] weight_regfile_8_2131_i;
output   weight_regfile_8_2131_i_ap_vld;
output  [7:0] weight_regfile_8_3132_i;
output   weight_regfile_8_3132_i_ap_vld;
output  [7:0] weight_regfile_8_4133_i;
output   weight_regfile_8_4133_i_ap_vld;
output  [7:0] weight_regfile_8_5134_i;
output   weight_regfile_8_5134_i_ap_vld;
output  [7:0] weight_regfile_8_6135_i;
output   weight_regfile_8_6135_i_ap_vld;
output  [7:0] weight_regfile_8_7136_i;
output   weight_regfile_8_7136_i_ap_vld;
output  [7:0] weight_regfile_8_8137_i;
output   weight_regfile_8_8137_i_ap_vld;
output  [7:0] weight_regfile_8_9138_i;
output   weight_regfile_8_9138_i_ap_vld;
output  [7:0] weight_regfile_8_10139_i;
output   weight_regfile_8_10139_i_ap_vld;
output  [7:0] weight_regfile_8_11140_i;
output   weight_regfile_8_11140_i_ap_vld;
output  [7:0] weight_regfile_8_12141_i;
output   weight_regfile_8_12141_i_ap_vld;
output  [7:0] weight_regfile_8_13142_i;
output   weight_regfile_8_13142_i_ap_vld;
output  [7:0] weight_regfile_8_14143_i;
output   weight_regfile_8_14143_i_ap_vld;
output  [7:0] weight_regfile_8_15144_i;
output   weight_regfile_8_15144_i_ap_vld;
output  [7:0] weight_regfile_9_0145_i;
output   weight_regfile_9_0145_i_ap_vld;
output  [7:0] weight_regfile_9_1146_i;
output   weight_regfile_9_1146_i_ap_vld;
output  [7:0] weight_regfile_9_2147_i;
output   weight_regfile_9_2147_i_ap_vld;
output  [7:0] weight_regfile_9_3148_i;
output   weight_regfile_9_3148_i_ap_vld;
output  [7:0] weight_regfile_9_4149_i;
output   weight_regfile_9_4149_i_ap_vld;
output  [7:0] weight_regfile_9_5150_i;
output   weight_regfile_9_5150_i_ap_vld;
output  [7:0] weight_regfile_9_6151_i;
output   weight_regfile_9_6151_i_ap_vld;
output  [7:0] weight_regfile_9_7152_i;
output   weight_regfile_9_7152_i_ap_vld;
output  [7:0] weight_regfile_9_8153_i;
output   weight_regfile_9_8153_i_ap_vld;
output  [7:0] weight_regfile_9_9154_i;
output   weight_regfile_9_9154_i_ap_vld;
output  [7:0] weight_regfile_9_10155_i;
output   weight_regfile_9_10155_i_ap_vld;
output  [7:0] weight_regfile_9_11156_i;
output   weight_regfile_9_11156_i_ap_vld;
output  [7:0] weight_regfile_9_12157_i;
output   weight_regfile_9_12157_i_ap_vld;
output  [7:0] weight_regfile_9_13158_i;
output   weight_regfile_9_13158_i_ap_vld;
output  [7:0] weight_regfile_9_14159_i;
output   weight_regfile_9_14159_i_ap_vld;
output  [7:0] weight_regfile_9_15160_i;
output   weight_regfile_9_15160_i_ap_vld;
output  [7:0] weight_regfile_10_0161_i;
output   weight_regfile_10_0161_i_ap_vld;
output  [7:0] weight_regfile_10_1162_i;
output   weight_regfile_10_1162_i_ap_vld;
output  [7:0] weight_regfile_10_2163_i;
output   weight_regfile_10_2163_i_ap_vld;
output  [7:0] weight_regfile_10_3164_i;
output   weight_regfile_10_3164_i_ap_vld;
output  [7:0] weight_regfile_10_4165_i;
output   weight_regfile_10_4165_i_ap_vld;
output  [7:0] weight_regfile_10_5166_i;
output   weight_regfile_10_5166_i_ap_vld;
output  [7:0] weight_regfile_10_6167_i;
output   weight_regfile_10_6167_i_ap_vld;
output  [7:0] weight_regfile_10_7168_i;
output   weight_regfile_10_7168_i_ap_vld;
output  [7:0] weight_regfile_10_8169_i;
output   weight_regfile_10_8169_i_ap_vld;
output  [7:0] weight_regfile_10_9170_i;
output   weight_regfile_10_9170_i_ap_vld;
output  [7:0] weight_regfile_10_10171_i;
output   weight_regfile_10_10171_i_ap_vld;
output  [7:0] weight_regfile_10_11172_i;
output   weight_regfile_10_11172_i_ap_vld;
output  [7:0] weight_regfile_10_12173_i;
output   weight_regfile_10_12173_i_ap_vld;
output  [7:0] weight_regfile_10_13174_i;
output   weight_regfile_10_13174_i_ap_vld;
output  [7:0] weight_regfile_10_14175_i;
output   weight_regfile_10_14175_i_ap_vld;
output  [7:0] weight_regfile_10_15176_i;
output   weight_regfile_10_15176_i_ap_vld;
output  [7:0] weight_regfile_11_0177_i;
output   weight_regfile_11_0177_i_ap_vld;
output  [7:0] weight_regfile_11_1178_i;
output   weight_regfile_11_1178_i_ap_vld;
output  [7:0] weight_regfile_11_2179_i;
output   weight_regfile_11_2179_i_ap_vld;
output  [7:0] weight_regfile_11_3180_i;
output   weight_regfile_11_3180_i_ap_vld;
output  [7:0] weight_regfile_11_4181_i;
output   weight_regfile_11_4181_i_ap_vld;
output  [7:0] weight_regfile_11_5182_i;
output   weight_regfile_11_5182_i_ap_vld;
output  [7:0] weight_regfile_11_6183_i;
output   weight_regfile_11_6183_i_ap_vld;
output  [7:0] weight_regfile_11_7184_i;
output   weight_regfile_11_7184_i_ap_vld;
output  [7:0] weight_regfile_11_8185_i;
output   weight_regfile_11_8185_i_ap_vld;
output  [7:0] weight_regfile_11_9186_i;
output   weight_regfile_11_9186_i_ap_vld;
output  [7:0] weight_regfile_11_10187_i;
output   weight_regfile_11_10187_i_ap_vld;
output  [7:0] weight_regfile_11_11188_i;
output   weight_regfile_11_11188_i_ap_vld;
output  [7:0] weight_regfile_11_12189_i;
output   weight_regfile_11_12189_i_ap_vld;
output  [7:0] weight_regfile_11_13190_i;
output   weight_regfile_11_13190_i_ap_vld;
output  [7:0] weight_regfile_11_14191_i;
output   weight_regfile_11_14191_i_ap_vld;
output  [7:0] weight_regfile_11_15192_i;
output   weight_regfile_11_15192_i_ap_vld;
output  [7:0] weight_regfile_12_0193_i;
output   weight_regfile_12_0193_i_ap_vld;
output  [7:0] weight_regfile_12_1194_i;
output   weight_regfile_12_1194_i_ap_vld;
output  [7:0] weight_regfile_12_2195_i;
output   weight_regfile_12_2195_i_ap_vld;
output  [7:0] weight_regfile_12_3196_i;
output   weight_regfile_12_3196_i_ap_vld;
output  [7:0] weight_regfile_12_4197_i;
output   weight_regfile_12_4197_i_ap_vld;
output  [7:0] weight_regfile_12_5198_i;
output   weight_regfile_12_5198_i_ap_vld;
output  [7:0] weight_regfile_12_6199_i;
output   weight_regfile_12_6199_i_ap_vld;
output  [7:0] weight_regfile_12_7200_i;
output   weight_regfile_12_7200_i_ap_vld;
output  [7:0] weight_regfile_12_8201_i;
output   weight_regfile_12_8201_i_ap_vld;
output  [7:0] weight_regfile_12_9202_i;
output   weight_regfile_12_9202_i_ap_vld;
output  [7:0] weight_regfile_12_10203_i;
output   weight_regfile_12_10203_i_ap_vld;
output  [7:0] weight_regfile_12_11204_i;
output   weight_regfile_12_11204_i_ap_vld;
output  [7:0] weight_regfile_12_12205_i;
output   weight_regfile_12_12205_i_ap_vld;
output  [7:0] weight_regfile_12_13206_i;
output   weight_regfile_12_13206_i_ap_vld;
output  [7:0] weight_regfile_12_14207_i;
output   weight_regfile_12_14207_i_ap_vld;
output  [7:0] weight_regfile_12_15208_i;
output   weight_regfile_12_15208_i_ap_vld;
output  [7:0] weight_regfile_13_0209_i;
output   weight_regfile_13_0209_i_ap_vld;
output  [7:0] weight_regfile_13_1210_i;
output   weight_regfile_13_1210_i_ap_vld;
output  [7:0] weight_regfile_13_2211_i;
output   weight_regfile_13_2211_i_ap_vld;
output  [7:0] weight_regfile_13_3212_i;
output   weight_regfile_13_3212_i_ap_vld;
output  [7:0] weight_regfile_13_4213_i;
output   weight_regfile_13_4213_i_ap_vld;
output  [7:0] weight_regfile_13_5214_i;
output   weight_regfile_13_5214_i_ap_vld;
output  [7:0] weight_regfile_13_6215_i;
output   weight_regfile_13_6215_i_ap_vld;
output  [7:0] weight_regfile_13_7216_i;
output   weight_regfile_13_7216_i_ap_vld;
output  [7:0] weight_regfile_13_8217_i;
output   weight_regfile_13_8217_i_ap_vld;
output  [7:0] weight_regfile_13_9218_i;
output   weight_regfile_13_9218_i_ap_vld;
output  [7:0] weight_regfile_13_10219_i;
output   weight_regfile_13_10219_i_ap_vld;
output  [7:0] weight_regfile_13_11220_i;
output   weight_regfile_13_11220_i_ap_vld;
output  [7:0] weight_regfile_13_12221_i;
output   weight_regfile_13_12221_i_ap_vld;
output  [7:0] weight_regfile_13_13222_i;
output   weight_regfile_13_13222_i_ap_vld;
output  [7:0] weight_regfile_13_14223_i;
output   weight_regfile_13_14223_i_ap_vld;
output  [7:0] weight_regfile_13_15224_i;
output   weight_regfile_13_15224_i_ap_vld;
output  [7:0] weight_regfile_14_0225_i;
output   weight_regfile_14_0225_i_ap_vld;
output  [7:0] weight_regfile_14_1226_i;
output   weight_regfile_14_1226_i_ap_vld;
output  [7:0] weight_regfile_14_2227_i;
output   weight_regfile_14_2227_i_ap_vld;
output  [7:0] weight_regfile_14_3228_i;
output   weight_regfile_14_3228_i_ap_vld;
output  [7:0] weight_regfile_14_4229_i;
output   weight_regfile_14_4229_i_ap_vld;
output  [7:0] weight_regfile_14_5230_i;
output   weight_regfile_14_5230_i_ap_vld;
output  [7:0] weight_regfile_14_6231_i;
output   weight_regfile_14_6231_i_ap_vld;
output  [7:0] weight_regfile_14_7232_i;
output   weight_regfile_14_7232_i_ap_vld;
output  [7:0] weight_regfile_14_8233_i;
output   weight_regfile_14_8233_i_ap_vld;
output  [7:0] weight_regfile_14_9234_i;
output   weight_regfile_14_9234_i_ap_vld;
output  [7:0] weight_regfile_14_10235_i;
output   weight_regfile_14_10235_i_ap_vld;
output  [7:0] weight_regfile_14_11236_i;
output   weight_regfile_14_11236_i_ap_vld;
output  [7:0] weight_regfile_14_12237_i;
output   weight_regfile_14_12237_i_ap_vld;
output  [7:0] weight_regfile_14_13238_i;
output   weight_regfile_14_13238_i_ap_vld;
output  [7:0] weight_regfile_14_14239_i;
output   weight_regfile_14_14239_i_ap_vld;
output  [7:0] weight_regfile_14_15240_i;
output   weight_regfile_14_15240_i_ap_vld;
output  [7:0] weight_regfile_15_0241_i;
output   weight_regfile_15_0241_i_ap_vld;
output  [7:0] weight_regfile_15_1242_i;
output   weight_regfile_15_1242_i_ap_vld;
output  [7:0] weight_regfile_15_2243_i;
output   weight_regfile_15_2243_i_ap_vld;
output  [7:0] weight_regfile_15_3244_i;
output   weight_regfile_15_3244_i_ap_vld;
output  [7:0] weight_regfile_15_4245_i;
output   weight_regfile_15_4245_i_ap_vld;
output  [7:0] weight_regfile_15_5246_i;
output   weight_regfile_15_5246_i_ap_vld;
output  [7:0] weight_regfile_15_6247_i;
output   weight_regfile_15_6247_i_ap_vld;
output  [7:0] weight_regfile_15_7248_i;
output   weight_regfile_15_7248_i_ap_vld;
output  [7:0] weight_regfile_15_8249_i;
output   weight_regfile_15_8249_i_ap_vld;
output  [7:0] weight_regfile_15_9250_i;
output   weight_regfile_15_9250_i_ap_vld;
output  [7:0] weight_regfile_15_10251_i;
output   weight_regfile_15_10251_i_ap_vld;
output  [7:0] weight_regfile_15_11252_i;
output   weight_regfile_15_11252_i_ap_vld;
output  [7:0] weight_regfile_15_12253_i;
output   weight_regfile_15_12253_i_ap_vld;
output  [7:0] weight_regfile_15_13254_i;
output   weight_regfile_15_13254_i_ap_vld;
output  [7:0] weight_regfile_15_14255_i;
output   weight_regfile_15_14255_i_ap_vld;
output  [7:0] weight_regfile_15_15256_i;
output   weight_regfile_15_15256_i_ap_vld;
input  [11:0] C_L2_dout;
input   C_L2_empty_n;
output   C_L2_read;
input  [11:0] R_L2_dout;
input   R_L2_empty_n;
output   R_L2_read;
input  [11:0] S_L2_dout;
input   S_L2_empty_n;
output   S_L2_read;
input  [11:0] ko_3_dout;
input   ko_3_empty_n;
output   ko_3_read;
input  [31:0] co_dout;
input   co_empty_n;
output   co_read;
input  [31:0] ro_dout;
input   ro_empty_n;
output   ro_read;
input  [31:0] so_dout;
input   so_empty_n;
output   so_read;
output  [11:0] weight_l2_0_address0;
output   weight_l2_0_ce0;
input  [7:0] weight_l2_0_q0;
output  [11:0] weight_l2_0_address1;
output   weight_l2_0_ce1;
input  [7:0] weight_l2_0_q1;
output  [11:0] weight_l2_1_address0;
output   weight_l2_1_ce0;
input  [7:0] weight_l2_1_q0;
output  [11:0] weight_l2_1_address1;
output   weight_l2_1_ce1;
input  [7:0] weight_l2_1_q1;
output  [11:0] weight_l2_10_address0;
output   weight_l2_10_ce0;
input  [7:0] weight_l2_10_q0;
output  [11:0] weight_l2_10_address1;
output   weight_l2_10_ce1;
input  [7:0] weight_l2_10_q1;
output  [11:0] weight_l2_11_address0;
output   weight_l2_11_ce0;
input  [7:0] weight_l2_11_q0;
output  [11:0] weight_l2_11_address1;
output   weight_l2_11_ce1;
input  [7:0] weight_l2_11_q1;
output  [11:0] weight_l2_12_address0;
output   weight_l2_12_ce0;
input  [7:0] weight_l2_12_q0;
output  [11:0] weight_l2_12_address1;
output   weight_l2_12_ce1;
input  [7:0] weight_l2_12_q1;
output  [11:0] weight_l2_13_address0;
output   weight_l2_13_ce0;
input  [7:0] weight_l2_13_q0;
output  [11:0] weight_l2_13_address1;
output   weight_l2_13_ce1;
input  [7:0] weight_l2_13_q1;
output  [11:0] weight_l2_14_address0;
output   weight_l2_14_ce0;
input  [7:0] weight_l2_14_q0;
output  [11:0] weight_l2_14_address1;
output   weight_l2_14_ce1;
input  [7:0] weight_l2_14_q1;
output  [11:0] weight_l2_15_address0;
output   weight_l2_15_ce0;
input  [7:0] weight_l2_15_q0;
output  [11:0] weight_l2_15_address1;
output   weight_l2_15_ce1;
input  [7:0] weight_l2_15_q1;
output  [11:0] weight_l2_2_address0;
output   weight_l2_2_ce0;
input  [7:0] weight_l2_2_q0;
output  [11:0] weight_l2_2_address1;
output   weight_l2_2_ce1;
input  [7:0] weight_l2_2_q1;
output  [11:0] weight_l2_3_address0;
output   weight_l2_3_ce0;
input  [7:0] weight_l2_3_q0;
output  [11:0] weight_l2_3_address1;
output   weight_l2_3_ce1;
input  [7:0] weight_l2_3_q1;
output  [11:0] weight_l2_4_address0;
output   weight_l2_4_ce0;
input  [7:0] weight_l2_4_q0;
output  [11:0] weight_l2_4_address1;
output   weight_l2_4_ce1;
input  [7:0] weight_l2_4_q1;
output  [11:0] weight_l2_5_address0;
output   weight_l2_5_ce0;
input  [7:0] weight_l2_5_q0;
output  [11:0] weight_l2_5_address1;
output   weight_l2_5_ce1;
input  [7:0] weight_l2_5_q1;
output  [11:0] weight_l2_6_address0;
output   weight_l2_6_ce0;
input  [7:0] weight_l2_6_q0;
output  [11:0] weight_l2_6_address1;
output   weight_l2_6_ce1;
input  [7:0] weight_l2_6_q1;
output  [11:0] weight_l2_7_address0;
output   weight_l2_7_ce0;
input  [7:0] weight_l2_7_q0;
output  [11:0] weight_l2_7_address1;
output   weight_l2_7_ce1;
input  [7:0] weight_l2_7_q1;
output  [11:0] weight_l2_8_address0;
output   weight_l2_8_ce0;
input  [7:0] weight_l2_8_q0;
output  [11:0] weight_l2_8_address1;
output   weight_l2_8_ce1;
input  [7:0] weight_l2_8_q1;
output  [11:0] weight_l2_9_address0;
output   weight_l2_9_ce0;
input  [7:0] weight_l2_9_q0;
output  [11:0] weight_l2_9_address1;
output   weight_l2_9_ce1;
input  [7:0] weight_l2_9_q1;
output  [6:0] ko_3_out_din;
input   ko_3_out_full_n;
output   ko_3_out_write;
output  [31:0] co_out_din;
input   co_out_full_n;
output   co_out_write;
output  [31:0] ro_out_din;
input   ro_out_full_n;
output   ro_out_write;
output  [31:0] so_out_din;
input   so_out_full_n;
output   so_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_regfile_0_01_i_ap_vld;
reg weight_regfile_0_12_i_ap_vld;
reg weight_regfile_0_23_i_ap_vld;
reg weight_regfile_0_34_i_ap_vld;
reg weight_regfile_0_45_i_ap_vld;
reg weight_regfile_0_56_i_ap_vld;
reg weight_regfile_0_67_i_ap_vld;
reg weight_regfile_0_78_i_ap_vld;
reg weight_regfile_0_89_i_ap_vld;
reg weight_regfile_0_910_i_ap_vld;
reg weight_regfile_0_1011_i_ap_vld;
reg weight_regfile_0_1112_i_ap_vld;
reg weight_regfile_0_1213_i_ap_vld;
reg weight_regfile_0_1314_i_ap_vld;
reg weight_regfile_0_1415_i_ap_vld;
reg weight_regfile_0_1516_i_ap_vld;
reg weight_regfile_1_017_i_ap_vld;
reg weight_regfile_1_118_i_ap_vld;
reg weight_regfile_1_219_i_ap_vld;
reg weight_regfile_1_320_i_ap_vld;
reg weight_regfile_1_421_i_ap_vld;
reg weight_regfile_1_522_i_ap_vld;
reg weight_regfile_1_623_i_ap_vld;
reg weight_regfile_1_724_i_ap_vld;
reg weight_regfile_1_825_i_ap_vld;
reg weight_regfile_1_926_i_ap_vld;
reg weight_regfile_1_1027_i_ap_vld;
reg weight_regfile_1_1128_i_ap_vld;
reg weight_regfile_1_1229_i_ap_vld;
reg weight_regfile_1_1330_i_ap_vld;
reg weight_regfile_1_1431_i_ap_vld;
reg weight_regfile_1_1532_i_ap_vld;
reg weight_regfile_2_033_i_ap_vld;
reg weight_regfile_2_134_i_ap_vld;
reg weight_regfile_2_235_i_ap_vld;
reg weight_regfile_2_336_i_ap_vld;
reg weight_regfile_2_437_i_ap_vld;
reg weight_regfile_2_538_i_ap_vld;
reg weight_regfile_2_639_i_ap_vld;
reg weight_regfile_2_740_i_ap_vld;
reg weight_regfile_2_841_i_ap_vld;
reg weight_regfile_2_942_i_ap_vld;
reg weight_regfile_2_1043_i_ap_vld;
reg weight_regfile_2_1144_i_ap_vld;
reg weight_regfile_2_1245_i_ap_vld;
reg weight_regfile_2_1346_i_ap_vld;
reg weight_regfile_2_1447_i_ap_vld;
reg weight_regfile_2_1548_i_ap_vld;
reg weight_regfile_3_049_i_ap_vld;
reg weight_regfile_3_150_i_ap_vld;
reg weight_regfile_3_251_i_ap_vld;
reg weight_regfile_3_352_i_ap_vld;
reg weight_regfile_3_453_i_ap_vld;
reg weight_regfile_3_554_i_ap_vld;
reg weight_regfile_3_655_i_ap_vld;
reg weight_regfile_3_756_i_ap_vld;
reg weight_regfile_3_857_i_ap_vld;
reg weight_regfile_3_958_i_ap_vld;
reg weight_regfile_3_1059_i_ap_vld;
reg weight_regfile_3_1160_i_ap_vld;
reg weight_regfile_3_1261_i_ap_vld;
reg weight_regfile_3_1362_i_ap_vld;
reg weight_regfile_3_1463_i_ap_vld;
reg weight_regfile_3_1564_i_ap_vld;
reg weight_regfile_4_065_i_ap_vld;
reg weight_regfile_4_166_i_ap_vld;
reg weight_regfile_4_267_i_ap_vld;
reg weight_regfile_4_368_i_ap_vld;
reg weight_regfile_4_469_i_ap_vld;
reg weight_regfile_4_570_i_ap_vld;
reg weight_regfile_4_671_i_ap_vld;
reg weight_regfile_4_772_i_ap_vld;
reg weight_regfile_4_873_i_ap_vld;
reg weight_regfile_4_974_i_ap_vld;
reg weight_regfile_4_1075_i_ap_vld;
reg weight_regfile_4_1176_i_ap_vld;
reg weight_regfile_4_1277_i_ap_vld;
reg weight_regfile_4_1378_i_ap_vld;
reg weight_regfile_4_1479_i_ap_vld;
reg weight_regfile_4_1580_i_ap_vld;
reg weight_regfile_5_081_i_ap_vld;
reg weight_regfile_5_182_i_ap_vld;
reg weight_regfile_5_283_i_ap_vld;
reg weight_regfile_5_384_i_ap_vld;
reg weight_regfile_5_485_i_ap_vld;
reg weight_regfile_5_586_i_ap_vld;
reg weight_regfile_5_687_i_ap_vld;
reg weight_regfile_5_788_i_ap_vld;
reg weight_regfile_5_889_i_ap_vld;
reg weight_regfile_5_990_i_ap_vld;
reg weight_regfile_5_1091_i_ap_vld;
reg weight_regfile_5_1192_i_ap_vld;
reg weight_regfile_5_1293_i_ap_vld;
reg weight_regfile_5_1394_i_ap_vld;
reg weight_regfile_5_1495_i_ap_vld;
reg weight_regfile_5_1596_i_ap_vld;
reg weight_regfile_6_097_i_ap_vld;
reg weight_regfile_6_198_i_ap_vld;
reg weight_regfile_6_299_i_ap_vld;
reg weight_regfile_6_3100_i_ap_vld;
reg weight_regfile_6_4101_i_ap_vld;
reg weight_regfile_6_5102_i_ap_vld;
reg weight_regfile_6_6103_i_ap_vld;
reg weight_regfile_6_7104_i_ap_vld;
reg weight_regfile_6_8105_i_ap_vld;
reg weight_regfile_6_9106_i_ap_vld;
reg weight_regfile_6_10107_i_ap_vld;
reg weight_regfile_6_11108_i_ap_vld;
reg weight_regfile_6_12109_i_ap_vld;
reg weight_regfile_6_13110_i_ap_vld;
reg weight_regfile_6_14111_i_ap_vld;
reg weight_regfile_6_15112_i_ap_vld;
reg weight_regfile_7_0113_i_ap_vld;
reg weight_regfile_7_1114_i_ap_vld;
reg weight_regfile_7_2115_i_ap_vld;
reg weight_regfile_7_3116_i_ap_vld;
reg weight_regfile_7_4117_i_ap_vld;
reg weight_regfile_7_5118_i_ap_vld;
reg weight_regfile_7_6119_i_ap_vld;
reg weight_regfile_7_7120_i_ap_vld;
reg weight_regfile_7_8121_i_ap_vld;
reg weight_regfile_7_9122_i_ap_vld;
reg weight_regfile_7_10123_i_ap_vld;
reg weight_regfile_7_11124_i_ap_vld;
reg weight_regfile_7_12125_i_ap_vld;
reg weight_regfile_7_13126_i_ap_vld;
reg weight_regfile_7_14127_i_ap_vld;
reg weight_regfile_7_15128_i_ap_vld;
reg weight_regfile_8_0129_i_ap_vld;
reg weight_regfile_8_1130_i_ap_vld;
reg weight_regfile_8_2131_i_ap_vld;
reg weight_regfile_8_3132_i_ap_vld;
reg weight_regfile_8_4133_i_ap_vld;
reg weight_regfile_8_5134_i_ap_vld;
reg weight_regfile_8_6135_i_ap_vld;
reg weight_regfile_8_7136_i_ap_vld;
reg weight_regfile_8_8137_i_ap_vld;
reg weight_regfile_8_9138_i_ap_vld;
reg weight_regfile_8_10139_i_ap_vld;
reg weight_regfile_8_11140_i_ap_vld;
reg weight_regfile_8_12141_i_ap_vld;
reg weight_regfile_8_13142_i_ap_vld;
reg weight_regfile_8_14143_i_ap_vld;
reg weight_regfile_8_15144_i_ap_vld;
reg weight_regfile_9_0145_i_ap_vld;
reg weight_regfile_9_1146_i_ap_vld;
reg weight_regfile_9_2147_i_ap_vld;
reg weight_regfile_9_3148_i_ap_vld;
reg weight_regfile_9_4149_i_ap_vld;
reg weight_regfile_9_5150_i_ap_vld;
reg weight_regfile_9_6151_i_ap_vld;
reg weight_regfile_9_7152_i_ap_vld;
reg weight_regfile_9_8153_i_ap_vld;
reg weight_regfile_9_9154_i_ap_vld;
reg weight_regfile_9_10155_i_ap_vld;
reg weight_regfile_9_11156_i_ap_vld;
reg weight_regfile_9_12157_i_ap_vld;
reg weight_regfile_9_13158_i_ap_vld;
reg weight_regfile_9_14159_i_ap_vld;
reg weight_regfile_9_15160_i_ap_vld;
reg weight_regfile_10_0161_i_ap_vld;
reg weight_regfile_10_1162_i_ap_vld;
reg weight_regfile_10_2163_i_ap_vld;
reg weight_regfile_10_3164_i_ap_vld;
reg weight_regfile_10_4165_i_ap_vld;
reg weight_regfile_10_5166_i_ap_vld;
reg weight_regfile_10_6167_i_ap_vld;
reg weight_regfile_10_7168_i_ap_vld;
reg weight_regfile_10_8169_i_ap_vld;
reg weight_regfile_10_9170_i_ap_vld;
reg weight_regfile_10_10171_i_ap_vld;
reg weight_regfile_10_11172_i_ap_vld;
reg weight_regfile_10_12173_i_ap_vld;
reg weight_regfile_10_13174_i_ap_vld;
reg weight_regfile_10_14175_i_ap_vld;
reg weight_regfile_10_15176_i_ap_vld;
reg weight_regfile_11_0177_i_ap_vld;
reg weight_regfile_11_1178_i_ap_vld;
reg weight_regfile_11_2179_i_ap_vld;
reg weight_regfile_11_3180_i_ap_vld;
reg weight_regfile_11_4181_i_ap_vld;
reg weight_regfile_11_5182_i_ap_vld;
reg weight_regfile_11_6183_i_ap_vld;
reg weight_regfile_11_7184_i_ap_vld;
reg weight_regfile_11_8185_i_ap_vld;
reg weight_regfile_11_9186_i_ap_vld;
reg weight_regfile_11_10187_i_ap_vld;
reg weight_regfile_11_11188_i_ap_vld;
reg weight_regfile_11_12189_i_ap_vld;
reg weight_regfile_11_13190_i_ap_vld;
reg weight_regfile_11_14191_i_ap_vld;
reg weight_regfile_11_15192_i_ap_vld;
reg weight_regfile_12_0193_i_ap_vld;
reg weight_regfile_12_1194_i_ap_vld;
reg weight_regfile_12_2195_i_ap_vld;
reg weight_regfile_12_3196_i_ap_vld;
reg weight_regfile_12_4197_i_ap_vld;
reg weight_regfile_12_5198_i_ap_vld;
reg weight_regfile_12_6199_i_ap_vld;
reg weight_regfile_12_7200_i_ap_vld;
reg weight_regfile_12_8201_i_ap_vld;
reg weight_regfile_12_9202_i_ap_vld;
reg weight_regfile_12_10203_i_ap_vld;
reg weight_regfile_12_11204_i_ap_vld;
reg weight_regfile_12_12205_i_ap_vld;
reg weight_regfile_12_13206_i_ap_vld;
reg weight_regfile_12_14207_i_ap_vld;
reg weight_regfile_12_15208_i_ap_vld;
reg weight_regfile_13_0209_i_ap_vld;
reg weight_regfile_13_1210_i_ap_vld;
reg weight_regfile_13_2211_i_ap_vld;
reg weight_regfile_13_3212_i_ap_vld;
reg weight_regfile_13_4213_i_ap_vld;
reg weight_regfile_13_5214_i_ap_vld;
reg weight_regfile_13_6215_i_ap_vld;
reg weight_regfile_13_7216_i_ap_vld;
reg weight_regfile_13_8217_i_ap_vld;
reg weight_regfile_13_9218_i_ap_vld;
reg weight_regfile_13_10219_i_ap_vld;
reg weight_regfile_13_11220_i_ap_vld;
reg weight_regfile_13_12221_i_ap_vld;
reg weight_regfile_13_13222_i_ap_vld;
reg weight_regfile_13_14223_i_ap_vld;
reg weight_regfile_13_15224_i_ap_vld;
reg weight_regfile_14_0225_i_ap_vld;
reg weight_regfile_14_1226_i_ap_vld;
reg weight_regfile_14_2227_i_ap_vld;
reg weight_regfile_14_3228_i_ap_vld;
reg weight_regfile_14_4229_i_ap_vld;
reg weight_regfile_14_5230_i_ap_vld;
reg weight_regfile_14_6231_i_ap_vld;
reg weight_regfile_14_7232_i_ap_vld;
reg weight_regfile_14_8233_i_ap_vld;
reg weight_regfile_14_9234_i_ap_vld;
reg weight_regfile_14_10235_i_ap_vld;
reg weight_regfile_14_11236_i_ap_vld;
reg weight_regfile_14_12237_i_ap_vld;
reg weight_regfile_14_13238_i_ap_vld;
reg weight_regfile_14_14239_i_ap_vld;
reg weight_regfile_14_15240_i_ap_vld;
reg weight_regfile_15_0241_i_ap_vld;
reg weight_regfile_15_1242_i_ap_vld;
reg weight_regfile_15_2243_i_ap_vld;
reg weight_regfile_15_3244_i_ap_vld;
reg weight_regfile_15_4245_i_ap_vld;
reg weight_regfile_15_5246_i_ap_vld;
reg weight_regfile_15_6247_i_ap_vld;
reg weight_regfile_15_7248_i_ap_vld;
reg weight_regfile_15_8249_i_ap_vld;
reg weight_regfile_15_9250_i_ap_vld;
reg weight_regfile_15_10251_i_ap_vld;
reg weight_regfile_15_11252_i_ap_vld;
reg weight_regfile_15_12253_i_ap_vld;
reg weight_regfile_15_13254_i_ap_vld;
reg weight_regfile_15_14255_i_ap_vld;
reg weight_regfile_15_15256_i_ap_vld;
reg C_L2_read;
reg R_L2_read;
reg S_L2_read;
reg ko_3_read;
reg co_read;
reg ro_read;
reg so_read;
reg[11:0] weight_l2_0_address0;
reg weight_l2_0_ce0;
reg[11:0] weight_l2_0_address1;
reg weight_l2_0_ce1;
reg[11:0] weight_l2_1_address0;
reg weight_l2_1_ce0;
reg[11:0] weight_l2_1_address1;
reg weight_l2_1_ce1;
reg[11:0] weight_l2_10_address0;
reg weight_l2_10_ce0;
reg[11:0] weight_l2_10_address1;
reg weight_l2_10_ce1;
reg[11:0] weight_l2_11_address0;
reg weight_l2_11_ce0;
reg[11:0] weight_l2_11_address1;
reg weight_l2_11_ce1;
reg[11:0] weight_l2_12_address0;
reg weight_l2_12_ce0;
reg[11:0] weight_l2_12_address1;
reg weight_l2_12_ce1;
reg[11:0] weight_l2_13_address0;
reg weight_l2_13_ce0;
reg[11:0] weight_l2_13_address1;
reg weight_l2_13_ce1;
reg[11:0] weight_l2_14_address0;
reg weight_l2_14_ce0;
reg[11:0] weight_l2_14_address1;
reg weight_l2_14_ce1;
reg[11:0] weight_l2_15_address0;
reg weight_l2_15_ce0;
reg[11:0] weight_l2_15_address1;
reg weight_l2_15_ce1;
reg[11:0] weight_l2_2_address0;
reg weight_l2_2_ce0;
reg[11:0] weight_l2_2_address1;
reg weight_l2_2_ce1;
reg[11:0] weight_l2_3_address0;
reg weight_l2_3_ce0;
reg[11:0] weight_l2_3_address1;
reg weight_l2_3_ce1;
reg[11:0] weight_l2_4_address0;
reg weight_l2_4_ce0;
reg[11:0] weight_l2_4_address1;
reg weight_l2_4_ce1;
reg[11:0] weight_l2_5_address0;
reg weight_l2_5_ce0;
reg[11:0] weight_l2_5_address1;
reg weight_l2_5_ce1;
reg[11:0] weight_l2_6_address0;
reg weight_l2_6_ce0;
reg[11:0] weight_l2_6_address1;
reg weight_l2_6_ce1;
reg[11:0] weight_l2_7_address0;
reg weight_l2_7_ce0;
reg[11:0] weight_l2_7_address1;
reg weight_l2_7_ce1;
reg[11:0] weight_l2_8_address0;
reg weight_l2_8_ce0;
reg[11:0] weight_l2_8_address1;
reg weight_l2_8_ce1;
reg[11:0] weight_l2_9_address0;
reg weight_l2_9_ce0;
reg[11:0] weight_l2_9_address1;
reg weight_l2_9_ce1;
reg ko_3_out_write;
reg co_out_write;
reg ro_out_write;
reg so_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    C_L2_blk_n;
reg    R_L2_blk_n;
reg    S_L2_blk_n;
reg    ko_3_blk_n;
reg    co_blk_n;
reg    ro_blk_n;
reg    so_blk_n;
reg    ko_3_out_blk_n;
reg    co_out_blk_n;
reg    ro_out_blk_n;
reg    so_out_blk_n;
reg    ap_block_state1;
reg  signed [11:0] R_L2_read_reg_5640;
reg  signed [11:0] S_L2_read_reg_5660;
wire   [11:0] trunc_ln839_fu_4944_p1;
reg   [11:0] trunc_ln839_reg_5685;
wire   [11:0] trunc_ln841_fu_4948_p1;
reg   [11:0] trunc_ln841_reg_5705;
wire   [7:0] empty_fu_4952_p1;
reg   [7:0] empty_reg_5725;
wire   [11:0] c_fu_4956_p3;
reg   [11:0] c_reg_5730;
wire    ap_CS_fsm_state4;
wire  signed [11:0] grp_fu_5423_p2;
reg  signed [11:0] mul4_i_i_i_reg_5748;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire  signed [11:0] grp_fu_5607_p4;
reg  signed [11:0] add12_12_i_i_i_reg_6806;
wire  signed [11:0] grp_fu_5614_p4;
reg  signed [11:0] add12_13_i_i_i_reg_6811;
wire  signed [11:0] grp_fu_5621_p4;
reg  signed [11:0] add12_14_i_i_i_reg_6816;
wire  signed [11:0] grp_fu_5628_p4;
reg  signed [11:0] add12_15_i_i_i_reg_6821;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire   [63:0] idxprom13_i_i_i_fu_5119_p1;
wire   [63:0] idxprom13_1_i_i_i_fu_5138_p1;
wire   [63:0] idxprom13_2_i_i_i_fu_5157_p1;
wire   [63:0] idxprom13_3_i_i_i_fu_5176_p1;
wire   [63:0] idxprom13_4_i_i_i_fu_5195_p1;
wire   [63:0] idxprom13_5_i_i_i_fu_5214_p1;
wire   [63:0] idxprom13_6_i_i_i_fu_5233_p1;
wire   [63:0] idxprom13_7_i_i_i_fu_5252_p1;
wire   [63:0] idxprom13_8_i_i_i_fu_5271_p1;
wire   [63:0] idxprom13_9_i_i_i_fu_5290_p1;
wire   [63:0] idxprom13_10_i_i_i_fu_5309_p1;
wire   [63:0] idxprom13_11_i_i_i_fu_5328_p1;
wire   [63:0] idxprom13_12_i_i_i_fu_5347_p1;
wire   [63:0] idxprom13_13_i_i_i_fu_5366_p1;
wire   [63:0] idxprom13_14_i_i_i_fu_5385_p1;
wire   [63:0] idxprom13_15_i_i_i_fu_5404_p1;
wire    ap_CS_fsm_state18;
wire  signed [11:0] trunc_ln833_fu_4939_p0;
wire   [11:0] c_1_fu_4968_p2;
wire   [11:0] c_2_fu_4979_p2;
wire   [11:0] c_3_fu_4989_p2;
wire   [11:0] c_4_fu_4999_p2;
wire   [11:0] c_5_fu_5009_p2;
wire   [11:0] c_6_fu_5019_p2;
wire   [11:0] c_7_fu_5029_p2;
wire   [11:0] c_8_fu_5039_p2;
wire   [11:0] c_9_fu_5049_p2;
wire   [11:0] c_10_fu_5059_p2;
wire   [11:0] c_11_fu_5069_p2;
wire   [11:0] c_12_fu_5079_p2;
wire   [11:0] c_13_fu_5089_p2;
wire   [11:0] c_14_fu_5099_p2;
wire   [11:0] c_15_fu_5109_p2;
wire  signed [11:0] grp_fu_5461_p4;
wire  signed [11:0] grp_fu_5469_p4;
wire  signed [11:0] grp_fu_5487_p4;
wire  signed [11:0] grp_fu_5495_p4;
wire  signed [11:0] grp_fu_5513_p4;
wire  signed [11:0] grp_fu_5521_p4;
wire  signed [11:0] grp_fu_5559_p4;
wire  signed [11:0] grp_fu_5567_p4;
wire  signed [11:0] grp_fu_5575_p4;
wire  signed [11:0] grp_fu_5583_p4;
wire  signed [11:0] grp_fu_5591_p4;
wire  signed [11:0] grp_fu_5599_p4;
wire  signed [11:0] grp_fu_5431_p1;
wire  signed [11:0] grp_fu_5436_p1;
wire  signed [11:0] grp_fu_5441_p1;
wire  signed [11:0] grp_fu_5446_p1;
wire  signed [11:0] grp_fu_5451_p1;
wire  signed [11:0] grp_fu_5456_p1;
wire  signed [11:0] grp_fu_5431_p2;
wire  signed [11:0] grp_fu_5436_p2;
wire  signed [11:0] grp_fu_5477_p1;
wire  signed [11:0] grp_fu_5482_p1;
wire  signed [11:0] grp_fu_5441_p2;
wire  signed [11:0] grp_fu_5446_p2;
wire  signed [11:0] grp_fu_5503_p1;
wire  signed [11:0] grp_fu_5508_p1;
wire  signed [11:0] grp_fu_5451_p2;
wire  signed [11:0] grp_fu_5456_p2;
wire  signed [11:0] grp_fu_5529_p1;
wire  signed [11:0] grp_fu_5534_p1;
wire  signed [11:0] grp_fu_5539_p1;
wire  signed [11:0] grp_fu_5544_p1;
wire  signed [11:0] grp_fu_5549_p1;
wire  signed [11:0] grp_fu_5554_p1;
wire  signed [11:0] grp_fu_5477_p2;
wire  signed [11:0] grp_fu_5482_p2;
wire  signed [11:0] grp_fu_5503_p2;
wire  signed [11:0] grp_fu_5508_p2;
wire  signed [11:0] grp_fu_5529_p2;
wire  signed [11:0] grp_fu_5534_p2;
wire  signed [11:0] grp_fu_5539_p2;
wire  signed [11:0] grp_fu_5544_p2;
wire  signed [11:0] grp_fu_5549_p2;
wire  signed [11:0] grp_fu_5554_p2;
reg    grp_fu_5423_ce;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 18'd1;
end

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U246(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ko_3_dout),
    .din1(C_L2_dout),
    .ce(grp_fu_5423_ce),
    .dout(grp_fu_5423_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U247(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5431_p1),
    .ce(1'b1),
    .dout(grp_fu_5431_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U248(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5436_p1),
    .ce(1'b1),
    .dout(grp_fu_5436_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U249(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5441_p1),
    .ce(1'b1),
    .dout(grp_fu_5441_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U250(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5446_p1),
    .ce(1'b1),
    .dout(grp_fu_5446_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U251(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5451_p1),
    .ce(1'b1),
    .dout(grp_fu_5451_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U252(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5456_p1),
    .ce(1'b1),
    .dout(grp_fu_5456_p2)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U253(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5431_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5461_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U254(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5436_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5469_p4)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U255(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5477_p1),
    .ce(1'b1),
    .dout(grp_fu_5477_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U256(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5482_p1),
    .ce(1'b1),
    .dout(grp_fu_5482_p2)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U257(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5441_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5487_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U258(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5446_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5495_p4)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U259(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5503_p1),
    .ce(1'b1),
    .dout(grp_fu_5503_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U260(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5508_p1),
    .ce(1'b1),
    .dout(grp_fu_5508_p2)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U261(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5451_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5513_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U262(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5456_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5521_p4)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U263(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5529_p1),
    .ce(1'b1),
    .dout(grp_fu_5529_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U264(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5534_p1),
    .ce(1'b1),
    .dout(grp_fu_5534_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U265(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5539_p1),
    .ce(1'b1),
    .dout(grp_fu_5539_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U266(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5544_p1),
    .ce(1'b1),
    .dout(grp_fu_5544_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U267(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5549_p1),
    .ce(1'b1),
    .dout(grp_fu_5549_p2)
);

Conv_sysarr_mul_mul_12s_12s_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_mul_12s_12s_12_4_1_U268(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(R_L2_read_reg_5640),
    .din1(grp_fu_5554_p1),
    .ce(1'b1),
    .dout(grp_fu_5554_p2)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U269(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5477_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5559_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U270(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5482_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5567_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U271(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5503_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5575_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U272(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5508_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5583_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U273(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5529_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5591_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U274(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5534_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5599_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U275(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5539_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5607_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U276(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5544_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5614_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U277(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5549_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5621_p4)
);

Conv_sysarr_ama_addmuladd_12ns_12s_12s_12ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_12ns_12s_12s_12ns_12_4_1_U278(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln839_reg_5685),
    .din1(grp_fu_5554_p2),
    .din2(S_L2_read_reg_5660),
    .din3(trunc_ln841_reg_5705),
    .ce(1'b1),
    .dout(grp_fu_5628_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        R_L2_read_reg_5640 <= R_L2_dout;
        S_L2_read_reg_5660 <= S_L2_dout;
        empty_reg_5725 <= empty_fu_4952_p1;
        trunc_ln839_reg_5685 <= trunc_ln839_fu_4944_p1;
        trunc_ln841_reg_5705 <= trunc_ln841_fu_4948_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add12_12_i_i_i_reg_6806 <= grp_fu_5607_p4;
        add12_13_i_i_i_reg_6811 <= grp_fu_5614_p4;
        add12_14_i_i_i_reg_6816 <= grp_fu_5621_p4;
        add12_15_i_i_i_reg_6821 <= grp_fu_5628_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c_reg_5730[11 : 4] <= c_fu_4956_p3[11 : 4];
        mul4_i_i_i_reg_5748 <= grp_fu_5423_p2;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        C_L2_blk_n = C_L2_empty_n;
    end else begin
        C_L2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        C_L2_read = 1'b1;
    end else begin
        C_L2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        R_L2_blk_n = R_L2_empty_n;
    end else begin
        R_L2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        R_L2_read = 1'b1;
    end else begin
        R_L2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        S_L2_blk_n = S_L2_empty_n;
    end else begin
        S_L2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        S_L2_read = 1'b1;
    end else begin
        S_L2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_blk_n = co_empty_n;
    end else begin
        co_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_out_blk_n = co_out_full_n;
    end else begin
        co_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_out_write = 1'b1;
    end else begin
        co_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_read = 1'b1;
    end else begin
        co_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_5423_ce = 1'b1;
    end else begin
        grp_fu_5423_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ko_3_blk_n = ko_3_empty_n;
    end else begin
        ko_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ko_3_out_blk_n = ko_3_out_full_n;
    end else begin
        ko_3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ko_3_out_write = 1'b1;
    end else begin
        ko_3_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ko_3_read = 1'b1;
    end else begin
        ko_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ro_blk_n = ro_empty_n;
    end else begin
        ro_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ro_out_blk_n = ro_out_full_n;
    end else begin
        ro_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ro_out_write = 1'b1;
    end else begin
        ro_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ro_read = 1'b1;
    end else begin
        ro_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        so_blk_n = so_empty_n;
    end else begin
        so_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        so_out_blk_n = so_out_full_n;
    end else begin
        so_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        so_out_write = 1'b1;
    end else begin
        so_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        so_read = 1'b1;
    end else begin
        so_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_0_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_0_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_0_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_0_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_0_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_0_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_0_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_0_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_0_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_0_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_0_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_0_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_0_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_0_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_0_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_0_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_10_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_10_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_10_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_10_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_10_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_10_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_10_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_10_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_10_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_10_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_10_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_10_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_10_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_10_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_10_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_10_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_10_ce0 = 1'b1;
    end else begin
        weight_l2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_10_ce1 = 1'b1;
    end else begin
        weight_l2_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_11_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_11_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_11_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_11_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_11_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_11_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_11_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_11_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_11_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_11_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_11_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_11_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_11_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_11_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_11_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_11_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_11_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_11_ce0 = 1'b1;
    end else begin
        weight_l2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_11_ce1 = 1'b1;
    end else begin
        weight_l2_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_12_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_12_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_12_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_12_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_12_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_12_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_12_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_12_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_12_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_12_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_12_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_12_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_12_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_12_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_12_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_12_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_12_ce0 = 1'b1;
    end else begin
        weight_l2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_12_ce1 = 1'b1;
    end else begin
        weight_l2_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_13_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_13_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_13_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_13_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_13_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_13_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_13_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_13_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_13_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_13_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_13_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_13_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_13_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_13_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_13_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_13_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_13_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_13_ce0 = 1'b1;
    end else begin
        weight_l2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_13_ce1 = 1'b1;
    end else begin
        weight_l2_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_14_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_14_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_14_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_14_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_14_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_14_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_14_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_14_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_14_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_14_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_14_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_14_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_14_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_14_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_14_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_14_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_14_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_14_ce0 = 1'b1;
    end else begin
        weight_l2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_14_ce1 = 1'b1;
    end else begin
        weight_l2_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_15_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_15_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_15_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_15_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_15_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_15_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_15_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_15_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_15_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_15_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_15_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_15_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_15_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_15_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_15_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_15_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_15_ce0 = 1'b1;
    end else begin
        weight_l2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_15_ce1 = 1'b1;
    end else begin
        weight_l2_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_1_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_1_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_1_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_1_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_1_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_1_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_1_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_1_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_1_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_1_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_1_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_1_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_1_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_1_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_1_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_1_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_2_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_2_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_2_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_2_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_2_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_2_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_2_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_2_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_2_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_2_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_2_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_2_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_2_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_2_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_2_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_2_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_3_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_3_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_3_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_3_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_3_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_3_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_3_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_3_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_3_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_3_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_3_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_3_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_3_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_3_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_3_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_3_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_4_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_4_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_4_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_4_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_4_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_4_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_4_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_4_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_4_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_4_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_4_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_4_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_4_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_4_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_4_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_4_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_4_ce0 = 1'b1;
    end else begin
        weight_l2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_4_ce1 = 1'b1;
    end else begin
        weight_l2_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_5_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_5_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_5_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_5_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_5_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_5_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_5_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_5_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_5_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_5_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_5_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_5_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_5_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_5_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_5_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_5_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_5_ce0 = 1'b1;
    end else begin
        weight_l2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_5_ce1 = 1'b1;
    end else begin
        weight_l2_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_6_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_6_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_6_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_6_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_6_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_6_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_6_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_6_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_6_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_6_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_6_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_6_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_6_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_6_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_6_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_6_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_6_ce0 = 1'b1;
    end else begin
        weight_l2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_6_ce1 = 1'b1;
    end else begin
        weight_l2_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_7_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_7_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_7_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_7_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_7_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_7_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_7_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_7_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_7_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_7_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_7_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_7_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_7_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_7_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_7_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_7_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_7_ce0 = 1'b1;
    end else begin
        weight_l2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_7_ce1 = 1'b1;
    end else begin
        weight_l2_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_8_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_8_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_8_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_8_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_8_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_8_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_8_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_8_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_8_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_8_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_8_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_8_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_8_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_8_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_8_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_8_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_8_ce0 = 1'b1;
    end else begin
        weight_l2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_8_ce1 = 1'b1;
    end else begin
        weight_l2_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_9_address0 = idxprom13_15_i_i_i_fu_5404_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_9_address0 = idxprom13_13_i_i_i_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_9_address0 = idxprom13_11_i_i_i_fu_5328_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_9_address0 = idxprom13_9_i_i_i_fu_5290_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_9_address0 = idxprom13_7_i_i_i_fu_5252_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_9_address0 = idxprom13_5_i_i_i_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_9_address0 = idxprom13_3_i_i_i_fu_5176_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_9_address0 = idxprom13_1_i_i_i_fu_5138_p1;
    end else begin
        weight_l2_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_l2_9_address1 = idxprom13_14_i_i_i_fu_5385_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_l2_9_address1 = idxprom13_12_i_i_i_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_l2_9_address1 = idxprom13_10_i_i_i_fu_5309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_l2_9_address1 = idxprom13_8_i_i_i_fu_5271_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_l2_9_address1 = idxprom13_6_i_i_i_fu_5233_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_l2_9_address1 = idxprom13_4_i_i_i_fu_5195_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_l2_9_address1 = idxprom13_2_i_i_i_fu_5157_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_l2_9_address1 = idxprom13_i_i_i_fu_5119_p1;
    end else begin
        weight_l2_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_9_ce0 = 1'b1;
    end else begin
        weight_l2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        weight_l2_9_ce1 = 1'b1;
    end else begin
        weight_l2_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_0_01_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_01_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_0_1011_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_1011_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_0_1112_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_1112_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_0_1213_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_1213_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_0_12_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_12_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_0_1314_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_1314_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_0_1415_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_1415_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_0_1516_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_1516_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_0_23_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_23_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_0_34_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_34_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_0_45_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_45_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_0_56_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_56_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_0_67_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_67_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_0_78_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_78_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_0_89_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_89_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_0_910_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_0_910_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_10_0161_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_0161_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_10_10171_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_10171_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_10_11172_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_11172_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_10_1162_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_1162_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_10_12173_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_12173_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_10_13174_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_13174_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_10_14175_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_14175_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_10_15176_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_15176_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_10_2163_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_2163_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_10_3164_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_3164_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_10_4165_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_4165_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_10_5166_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_5166_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_10_6167_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_6167_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_10_7168_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_7168_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_10_8169_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_8169_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_10_9170_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_10_9170_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_11_0177_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_0177_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_11_10187_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_10187_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_11_11188_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_11188_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_11_1178_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_1178_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_11_12189_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_12189_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_11_13190_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_13190_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_11_14191_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_14191_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_11_15192_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_15192_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_11_2179_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_2179_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_11_3180_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_3180_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_11_4181_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_4181_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_11_5182_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_5182_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_11_6183_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_6183_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_11_7184_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_7184_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_11_8185_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_8185_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_11_9186_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_11_9186_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_12_0193_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_0193_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_12_10203_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_10203_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_12_11204_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_11204_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_12_1194_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_1194_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_12_12205_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_12205_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_12_13206_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_13206_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_12_14207_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_14207_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_12_15208_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_15208_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_12_2195_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_2195_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_12_3196_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_3196_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_12_4197_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_4197_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_12_5198_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_5198_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_12_6199_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_6199_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_12_7200_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_7200_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_12_8201_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_8201_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_12_9202_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_12_9202_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_13_0209_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_0209_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_13_10219_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_10219_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_13_11220_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_11220_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_13_1210_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_1210_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_13_12221_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_12221_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_13_13222_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_13222_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_13_14223_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_14223_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_13_15224_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_15224_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_13_2211_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_2211_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_13_3212_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_3212_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_13_4213_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_4213_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_13_5214_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_5214_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_13_6215_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_6215_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_13_7216_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_7216_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_13_8217_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_8217_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_13_9218_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_13_9218_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_14_0225_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_0225_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_14_10235_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_10235_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_14_11236_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_11236_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_14_12237_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_12237_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_14_1226_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_1226_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_14_13238_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_13238_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_14_14239_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_14239_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_14_15240_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_15240_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_14_2227_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_2227_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_14_3228_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_3228_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_14_4229_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_4229_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_14_5230_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_5230_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_14_6231_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_6231_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_14_7232_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_7232_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_14_8233_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_8233_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_14_9234_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_14_9234_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_15_0241_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_0241_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_15_10251_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_10251_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_15_11252_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_11252_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_15_12253_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_12253_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_15_1242_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_1242_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_15_13254_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_13254_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_15_14255_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_14255_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_15_15256_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_15256_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_15_2243_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_2243_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_15_3244_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_3244_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_15_4245_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_4245_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_15_5246_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_5246_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_15_6247_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_6247_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_15_7248_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_7248_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_15_8249_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_8249_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_15_9250_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_15_9250_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_1_017_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_017_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_1_1027_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_1027_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_1_1128_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_1128_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_1_118_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_118_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_1_1229_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_1229_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_1_1330_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_1330_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_1_1431_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_1431_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_1_1532_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_1532_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_1_219_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_219_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_1_320_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_320_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_1_421_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_421_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_1_522_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_522_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_1_623_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_623_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_1_724_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_724_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_1_825_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_825_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_1_926_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_1_926_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_2_033_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_033_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_2_1043_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_1043_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_2_1144_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_1144_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_2_1245_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_1245_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_2_1346_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_1346_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_2_134_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_134_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_2_1447_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_1447_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_2_1548_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_1548_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_2_235_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_235_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_2_336_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_336_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_2_437_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_437_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_2_538_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_538_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_2_639_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_639_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_2_740_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_740_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_2_841_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_841_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_2_942_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_2_942_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_3_049_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_049_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_3_1059_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_1059_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_3_1160_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_1160_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_3_1261_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_1261_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_3_1362_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_1362_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_3_1463_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_1463_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_3_150_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_150_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_3_1564_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_1564_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_3_251_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_251_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_3_352_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_352_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_3_453_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_453_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_3_554_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_554_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_3_655_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_655_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_3_756_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_756_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_3_857_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_857_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_3_958_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_3_958_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_4_065_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_065_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_4_1075_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_1075_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_4_1176_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_1176_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_4_1277_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_1277_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_4_1378_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_1378_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_4_1479_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_1479_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_4_1580_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_1580_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_4_166_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_166_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_4_267_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_267_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_4_368_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_368_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_4_469_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_469_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_4_570_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_570_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_4_671_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_671_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_4_772_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_772_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_4_873_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_873_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_4_974_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_4_974_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_5_081_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_081_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_5_1091_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_1091_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_5_1192_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_1192_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_5_1293_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_1293_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_5_1394_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_1394_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_5_1495_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_1495_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_5_1596_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_1596_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_5_182_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_182_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_5_283_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_283_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_5_384_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_384_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_5_485_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_485_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_5_586_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_586_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_5_687_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_687_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_5_788_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_788_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_5_889_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_889_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_5_990_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_5_990_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_6_097_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_097_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_6_10107_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_10107_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_6_11108_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_11108_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_6_12109_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_12109_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_6_13110_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_13110_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_6_14111_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_14111_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_6_15112_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_15112_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_6_198_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_198_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_6_299_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_299_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_6_3100_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_3100_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_6_4101_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_4101_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_6_5102_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_5102_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_6_6103_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_6103_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_6_7104_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_7104_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_6_8105_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_8105_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_6_9106_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_6_9106_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_7_0113_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_0113_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_7_10123_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_10123_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_7_11124_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_11124_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_7_1114_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_1114_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_7_12125_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_12125_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_7_13126_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_13126_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_7_14127_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_14127_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_7_15128_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_15128_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_7_2115_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_2115_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_7_3116_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_3116_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_7_4117_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_4117_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_7_5118_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_5118_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_7_6119_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_6119_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_7_7120_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_7120_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_7_8121_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_8121_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_7_9122_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_7_9122_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_8_0129_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_0129_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_8_10139_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_10139_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_8_11140_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_11140_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_8_1130_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_1130_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_8_12141_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_12141_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_8_13142_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_13142_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_8_14143_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_14143_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_8_15144_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_15144_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_8_2131_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_2131_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_8_3132_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_3132_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_8_4133_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_4133_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_8_5134_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_5134_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_8_6135_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_6135_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_8_7136_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_7136_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_8_8137_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_8137_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_8_9138_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_8_9138_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_9_0145_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_0145_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_9_10155_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_10155_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_regfile_9_11156_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_11156_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_regfile_9_1146_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_1146_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_9_12157_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_12157_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_regfile_9_13158_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_13158_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_9_14159_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_14159_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_regfile_9_15160_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_15160_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_9_2147_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_2147_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_regfile_9_3148_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_3148_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_9_4149_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_4149_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_regfile_9_5150_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_5150_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_9_6151_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_6151_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_regfile_9_7152_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_7152_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_9_8153_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_8153_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_regfile_9_9154_i_ap_vld = 1'b1;
    end else begin
        weight_regfile_9_9154_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((so_out_full_n == 1'b0) | (ro_out_full_n == 1'b0) | (co_out_full_n == 1'b0) | (ko_3_out_full_n == 1'b0) | (so_empty_n == 1'b0) | (ro_empty_n == 1'b0) | (co_empty_n == 1'b0) | (ko_3_empty_n == 1'b0) | (1'b0 == S_L2_empty_n) | (1'b0 == R_L2_empty_n) | (1'b0 == C_L2_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign c_10_fu_5059_p2 = (c_reg_5730 | 12'd10);

assign c_11_fu_5069_p2 = (c_reg_5730 | 12'd11);

assign c_12_fu_5079_p2 = (c_reg_5730 | 12'd12);

assign c_13_fu_5089_p2 = (c_reg_5730 | 12'd13);

assign c_14_fu_5099_p2 = (c_reg_5730 | 12'd14);

assign c_15_fu_5109_p2 = (c_reg_5730 | 12'd15);

assign c_1_fu_4968_p2 = (c_fu_4956_p3 | 12'd1);

assign c_2_fu_4979_p2 = (c_reg_5730 | 12'd2);

assign c_3_fu_4989_p2 = (c_reg_5730 | 12'd3);

assign c_4_fu_4999_p2 = (c_reg_5730 | 12'd4);

assign c_5_fu_5009_p2 = (c_reg_5730 | 12'd5);

assign c_6_fu_5019_p2 = (c_reg_5730 | 12'd6);

assign c_7_fu_5029_p2 = (c_reg_5730 | 12'd7);

assign c_8_fu_5039_p2 = (c_reg_5730 | 12'd8);

assign c_9_fu_5049_p2 = (c_reg_5730 | 12'd9);

assign c_fu_4956_p3 = {{empty_reg_5725}, {4'd0}};

assign co_out_din = co_dout;

assign empty_fu_4952_p1 = co_dout[7:0];

assign grp_fu_5431_p1 = ($signed(c_fu_4956_p3) + $signed(grp_fu_5423_p2));

assign grp_fu_5436_p1 = ($signed(c_1_fu_4968_p2) + $signed(grp_fu_5423_p2));

assign grp_fu_5441_p1 = ($signed(c_2_fu_4979_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5446_p1 = ($signed(c_3_fu_4989_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5451_p1 = ($signed(c_4_fu_4999_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5456_p1 = ($signed(c_5_fu_5009_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5477_p1 = ($signed(c_6_fu_5019_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5482_p1 = ($signed(c_7_fu_5029_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5503_p1 = ($signed(c_8_fu_5039_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5508_p1 = ($signed(c_9_fu_5049_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5529_p1 = ($signed(c_10_fu_5059_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5534_p1 = ($signed(c_11_fu_5069_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5539_p1 = ($signed(c_12_fu_5079_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5544_p1 = ($signed(c_13_fu_5089_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5549_p1 = ($signed(c_14_fu_5099_p2) + $signed(mul4_i_i_i_reg_5748));

assign grp_fu_5554_p1 = ($signed(c_15_fu_5109_p2) + $signed(mul4_i_i_i_reg_5748));

assign idxprom13_10_i_i_i_fu_5309_p1 = $unsigned(grp_fu_5591_p4);

assign idxprom13_11_i_i_i_fu_5328_p1 = $unsigned(grp_fu_5599_p4);

assign idxprom13_12_i_i_i_fu_5347_p1 = $unsigned(add12_12_i_i_i_reg_6806);

assign idxprom13_13_i_i_i_fu_5366_p1 = $unsigned(add12_13_i_i_i_reg_6811);

assign idxprom13_14_i_i_i_fu_5385_p1 = $unsigned(add12_14_i_i_i_reg_6816);

assign idxprom13_15_i_i_i_fu_5404_p1 = $unsigned(add12_15_i_i_i_reg_6821);

assign idxprom13_1_i_i_i_fu_5138_p1 = $unsigned(grp_fu_5469_p4);

assign idxprom13_2_i_i_i_fu_5157_p1 = $unsigned(grp_fu_5487_p4);

assign idxprom13_3_i_i_i_fu_5176_p1 = $unsigned(grp_fu_5495_p4);

assign idxprom13_4_i_i_i_fu_5195_p1 = $unsigned(grp_fu_5513_p4);

assign idxprom13_5_i_i_i_fu_5214_p1 = $unsigned(grp_fu_5521_p4);

assign idxprom13_6_i_i_i_fu_5233_p1 = $unsigned(grp_fu_5559_p4);

assign idxprom13_7_i_i_i_fu_5252_p1 = $unsigned(grp_fu_5567_p4);

assign idxprom13_8_i_i_i_fu_5271_p1 = $unsigned(grp_fu_5575_p4);

assign idxprom13_9_i_i_i_fu_5290_p1 = $unsigned(grp_fu_5583_p4);

assign idxprom13_i_i_i_fu_5119_p1 = $unsigned(grp_fu_5461_p4);

assign ko_3_out_din = trunc_ln833_fu_4939_p0[6:0];

assign ro_out_din = ro_dout;

assign so_out_din = so_dout;

assign trunc_ln833_fu_4939_p0 = ko_3_dout;

assign trunc_ln839_fu_4944_p1 = ro_dout[11:0];

assign trunc_ln841_fu_4948_p1 = so_dout[11:0];

assign weight_regfile_0_01_i = weight_l2_0_q1;

assign weight_regfile_0_1011_i = weight_l2_0_q1;

assign weight_regfile_0_1112_i = weight_l2_0_q0;

assign weight_regfile_0_1213_i = weight_l2_0_q1;

assign weight_regfile_0_12_i = weight_l2_0_q0;

assign weight_regfile_0_1314_i = weight_l2_0_q0;

assign weight_regfile_0_1415_i = weight_l2_0_q1;

assign weight_regfile_0_1516_i = weight_l2_0_q0;

assign weight_regfile_0_23_i = weight_l2_0_q1;

assign weight_regfile_0_34_i = weight_l2_0_q0;

assign weight_regfile_0_45_i = weight_l2_0_q1;

assign weight_regfile_0_56_i = weight_l2_0_q0;

assign weight_regfile_0_67_i = weight_l2_0_q1;

assign weight_regfile_0_78_i = weight_l2_0_q0;

assign weight_regfile_0_89_i = weight_l2_0_q1;

assign weight_regfile_0_910_i = weight_l2_0_q0;

assign weight_regfile_10_0161_i = weight_l2_10_q1;

assign weight_regfile_10_10171_i = weight_l2_10_q1;

assign weight_regfile_10_11172_i = weight_l2_10_q0;

assign weight_regfile_10_1162_i = weight_l2_10_q0;

assign weight_regfile_10_12173_i = weight_l2_10_q1;

assign weight_regfile_10_13174_i = weight_l2_10_q0;

assign weight_regfile_10_14175_i = weight_l2_10_q1;

assign weight_regfile_10_15176_i = weight_l2_10_q0;

assign weight_regfile_10_2163_i = weight_l2_10_q1;

assign weight_regfile_10_3164_i = weight_l2_10_q0;

assign weight_regfile_10_4165_i = weight_l2_10_q1;

assign weight_regfile_10_5166_i = weight_l2_10_q0;

assign weight_regfile_10_6167_i = weight_l2_10_q1;

assign weight_regfile_10_7168_i = weight_l2_10_q0;

assign weight_regfile_10_8169_i = weight_l2_10_q1;

assign weight_regfile_10_9170_i = weight_l2_10_q0;

assign weight_regfile_11_0177_i = weight_l2_11_q1;

assign weight_regfile_11_10187_i = weight_l2_11_q1;

assign weight_regfile_11_11188_i = weight_l2_11_q0;

assign weight_regfile_11_1178_i = weight_l2_11_q0;

assign weight_regfile_11_12189_i = weight_l2_11_q1;

assign weight_regfile_11_13190_i = weight_l2_11_q0;

assign weight_regfile_11_14191_i = weight_l2_11_q1;

assign weight_regfile_11_15192_i = weight_l2_11_q0;

assign weight_regfile_11_2179_i = weight_l2_11_q1;

assign weight_regfile_11_3180_i = weight_l2_11_q0;

assign weight_regfile_11_4181_i = weight_l2_11_q1;

assign weight_regfile_11_5182_i = weight_l2_11_q0;

assign weight_regfile_11_6183_i = weight_l2_11_q1;

assign weight_regfile_11_7184_i = weight_l2_11_q0;

assign weight_regfile_11_8185_i = weight_l2_11_q1;

assign weight_regfile_11_9186_i = weight_l2_11_q0;

assign weight_regfile_12_0193_i = weight_l2_12_q1;

assign weight_regfile_12_10203_i = weight_l2_12_q1;

assign weight_regfile_12_11204_i = weight_l2_12_q0;

assign weight_regfile_12_1194_i = weight_l2_12_q0;

assign weight_regfile_12_12205_i = weight_l2_12_q1;

assign weight_regfile_12_13206_i = weight_l2_12_q0;

assign weight_regfile_12_14207_i = weight_l2_12_q1;

assign weight_regfile_12_15208_i = weight_l2_12_q0;

assign weight_regfile_12_2195_i = weight_l2_12_q1;

assign weight_regfile_12_3196_i = weight_l2_12_q0;

assign weight_regfile_12_4197_i = weight_l2_12_q1;

assign weight_regfile_12_5198_i = weight_l2_12_q0;

assign weight_regfile_12_6199_i = weight_l2_12_q1;

assign weight_regfile_12_7200_i = weight_l2_12_q0;

assign weight_regfile_12_8201_i = weight_l2_12_q1;

assign weight_regfile_12_9202_i = weight_l2_12_q0;

assign weight_regfile_13_0209_i = weight_l2_13_q1;

assign weight_regfile_13_10219_i = weight_l2_13_q1;

assign weight_regfile_13_11220_i = weight_l2_13_q0;

assign weight_regfile_13_1210_i = weight_l2_13_q0;

assign weight_regfile_13_12221_i = weight_l2_13_q1;

assign weight_regfile_13_13222_i = weight_l2_13_q0;

assign weight_regfile_13_14223_i = weight_l2_13_q1;

assign weight_regfile_13_15224_i = weight_l2_13_q0;

assign weight_regfile_13_2211_i = weight_l2_13_q1;

assign weight_regfile_13_3212_i = weight_l2_13_q0;

assign weight_regfile_13_4213_i = weight_l2_13_q1;

assign weight_regfile_13_5214_i = weight_l2_13_q0;

assign weight_regfile_13_6215_i = weight_l2_13_q1;

assign weight_regfile_13_7216_i = weight_l2_13_q0;

assign weight_regfile_13_8217_i = weight_l2_13_q1;

assign weight_regfile_13_9218_i = weight_l2_13_q0;

assign weight_regfile_14_0225_i = weight_l2_14_q1;

assign weight_regfile_14_10235_i = weight_l2_14_q1;

assign weight_regfile_14_11236_i = weight_l2_14_q0;

assign weight_regfile_14_12237_i = weight_l2_14_q1;

assign weight_regfile_14_1226_i = weight_l2_14_q0;

assign weight_regfile_14_13238_i = weight_l2_14_q0;

assign weight_regfile_14_14239_i = weight_l2_14_q1;

assign weight_regfile_14_15240_i = weight_l2_14_q0;

assign weight_regfile_14_2227_i = weight_l2_14_q1;

assign weight_regfile_14_3228_i = weight_l2_14_q0;

assign weight_regfile_14_4229_i = weight_l2_14_q1;

assign weight_regfile_14_5230_i = weight_l2_14_q0;

assign weight_regfile_14_6231_i = weight_l2_14_q1;

assign weight_regfile_14_7232_i = weight_l2_14_q0;

assign weight_regfile_14_8233_i = weight_l2_14_q1;

assign weight_regfile_14_9234_i = weight_l2_14_q0;

assign weight_regfile_15_0241_i = weight_l2_15_q1;

assign weight_regfile_15_10251_i = weight_l2_15_q1;

assign weight_regfile_15_11252_i = weight_l2_15_q0;

assign weight_regfile_15_12253_i = weight_l2_15_q1;

assign weight_regfile_15_1242_i = weight_l2_15_q0;

assign weight_regfile_15_13254_i = weight_l2_15_q0;

assign weight_regfile_15_14255_i = weight_l2_15_q1;

assign weight_regfile_15_15256_i = weight_l2_15_q0;

assign weight_regfile_15_2243_i = weight_l2_15_q1;

assign weight_regfile_15_3244_i = weight_l2_15_q0;

assign weight_regfile_15_4245_i = weight_l2_15_q1;

assign weight_regfile_15_5246_i = weight_l2_15_q0;

assign weight_regfile_15_6247_i = weight_l2_15_q1;

assign weight_regfile_15_7248_i = weight_l2_15_q0;

assign weight_regfile_15_8249_i = weight_l2_15_q1;

assign weight_regfile_15_9250_i = weight_l2_15_q0;

assign weight_regfile_1_017_i = weight_l2_1_q1;

assign weight_regfile_1_1027_i = weight_l2_1_q1;

assign weight_regfile_1_1128_i = weight_l2_1_q0;

assign weight_regfile_1_118_i = weight_l2_1_q0;

assign weight_regfile_1_1229_i = weight_l2_1_q1;

assign weight_regfile_1_1330_i = weight_l2_1_q0;

assign weight_regfile_1_1431_i = weight_l2_1_q1;

assign weight_regfile_1_1532_i = weight_l2_1_q0;

assign weight_regfile_1_219_i = weight_l2_1_q1;

assign weight_regfile_1_320_i = weight_l2_1_q0;

assign weight_regfile_1_421_i = weight_l2_1_q1;

assign weight_regfile_1_522_i = weight_l2_1_q0;

assign weight_regfile_1_623_i = weight_l2_1_q1;

assign weight_regfile_1_724_i = weight_l2_1_q0;

assign weight_regfile_1_825_i = weight_l2_1_q1;

assign weight_regfile_1_926_i = weight_l2_1_q0;

assign weight_regfile_2_033_i = weight_l2_2_q1;

assign weight_regfile_2_1043_i = weight_l2_2_q1;

assign weight_regfile_2_1144_i = weight_l2_2_q0;

assign weight_regfile_2_1245_i = weight_l2_2_q1;

assign weight_regfile_2_1346_i = weight_l2_2_q0;

assign weight_regfile_2_134_i = weight_l2_2_q0;

assign weight_regfile_2_1447_i = weight_l2_2_q1;

assign weight_regfile_2_1548_i = weight_l2_2_q0;

assign weight_regfile_2_235_i = weight_l2_2_q1;

assign weight_regfile_2_336_i = weight_l2_2_q0;

assign weight_regfile_2_437_i = weight_l2_2_q1;

assign weight_regfile_2_538_i = weight_l2_2_q0;

assign weight_regfile_2_639_i = weight_l2_2_q1;

assign weight_regfile_2_740_i = weight_l2_2_q0;

assign weight_regfile_2_841_i = weight_l2_2_q1;

assign weight_regfile_2_942_i = weight_l2_2_q0;

assign weight_regfile_3_049_i = weight_l2_3_q1;

assign weight_regfile_3_1059_i = weight_l2_3_q1;

assign weight_regfile_3_1160_i = weight_l2_3_q0;

assign weight_regfile_3_1261_i = weight_l2_3_q1;

assign weight_regfile_3_1362_i = weight_l2_3_q0;

assign weight_regfile_3_1463_i = weight_l2_3_q1;

assign weight_regfile_3_150_i = weight_l2_3_q0;

assign weight_regfile_3_1564_i = weight_l2_3_q0;

assign weight_regfile_3_251_i = weight_l2_3_q1;

assign weight_regfile_3_352_i = weight_l2_3_q0;

assign weight_regfile_3_453_i = weight_l2_3_q1;

assign weight_regfile_3_554_i = weight_l2_3_q0;

assign weight_regfile_3_655_i = weight_l2_3_q1;

assign weight_regfile_3_756_i = weight_l2_3_q0;

assign weight_regfile_3_857_i = weight_l2_3_q1;

assign weight_regfile_3_958_i = weight_l2_3_q0;

assign weight_regfile_4_065_i = weight_l2_4_q1;

assign weight_regfile_4_1075_i = weight_l2_4_q1;

assign weight_regfile_4_1176_i = weight_l2_4_q0;

assign weight_regfile_4_1277_i = weight_l2_4_q1;

assign weight_regfile_4_1378_i = weight_l2_4_q0;

assign weight_regfile_4_1479_i = weight_l2_4_q1;

assign weight_regfile_4_1580_i = weight_l2_4_q0;

assign weight_regfile_4_166_i = weight_l2_4_q0;

assign weight_regfile_4_267_i = weight_l2_4_q1;

assign weight_regfile_4_368_i = weight_l2_4_q0;

assign weight_regfile_4_469_i = weight_l2_4_q1;

assign weight_regfile_4_570_i = weight_l2_4_q0;

assign weight_regfile_4_671_i = weight_l2_4_q1;

assign weight_regfile_4_772_i = weight_l2_4_q0;

assign weight_regfile_4_873_i = weight_l2_4_q1;

assign weight_regfile_4_974_i = weight_l2_4_q0;

assign weight_regfile_5_081_i = weight_l2_5_q1;

assign weight_regfile_5_1091_i = weight_l2_5_q1;

assign weight_regfile_5_1192_i = weight_l2_5_q0;

assign weight_regfile_5_1293_i = weight_l2_5_q1;

assign weight_regfile_5_1394_i = weight_l2_5_q0;

assign weight_regfile_5_1495_i = weight_l2_5_q1;

assign weight_regfile_5_1596_i = weight_l2_5_q0;

assign weight_regfile_5_182_i = weight_l2_5_q0;

assign weight_regfile_5_283_i = weight_l2_5_q1;

assign weight_regfile_5_384_i = weight_l2_5_q0;

assign weight_regfile_5_485_i = weight_l2_5_q1;

assign weight_regfile_5_586_i = weight_l2_5_q0;

assign weight_regfile_5_687_i = weight_l2_5_q1;

assign weight_regfile_5_788_i = weight_l2_5_q0;

assign weight_regfile_5_889_i = weight_l2_5_q1;

assign weight_regfile_5_990_i = weight_l2_5_q0;

assign weight_regfile_6_097_i = weight_l2_6_q1;

assign weight_regfile_6_10107_i = weight_l2_6_q1;

assign weight_regfile_6_11108_i = weight_l2_6_q0;

assign weight_regfile_6_12109_i = weight_l2_6_q1;

assign weight_regfile_6_13110_i = weight_l2_6_q0;

assign weight_regfile_6_14111_i = weight_l2_6_q1;

assign weight_regfile_6_15112_i = weight_l2_6_q0;

assign weight_regfile_6_198_i = weight_l2_6_q0;

assign weight_regfile_6_299_i = weight_l2_6_q1;

assign weight_regfile_6_3100_i = weight_l2_6_q0;

assign weight_regfile_6_4101_i = weight_l2_6_q1;

assign weight_regfile_6_5102_i = weight_l2_6_q0;

assign weight_regfile_6_6103_i = weight_l2_6_q1;

assign weight_regfile_6_7104_i = weight_l2_6_q0;

assign weight_regfile_6_8105_i = weight_l2_6_q1;

assign weight_regfile_6_9106_i = weight_l2_6_q0;

assign weight_regfile_7_0113_i = weight_l2_7_q1;

assign weight_regfile_7_10123_i = weight_l2_7_q1;

assign weight_regfile_7_11124_i = weight_l2_7_q0;

assign weight_regfile_7_1114_i = weight_l2_7_q0;

assign weight_regfile_7_12125_i = weight_l2_7_q1;

assign weight_regfile_7_13126_i = weight_l2_7_q0;

assign weight_regfile_7_14127_i = weight_l2_7_q1;

assign weight_regfile_7_15128_i = weight_l2_7_q0;

assign weight_regfile_7_2115_i = weight_l2_7_q1;

assign weight_regfile_7_3116_i = weight_l2_7_q0;

assign weight_regfile_7_4117_i = weight_l2_7_q1;

assign weight_regfile_7_5118_i = weight_l2_7_q0;

assign weight_regfile_7_6119_i = weight_l2_7_q1;

assign weight_regfile_7_7120_i = weight_l2_7_q0;

assign weight_regfile_7_8121_i = weight_l2_7_q1;

assign weight_regfile_7_9122_i = weight_l2_7_q0;

assign weight_regfile_8_0129_i = weight_l2_8_q1;

assign weight_regfile_8_10139_i = weight_l2_8_q1;

assign weight_regfile_8_11140_i = weight_l2_8_q0;

assign weight_regfile_8_1130_i = weight_l2_8_q0;

assign weight_regfile_8_12141_i = weight_l2_8_q1;

assign weight_regfile_8_13142_i = weight_l2_8_q0;

assign weight_regfile_8_14143_i = weight_l2_8_q1;

assign weight_regfile_8_15144_i = weight_l2_8_q0;

assign weight_regfile_8_2131_i = weight_l2_8_q1;

assign weight_regfile_8_3132_i = weight_l2_8_q0;

assign weight_regfile_8_4133_i = weight_l2_8_q1;

assign weight_regfile_8_5134_i = weight_l2_8_q0;

assign weight_regfile_8_6135_i = weight_l2_8_q1;

assign weight_regfile_8_7136_i = weight_l2_8_q0;

assign weight_regfile_8_8137_i = weight_l2_8_q1;

assign weight_regfile_8_9138_i = weight_l2_8_q0;

assign weight_regfile_9_0145_i = weight_l2_9_q1;

assign weight_regfile_9_10155_i = weight_l2_9_q1;

assign weight_regfile_9_11156_i = weight_l2_9_q0;

assign weight_regfile_9_1146_i = weight_l2_9_q0;

assign weight_regfile_9_12157_i = weight_l2_9_q1;

assign weight_regfile_9_13158_i = weight_l2_9_q0;

assign weight_regfile_9_14159_i = weight_l2_9_q1;

assign weight_regfile_9_15160_i = weight_l2_9_q0;

assign weight_regfile_9_2147_i = weight_l2_9_q1;

assign weight_regfile_9_3148_i = weight_l2_9_q0;

assign weight_regfile_9_4149_i = weight_l2_9_q1;

assign weight_regfile_9_5150_i = weight_l2_9_q0;

assign weight_regfile_9_6151_i = weight_l2_9_q1;

assign weight_regfile_9_7152_i = weight_l2_9_q0;

assign weight_regfile_9_8153_i = weight_l2_9_q1;

assign weight_regfile_9_9154_i = weight_l2_9_q0;

always @ (posedge ap_clk) begin
    c_reg_5730[3:0] <= 4'b0000;
end

endmodule //Conv_sysarr_runWeight2Reg
