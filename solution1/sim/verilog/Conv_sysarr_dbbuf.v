// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_dbbuf_Conv_sysarr_dbbuf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.186000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=21,HLS_SYN_DSP=0,HLS_SYN_FF=3926,HLS_SYN_LUT=5781,HLS_VERSION=2020_1}" *)

module Conv_sysarr_dbbuf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 44'd1;
parameter    ap_ST_fsm_state2 = 44'd2;
parameter    ap_ST_fsm_state3 = 44'd4;
parameter    ap_ST_fsm_state4 = 44'd8;
parameter    ap_ST_fsm_state5 = 44'd16;
parameter    ap_ST_fsm_pp0_stage0 = 44'd32;
parameter    ap_ST_fsm_state8 = 44'd64;
parameter    ap_ST_fsm_state9 = 44'd128;
parameter    ap_ST_fsm_state10 = 44'd256;
parameter    ap_ST_fsm_state11 = 44'd512;
parameter    ap_ST_fsm_pp1_stage0 = 44'd1024;
parameter    ap_ST_fsm_state14 = 44'd2048;
parameter    ap_ST_fsm_state15 = 44'd4096;
parameter    ap_ST_fsm_state16 = 44'd8192;
parameter    ap_ST_fsm_state17 = 44'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 44'd32768;
parameter    ap_ST_fsm_state20 = 44'd65536;
parameter    ap_ST_fsm_state21 = 44'd131072;
parameter    ap_ST_fsm_state22 = 44'd262144;
parameter    ap_ST_fsm_state23 = 44'd524288;
parameter    ap_ST_fsm_pp3_stage0 = 44'd1048576;
parameter    ap_ST_fsm_state28 = 44'd2097152;
parameter    ap_ST_fsm_state29 = 44'd4194304;
parameter    ap_ST_fsm_state30 = 44'd8388608;
parameter    ap_ST_fsm_state31 = 44'd16777216;
parameter    ap_ST_fsm_state32 = 44'd33554432;
parameter    ap_ST_fsm_state33 = 44'd67108864;
parameter    ap_ST_fsm_state34 = 44'd134217728;
parameter    ap_ST_fsm_state35 = 44'd268435456;
parameter    ap_ST_fsm_state36 = 44'd536870912;
parameter    ap_ST_fsm_state37 = 44'd1073741824;
parameter    ap_ST_fsm_state38 = 44'd2147483648;
parameter    ap_ST_fsm_state39 = 44'd4294967296;
parameter    ap_ST_fsm_state40 = 44'd8589934592;
parameter    ap_ST_fsm_pp4_stage0 = 44'd17179869184;
parameter    ap_ST_fsm_state47 = 44'd34359738368;
parameter    ap_ST_fsm_pp5_stage0 = 44'd68719476736;
parameter    ap_ST_fsm_pp5_stage1 = 44'd137438953472;
parameter    ap_ST_fsm_state94 = 44'd274877906944;
parameter    ap_ST_fsm_state95 = 44'd549755813888;
parameter    ap_ST_fsm_state96 = 44'd1099511627776;
parameter    ap_ST_fsm_state97 = 44'd2199023255552;
parameter    ap_ST_fsm_pp6_stage0 = 44'd4398046511104;
parameter    ap_ST_fsm_state103 = 44'd8796093022208;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [63:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [63:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [63:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [43:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    weight_in_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp6_iter4;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln230_reg_6604;
reg   [0:0] icmp_ln230_reg_6604_pp6_iter3_reg;
reg   [7:0] k_reg_1309;
reg   [31:0] k_1_reg_1320;
reg   [23:0] k_2_reg_1331;
reg   [15:0] indvar_flatten_reg_1386;
reg   [7:0] hi_reg_1397;
reg   [7:0] wi_reg_1408;
reg   [17:0] indvar_flatten47_reg_1452;
reg   [2:0] ci_reg_1463;
reg   [15:0] indvar_flatten15_reg_1474;
reg   [7:0] wi_1_reg_1485;
reg   [7:0] hi_1_reg_1496;
reg   [15:0] i_reg_1507;
reg   [15:0] i_reg_1507_pp5_iter1_reg;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state48_pp5_stage0_iter0;
wire    ap_block_state50_pp5_stage0_iter1;
wire    ap_block_state52_pp5_stage0_iter2;
wire    ap_block_state54_pp5_stage0_iter3;
wire    ap_block_state56_pp5_stage0_iter4;
wire    ap_block_state58_pp5_stage0_iter5;
wire    ap_block_state60_pp5_stage0_iter6;
wire    ap_block_state62_pp5_stage0_iter7;
wire    ap_block_state64_pp5_stage0_iter8;
wire    ap_block_state66_pp5_stage0_iter9;
wire    ap_block_state68_pp5_stage0_iter10;
wire    ap_block_state70_pp5_stage0_iter11;
wire    ap_block_state72_pp5_stage0_iter12;
wire    ap_block_state74_pp5_stage0_iter13;
wire    ap_block_state76_pp5_stage0_iter14;
wire    ap_block_state78_pp5_stage0_iter15;
wire    ap_block_state80_pp5_stage0_iter16;
wire    ap_block_state82_pp5_stage0_iter17;
wire    ap_block_state84_pp5_stage0_iter18;
wire    ap_block_state86_pp5_stage0_iter19;
wire    ap_block_state88_pp5_stage0_iter20;
wire    ap_block_state90_pp5_stage0_iter21;
wire    ap_block_state92_pp5_stage0_iter22;
wire    ap_block_pp5_stage0_11001;
reg   [15:0] i_reg_1507_pp5_iter2_reg;
reg   [15:0] i_reg_1507_pp5_iter3_reg;
reg   [15:0] i_reg_1507_pp5_iter4_reg;
reg   [15:0] i_reg_1507_pp5_iter5_reg;
reg   [15:0] i_reg_1507_pp5_iter6_reg;
reg   [15:0] i_reg_1507_pp5_iter7_reg;
reg   [15:0] i_reg_1507_pp5_iter8_reg;
reg   [15:0] i_reg_1507_pp5_iter9_reg;
reg   [15:0] i_reg_1507_pp5_iter10_reg;
reg   [15:0] i_reg_1507_pp5_iter11_reg;
reg   [15:0] i_reg_1507_pp5_iter12_reg;
reg   [15:0] i_reg_1507_pp5_iter13_reg;
reg   [15:0] i_reg_1507_pp5_iter14_reg;
reg   [15:0] i_reg_1507_pp5_iter15_reg;
reg   [15:0] i_reg_1507_pp5_iter16_reg;
reg   [15:0] i_reg_1507_pp5_iter17_reg;
reg   [15:0] i_reg_1507_pp5_iter18_reg;
reg   [15:0] i_reg_1507_pp5_iter19_reg;
reg   [23:0] indvar_flatten163_reg_1519;
reg   [5:0] k_3_reg_1530;
reg   [18:0] indvar_flatten149_reg_1541;
reg   [2:0] ki_reg_1552;
reg   [15:0] wh_reg_1563;
reg   [63:0] bias_in_V_read_reg_4609;
reg    ap_block_state1;
wire   [7:0] K_fu_1586_p1;
reg   [7:0] K_reg_4614;
reg   [63:0] bias_in_V_read_1_reg_4620;
wire   [7:0] C_fu_1590_p1;
reg   [7:0] C_reg_4625;
wire   [7:0] WH_fu_1594_p1;
reg   [7:0] WH_reg_4632;
wire   [7:0] WH_in_fu_1598_p1;
reg   [7:0] WH_in_reg_4642;
wire   [15:0] zext_ln53_fu_1602_p1;
reg   [15:0] zext_ln53_reg_4649;
wire   [8:0] zext_ln55_fu_1605_p1;
reg   [8:0] zext_ln55_reg_4654;
wire   [15:0] zext_ln55_1_fu_1608_p1;
reg   [15:0] zext_ln55_1_reg_4659;
wire   [31:0] zext_ln57_fu_1611_p1;
reg   [31:0] zext_ln57_reg_4665;
wire   [15:0] zext_ln57_1_fu_1614_p1;
reg   [15:0] zext_ln57_1_reg_4675;
wire   [23:0] zext_ln61_fu_1617_p1;
reg   [23:0] zext_ln61_reg_4681;
wire   [15:0] zext_ln61_1_fu_1620_p1;
reg   [15:0] zext_ln61_1_reg_4686;
wire   [7:0] RS_fu_1623_p1;
reg   [7:0] RS_reg_4691;
wire   [15:0] zext_ln65_fu_1627_p1;
reg   [15:0] zext_ln65_reg_4697;
wire   [0:0] icmp_ln68_fu_1631_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln68_fu_1636_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln70_fu_1642_p1;
reg   [1:0] trunc_ln70_reg_4712;
reg   [5:0] lshr_ln_reg_4716;
wire    ap_CS_fsm_state8;
wire   [15:0] tmp1_fu_1679_p2;
reg   [15:0] tmp1_reg_4726;
wire   [31:0] grp_fu_4289_p2;
reg   [31:0] mul42_reg_4737;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln72_fu_1687_p2;
wire    ap_block_state12_pp1_stage0_iter0;
reg    ap_block_state13_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [31:0] add_ln72_fu_1692_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln74_fu_1698_p1;
reg   [1:0] trunc_ln74_reg_4751;
reg   [8:0] lshr_ln1_reg_4755;
wire    ap_CS_fsm_state14;
wire   [23:0] grp_fu_4295_p2;
reg   [23:0] mul55_reg_4765;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln76_fu_1735_p2;
wire    ap_block_state18_pp2_stage0_iter0;
reg    ap_block_state19_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [23:0] add_ln76_fu_1740_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] trunc_ln78_fu_1746_p1;
reg   [1:0] trunc_ln78_reg_4779;
reg   [8:0] lshr_ln2_reg_4783;
wire   [15:0] mul152_fu_1775_p2;
reg   [15:0] mul152_reg_4932;
wire    ap_CS_fsm_state20;
wire   [16:0] zext_ln81_fu_1779_p1;
reg   [16:0] zext_ln81_reg_4940;
wire  signed [8:0] trunc_ln231_fu_1783_p1;
reg  signed [8:0] trunc_ln231_reg_4948;
wire   [10:0] trunc_ln3_cast48_fu_1787_p1;
reg   [10:0] trunc_ln3_cast48_reg_4953;
wire   [15:0] add_ln81_1_fu_1799_p2;
reg   [15:0] add_ln81_1_reg_4960;
wire   [10:0] trunc_ln4_cast21_fu_1805_p1;
reg   [10:0] trunc_ln4_cast21_reg_4965;
wire   [5:0] div68_cast_fu_1808_p4;
reg   [5:0] div68_cast_reg_4970;
wire   [5:0] div66_cast_fu_1817_p4;
reg   [5:0] div66_cast_reg_4975;
wire   [8:0] WH_cast_fu_1826_p1;
reg   [8:0] WH_cast_reg_4980;
wire   [10:0] C_cast_fu_1829_p1;
reg   [10:0] C_cast_reg_4995;
wire  signed [10:0] empty_41_fu_1832_p1;
reg  signed [10:0] empty_41_reg_5003;
wire  signed [10:0] tmp5_cast_fu_1835_p2;
reg  signed [10:0] tmp5_cast_reg_5023;
wire   [17:0] tmp_2_fu_1841_p3;
reg   [17:0] tmp_2_reg_5029;
wire   [18:0] bound20_fu_1849_p1;
reg   [18:0] bound20_reg_5035;
wire   [11:0] bound110_fu_1861_p2;
reg   [11:0] bound110_reg_5040;
wire   [0:0] icmp_ln137_fu_1867_p2;
reg   [0:0] icmp_ln137_reg_5045;
wire   [11:0] add_ln81_2_fu_1877_p2;
reg   [11:0] add_ln81_2_reg_5053;
wire    ap_CS_fsm_state21;
wire   [5:0] select_ln81_fu_1888_p3;
reg   [5:0] select_ln81_reg_5058;
wire   [0:0] icmp_ln81_fu_1872_p2;
wire   [5:0] select_ln81_1_fu_1902_p3;
reg   [5:0] select_ln81_1_reg_5065;
wire   [7:0] p_mid_fu_1910_p3;
reg   [7:0] p_mid_reg_5070;
wire  signed [8:0] mul_ln81_fu_1922_p2;
reg  signed [8:0] mul_ln81_reg_5075;
wire   [8:0] mul_ln81_1_fu_1927_p2;
reg   [8:0] mul_ln81_1_reg_5082;
wire   [10:0] mul_ln81_2_fu_1936_p2;
reg   [10:0] mul_ln81_2_reg_5093;
wire   [10:0] mul_ln81_3_fu_1951_p2;
reg   [10:0] mul_ln81_3_reg_5101;
wire   [10:0] mul_ln81_4_fu_1966_p2;
reg   [10:0] mul_ln81_4_reg_5109;
wire   [10:0] mul_ln81_5_fu_1981_p2;
reg   [10:0] mul_ln81_5_reg_5117;
wire   [7:0] tmp_20_fu_1986_p3;
reg   [7:0] tmp_20_reg_5125;
wire   [10:0] p_cast16_fu_1994_p1;
reg   [10:0] p_cast16_reg_5131;
wire   [10:0] zext_ln88_fu_2004_p1;
reg   [10:0] zext_ln88_reg_5139;
wire   [2:0] add_ln88_fu_2020_p2;
reg   [2:0] add_ln88_reg_5160;
wire    ap_CS_fsm_state22;
wire   [1:0] empty_43_fu_2030_p1;
reg   [1:0] empty_43_reg_5165;
wire   [0:0] icmp_ln88_fu_2014_p2;
wire  signed [31:0] conv79_fu_2164_p1;
reg  signed [31:0] conv79_reg_5270;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln89_fu_2168_p2;
reg   [0:0] icmp_ln89_reg_5278;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state24_pp3_stage0_iter0;
wire    ap_block_state25_pp3_stage0_iter1;
wire    ap_block_state26_pp3_stage0_iter2;
wire    ap_block_state27_pp3_stage0_iter3;
wire    ap_block_pp3_stage0_11001;
wire   [15:0] add_ln89_fu_2173_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [7:0] select_ln89_fu_2184_p3;
reg   [7:0] select_ln89_reg_5287;
reg   [7:0] select_ln89_reg_5287_pp3_iter1_reg;
wire   [7:0] select_ln89_1_fu_2198_p3;
reg   [7:0] select_ln89_1_reg_5292;
wire   [7:0] add_ln90_fu_2210_p2;
wire  signed [10:0] grp_fu_4306_p2;
reg  signed [10:0] add107_2_cast_reg_5312;
wire    ap_CS_fsm_state31;
wire  signed [10:0] grp_fu_4311_p2;
reg  signed [10:0] add107_1_cast_reg_5317;
wire  signed [10:0] grp_fu_4316_p2;
reg  signed [10:0] add107_3_cast_reg_5322;
wire  signed [10:0] grp_fu_4321_p2;
reg  signed [10:0] add107_1_2_cast_reg_5327;
wire  signed [10:0] grp_fu_4326_p2;
reg  signed [10:0] add107_2_2_cast_reg_5332;
wire  signed [10:0] grp_fu_4331_p2;
reg  signed [10:0] add107_3_2_cast_reg_5337;
wire  signed [10:0] grp_fu_4336_p2;
reg  signed [10:0] add107_cast_reg_5342;
wire  signed [10:0] grp_fu_4341_p2;
reg  signed [10:0] add107_1325_cast_reg_5347;
wire  signed [10:0] grp_fu_4346_p2;
reg  signed [10:0] add107_2333_cast_reg_5352;
wire  signed [10:0] grp_fu_4351_p2;
reg  signed [10:0] add107_3341_cast_reg_5357;
wire  signed [10:0] grp_fu_4356_p2;
reg  signed [10:0] add107_1_1_cast_reg_5362;
wire  signed [10:0] grp_fu_4361_p2;
reg  signed [10:0] add107_1_3_cast_reg_5367;
wire  signed [10:0] grp_fu_4366_p2;
reg  signed [10:0] add107_2_1_cast_reg_5372;
wire  signed [10:0] grp_fu_4371_p2;
reg  signed [10:0] add107_2_3_cast_reg_5377;
wire  signed [10:0] grp_fu_4376_p2;
reg  signed [10:0] add107_3_1_cast_reg_5382;
wire  signed [10:0] grp_fu_4381_p2;
reg  signed [10:0] add107_3_3_cast_reg_5387;
wire   [15:0] add_ln100_fu_2236_p2;
reg   [15:0] add_ln100_reg_5395;
wire    ap_CS_fsm_state32;
wire   [7:0] select_ln100_fu_2247_p3;
reg   [7:0] select_ln100_reg_5400;
wire   [0:0] icmp_ln100_fu_2231_p2;
wire   [7:0] select_ln100_1_fu_2261_p3;
reg   [7:0] select_ln100_1_reg_5405;
wire   [10:0] zext_ln100_1_fu_2269_p1;
reg   [10:0] zext_ln100_1_reg_5411;
wire   [1:0] trunc_ln100_fu_2283_p1;
reg   [1:0] trunc_ln100_reg_5416;
wire   [1:0] trunc_ln100_1_fu_2292_p1;
reg   [1:0] trunc_ln100_1_reg_5421;
wire   [1:0] trunc_ln100_2_fu_2301_p1;
reg   [1:0] trunc_ln100_2_reg_5426;
wire   [1:0] trunc_ln100_3_fu_2310_p1;
reg   [1:0] trunc_ln100_3_reg_5431;
wire   [1:0] trunc_ln100_4_fu_2319_p1;
reg   [1:0] trunc_ln100_4_reg_5436;
wire   [1:0] trunc_ln100_5_fu_2328_p1;
reg   [1:0] trunc_ln100_5_reg_5441;
wire   [1:0] trunc_ln100_6_fu_2337_p1;
reg   [1:0] trunc_ln100_6_reg_5446;
wire   [1:0] trunc_ln100_7_fu_2346_p1;
reg   [1:0] trunc_ln100_7_reg_5451;
wire   [1:0] trunc_ln100_8_fu_2355_p1;
reg   [1:0] trunc_ln100_8_reg_5456;
wire   [1:0] trunc_ln100_9_fu_2364_p1;
reg   [1:0] trunc_ln100_9_reg_5461;
wire   [1:0] trunc_ln100_10_fu_2373_p1;
reg   [1:0] trunc_ln100_10_reg_5466;
wire   [1:0] trunc_ln100_11_fu_2382_p1;
reg   [1:0] trunc_ln100_11_reg_5471;
wire   [1:0] trunc_ln100_12_fu_2391_p1;
reg   [1:0] trunc_ln100_12_reg_5476;
wire   [1:0] trunc_ln100_13_fu_2400_p1;
reg   [1:0] trunc_ln100_13_reg_5481;
wire   [1:0] trunc_ln100_14_fu_2409_p1;
reg   [1:0] trunc_ln100_14_reg_5486;
wire   [1:0] trunc_ln100_15_fu_2418_p1;
reg   [1:0] trunc_ln100_15_reg_5491;
wire   [10:0] zext_ln102_fu_2422_p1;
reg   [10:0] zext_ln102_reg_5496;
wire   [1:0] trunc_ln117_fu_2426_p1;
reg   [1:0] trunc_ln117_reg_5501;
reg   [8:0] lshr_ln116_2_reg_5562;
reg   [8:0] lshr_ln116_3_reg_5567;
reg   [8:0] lshr_ln116_4_reg_5572;
reg   [8:0] lshr_ln116_5_reg_5577;
reg   [8:0] lshr_ln116_6_reg_5582;
reg   [8:0] lshr_ln116_7_reg_5587;
reg   [8:0] lshr_ln116_8_reg_5592;
reg   [8:0] lshr_ln116_9_reg_5597;
reg   [8:0] lshr_ln116_s_reg_5602;
reg   [8:0] lshr_ln116_10_reg_5607;
reg   [8:0] lshr_ln116_11_reg_5612;
reg   [8:0] lshr_ln116_12_reg_5617;
reg   [8:0] lshr_ln116_13_reg_5622;
reg   [8:0] lshr_ln116_14_reg_5627;
wire   [5:0] add_ln82_fu_2702_p2;
wire   [7:0] tmp_3_fu_2715_p6;
reg   [7:0] tmp_3_reg_5637;
wire    ap_CS_fsm_state33;
wire   [7:0] tmp_4_fu_2737_p6;
reg   [7:0] tmp_4_reg_5642;
wire   [7:0] tmp_5_fu_2773_p6;
reg   [7:0] tmp_5_reg_5687;
wire    ap_CS_fsm_state34;
wire   [7:0] tmp_6_fu_2795_p6;
reg   [7:0] tmp_6_reg_5692;
wire   [7:0] tmp_7_fu_2831_p6;
reg   [7:0] tmp_7_reg_5737;
wire    ap_CS_fsm_state35;
wire   [7:0] tmp_8_fu_2853_p6;
reg   [7:0] tmp_8_reg_5742;
wire   [7:0] tmp_9_fu_2889_p6;
reg   [7:0] tmp_9_reg_5787;
wire    ap_CS_fsm_state36;
wire   [7:0] tmp_s_fu_2911_p6;
reg   [7:0] tmp_s_reg_5792;
wire   [7:0] tmp_10_fu_2947_p6;
reg   [7:0] tmp_10_reg_5837;
wire    ap_CS_fsm_state37;
wire   [7:0] tmp_11_fu_2969_p6;
reg   [7:0] tmp_11_reg_5842;
wire   [7:0] tmp_12_fu_3005_p6;
reg   [7:0] tmp_12_reg_5887;
wire    ap_CS_fsm_state38;
wire   [7:0] tmp_13_fu_3027_p6;
reg   [7:0] tmp_13_reg_5892;
wire   [7:0] tmp_14_fu_3063_p6;
reg   [7:0] tmp_14_reg_5937;
wire    ap_CS_fsm_state39;
wire   [7:0] tmp_15_fu_3085_p6;
reg   [7:0] tmp_15_reg_5942;
wire   [8:0] zext_ln100_fu_3113_p1;
reg   [8:0] zext_ln100_reg_5987;
wire    ap_CS_fsm_state40;
wire   [7:0] tmp_16_fu_3124_p6;
reg   [7:0] tmp_16_reg_5993;
wire   [7:0] tmp_17_fu_3146_p6;
reg   [7:0] tmp_17_reg_5998;
wire   [10:0] p_mid131_fu_3160_p2;
reg   [10:0] p_mid131_reg_6003;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state41_pp4_stage0_iter0;
wire    ap_block_state42_pp4_stage0_iter1;
wire    ap_block_state43_pp4_stage0_iter2;
wire    ap_block_state44_pp4_stage0_iter3;
wire    ap_block_state45_pp4_stage0_iter4;
wire    ap_block_state46_pp4_stage0_iter5;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln135_fu_3179_p2;
reg   [0:0] icmp_ln135_reg_6013;
reg   [0:0] icmp_ln135_reg_6013_pp4_iter1_reg;
reg   [0:0] icmp_ln135_reg_6013_pp4_iter2_reg;
reg   [0:0] icmp_ln135_reg_6013_pp4_iter3_reg;
wire   [17:0] add_ln135_fu_3184_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln137_1_fu_3190_p2;
reg   [0:0] icmp_ln137_1_reg_6022;
reg   [0:0] icmp_ln137_1_reg_6022_pp4_iter1_reg;
reg   [0:0] icmp_ln137_1_reg_6022_pp4_iter2_reg;
reg   [0:0] icmp_ln137_1_reg_6022_pp4_iter3_reg;
wire   [1:0] select_ln135_1_fu_3205_p3;
reg   [1:0] select_ln135_1_reg_6030;
reg   [1:0] select_ln135_1_reg_6030_pp4_iter1_reg;
reg   [1:0] select_ln135_1_reg_6030_pp4_iter2_reg;
reg   [1:0] select_ln135_1_reg_6030_pp4_iter3_reg;
reg   [1:0] select_ln135_1_reg_6030_pp4_iter4_reg;
wire   [0:0] select_ln135_5_fu_3229_p3;
reg   [0:0] select_ln135_5_reg_6039;
reg   [0:0] select_ln135_5_reg_6039_pp4_iter1_reg;
reg   [0:0] select_ln135_5_reg_6039_pp4_iter2_reg;
reg   [0:0] select_ln135_5_reg_6039_pp4_iter3_reg;
wire   [2:0] select_ln135_6_fu_3236_p3;
wire   [7:0] select_ln137_fu_3250_p3;
reg   [7:0] select_ln137_reg_6051;
reg   [7:0] select_ln137_reg_6051_pp4_iter1_reg;
reg   [7:0] select_ln137_reg_6051_pp4_iter2_reg;
reg   [7:0] select_ln137_reg_6051_pp4_iter3_reg;
wire   [1:0] trunc_ln144_fu_3258_p1;
reg   [1:0] trunc_ln144_reg_6057;
reg   [1:0] trunc_ln144_reg_6057_pp4_iter1_reg;
reg   [1:0] trunc_ln144_reg_6057_pp4_iter2_reg;
reg   [1:0] trunc_ln144_reg_6057_pp4_iter3_reg;
wire   [7:0] add_ln138_fu_3262_p2;
wire   [15:0] select_ln137_4_fu_3274_p3;
wire   [7:0] select_ln137_3_fu_3327_p3;
reg    ap_enable_reg_pp4_iter1;
wire   [8:0] add_ln142_fu_3337_p2;
reg   [8:0] add_ln142_reg_6077;
reg   [8:0] add_ln142_reg_6077_pp4_iter2_reg;
reg   [8:0] add_ln142_reg_6077_pp4_iter3_reg;
reg   [8:0] add_ln142_reg_6077_pp4_iter4_reg;
wire  signed [10:0] grp_fu_4394_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln141_1_fu_3348_p2;
reg   [10:0] add_ln141_1_reg_6092;
wire   [1:0] add_ln143_fu_3386_p2;
reg   [1:0] add_ln143_reg_6097;
wire  signed [15:0] p_cast44_fu_3437_p1;
reg  signed [15:0] p_cast44_reg_6122;
wire    ap_CS_fsm_state47;
wire  signed [15:0] p_cast52_fu_3440_p1;
reg  signed [15:0] p_cast52_reg_6127;
wire  signed [15:0] p_cast54_fu_3443_p1;
reg  signed [15:0] p_cast54_reg_6132;
wire  signed [15:0] p_cast58_fu_3446_p1;
reg  signed [15:0] p_cast58_reg_6137;
wire  signed [15:0] p_cast60_fu_3449_p1;
reg  signed [15:0] p_cast60_reg_6142;
wire  signed [15:0] p_cast64_fu_3452_p1;
reg  signed [15:0] p_cast64_reg_6147;
wire  signed [15:0] p_cast66_fu_3455_p1;
reg  signed [15:0] p_cast66_reg_6152;
wire  signed [15:0] p_cast69_fu_3458_p1;
reg  signed [15:0] p_cast69_reg_6157;
wire  signed [15:0] p_cast71_fu_3461_p1;
reg  signed [15:0] p_cast71_reg_6162;
wire  signed [15:0] p_cast73_fu_3464_p1;
reg  signed [15:0] p_cast73_reg_6167;
wire  signed [15:0] p_cast75_fu_3467_p1;
reg  signed [15:0] p_cast75_reg_6172;
wire  signed [15:0] p_cast78_fu_3470_p1;
reg  signed [15:0] p_cast78_reg_6177;
wire  signed [15:0] p_cast80_fu_3473_p1;
reg  signed [15:0] p_cast80_reg_6182;
wire  signed [15:0] p_cast82_fu_3476_p1;
reg  signed [15:0] p_cast82_reg_6187;
wire  signed [15:0] p_cast84_fu_3479_p1;
reg  signed [15:0] p_cast84_reg_6192;
wire  signed [15:0] sext_ln168_fu_3482_p1;
reg  signed [15:0] sext_ln168_reg_6197;
wire   [0:0] icmp_ln168_fu_3485_p2;
reg   [0:0] icmp_ln168_reg_6202;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter1_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter2_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter3_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter4_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter5_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter6_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter7_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter8_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter9_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter10_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter11_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter12_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter13_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter14_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter15_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter16_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter17_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter18_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter19_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter20_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter21_reg;
reg   [0:0] icmp_ln168_reg_6202_pp5_iter22_reg;
wire  signed [31:0] sext_ln172_fu_3500_p1;
reg  signed [31:0] sext_ln172_reg_6206;
wire  signed [31:0] sext_ln172_1_fu_3515_p1;
reg  signed [31:0] sext_ln172_1_reg_6212;
reg   [0:0] tmp_21_reg_6218;
reg   [0:0] tmp_21_reg_6218_pp5_iter1_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter2_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter3_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter4_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter5_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter6_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter7_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter8_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter9_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter10_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter11_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter12_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter13_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter14_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter15_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter16_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter17_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter18_reg;
reg   [0:0] tmp_21_reg_6218_pp5_iter19_reg;
wire  signed [31:0] sext_ln172_2_fu_3538_p1;
reg  signed [31:0] sext_ln172_2_reg_6224;
reg   [0:0] tmp_22_reg_6230;
reg   [0:0] tmp_22_reg_6230_pp5_iter1_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter2_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter3_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter4_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter5_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter6_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter7_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter8_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter9_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter10_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter11_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter12_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter13_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter14_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter15_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter16_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter17_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter18_reg;
reg   [0:0] tmp_22_reg_6230_pp5_iter19_reg;
wire   [0:0] or_ln208_fu_3586_p2;
reg   [0:0] or_ln208_reg_6236;
reg   [0:0] or_ln208_reg_6236_pp5_iter1_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter2_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter3_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter4_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter5_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter6_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter7_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter8_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter9_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter10_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter11_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter12_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter13_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter14_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter15_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter16_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter17_reg;
reg   [0:0] or_ln208_reg_6236_pp5_iter18_reg;
wire   [0:0] or_ln208_1_fu_3617_p2;
reg   [0:0] or_ln208_1_reg_6240;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter1_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter2_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter3_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter4_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter5_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter6_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter7_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter8_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter9_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter10_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter11_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter12_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter13_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter14_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter15_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter16_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter17_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter18_reg;
reg   [0:0] or_ln208_1_reg_6240_pp5_iter19_reg;
wire   [0:0] or_ln208_2_fu_3642_p2;
reg   [0:0] or_ln208_2_reg_6244;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter1_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter2_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter3_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter4_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter5_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter6_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter7_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter8_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter9_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter10_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter11_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter12_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter13_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter14_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter15_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter16_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter17_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter18_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter19_reg;
reg   [0:0] or_ln208_2_reg_6244_pp5_iter20_reg;
wire   [0:0] or_ln208_3_fu_3667_p2;
reg   [0:0] or_ln208_3_reg_6248;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter1_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter2_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter3_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter4_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter5_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter6_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter7_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter8_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter9_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter10_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter11_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter12_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter13_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter14_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter15_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter16_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter17_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter18_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter19_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter20_reg;
reg   [0:0] or_ln208_3_reg_6248_pp5_iter21_reg;
wire   [15:0] i_1_fu_3673_p2;
reg   [15:0] i_1_reg_6252;
wire    ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state49_pp5_stage1_iter0;
wire    ap_block_state51_pp5_stage1_iter1;
wire    ap_block_state53_pp5_stage1_iter2;
wire    ap_block_state55_pp5_stage1_iter3;
wire    ap_block_state57_pp5_stage1_iter4;
wire    ap_block_state59_pp5_stage1_iter5;
wire    ap_block_state61_pp5_stage1_iter6;
wire    ap_block_state63_pp5_stage1_iter7;
wire    ap_block_state65_pp5_stage1_iter8;
wire    ap_block_state67_pp5_stage1_iter9;
wire    ap_block_state69_pp5_stage1_iter10;
wire    ap_block_state71_pp5_stage1_iter11;
wire    ap_block_state73_pp5_stage1_iter12;
wire    ap_block_state75_pp5_stage1_iter13;
wire    ap_block_state77_pp5_stage1_iter14;
wire    ap_block_state79_pp5_stage1_iter15;
wire    ap_block_state81_pp5_stage1_iter16;
wire    ap_block_state83_pp5_stage1_iter17;
wire    ap_block_state85_pp5_stage1_iter18;
wire    ap_block_state87_pp5_stage1_iter19;
wire    ap_block_state89_pp5_stage1_iter20;
wire    ap_block_state91_pp5_stage1_iter21;
wire    ap_block_state93_pp5_stage1_iter22;
wire    ap_block_pp5_stage1_11001;
wire   [0:0] icmp_ln174_fu_3694_p2;
reg   [0:0] icmp_ln174_reg_6257;
reg   [0:0] icmp_ln174_reg_6257_pp5_iter18_reg;
reg   [0:0] icmp_ln174_reg_6257_pp5_iter19_reg;
reg   [0:0] icmp_ln174_reg_6257_pp5_iter20_reg;
wire  signed [8:0] trunc_ln172_fu_3707_p1;
wire  signed [8:0] trunc_ln172_1_fu_3711_p1;
wire  signed [8:0] trunc_ln172_2_fu_3715_p1;
wire   [7:0] grp_fu_3679_p2;
reg   [7:0] wi_2_reg_6298;
wire   [7:0] grp_fu_3683_p2;
reg   [7:0] wi_3_reg_6303;
wire   [7:0] grp_fu_3687_p2;
reg   [7:0] wi_4_reg_6308;
wire   [8:0] empty_54_fu_3763_p1;
reg   [8:0] empty_54_reg_6323;
reg   [8:0] empty_54_reg_6323_pp5_iter19_reg;
reg   [8:0] empty_54_reg_6323_pp5_iter20_reg;
wire   [8:0] zext_ln173_fu_3770_p1;
wire   [8:0] zext_ln173_1_fu_3777_p1;
wire   [8:0] zext_ln173_2_fu_3784_p1;
wire   [8:0] add_ln205_fu_3788_p2;
reg   [8:0] add_ln205_reg_6349;
wire   [31:0] grp_fu_4425_p3;
reg  signed [31:0] add_ln204_reg_6354;
reg    ap_enable_reg_pp5_iter18;
wire  signed [8:0] grp_fu_4433_p3;
reg  signed [8:0] add_ln176_reg_6384;
reg    ap_enable_reg_pp5_iter19;
wire   [8:0] add_ln205_1_fu_3857_p2;
reg   [8:0] add_ln205_1_reg_6409;
wire  signed [31:0] grp_fu_4473_p3;
reg  signed [31:0] add_ln204_4_reg_6414;
wire  signed [8:0] grp_fu_4481_p4;
reg  signed [8:0] add_ln198_3_reg_6424;
wire  signed [8:0] grp_fu_4489_p4;
reg  signed [8:0] add_ln198_5_reg_6439;
reg  signed [8:0] add_ln198_5_reg_6439_pp5_iter20_reg;
wire   [7:0] data_l1_2_0_q0;
reg   [7:0] data_l1_2_0_load_reg_6444;
wire   [8:0] sub250_cast_fu_3969_p2;
reg   [8:0] sub250_cast_reg_6489;
wire  signed [31:0] grp_fu_4529_p3;
reg  signed [31:0] add_ln204_8_reg_6499;
reg    ap_enable_reg_pp5_iter20;
wire   [7:0] data_l1_0_0_q0;
reg  signed [7:0] data_l1_0_0_load_reg_6519;
wire  signed [31:0] grp_fu_4561_p3;
reg  signed [31:0] add_ln204_12_reg_6549;
reg    ap_enable_reg_pp5_iter21;
wire   [8:0] add_ln198_6_fu_4085_p2;
reg   [8:0] add_ln198_6_reg_6559;
wire   [8:0] add_ln216_7_fu_4092_p2;
reg   [8:0] add_ln216_7_reg_6569;
wire   [31:0] output_l1_0_q1;
reg    ap_enable_reg_pp5_iter22;
wire   [7:0] add_ln102_fu_4128_p2;
wire    ap_CS_fsm_state94;
wire   [23:0] grp_fu_4300_p2;
reg   [23:0] mul_ln230_reg_6594;
wire    ap_CS_fsm_state97;
wire   [0:0] icmp_ln232_fu_4133_p2;
reg   [0:0] icmp_ln232_reg_6599;
wire   [0:0] icmp_ln230_fu_4138_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state98_pp6_stage0_iter0;
wire    ap_block_state99_pp6_stage0_iter1;
wire    ap_block_state100_pp6_stage0_iter2;
wire    ap_block_state101_pp6_stage0_iter3;
reg    ap_block_state102_pp6_stage0_iter4;
reg    ap_block_pp6_stage0_11001;
reg   [0:0] icmp_ln230_reg_6604_pp6_iter1_reg;
reg   [0:0] icmp_ln230_reg_6604_pp6_iter2_reg;
wire   [23:0] add_ln230_fu_4143_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln231_fu_4149_p2;
reg   [0:0] icmp_ln231_reg_6613;
reg   [0:0] icmp_ln231_reg_6613_pp6_iter1_reg;
wire   [5:0] select_ln230_1_fu_4160_p3;
reg   [5:0] select_ln230_1_reg_6621;
wire   [18:0] select_ln231_3_fu_4178_p3;
wire   [1:0] select_ln231_1_fu_4238_p3;
reg   [1:0] select_ln231_1_reg_6636;
reg   [1:0] select_ln231_1_reg_6636_pp6_iter3_reg;
wire   [2:0] select_ln231_2_fu_4246_p3;
reg    ap_enable_reg_pp6_iter2;
wire   [15:0] add_ln232_fu_4258_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state24;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_flush_enable;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_condition_pp4_exit_iter4_state45;
reg    ap_enable_reg_pp4_iter5;
wire    ap_block_pp5_stage1_subdone;
reg    ap_condition_pp5_flush_enable;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter3;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter5;
reg    ap_enable_reg_pp5_iter6;
reg    ap_enable_reg_pp5_iter7;
reg    ap_enable_reg_pp5_iter8;
reg    ap_enable_reg_pp5_iter9;
reg    ap_enable_reg_pp5_iter10;
reg    ap_enable_reg_pp5_iter11;
reg    ap_enable_reg_pp5_iter12;
reg    ap_enable_reg_pp5_iter13;
reg    ap_enable_reg_pp5_iter14;
reg    ap_enable_reg_pp5_iter15;
reg    ap_enable_reg_pp5_iter16;
reg    ap_enable_reg_pp5_iter17;
reg    ap_condition_pp5_exit_iter20_state88;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_flush_enable;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter3;
reg    ap_condition_pp6_exit_iter2_state100;
reg   [8:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_q0;
reg   [8:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_q0;
reg   [8:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_q0;
reg   [8:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_q0;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_0_address1;
reg    weight_l2_0_ce1;
wire   [7:0] weight_l2_0_q1;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_1_address1;
reg    weight_l2_1_ce1;
wire   [7:0] weight_l2_1_q1;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_2_address1;
reg    weight_l2_2_ce1;
wire   [7:0] weight_l2_2_q1;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_q0;
reg   [8:0] weight_l2_3_address1;
reg    weight_l2_3_ce1;
wire   [7:0] weight_l2_3_q1;
reg   [8:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_q0;
reg   [8:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_q0;
reg   [8:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_q0;
reg   [8:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] data_l1_0_0_address0;
reg    data_l1_0_0_ce0;
reg    data_l1_0_0_we0;
reg   [8:0] data_l1_1_0_address0;
reg    data_l1_1_0_ce0;
reg    data_l1_1_0_we0;
wire   [7:0] data_l1_1_0_q0;
reg   [8:0] data_l1_2_0_address0;
reg    data_l1_2_0_ce0;
reg    data_l1_2_0_we0;
reg   [8:0] data_l1_3_0_address0;
reg    data_l1_3_0_ce0;
reg    data_l1_3_0_we0;
wire   [7:0] data_l1_3_0_q0;
reg   [8:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
reg   [31:0] output_l1_0_d0;
reg   [8:0] output_l1_0_address1;
reg    output_l1_0_ce1;
reg   [8:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
reg   [31:0] output_l1_1_d0;
reg   [8:0] output_l1_1_address1;
reg    output_l1_1_ce1;
wire   [31:0] output_l1_1_q1;
reg   [8:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
reg   [31:0] output_l1_2_d0;
reg   [8:0] output_l1_2_address1;
reg    output_l1_2_ce1;
wire   [31:0] output_l1_2_q1;
reg   [8:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
reg   [31:0] output_l1_3_d0;
wire   [31:0] output_l1_3_q0;
reg   [8:0] output_l1_3_address1;
reg    output_l1_3_ce1;
reg    output_l1_3_we1;
wire   [31:0] output_l1_3_q1;
reg   [11:0] indvar_flatten142_reg_1342;
reg   [5:0] ko_reg_1353;
reg   [5:0] co_reg_1364;
reg   [2:0] ki_1_reg_1375;
wire    ap_CS_fsm_state28;
reg   [7:0] ap_phi_mux_hi_phi_fu_1401_p4;
wire    ap_block_pp3_stage0;
reg   [15:0] indvar_flatten105_reg_1419;
reg   [7:0] r_reg_1430;
reg   [7:0] s_reg_1441;
reg   [15:0] ap_phi_mux_i_phi_fu_1511_p4;
wire    ap_block_pp5_stage0;
reg   [5:0] ap_phi_mux_k_3_phi_fu_1534_p4;
wire   [63:0] zext_ln70_fu_1664_p1;
wire   [63:0] zext_ln74_fu_1720_p1;
wire   [63:0] zext_ln78_fu_1768_p1;
wire   [63:0] newIndex122_cast_fu_2049_p1;
wire   [63:0] zext_ln93_fu_2224_p1;
wire   [63:0] zext_ln116_16_fu_2446_p1;
wire   [63:0] zext_ln116_17_fu_2470_p1;
wire   [63:0] zext_ln116_18_fu_2751_p1;
wire   [63:0] zext_ln116_19_fu_2758_p1;
wire   [63:0] zext_ln116_20_fu_2809_p1;
wire   [63:0] zext_ln116_21_fu_2816_p1;
wire   [63:0] zext_ln116_22_fu_2867_p1;
wire   [63:0] zext_ln116_23_fu_2874_p1;
wire   [63:0] zext_ln116_24_fu_2925_p1;
wire   [63:0] zext_ln116_25_fu_2932_p1;
wire   [63:0] zext_ln116_26_fu_2983_p1;
wire   [63:0] zext_ln116_27_fu_2990_p1;
wire   [63:0] zext_ln116_28_fu_3041_p1;
wire   [63:0] zext_ln116_29_fu_3048_p1;
wire   [63:0] zext_ln116_30_fu_3099_p1;
wire   [63:0] zext_ln116_31_fu_3106_p1;
wire   [63:0] zext_ln143_1_fu_3401_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln142_fu_3430_p1;
wire   [63:0] zext_ln215_fu_3795_p1;
wire    ap_block_pp5_stage1;
wire   [63:0] zext_ln175_2_fu_3837_p1;
wire   [63:0] zext_ln175_3_fu_3841_p1;
wire   [63:0] zext_ln196_fu_3848_p1;
wire   [63:0] zext_ln215_1_fu_3852_p1;
wire   [63:0] zext_ln215_2_fu_3863_p1;
wire   [63:0] zext_ln196_1_fu_3913_p1;
wire   [63:0] zext_ln215_3_fu_3917_p1;
wire   [63:0] zext_ln175_fu_3954_p1;
wire   [63:0] zext_ln175_1_fu_3959_p1;
wire   [63:0] zext_ln215_4_fu_3982_p1;
wire   [63:0] zext_ln196_2_fu_4026_p1;
wire   [63:0] zext_ln215_5_fu_4030_p1;
wire   [63:0] zext_ln215_6_fu_4077_p1;
wire   [63:0] zext_ln196_3_fu_4104_p1;
wire   [63:0] zext_ln215_7_fu_4108_p1;
wire   [63:0] zext_ln233_fu_4264_p1;
reg  signed [7:0] arrayidx1922_promoted606_fu_272;
reg   [31:0] arrayidx2284_promoted613_fu_276;
wire  signed [31:0] grp_fu_4456_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_promoted613_load;
reg  signed [7:0] arrayidx1922_1347_promoted620_fu_280;
reg   [31:0] arrayidx2284_1351_promoted627_fu_284;
wire  signed [31:0] grp_fu_4497_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_1351_promoted627_load;
reg  signed [7:0] arrayidx1922_2374_promoted634_fu_288;
reg   [31:0] arrayidx2284_2378_promoted641_fu_292;
wire  signed [31:0] grp_fu_4513_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_2378_promoted641_load;
reg  signed [7:0] arrayidx1922_3401_promoted648_fu_296;
reg   [7:0] arrayidx1922_1_promoted655_fu_300;
reg  signed [7:0] ap_sig_allocacmp_arrayidx1922_1_promoted655_load;
reg   [31:0] arrayidx2284_1_promoted662_fu_304;
wire  signed [31:0] grp_fu_4505_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_1_promoted662_load;
reg   [7:0] arrayidx1922_1_1_promoted669_fu_308;
reg  signed [7:0] ap_sig_allocacmp_arrayidx1922_1_1_promoted669_load;
reg   [31:0] arrayidx2284_1_1_promoted676_fu_312;
wire  signed [31:0] grp_fu_4521_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_1_1_promoted676_load;
reg   [7:0] arrayidx1922_1_2_promoted683_fu_316;
reg  signed [7:0] ap_sig_allocacmp_arrayidx1922_1_2_promoted683_load;
reg   [31:0] arrayidx2284_1_2_promoted690_fu_320;
wire  signed [31:0] grp_fu_4537_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_1_2_promoted690_load;
reg   [7:0] arrayidx1922_1_3_promoted697_fu_324;
reg  signed [7:0] ap_sig_allocacmp_arrayidx1922_1_3_promoted697_load;
reg   [7:0] arrayidx1922_2_promoted704_fu_328;
wire  signed [7:0] select_ln174_2_fu_3896_p3;
reg  signed [7:0] ap_sig_allocacmp_arrayidx1922_2_promoted704_load;
reg   [31:0] arrayidx2284_2_promoted711_fu_332;
wire  signed [31:0] grp_fu_4545_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_2_promoted711_load;
reg   [7:0] arrayidx1922_2_1_promoted718_fu_336;
wire  signed [7:0] select_ln174_1_fu_3963_p3;
reg  signed [7:0] ap_sig_allocacmp_arrayidx1922_2_1_promoted718_load;
reg   [31:0] arrayidx2284_2_1_promoted725_fu_340;
wire  signed [31:0] grp_fu_4553_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_2_1_promoted725_load;
reg   [7:0] arrayidx1922_2_2_promoted732_fu_344;
wire  signed [7:0] select_ln174_fu_4016_p3;
reg  signed [7:0] ap_sig_allocacmp_arrayidx1922_2_2_promoted732_load;
reg   [31:0] arrayidx2284_2_2_promoted739_fu_348;
wire  signed [31:0] grp_fu_4569_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_2_2_promoted739_load;
reg  signed [7:0] arrayidx1922_2_3_promoted746_fu_352;
reg   [31:0] arrayidx2284_3_promoted753_fu_356;
wire  signed [31:0] grp_fu_4577_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_3_promoted753_load;
reg   [31:0] arrayidx2284_3_1_promoted760_fu_360;
wire  signed [31:0] grp_fu_4585_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_3_1_promoted760_load;
reg   [31:0] arrayidx2284_3_2_promoted767_fu_364;
wire  signed [31:0] grp_fu_4593_p3;
reg   [31:0] ap_sig_allocacmp_arrayidx2284_3_2_promoted767_load;
reg    ap_block_pp6_stage0_01001;
wire   [7:0] trunc_ln708_fu_1656_p1;
wire   [7:0] trunc_ln708_1_fu_1712_p1;
wire   [7:0] trunc_ln708_2_fu_1760_p1;
wire   [7:0] tmp_19_fu_3412_p6;
reg   [8:0] grp_fu_1574_p0;
reg   [8:0] grp_fu_1578_p0;
reg   [8:0] grp_fu_1582_p0;
wire   [7:0] tmp_fu_1671_p0;
wire   [7:0] tmp_fu_1671_p1;
wire   [15:0] tmp_fu_1671_p2;
wire   [7:0] tmp1_fu_1679_p0;
wire   [7:0] tmp1_fu_1679_p1;
wire   [7:0] tmp2_fu_1727_p0;
wire   [7:0] tmp2_fu_1727_p1;
wire   [15:0] tmp2_fu_1727_p2;
wire   [7:0] mul152_fu_1775_p0;
wire   [7:0] mul152_fu_1775_p1;
wire   [8:0] add_ln81_fu_1790_p2;
wire   [15:0] zext_ln81_1_fu_1795_p1;
wire   [7:0] tmp5_cast_fu_1835_p0;
wire   [7:0] tmp5_cast_fu_1835_p1;
wire   [5:0] bound110_fu_1861_p0;
wire   [5:0] bound110_fu_1861_p1;
wire   [0:0] icmp_ln82_fu_1883_p2;
wire   [5:0] add_ln81_3_fu_1896_p2;
wire   [7:0] mul_ln81_fu_1922_p0;
wire   [5:0] mul_ln81_fu_1922_p1;
wire   [7:0] mul_ln81_1_fu_1927_p0;
wire   [7:0] mul_ln81_2_fu_1936_p0;
wire   [7:0] mul_ln81_2_fu_1936_p1;
wire   [7:0] or_ln81_fu_1941_p2;
wire   [7:0] mul_ln81_3_fu_1951_p0;
wire   [7:0] mul_ln81_3_fu_1951_p1;
wire   [7:0] or_ln81_1_fu_1956_p2;
wire   [7:0] mul_ln81_4_fu_1966_p0;
wire   [7:0] mul_ln81_4_fu_1966_p1;
wire   [7:0] or_ln81_2_fu_1971_p2;
wire   [7:0] mul_ln81_5_fu_1981_p0;
wire   [7:0] mul_ln81_5_fu_1981_p1;
wire   [7:0] empty_57_fu_1998_p2;
wire   [7:0] zext_ln88_1_fu_2026_p1;
wire   [7:0] empty_44_fu_2034_p2;
wire   [5:0] newIndex_fu_2039_p4;
wire   [7:0] empty_46_fu_2057_p2;
wire   [7:0] empty_47_fu_2066_p2;
wire   [10:0] p_cast17_fu_2071_p1;
wire   [10:0] p_cast18_fu_2062_p1;
wire   [63:0] tmp_1_fu_2150_p5;
wire   [7:0] tmp_1_fu_2150_p6;
wire   [0:0] icmp_ln90_fu_2179_p2;
wire   [7:0] add_ln89_1_fu_2192_p2;
wire   [8:0] wi_cast_fu_2216_p1;
wire   [8:0] grp_fu_4386_p3;
wire   [0:0] icmp_ln102_fu_2242_p2;
wire   [7:0] add_ln100_17_fu_2255_p2;
wire   [7:0] mul_ln100_fu_2273_p0;
wire   [7:0] mul_ln100_fu_2273_p1;
wire   [10:0] mul_ln100_fu_2273_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_1_fu_2278_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_2_fu_2287_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_3_fu_2296_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_4_fu_2305_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_5_fu_2314_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_6_fu_2323_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_7_fu_2332_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_8_fu_2341_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_9_fu_2350_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_10_fu_2359_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_11_fu_2368_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_12_fu_2377_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_13_fu_2386_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_14_fu_2395_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_15_fu_2404_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_16_fu_2413_p2;
wire   [10:0] add_ln117_fu_2430_p2;
wire   [8:0] lshr_ln3_fu_2436_p4;
wire   [10:0] add_ln117_1_fu_2454_p2;
wire   [8:0] lshr_ln116_1_fu_2460_p4;
wire   [10:0] add_ln117_2_fu_2478_p2;
wire   [10:0] add_ln117_3_fu_2494_p2;
wire   [10:0] add_ln117_4_fu_2510_p2;
wire   [10:0] add_ln117_5_fu_2526_p2;
wire   [10:0] add_ln117_6_fu_2542_p2;
wire   [10:0] add_ln117_7_fu_2558_p2;
wire   [10:0] add_ln117_8_fu_2574_p2;
wire   [10:0] add_ln117_9_fu_2590_p2;
wire   [10:0] add_ln117_10_fu_2606_p2;
wire   [10:0] add_ln117_11_fu_2622_p2;
wire   [10:0] add_ln117_12_fu_2638_p2;
wire   [10:0] add_ln117_13_fu_2654_p2;
wire   [10:0] add_ln117_14_fu_2670_p2;
wire   [10:0] add_ln117_15_fu_2686_p2;
wire   [1:0] add_ln116_fu_2707_p2;
wire   [63:0] tmp_3_fu_2715_p5;
wire   [1:0] add_ln116_1_fu_2729_p2;
wire   [63:0] tmp_4_fu_2737_p5;
wire   [1:0] add_ln116_2_fu_2765_p2;
wire   [63:0] tmp_5_fu_2773_p5;
wire   [1:0] add_ln116_3_fu_2787_p2;
wire   [63:0] tmp_6_fu_2795_p5;
wire   [1:0] add_ln116_4_fu_2823_p2;
wire   [63:0] tmp_7_fu_2831_p5;
wire   [1:0] add_ln116_5_fu_2845_p2;
wire   [63:0] tmp_8_fu_2853_p5;
wire   [1:0] add_ln116_6_fu_2881_p2;
wire   [63:0] tmp_9_fu_2889_p5;
wire   [1:0] add_ln116_7_fu_2903_p2;
wire   [63:0] tmp_s_fu_2911_p5;
wire   [1:0] add_ln116_8_fu_2939_p2;
wire   [63:0] tmp_10_fu_2947_p5;
wire   [1:0] add_ln116_9_fu_2961_p2;
wire   [63:0] tmp_11_fu_2969_p5;
wire   [1:0] add_ln116_10_fu_2997_p2;
wire   [63:0] tmp_12_fu_3005_p5;
wire   [1:0] add_ln116_11_fu_3019_p2;
wire   [63:0] tmp_13_fu_3027_p5;
wire   [1:0] add_ln116_12_fu_3055_p2;
wire   [63:0] tmp_14_fu_3063_p5;
wire   [1:0] add_ln116_13_fu_3077_p2;
wire   [63:0] tmp_15_fu_3085_p5;
wire   [1:0] add_ln116_14_fu_3116_p2;
wire   [63:0] tmp_16_fu_3124_p5;
wire   [1:0] add_ln116_15_fu_3138_p2;
wire   [63:0] tmp_17_fu_3146_p5;
wire   [7:0] p_mid131_fu_3160_p0;
wire   [7:0] p_mid131_fu_3160_p1;
wire   [1:0] empty_48_fu_3164_p1;
wire   [7:0] tmp_18_fu_3168_p3;
wire   [2:0] add_ln135_1_fu_3195_p2;
wire   [1:0] empty_52_fu_3201_p1;
wire   [7:0] tmp_19_mid1_fu_3213_p3;
wire   [0:0] icmp_ln138_fu_3224_p2;
wire   [0:0] or_ln137_fu_3244_p2;
wire   [15:0] add_ln137_3_fu_3268_p2;
wire   [7:0] mul_ln141_fu_3286_p0;
wire   [7:0] mul_ln141_fu_3286_p1;
wire   [8:0] zext_ln137_fu_3282_p1;
wire   [8:0] mul_ln141_fu_3286_p2;
wire   [7:0] select_ln135_fu_3291_p3;
wire   [7:0] add_ln137_fu_3305_p2;
wire   [7:0] mul_ln141_1_fu_3315_p0;
wire   [7:0] mul_ln141_1_fu_3315_p1;
wire   [8:0] zext_ln137_1_fu_3311_p1;
wire   [8:0] mul_ln141_1_fu_3315_p2;
wire   [8:0] select_ln135_3_fu_3298_p3;
wire   [8:0] select_ln137_1_fu_3320_p3;
wire   [8:0] wi_4_cast62_fu_3334_p1;
wire  signed [10:0] grp_fu_4400_p2;
wire  signed [10:0] grp_fu_4407_p4;
wire   [10:0] grp_fu_4416_p4;
wire   [10:0] select_ln135_4_fu_3352_p3;
wire   [10:0] select_ln137_2_fu_3357_p3;
wire   [1:0] trunc_ln137_fu_3368_p1;
wire   [10:0] wi_4_cast_fu_3377_p1;
wire   [10:0] add_ln137_1_fu_3363_p2;
wire   [1:0] add_ln137_2_fu_3372_p2;
wire   [10:0] add_ln144_fu_3380_p2;
wire   [8:0] lshr_ln4_fu_3391_p4;
wire   [63:0] tmp_19_fu_3412_p5;
wire   [16:0] i_cast_fu_3490_p1;
wire   [16:0] add_ln172_fu_3494_p2;
wire  signed [31:0] grp_fu_3504_p0;
wire   [7:0] grp_fu_3504_p1;
wire  signed [16:0] add_ln172_1_fu_3509_p2;
wire  signed [31:0] grp_fu_3519_p0;
wire   [7:0] grp_fu_3519_p1;
wire  signed [16:0] add_ln172_2_fu_3532_p2;
wire  signed [31:0] grp_fu_3542_p0;
wire   [7:0] grp_fu_3542_p1;
wire   [16:0] sub252_fu_3561_p2;
wire   [0:0] icmp_ln208_fu_3575_p2;
wire   [0:0] tmp_23_fu_3567_p3;
wire   [0:0] xor_ln208_fu_3580_p2;
wire   [16:0] sub252_1_fu_3592_p2;
wire   [0:0] icmp_ln208_1_fu_3606_p2;
wire   [0:0] tmp_24_fu_3598_p3;
wire   [0:0] xor_ln208_1_fu_3611_p2;
wire   [16:0] sub250_fu_3555_p2;
wire   [0:0] icmp_ln208_2_fu_3631_p2;
wire   [0:0] tmp_25_fu_3623_p3;
wire   [0:0] xor_ln208_2_fu_3636_p2;
wire   [0:0] icmp_ln208_3_fu_3656_p2;
wire   [0:0] tmp_26_fu_3648_p3;
wire   [0:0] xor_ln208_3_fu_3661_p2;
wire   [7:0] grp_fu_3679_p1;
wire   [7:0] grp_fu_3683_p1;
wire   [7:0] grp_fu_3687_p1;
wire   [8:0] grp_fu_3504_p2;
wire   [8:0] grp_fu_3519_p2;
wire   [8:0] grp_fu_3542_p2;
wire   [7:0] trunc_ln173_fu_3767_p1;
wire   [7:0] trunc_ln173_1_fu_3774_p1;
wire   [7:0] trunc_ln173_2_fu_3781_p1;
wire   [8:0] grp_fu_1574_p2;
wire  signed [8:0] grp_fu_4440_p3;
wire  signed [8:0] grp_fu_4448_p3;
wire  signed [8:0] grp_fu_4464_p4;
wire   [8:0] grp_fu_1578_p2;
wire   [8:0] grp_fu_1582_p2;
wire   [8:0] add_ln172_3_fu_4060_p2;
wire   [8:0] add_ln216_6_fu_4072_p2;
wire   [5:0] add_ln230_1_fu_4154_p2;
wire   [18:0] add_ln231_1_fu_4172_p2;
wire   [1:0] trunc_ln233_fu_4193_p1;
wire   [0:0] icmp_ln232_1_fu_4204_p2;
wire   [2:0] select_ln230_fu_4186_p3;
wire   [0:0] select_ln230_3_fu_4209_p3;
wire   [0:0] or_ln231_fu_4221_p2;
wire   [2:0] add_ln231_fu_4215_p2;
wire   [1:0] trunc_ln233_1_fu_4234_p1;
wire   [1:0] select_ln230_2_fu_4197_p3;
wire   [15:0] select_ln231_fu_4226_p3;
wire  signed [8:0] grp_fu_4601_p3;
wire   [31:0] p_Repl2_s_fu_4271_p6;
wire   [15:0] grp_fu_4289_p0;
wire   [15:0] grp_fu_4289_p1;
wire   [15:0] grp_fu_4295_p0;
wire   [7:0] grp_fu_4295_p1;
wire   [5:0] grp_fu_4300_p0;
wire   [17:0] grp_fu_4300_p1;
wire  signed [10:0] grp_fu_4306_p0;
wire  signed [10:0] grp_fu_4311_p0;
wire  signed [10:0] grp_fu_4316_p0;
wire  signed [10:0] grp_fu_4321_p0;
wire  signed [10:0] grp_fu_4326_p0;
wire  signed [10:0] grp_fu_4331_p0;
wire  signed [10:0] grp_fu_4336_p0;
wire  signed [10:0] grp_fu_4341_p0;
wire  signed [10:0] grp_fu_4346_p0;
wire  signed [10:0] grp_fu_4351_p0;
wire  signed [10:0] grp_fu_4356_p0;
wire  signed [10:0] grp_fu_4361_p0;
wire  signed [10:0] grp_fu_4366_p0;
wire  signed [10:0] grp_fu_4371_p0;
wire  signed [10:0] grp_fu_4376_p0;
wire  signed [10:0] grp_fu_4381_p0;
wire   [7:0] grp_fu_4386_p0;
wire   [7:0] grp_fu_4386_p1;
wire   [8:0] grp_fu_4386_p2;
wire   [7:0] grp_fu_4394_p1;
wire   [7:0] grp_fu_4400_p1;
wire   [7:0] grp_fu_4407_p0;
wire   [7:0] grp_fu_4407_p1;
wire   [7:0] grp_fu_4407_p2;
wire   [7:0] grp_fu_4416_p0;
wire   [7:0] grp_fu_4416_p1;
wire   [7:0] grp_fu_4416_p2;
wire   [10:0] grp_fu_4416_p3;
wire  signed [7:0] grp_fu_4425_p0;
wire   [7:0] grp_fu_4433_p0;
wire   [7:0] grp_fu_4433_p2;
wire   [7:0] grp_fu_4440_p0;
wire   [7:0] grp_fu_4440_p2;
wire   [7:0] grp_fu_4448_p0;
wire   [7:0] grp_fu_4448_p2;
wire  signed [7:0] grp_fu_4456_p1;
wire   [7:0] grp_fu_4464_p2;
wire   [7:0] grp_fu_4464_p3;
wire  signed [7:0] grp_fu_4473_p0;
wire   [7:0] grp_fu_4481_p2;
wire   [7:0] grp_fu_4481_p3;
wire   [7:0] grp_fu_4489_p2;
wire   [7:0] grp_fu_4489_p3;
wire  signed [7:0] grp_fu_4497_p1;
wire  signed [7:0] grp_fu_4505_p1;
wire  signed [7:0] grp_fu_4513_p1;
wire   [31:0] grp_fu_4513_p2;
wire  signed [7:0] grp_fu_4521_p1;
wire  signed [7:0] grp_fu_4529_p1;
wire  signed [7:0] grp_fu_4537_p1;
wire   [31:0] grp_fu_4537_p2;
wire  signed [7:0] grp_fu_4545_p1;
wire  signed [7:0] grp_fu_4553_p1;
wire  signed [7:0] grp_fu_4561_p1;
wire  signed [7:0] grp_fu_4569_p1;
wire   [31:0] grp_fu_4569_p2;
wire  signed [7:0] grp_fu_4577_p1;
wire  signed [7:0] grp_fu_4585_p1;
wire  signed [7:0] grp_fu_4593_p1;
wire   [5:0] grp_fu_4601_p0;
wire   [8:0] grp_fu_4601_p2;
reg    grp_fu_4601_ce;
wire    ap_CS_fsm_state103;
reg   [43:0] ap_NS_fsm;
wire    ap_block_pp5_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire   [11:0] bound110_fu_1861_p00;
wire   [11:0] bound110_fu_1861_p10;
wire   [31:0] grp_fu_4289_p00;
wire   [31:0] grp_fu_4289_p10;
wire   [23:0] grp_fu_4295_p00;
wire   [23:0] grp_fu_4300_p00;
wire   [23:0] grp_fu_4300_p10;
wire   [8:0] grp_fu_4386_p00;
wire   [10:0] grp_fu_4394_p10;
wire   [10:0] grp_fu_4400_p10;
wire   [8:0] grp_fu_4601_p00;
wire   [10:0] mul_ln100_fu_2273_p00;
wire   [10:0] mul_ln81_2_fu_1936_p10;
wire   [10:0] mul_ln81_3_fu_1951_p10;
wire   [10:0] mul_ln81_4_fu_1966_p10;
wire   [10:0] mul_ln81_5_fu_1981_p10;
wire   [8:0] mul_ln81_fu_1922_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 44'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter18 = 1'b0;
#0 ap_enable_reg_pp5_iter19 = 1'b0;
#0 ap_enable_reg_pp5_iter20 = 1'b0;
#0 ap_enable_reg_pp5_iter21 = 1'b0;
#0 ap_enable_reg_pp5_iter22 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp5_iter8 = 1'b0;
#0 ap_enable_reg_pp5_iter9 = 1'b0;
#0 ap_enable_reg_pp5_iter10 = 1'b0;
#0 ap_enable_reg_pp5_iter11 = 1'b0;
#0 ap_enable_reg_pp5_iter12 = 1'b0;
#0 ap_enable_reg_pp5_iter13 = 1'b0;
#0 ap_enable_reg_pp5_iter14 = 1'b0;
#0 ap_enable_reg_pp5_iter15 = 1'b0;
#0 ap_enable_reg_pp5_iter16 = 1'b0;
#0 ap_enable_reg_pp5_iter17 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
end

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(trunc_ln708_fu_1656_p1),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(trunc_ln708_fu_1656_p1),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(trunc_ln708_fu_1656_p1),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(trunc_ln708_fu_1656_p1),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(trunc_ln708_1_fu_1712_p1),
    .q0(weight_l2_0_q0),
    .address1(weight_l2_0_address1),
    .ce1(weight_l2_0_ce1),
    .q1(weight_l2_0_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(trunc_ln708_1_fu_1712_p1),
    .q0(weight_l2_1_q0),
    .address1(weight_l2_1_address1),
    .ce1(weight_l2_1_ce1),
    .q1(weight_l2_1_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(trunc_ln708_1_fu_1712_p1),
    .q0(weight_l2_2_q0),
    .address1(weight_l2_2_address1),
    .ce1(weight_l2_2_ce1),
    .q1(weight_l2_2_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(trunc_ln708_1_fu_1712_p1),
    .q0(weight_l2_3_q0),
    .address1(weight_l2_3_address1),
    .ce1(weight_l2_3_ce1),
    .q1(weight_l2_3_q1)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(trunc_ln708_2_fu_1760_p1),
    .q0(data_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(trunc_ln708_2_fu_1760_p1),
    .q0(data_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(trunc_ln708_2_fu_1760_p1),
    .q0(data_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(trunc_ln708_2_fu_1760_p1),
    .q0(data_l2_3_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_0_0_address0),
    .ce0(data_l1_0_0_ce0),
    .we0(data_l1_0_0_we0),
    .d0(tmp_19_fu_3412_p6),
    .q0(data_l1_0_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_1_0_address0),
    .ce0(data_l1_1_0_ce0),
    .we0(data_l1_1_0_we0),
    .d0(tmp_19_fu_3412_p6),
    .q0(data_l1_1_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_2_0_address0),
    .ce0(data_l1_2_0_ce0),
    .we0(data_l1_2_0_we0),
    .d0(tmp_19_fu_3412_p6),
    .q0(data_l1_2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_3_0_address0),
    .ce0(data_l1_3_0_ce0),
    .we0(data_l1_3_0_we0),
    .d0(tmp_19_fu_3412_p6),
    .q0(data_l1_3_0_q0)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(output_l1_0_d0),
    .address1(output_l1_0_address1),
    .ce1(output_l1_0_ce1),
    .q1(output_l1_0_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(output_l1_1_d0),
    .address1(output_l1_1_address1),
    .ce1(output_l1_1_ce1),
    .q1(output_l1_1_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(output_l1_2_d0),
    .address1(output_l1_2_address1),
    .ce1(output_l1_2_ce1),
    .q1(output_l1_2_q1)
);

Conv_sysarr_dbbuf_output_l1_3 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(output_l1_3_d0),
    .q0(output_l1_3_q0),
    .address1(output_l1_3_address1),
    .ce1(output_l1_3_ce1),
    .we1(output_l1_3_we1),
    .d1(grp_fu_4425_p3),
    .q1(output_l1_3_q1)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(tmp_fu_1671_p0),
    .din1(tmp_fu_1671_p1),
    .dout(tmp_fu_1671_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U2(
    .din0(tmp1_fu_1679_p0),
    .din1(tmp1_fu_1679_p1),
    .dout(tmp1_fu_1679_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U3(
    .din0(tmp2_fu_1727_p0),
    .din1(tmp2_fu_1727_p1),
    .dout(tmp2_fu_1727_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U4(
    .din0(mul152_fu_1775_p0),
    .din1(mul152_fu_1775_p1),
    .dout(mul152_fu_1775_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U5(
    .din0(tmp5_cast_fu_1835_p0),
    .din1(tmp5_cast_fu_1835_p1),
    .dout(tmp5_cast_fu_1835_p2)
);

Conv_sysarr_dbbuf_mul_6ns_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6ns_6ns_12_1_1_U6(
    .din0(bound110_fu_1861_p0),
    .din1(bound110_fu_1861_p1),
    .dout(bound110_fu_1861_p2)
);

Conv_sysarr_dbbuf_mul_8ns_6ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_8ns_6ns_9_1_1_U7(
    .din0(mul_ln81_fu_1922_p0),
    .din1(mul_ln81_fu_1922_p1),
    .dout(mul_ln81_fu_1922_p2)
);

Conv_sysarr_dbbuf_mul_8ns_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_8ns_9s_9_1_1_U8(
    .din0(mul_ln81_1_fu_1927_p0),
    .din1(mul_ln81_fu_1922_p2),
    .dout(mul_ln81_1_fu_1927_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U9(
    .din0(mul_ln81_2_fu_1936_p0),
    .din1(mul_ln81_2_fu_1936_p1),
    .dout(mul_ln81_2_fu_1936_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U10(
    .din0(mul_ln81_3_fu_1951_p0),
    .din1(mul_ln81_3_fu_1951_p1),
    .dout(mul_ln81_3_fu_1951_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U11(
    .din0(mul_ln81_4_fu_1966_p0),
    .din1(mul_ln81_4_fu_1966_p1),
    .dout(mul_ln81_4_fu_1966_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U12(
    .din0(mul_ln81_5_fu_1981_p0),
    .din1(mul_ln81_5_fu_1981_p1),
    .dout(mul_ln81_5_fu_1981_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U13(
    .din0(bias_l2_0_q0),
    .din1(bias_l2_1_q0),
    .din2(bias_l2_2_q0),
    .din3(bias_l2_3_q0),
    .din4(tmp_1_fu_2150_p5),
    .dout(tmp_1_fu_2150_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U14(
    .din0(mul_ln100_fu_2273_p0),
    .din1(mul_ln100_fu_2273_p1),
    .dout(mul_ln100_fu_2273_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U15(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_3_fu_2715_p5),
    .dout(tmp_3_fu_2715_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U16(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_4_fu_2737_p5),
    .dout(tmp_4_fu_2737_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U17(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_5_fu_2773_p5),
    .dout(tmp_5_fu_2773_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U18(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_6_fu_2795_p5),
    .dout(tmp_6_fu_2795_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U19(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_7_fu_2831_p5),
    .dout(tmp_7_fu_2831_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U20(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_8_fu_2853_p5),
    .dout(tmp_8_fu_2853_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U21(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_9_fu_2889_p5),
    .dout(tmp_9_fu_2889_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U22(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_s_fu_2911_p5),
    .dout(tmp_s_fu_2911_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U23(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_10_fu_2947_p5),
    .dout(tmp_10_fu_2947_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U24(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_11_fu_2969_p5),
    .dout(tmp_11_fu_2969_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U25(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_12_fu_3005_p5),
    .dout(tmp_12_fu_3005_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U26(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_13_fu_3027_p5),
    .dout(tmp_13_fu_3027_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U27(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_14_fu_3063_p5),
    .dout(tmp_14_fu_3063_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U28(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_15_fu_3085_p5),
    .dout(tmp_15_fu_3085_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U29(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_16_fu_3124_p5),
    .dout(tmp_16_fu_3124_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U30(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_17_fu_3146_p5),
    .dout(tmp_17_fu_3146_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U31(
    .din0(p_mid131_fu_3160_p0),
    .din1(p_mid131_fu_3160_p1),
    .dout(p_mid131_fu_3160_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U32(
    .din0(mul_ln141_fu_3286_p0),
    .din1(mul_ln141_fu_3286_p1),
    .dout(mul_ln141_fu_3286_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U33(
    .din0(mul_ln141_1_fu_3315_p0),
    .din1(mul_ln141_1_fu_3315_p1),
    .dout(mul_ln141_1_fu_3315_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U34(
    .din0(data_l2_0_q0),
    .din1(data_l2_1_q0),
    .din2(data_l2_2_q0),
    .din3(data_l2_3_q0),
    .din4(tmp_19_fu_3412_p5),
    .dout(tmp_19_fu_3412_p6)
);

Conv_sysarr_dbbuf_udiv_32s_8ns_9_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
udiv_32s_8ns_9_36_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3504_p0),
    .din1(grp_fu_3504_p1),
    .ce(1'b1),
    .dout(grp_fu_3504_p2)
);

Conv_sysarr_dbbuf_udiv_32s_8ns_9_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
udiv_32s_8ns_9_36_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3519_p0),
    .din1(grp_fu_3519_p1),
    .ce(1'b1),
    .dout(grp_fu_3519_p2)
);

Conv_sysarr_dbbuf_udiv_32s_8ns_9_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
udiv_32s_8ns_9_36_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3542_p0),
    .din1(grp_fu_3542_p1),
    .ce(1'b1),
    .dout(grp_fu_3542_p2)
);

Conv_sysarr_dbbuf_urem_32s_8ns_8_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_32s_8ns_8_36_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln172_reg_6206),
    .din1(grp_fu_3679_p1),
    .ce(1'b1),
    .dout(grp_fu_3679_p2)
);

Conv_sysarr_dbbuf_urem_32s_8ns_8_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_32s_8ns_8_36_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln172_1_reg_6212),
    .din1(grp_fu_3683_p1),
    .ce(1'b1),
    .dout(grp_fu_3683_p2)
);

Conv_sysarr_dbbuf_urem_32s_8ns_8_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_32s_8ns_8_36_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln172_2_reg_6224),
    .din1(grp_fu_3687_p1),
    .ce(1'b1),
    .dout(grp_fu_3687_p2)
);

Conv_sysarr_dbbuf_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U41(
    .din0(output_l1_0_q1),
    .din1(output_l1_1_q1),
    .din2(output_l1_2_q1),
    .din3(output_l1_3_q0),
    .din4(select_ln231_1_reg_6636_pp6_iter3_reg),
    .dout(p_Repl2_s_fu_4271_p6)
);

Conv_sysarr_dbbuf_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4289_p0),
    .din1(grp_fu_4289_p1),
    .ce(1'b1),
    .dout(grp_fu_4289_p2)
);

Conv_sysarr_dbbuf_mul_mul_16ns_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16ns_8ns_24_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4295_p0),
    .din1(grp_fu_4295_p1),
    .ce(1'b1),
    .dout(grp_fu_4295_p2)
);

Conv_sysarr_dbbuf_mul_mul_6ns_18ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 24 ))
mul_mul_6ns_18ns_24_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4300_p0),
    .din1(grp_fu_4300_p1),
    .ce(1'b1),
    .dout(grp_fu_4300_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4306_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4306_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4311_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4311_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4316_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4316_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4321_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4321_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4326_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4326_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4331_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4331_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4336_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4336_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4341_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4341_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4346_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4346_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4351_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4351_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4356_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4356_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4361_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4361_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4366_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4366_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4371_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4371_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4376_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4376_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4381_p0),
    .din1(empty_41_reg_5003),
    .ce(1'b1),
    .dout(grp_fu_4381_p2)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_8ns_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_8ns_9ns_9_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4386_p0),
    .din1(grp_fu_4386_p1),
    .din2(grp_fu_4386_p2),
    .ce(1'b1),
    .dout(grp_fu_4386_p3)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp5_cast_reg_5023),
    .din1(grp_fu_4394_p1),
    .ce(1'b1),
    .dout(grp_fu_4394_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp5_cast_reg_5023),
    .din1(grp_fu_4400_p1),
    .ce(1'b1),
    .dout(grp_fu_4400_p2)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11s_11_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4407_p0),
    .din1(grp_fu_4407_p1),
    .din2(grp_fu_4407_p2),
    .din3(grp_fu_4394_p2),
    .ce(1'b1),
    .dout(grp_fu_4407_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4416_p0),
    .din1(grp_fu_4416_p1),
    .din2(grp_fu_4416_p2),
    .din3(grp_fu_4416_p3),
    .ce(1'b1),
    .dout(grp_fu_4416_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4425_p0),
    .din1(arrayidx1922_promoted606_fu_272),
    .din2(ap_sig_allocacmp_arrayidx2284_promoted613_load),
    .ce(1'b1),
    .dout(grp_fu_4425_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_9s_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_9s_8ns_9_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4433_p0),
    .din1(trunc_ln172_fu_3707_p1),
    .din2(grp_fu_4433_p2),
    .ce(1'b1),
    .dout(grp_fu_4433_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_9s_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_9s_8ns_9_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4440_p0),
    .din1(trunc_ln172_1_fu_3711_p1),
    .din2(grp_fu_4440_p2),
    .ce(1'b1),
    .dout(grp_fu_4440_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_9s_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_9s_8ns_9_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4448_p0),
    .din1(trunc_ln172_2_fu_3715_p1),
    .din2(grp_fu_4448_p2),
    .ce(1'b1),
    .dout(grp_fu_4448_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_1347_promoted620_fu_280),
    .din1(grp_fu_4456_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_1351_promoted627_load),
    .ce(1'b1),
    .dout(grp_fu_4456_p3)
);

Conv_sysarr_dbbuf_ama_addmuladd_9s_9s_8ns_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
ama_addmuladd_9s_9s_8ns_8ns_9_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln172_2_fu_3715_p1),
    .din1(mul_ln81_reg_5075),
    .din2(grp_fu_4464_p2),
    .din3(grp_fu_4464_p3),
    .ce(1'b1),
    .dout(grp_fu_4464_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4473_p0),
    .din1(ap_sig_allocacmp_arrayidx1922_1_promoted655_load),
    .din2(ap_sig_allocacmp_arrayidx2284_1_promoted662_load),
    .ce(1'b1),
    .dout(grp_fu_4473_p3)
);

Conv_sysarr_dbbuf_ama_addmuladd_9s_9s_8ns_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
ama_addmuladd_9s_9s_8ns_8ns_9_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln172_1_fu_3711_p1),
    .din1(mul_ln81_reg_5075),
    .din2(grp_fu_4481_p2),
    .din3(grp_fu_4481_p3),
    .ce(1'b1),
    .dout(grp_fu_4481_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_9s_9s_8ns_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
ama_addmuladd_9s_9s_8ns_8ns_9_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln172_fu_3707_p1),
    .din1(mul_ln81_reg_5075),
    .din2(grp_fu_4489_p2),
    .din3(grp_fu_4489_p3),
    .ce(1'b1),
    .dout(grp_fu_4489_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_2374_promoted634_fu_288),
    .din1(grp_fu_4497_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_2378_promoted641_load),
    .ce(1'b1),
    .dout(grp_fu_4497_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_arrayidx1922_1_1_promoted669_load),
    .din1(grp_fu_4505_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_1_1_promoted676_load),
    .ce(1'b1),
    .dout(grp_fu_4505_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_3401_promoted648_fu_296),
    .din1(grp_fu_4513_p1),
    .din2(grp_fu_4513_p2),
    .ce(1'b1),
    .dout(grp_fu_4513_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_arrayidx1922_1_2_promoted683_load),
    .din1(grp_fu_4521_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_1_2_promoted690_load),
    .ce(1'b1),
    .dout(grp_fu_4521_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_arrayidx1922_2_promoted704_load),
    .din1(grp_fu_4529_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_2_promoted711_load),
    .ce(1'b1),
    .dout(grp_fu_4529_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_arrayidx1922_1_3_promoted697_load),
    .din1(grp_fu_4537_p1),
    .din2(grp_fu_4537_p2),
    .ce(1'b1),
    .dout(grp_fu_4537_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_arrayidx1922_2_1_promoted718_load),
    .din1(grp_fu_4545_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_2_1_promoted725_load),
    .ce(1'b1),
    .dout(grp_fu_4545_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_arrayidx1922_2_2_promoted732_load),
    .din1(grp_fu_4553_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_2_2_promoted739_load),
    .ce(1'b1),
    .dout(grp_fu_4553_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln174_2_fu_3896_p3),
    .din1(grp_fu_4561_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_3_promoted753_load),
    .ce(1'b1),
    .dout(grp_fu_4561_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_2_3_promoted746_fu_352),
    .din1(grp_fu_4569_p1),
    .din2(grp_fu_4569_p2),
    .ce(1'b1),
    .dout(grp_fu_4569_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln174_1_fu_3963_p3),
    .din1(grp_fu_4577_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_3_1_promoted760_load),
    .ce(1'b1),
    .dout(grp_fu_4577_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln174_fu_4016_p3),
    .din1(grp_fu_4585_p1),
    .din2(ap_sig_allocacmp_arrayidx2284_3_2_promoted767_load),
    .ce(1'b1),
    .dout(grp_fu_4585_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1_0_0_load_reg_6519),
    .din1(grp_fu_4593_p1),
    .din2(output_l1_0_q1),
    .ce(1'b1),
    .dout(grp_fu_4593_p3)
);

Conv_sysarr_dbbuf_mac_muladd_6ns_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_6ns_9s_9ns_9_4_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4601_p0),
    .din1(trunc_ln231_reg_4948),
    .din2(grp_fu_4601_p2),
    .ce(grp_fu_4601_ce),
    .dout(grp_fu_4601_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state18);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state24) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state24)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state24);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end else if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_condition_pp4_exit_iter4_state45) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
            ap_enable_reg_pp4_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter4_state45) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter3;
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp5_flush_enable)) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter10 <= ap_enable_reg_pp5_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter11 <= ap_enable_reg_pp5_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter12 <= ap_enable_reg_pp5_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter13 <= ap_enable_reg_pp5_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter14 <= ap_enable_reg_pp5_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter15 <= ap_enable_reg_pp5_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter16 <= ap_enable_reg_pp5_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter17 <= ap_enable_reg_pp5_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter18 <= ap_enable_reg_pp5_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter19 <= ap_enable_reg_pp5_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter20 <= ap_enable_reg_pp5_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            if ((1'b1 == ap_condition_pp5_exit_iter20_state88)) begin
                ap_enable_reg_pp5_iter21 <= ap_enable_reg_pp5_iter19;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter21 <= ap_enable_reg_pp5_iter20;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter22 <= ap_enable_reg_pp5_iter21;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter22 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter8 <= ap_enable_reg_pp5_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter9 <= ap_enable_reg_pp5_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp6_flush_enable)) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state97)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter2_state100)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end else if ((1'b1 == ap_CS_fsm_state97)) begin
            ap_enable_reg_pp6_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln135_fu_3179_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        ci_reg_1463 <= select_ln135_6_fu_3236_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        ci_reg_1463 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_2231_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        co_reg_1364 <= add_ln82_fu_2702_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        co_reg_1364 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln135_reg_6013 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        hi_1_reg_1496 <= select_ln137_3_fu_3327_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        hi_1_reg_1496 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_reg_5278 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        hi_reg_1397 <= select_ln89_1_reg_5292;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        hi_reg_1397 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202 == 1'd0))) begin
        i_reg_1507 <= i_1_reg_6252;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        i_reg_1507 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        indvar_flatten105_reg_1419 <= add_ln100_reg_5395;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten105_reg_1419 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_2231_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        indvar_flatten142_reg_1342 <= add_ln81_2_reg_5053;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        indvar_flatten142_reg_1342 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln230_fu_4138_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten149_reg_1541 <= select_ln231_3_fu_4178_p3;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        indvar_flatten149_reg_1541 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln135_fu_3179_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten15_reg_1474 <= select_ln137_4_fu_3274_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten15_reg_1474 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln230_fu_4138_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten163_reg_1519 <= add_ln230_fu_4143_p2;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        indvar_flatten163_reg_1519 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln135_fu_3179_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten47_reg_1452 <= add_ln135_fu_3184_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten47_reg_1452 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2168_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten_reg_1386 <= add_ln89_fu_2173_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten_reg_1386 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_1_reg_1320 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln72_fu_1687_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_1_reg_1320 <= add_ln72_fu_1692_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_2_reg_1331 <= 24'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln76_fu_1735_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        k_2_reg_1331 <= add_ln76_fu_1740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln230_reg_6604 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        k_3_reg_1530 <= select_ln230_1_reg_6621;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        k_3_reg_1530 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        k_reg_1309 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln68_fu_1631_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_1309 <= add_ln68_fu_1636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_fu_1872_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ki_1_reg_1375 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        ki_1_reg_1375 <= add_ln88_reg_5160;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln230_reg_6604_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        ki_reg_1552 <= select_ln231_2_fu_4246_p3;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ki_reg_1552 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_2231_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ko_reg_1353 <= select_ln81_1_reg_5065;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ko_reg_1353 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        r_reg_1430 <= select_ln100_1_reg_5405;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_reg_1430 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        s_reg_1441 <= add_ln102_fu_4128_p2;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        s_reg_1441 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln230_reg_6604_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        wh_reg_1563 <= add_ln232_fu_4258_p2;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        wh_reg_1563 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln135_fu_3179_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        wi_1_reg_1485 <= add_ln138_fu_3262_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        wi_1_reg_1485 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2168_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        wi_reg_1408 <= add_ln90_fu_2210_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        wi_reg_1408 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        C_cast_reg_4995[7 : 0] <= C_cast_fu_1829_p1[7 : 0];
        WH_cast_reg_4980[7 : 0] <= WH_cast_fu_1826_p1[7 : 0];
        add_ln81_1_reg_4960 <= add_ln81_1_fu_1799_p2;
        bound110_reg_5040 <= bound110_fu_1861_p2;
        bound20_reg_5035[17 : 2] <= bound20_fu_1849_p1[17 : 2];
        div66_cast_reg_4975 <= {{bias_in_V_read_reg_4609[7:2]}};
        div68_cast_reg_4970 <= {{bias_in_V_read_1_reg_4620[7:2]}};
        empty_41_reg_5003 <= empty_41_fu_1832_p1;
        icmp_ln137_reg_5045 <= icmp_ln137_fu_1867_p2;
        mul152_reg_4932 <= mul152_fu_1775_p2;
        tmp5_cast_reg_5023 <= tmp5_cast_fu_1835_p2;
        tmp_2_reg_5029[17 : 2] <= tmp_2_fu_1841_p3[17 : 2];
        trunc_ln231_reg_4948 <= trunc_ln231_fu_1783_p1;
        trunc_ln3_cast48_reg_4953[7 : 0] <= trunc_ln3_cast48_fu_1787_p1[7 : 0];
        trunc_ln4_cast21_reg_4965[7 : 0] <= trunc_ln4_cast21_fu_1805_p1[7 : 0];
        zext_ln81_reg_4940[15 : 0] <= zext_ln81_fu_1779_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        C_reg_4625 <= C_fu_1590_p1;
        bias_in_V_read_1_reg_4620 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        K_reg_4614 <= K_fu_1586_p1;
        bias_in_V_read_reg_4609 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        RS_reg_4691 <= RS_fu_1623_p1;
        zext_ln53_reg_4649[7 : 0] <= zext_ln53_fu_1602_p1[7 : 0];
        zext_ln55_1_reg_4659[7 : 0] <= zext_ln55_1_fu_1608_p1[7 : 0];
        zext_ln55_reg_4654[7 : 0] <= zext_ln55_fu_1605_p1[7 : 0];
        zext_ln57_1_reg_4675[7 : 0] <= zext_ln57_1_fu_1614_p1[7 : 0];
        zext_ln57_reg_4665[7 : 0] <= zext_ln57_fu_1611_p1[7 : 0];
        zext_ln61_1_reg_4686[7 : 0] <= zext_ln61_1_fu_1620_p1[7 : 0];
        zext_ln61_reg_4681[7 : 0] <= zext_ln61_fu_1617_p1[7 : 0];
        zext_ln65_reg_4697[7 : 0] <= zext_ln65_fu_1627_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        WH_in_reg_4642 <= WH_in_fu_1598_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        WH_reg_4632 <= WH_fu_1594_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add107_1325_cast_reg_5347 <= grp_fu_4341_p2;
        add107_1_1_cast_reg_5362 <= grp_fu_4356_p2;
        add107_1_2_cast_reg_5327 <= grp_fu_4321_p2;
        add107_1_3_cast_reg_5367 <= grp_fu_4361_p2;
        add107_1_cast_reg_5317 <= grp_fu_4311_p2;
        add107_2333_cast_reg_5352 <= grp_fu_4346_p2;
        add107_2_1_cast_reg_5372 <= grp_fu_4366_p2;
        add107_2_2_cast_reg_5332 <= grp_fu_4326_p2;
        add107_2_3_cast_reg_5377 <= grp_fu_4371_p2;
        add107_2_cast_reg_5312 <= grp_fu_4306_p2;
        add107_3341_cast_reg_5357 <= grp_fu_4351_p2;
        add107_3_1_cast_reg_5382 <= grp_fu_4376_p2;
        add107_3_2_cast_reg_5337 <= grp_fu_4331_p2;
        add107_3_3_cast_reg_5387 <= grp_fu_4381_p2;
        add107_3_cast_reg_5322 <= grp_fu_4316_p2;
        add107_cast_reg_5342 <= grp_fu_4336_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln100_reg_5395 <= add_ln100_fu_2236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln135_5_reg_6039_pp4_iter2_reg == 1'd0) & (icmp_ln137_1_reg_6022_pp4_iter2_reg == 1'd1) & (icmp_ln135_reg_6013_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln141_1_reg_6092 <= add_ln141_1_fu_3348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_reg_6013 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln142_reg_6077 <= add_ln142_fu_3337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        add_ln142_reg_6077_pp4_iter2_reg <= add_ln142_reg_6077;
        add_ln142_reg_6077_pp4_iter3_reg <= add_ln142_reg_6077_pp4_iter2_reg;
        add_ln142_reg_6077_pp4_iter4_reg <= add_ln142_reg_6077_pp4_iter3_reg;
        icmp_ln135_reg_6013_pp4_iter2_reg <= icmp_ln135_reg_6013_pp4_iter1_reg;
        icmp_ln135_reg_6013_pp4_iter3_reg <= icmp_ln135_reg_6013_pp4_iter2_reg;
        icmp_ln137_1_reg_6022_pp4_iter2_reg <= icmp_ln137_1_reg_6022_pp4_iter1_reg;
        icmp_ln137_1_reg_6022_pp4_iter3_reg <= icmp_ln137_1_reg_6022_pp4_iter2_reg;
        select_ln135_1_reg_6030_pp4_iter2_reg <= select_ln135_1_reg_6030_pp4_iter1_reg;
        select_ln135_1_reg_6030_pp4_iter3_reg <= select_ln135_1_reg_6030_pp4_iter2_reg;
        select_ln135_1_reg_6030_pp4_iter4_reg <= select_ln135_1_reg_6030_pp4_iter3_reg;
        select_ln135_5_reg_6039_pp4_iter2_reg <= select_ln135_5_reg_6039_pp4_iter1_reg;
        select_ln135_5_reg_6039_pp4_iter3_reg <= select_ln135_5_reg_6039_pp4_iter2_reg;
        select_ln137_reg_6051_pp4_iter2_reg <= select_ln137_reg_6051_pp4_iter1_reg;
        select_ln137_reg_6051_pp4_iter3_reg <= select_ln137_reg_6051_pp4_iter2_reg;
        trunc_ln144_reg_6057_pp4_iter2_reg <= trunc_ln144_reg_6057_pp4_iter1_reg;
        trunc_ln144_reg_6057_pp4_iter3_reg <= trunc_ln144_reg_6057_pp4_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_reg_6013_pp4_iter3_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln143_reg_6097 <= add_ln143_fu_3386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (icmp_ln174_reg_6257_pp5_iter18_reg == 1'd1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        add_ln176_reg_6384 <= grp_fu_4433_p3;
        add_ln198_5_reg_6439 <= grp_fu_4489_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (tmp_21_reg_6218_pp5_iter18_reg == 1'd0) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        add_ln198_3_reg_6424 <= grp_fu_4481_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln198_5_reg_6439_pp5_iter20_reg <= add_ln198_5_reg_6439;
        add_ln198_6_reg_6559 <= add_ln198_6_fu_4085_p2;
        i_reg_1507_pp5_iter10_reg <= i_reg_1507_pp5_iter9_reg;
        i_reg_1507_pp5_iter11_reg <= i_reg_1507_pp5_iter10_reg;
        i_reg_1507_pp5_iter12_reg <= i_reg_1507_pp5_iter11_reg;
        i_reg_1507_pp5_iter13_reg <= i_reg_1507_pp5_iter12_reg;
        i_reg_1507_pp5_iter14_reg <= i_reg_1507_pp5_iter13_reg;
        i_reg_1507_pp5_iter15_reg <= i_reg_1507_pp5_iter14_reg;
        i_reg_1507_pp5_iter16_reg <= i_reg_1507_pp5_iter15_reg;
        i_reg_1507_pp5_iter17_reg <= i_reg_1507_pp5_iter16_reg;
        i_reg_1507_pp5_iter18_reg <= i_reg_1507_pp5_iter17_reg;
        i_reg_1507_pp5_iter19_reg <= i_reg_1507_pp5_iter18_reg;
        i_reg_1507_pp5_iter1_reg <= i_reg_1507;
        i_reg_1507_pp5_iter2_reg <= i_reg_1507_pp5_iter1_reg;
        i_reg_1507_pp5_iter3_reg <= i_reg_1507_pp5_iter2_reg;
        i_reg_1507_pp5_iter4_reg <= i_reg_1507_pp5_iter3_reg;
        i_reg_1507_pp5_iter5_reg <= i_reg_1507_pp5_iter4_reg;
        i_reg_1507_pp5_iter6_reg <= i_reg_1507_pp5_iter5_reg;
        i_reg_1507_pp5_iter7_reg <= i_reg_1507_pp5_iter6_reg;
        i_reg_1507_pp5_iter8_reg <= i_reg_1507_pp5_iter7_reg;
        i_reg_1507_pp5_iter9_reg <= i_reg_1507_pp5_iter8_reg;
        icmp_ln168_reg_6202 <= icmp_ln168_fu_3485_p2;
        icmp_ln168_reg_6202_pp5_iter10_reg <= icmp_ln168_reg_6202_pp5_iter9_reg;
        icmp_ln168_reg_6202_pp5_iter11_reg <= icmp_ln168_reg_6202_pp5_iter10_reg;
        icmp_ln168_reg_6202_pp5_iter12_reg <= icmp_ln168_reg_6202_pp5_iter11_reg;
        icmp_ln168_reg_6202_pp5_iter13_reg <= icmp_ln168_reg_6202_pp5_iter12_reg;
        icmp_ln168_reg_6202_pp5_iter14_reg <= icmp_ln168_reg_6202_pp5_iter13_reg;
        icmp_ln168_reg_6202_pp5_iter15_reg <= icmp_ln168_reg_6202_pp5_iter14_reg;
        icmp_ln168_reg_6202_pp5_iter16_reg <= icmp_ln168_reg_6202_pp5_iter15_reg;
        icmp_ln168_reg_6202_pp5_iter17_reg <= icmp_ln168_reg_6202_pp5_iter16_reg;
        icmp_ln168_reg_6202_pp5_iter18_reg <= icmp_ln168_reg_6202_pp5_iter17_reg;
        icmp_ln168_reg_6202_pp5_iter19_reg <= icmp_ln168_reg_6202_pp5_iter18_reg;
        icmp_ln168_reg_6202_pp5_iter1_reg <= icmp_ln168_reg_6202;
        icmp_ln168_reg_6202_pp5_iter20_reg <= icmp_ln168_reg_6202_pp5_iter19_reg;
        icmp_ln168_reg_6202_pp5_iter21_reg <= icmp_ln168_reg_6202_pp5_iter20_reg;
        icmp_ln168_reg_6202_pp5_iter22_reg <= icmp_ln168_reg_6202_pp5_iter21_reg;
        icmp_ln168_reg_6202_pp5_iter2_reg <= icmp_ln168_reg_6202_pp5_iter1_reg;
        icmp_ln168_reg_6202_pp5_iter3_reg <= icmp_ln168_reg_6202_pp5_iter2_reg;
        icmp_ln168_reg_6202_pp5_iter4_reg <= icmp_ln168_reg_6202_pp5_iter3_reg;
        icmp_ln168_reg_6202_pp5_iter5_reg <= icmp_ln168_reg_6202_pp5_iter4_reg;
        icmp_ln168_reg_6202_pp5_iter6_reg <= icmp_ln168_reg_6202_pp5_iter5_reg;
        icmp_ln168_reg_6202_pp5_iter7_reg <= icmp_ln168_reg_6202_pp5_iter6_reg;
        icmp_ln168_reg_6202_pp5_iter8_reg <= icmp_ln168_reg_6202_pp5_iter7_reg;
        icmp_ln168_reg_6202_pp5_iter9_reg <= icmp_ln168_reg_6202_pp5_iter8_reg;
        icmp_ln174_reg_6257_pp5_iter18_reg <= icmp_ln174_reg_6257;
        icmp_ln174_reg_6257_pp5_iter19_reg <= icmp_ln174_reg_6257_pp5_iter18_reg;
        icmp_ln174_reg_6257_pp5_iter20_reg <= icmp_ln174_reg_6257_pp5_iter19_reg;
        or_ln208_1_reg_6240_pp5_iter10_reg <= or_ln208_1_reg_6240_pp5_iter9_reg;
        or_ln208_1_reg_6240_pp5_iter11_reg <= or_ln208_1_reg_6240_pp5_iter10_reg;
        or_ln208_1_reg_6240_pp5_iter12_reg <= or_ln208_1_reg_6240_pp5_iter11_reg;
        or_ln208_1_reg_6240_pp5_iter13_reg <= or_ln208_1_reg_6240_pp5_iter12_reg;
        or_ln208_1_reg_6240_pp5_iter14_reg <= or_ln208_1_reg_6240_pp5_iter13_reg;
        or_ln208_1_reg_6240_pp5_iter15_reg <= or_ln208_1_reg_6240_pp5_iter14_reg;
        or_ln208_1_reg_6240_pp5_iter16_reg <= or_ln208_1_reg_6240_pp5_iter15_reg;
        or_ln208_1_reg_6240_pp5_iter17_reg <= or_ln208_1_reg_6240_pp5_iter16_reg;
        or_ln208_1_reg_6240_pp5_iter18_reg <= or_ln208_1_reg_6240_pp5_iter17_reg;
        or_ln208_1_reg_6240_pp5_iter19_reg <= or_ln208_1_reg_6240_pp5_iter18_reg;
        or_ln208_1_reg_6240_pp5_iter1_reg <= or_ln208_1_reg_6240;
        or_ln208_1_reg_6240_pp5_iter2_reg <= or_ln208_1_reg_6240_pp5_iter1_reg;
        or_ln208_1_reg_6240_pp5_iter3_reg <= or_ln208_1_reg_6240_pp5_iter2_reg;
        or_ln208_1_reg_6240_pp5_iter4_reg <= or_ln208_1_reg_6240_pp5_iter3_reg;
        or_ln208_1_reg_6240_pp5_iter5_reg <= or_ln208_1_reg_6240_pp5_iter4_reg;
        or_ln208_1_reg_6240_pp5_iter6_reg <= or_ln208_1_reg_6240_pp5_iter5_reg;
        or_ln208_1_reg_6240_pp5_iter7_reg <= or_ln208_1_reg_6240_pp5_iter6_reg;
        or_ln208_1_reg_6240_pp5_iter8_reg <= or_ln208_1_reg_6240_pp5_iter7_reg;
        or_ln208_1_reg_6240_pp5_iter9_reg <= or_ln208_1_reg_6240_pp5_iter8_reg;
        or_ln208_2_reg_6244_pp5_iter10_reg <= or_ln208_2_reg_6244_pp5_iter9_reg;
        or_ln208_2_reg_6244_pp5_iter11_reg <= or_ln208_2_reg_6244_pp5_iter10_reg;
        or_ln208_2_reg_6244_pp5_iter12_reg <= or_ln208_2_reg_6244_pp5_iter11_reg;
        or_ln208_2_reg_6244_pp5_iter13_reg <= or_ln208_2_reg_6244_pp5_iter12_reg;
        or_ln208_2_reg_6244_pp5_iter14_reg <= or_ln208_2_reg_6244_pp5_iter13_reg;
        or_ln208_2_reg_6244_pp5_iter15_reg <= or_ln208_2_reg_6244_pp5_iter14_reg;
        or_ln208_2_reg_6244_pp5_iter16_reg <= or_ln208_2_reg_6244_pp5_iter15_reg;
        or_ln208_2_reg_6244_pp5_iter17_reg <= or_ln208_2_reg_6244_pp5_iter16_reg;
        or_ln208_2_reg_6244_pp5_iter18_reg <= or_ln208_2_reg_6244_pp5_iter17_reg;
        or_ln208_2_reg_6244_pp5_iter19_reg <= or_ln208_2_reg_6244_pp5_iter18_reg;
        or_ln208_2_reg_6244_pp5_iter1_reg <= or_ln208_2_reg_6244;
        or_ln208_2_reg_6244_pp5_iter20_reg <= or_ln208_2_reg_6244_pp5_iter19_reg;
        or_ln208_2_reg_6244_pp5_iter2_reg <= or_ln208_2_reg_6244_pp5_iter1_reg;
        or_ln208_2_reg_6244_pp5_iter3_reg <= or_ln208_2_reg_6244_pp5_iter2_reg;
        or_ln208_2_reg_6244_pp5_iter4_reg <= or_ln208_2_reg_6244_pp5_iter3_reg;
        or_ln208_2_reg_6244_pp5_iter5_reg <= or_ln208_2_reg_6244_pp5_iter4_reg;
        or_ln208_2_reg_6244_pp5_iter6_reg <= or_ln208_2_reg_6244_pp5_iter5_reg;
        or_ln208_2_reg_6244_pp5_iter7_reg <= or_ln208_2_reg_6244_pp5_iter6_reg;
        or_ln208_2_reg_6244_pp5_iter8_reg <= or_ln208_2_reg_6244_pp5_iter7_reg;
        or_ln208_2_reg_6244_pp5_iter9_reg <= or_ln208_2_reg_6244_pp5_iter8_reg;
        or_ln208_3_reg_6248_pp5_iter10_reg <= or_ln208_3_reg_6248_pp5_iter9_reg;
        or_ln208_3_reg_6248_pp5_iter11_reg <= or_ln208_3_reg_6248_pp5_iter10_reg;
        or_ln208_3_reg_6248_pp5_iter12_reg <= or_ln208_3_reg_6248_pp5_iter11_reg;
        or_ln208_3_reg_6248_pp5_iter13_reg <= or_ln208_3_reg_6248_pp5_iter12_reg;
        or_ln208_3_reg_6248_pp5_iter14_reg <= or_ln208_3_reg_6248_pp5_iter13_reg;
        or_ln208_3_reg_6248_pp5_iter15_reg <= or_ln208_3_reg_6248_pp5_iter14_reg;
        or_ln208_3_reg_6248_pp5_iter16_reg <= or_ln208_3_reg_6248_pp5_iter15_reg;
        or_ln208_3_reg_6248_pp5_iter17_reg <= or_ln208_3_reg_6248_pp5_iter16_reg;
        or_ln208_3_reg_6248_pp5_iter18_reg <= or_ln208_3_reg_6248_pp5_iter17_reg;
        or_ln208_3_reg_6248_pp5_iter19_reg <= or_ln208_3_reg_6248_pp5_iter18_reg;
        or_ln208_3_reg_6248_pp5_iter1_reg <= or_ln208_3_reg_6248;
        or_ln208_3_reg_6248_pp5_iter20_reg <= or_ln208_3_reg_6248_pp5_iter19_reg;
        or_ln208_3_reg_6248_pp5_iter21_reg <= or_ln208_3_reg_6248_pp5_iter20_reg;
        or_ln208_3_reg_6248_pp5_iter2_reg <= or_ln208_3_reg_6248_pp5_iter1_reg;
        or_ln208_3_reg_6248_pp5_iter3_reg <= or_ln208_3_reg_6248_pp5_iter2_reg;
        or_ln208_3_reg_6248_pp5_iter4_reg <= or_ln208_3_reg_6248_pp5_iter3_reg;
        or_ln208_3_reg_6248_pp5_iter5_reg <= or_ln208_3_reg_6248_pp5_iter4_reg;
        or_ln208_3_reg_6248_pp5_iter6_reg <= or_ln208_3_reg_6248_pp5_iter5_reg;
        or_ln208_3_reg_6248_pp5_iter7_reg <= or_ln208_3_reg_6248_pp5_iter6_reg;
        or_ln208_3_reg_6248_pp5_iter8_reg <= or_ln208_3_reg_6248_pp5_iter7_reg;
        or_ln208_3_reg_6248_pp5_iter9_reg <= or_ln208_3_reg_6248_pp5_iter8_reg;
        or_ln208_reg_6236_pp5_iter10_reg <= or_ln208_reg_6236_pp5_iter9_reg;
        or_ln208_reg_6236_pp5_iter11_reg <= or_ln208_reg_6236_pp5_iter10_reg;
        or_ln208_reg_6236_pp5_iter12_reg <= or_ln208_reg_6236_pp5_iter11_reg;
        or_ln208_reg_6236_pp5_iter13_reg <= or_ln208_reg_6236_pp5_iter12_reg;
        or_ln208_reg_6236_pp5_iter14_reg <= or_ln208_reg_6236_pp5_iter13_reg;
        or_ln208_reg_6236_pp5_iter15_reg <= or_ln208_reg_6236_pp5_iter14_reg;
        or_ln208_reg_6236_pp5_iter16_reg <= or_ln208_reg_6236_pp5_iter15_reg;
        or_ln208_reg_6236_pp5_iter17_reg <= or_ln208_reg_6236_pp5_iter16_reg;
        or_ln208_reg_6236_pp5_iter18_reg <= or_ln208_reg_6236_pp5_iter17_reg;
        or_ln208_reg_6236_pp5_iter1_reg <= or_ln208_reg_6236;
        or_ln208_reg_6236_pp5_iter2_reg <= or_ln208_reg_6236_pp5_iter1_reg;
        or_ln208_reg_6236_pp5_iter3_reg <= or_ln208_reg_6236_pp5_iter2_reg;
        or_ln208_reg_6236_pp5_iter4_reg <= or_ln208_reg_6236_pp5_iter3_reg;
        or_ln208_reg_6236_pp5_iter5_reg <= or_ln208_reg_6236_pp5_iter4_reg;
        or_ln208_reg_6236_pp5_iter6_reg <= or_ln208_reg_6236_pp5_iter5_reg;
        or_ln208_reg_6236_pp5_iter7_reg <= or_ln208_reg_6236_pp5_iter6_reg;
        or_ln208_reg_6236_pp5_iter8_reg <= or_ln208_reg_6236_pp5_iter7_reg;
        or_ln208_reg_6236_pp5_iter9_reg <= or_ln208_reg_6236_pp5_iter8_reg;
        tmp_21_reg_6218_pp5_iter10_reg <= tmp_21_reg_6218_pp5_iter9_reg;
        tmp_21_reg_6218_pp5_iter11_reg <= tmp_21_reg_6218_pp5_iter10_reg;
        tmp_21_reg_6218_pp5_iter12_reg <= tmp_21_reg_6218_pp5_iter11_reg;
        tmp_21_reg_6218_pp5_iter13_reg <= tmp_21_reg_6218_pp5_iter12_reg;
        tmp_21_reg_6218_pp5_iter14_reg <= tmp_21_reg_6218_pp5_iter13_reg;
        tmp_21_reg_6218_pp5_iter15_reg <= tmp_21_reg_6218_pp5_iter14_reg;
        tmp_21_reg_6218_pp5_iter16_reg <= tmp_21_reg_6218_pp5_iter15_reg;
        tmp_21_reg_6218_pp5_iter17_reg <= tmp_21_reg_6218_pp5_iter16_reg;
        tmp_21_reg_6218_pp5_iter18_reg <= tmp_21_reg_6218_pp5_iter17_reg;
        tmp_21_reg_6218_pp5_iter19_reg <= tmp_21_reg_6218_pp5_iter18_reg;
        tmp_21_reg_6218_pp5_iter1_reg <= tmp_21_reg_6218;
        tmp_21_reg_6218_pp5_iter2_reg <= tmp_21_reg_6218_pp5_iter1_reg;
        tmp_21_reg_6218_pp5_iter3_reg <= tmp_21_reg_6218_pp5_iter2_reg;
        tmp_21_reg_6218_pp5_iter4_reg <= tmp_21_reg_6218_pp5_iter3_reg;
        tmp_21_reg_6218_pp5_iter5_reg <= tmp_21_reg_6218_pp5_iter4_reg;
        tmp_21_reg_6218_pp5_iter6_reg <= tmp_21_reg_6218_pp5_iter5_reg;
        tmp_21_reg_6218_pp5_iter7_reg <= tmp_21_reg_6218_pp5_iter6_reg;
        tmp_21_reg_6218_pp5_iter8_reg <= tmp_21_reg_6218_pp5_iter7_reg;
        tmp_21_reg_6218_pp5_iter9_reg <= tmp_21_reg_6218_pp5_iter8_reg;
        tmp_22_reg_6230_pp5_iter10_reg <= tmp_22_reg_6230_pp5_iter9_reg;
        tmp_22_reg_6230_pp5_iter11_reg <= tmp_22_reg_6230_pp5_iter10_reg;
        tmp_22_reg_6230_pp5_iter12_reg <= tmp_22_reg_6230_pp5_iter11_reg;
        tmp_22_reg_6230_pp5_iter13_reg <= tmp_22_reg_6230_pp5_iter12_reg;
        tmp_22_reg_6230_pp5_iter14_reg <= tmp_22_reg_6230_pp5_iter13_reg;
        tmp_22_reg_6230_pp5_iter15_reg <= tmp_22_reg_6230_pp5_iter14_reg;
        tmp_22_reg_6230_pp5_iter16_reg <= tmp_22_reg_6230_pp5_iter15_reg;
        tmp_22_reg_6230_pp5_iter17_reg <= tmp_22_reg_6230_pp5_iter16_reg;
        tmp_22_reg_6230_pp5_iter18_reg <= tmp_22_reg_6230_pp5_iter17_reg;
        tmp_22_reg_6230_pp5_iter19_reg <= tmp_22_reg_6230_pp5_iter18_reg;
        tmp_22_reg_6230_pp5_iter1_reg <= tmp_22_reg_6230;
        tmp_22_reg_6230_pp5_iter2_reg <= tmp_22_reg_6230_pp5_iter1_reg;
        tmp_22_reg_6230_pp5_iter3_reg <= tmp_22_reg_6230_pp5_iter2_reg;
        tmp_22_reg_6230_pp5_iter4_reg <= tmp_22_reg_6230_pp5_iter3_reg;
        tmp_22_reg_6230_pp5_iter5_reg <= tmp_22_reg_6230_pp5_iter4_reg;
        tmp_22_reg_6230_pp5_iter6_reg <= tmp_22_reg_6230_pp5_iter5_reg;
        tmp_22_reg_6230_pp5_iter7_reg <= tmp_22_reg_6230_pp5_iter6_reg;
        tmp_22_reg_6230_pp5_iter8_reg <= tmp_22_reg_6230_pp5_iter7_reg;
        tmp_22_reg_6230_pp5_iter9_reg <= tmp_22_reg_6230_pp5_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln204_12_reg_6549 <= grp_fu_4561_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        add_ln204_4_reg_6414 <= grp_fu_4473_p3;
        arrayidx1922_1_1_promoted669_fu_308 <= ap_sig_allocacmp_arrayidx1922_2_1_promoted718_load;
        arrayidx1922_3401_promoted648_fu_296 <= ap_sig_allocacmp_arrayidx1922_1_3_promoted697_load;
        arrayidx2284_promoted613_fu_276 <= grp_fu_4456_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        add_ln204_8_reg_6499 <= grp_fu_4529_p3;
        arrayidx1922_1_3_promoted697_fu_324 <= arrayidx1922_2_3_promoted746_fu_352;
        arrayidx1922_2_1_promoted718_fu_336 <= select_ln174_1_fu_3963_p3;
        arrayidx2284_1_1_promoted676_fu_312 <= grp_fu_4521_p3;
        arrayidx2284_2378_promoted641_fu_292 <= grp_fu_4513_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter18 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        add_ln204_reg_6354 <= grp_fu_4425_p3;
        arrayidx1922_1_promoted655_fu_300 <= ap_sig_allocacmp_arrayidx1922_2_promoted704_load;
        arrayidx1922_2374_promoted634_fu_288 <= ap_sig_allocacmp_arrayidx1922_1_2_promoted683_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        add_ln205_1_reg_6409 <= add_ln205_1_fu_3857_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        add_ln205_reg_6349 <= add_ln205_fu_3788_p2;
        empty_54_reg_6323 <= empty_54_fu_3763_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (or_ln208_3_reg_6248_pp5_iter20_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln216_7_reg_6569 <= add_ln216_7_fu_4092_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln81_2_reg_5053 <= add_ln81_2_fu_1877_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln88_reg_5160 <= add_ln88_fu_2020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter18 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter17_reg == 1'd0))) begin
        arrayidx1922_1347_promoted620_fu_280 <= ap_sig_allocacmp_arrayidx1922_1_1_promoted669_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        arrayidx1922_1_2_promoted683_fu_316 <= ap_sig_allocacmp_arrayidx1922_2_2_promoted732_load;
        arrayidx1922_2_promoted704_fu_328 <= select_ln174_2_fu_3896_p3;
        arrayidx2284_1351_promoted627_fu_284 <= grp_fu_4497_p3;
        arrayidx2284_1_promoted662_fu_304 <= grp_fu_4505_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter20_reg == 1'd0))) begin
        arrayidx1922_2_2_promoted732_fu_344 <= select_ln174_fu_4016_p3;
        arrayidx1922_2_3_promoted746_fu_352 <= data_l1_0_0_q0;
        arrayidx2284_1_2_promoted690_fu_320 <= grp_fu_4537_p3;
        arrayidx2284_2_promoted711_fu_332 <= grp_fu_4545_p3;
        data_l1_0_0_load_reg_6519 <= data_l1_0_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter17 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter17_reg == 1'd0))) begin
        arrayidx1922_promoted606_fu_272 <= ap_sig_allocacmp_arrayidx1922_1_promoted655_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter20_reg == 1'd0))) begin
        arrayidx2284_2_1_promoted725_fu_340 <= grp_fu_4553_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter21_reg == 1'd0))) begin
        arrayidx2284_2_2_promoted739_fu_348 <= grp_fu_4569_p3;
        arrayidx2284_3_promoted753_fu_356 <= grp_fu_4577_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter22 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter21_reg == 1'd0))) begin
        arrayidx2284_3_1_promoted760_fu_360 <= grp_fu_4585_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter22 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter22_reg == 1'd0))) begin
        arrayidx2284_3_2_promoted767_fu_364 <= grp_fu_4593_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv79_reg_5270 <= conv79_fu_2164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (tmp_21_reg_6218_pp5_iter19_reg == 1'd0) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        data_l1_2_0_load_reg_6444 <= data_l1_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_fu_2014_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        empty_43_reg_5165 <= empty_43_fu_2030_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_11001))) begin
        empty_54_reg_6323_pp5_iter19_reg <= empty_54_reg_6323;
        empty_54_reg_6323_pp5_iter20_reg <= empty_54_reg_6323_pp5_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001))) begin
        i_1_reg_6252 <= i_1_fu_3673_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln135_reg_6013 <= icmp_ln135_fu_3179_p2;
        icmp_ln135_reg_6013_pp4_iter1_reg <= icmp_ln135_reg_6013;
        icmp_ln137_1_reg_6022_pp4_iter1_reg <= icmp_ln137_1_reg_6022;
        select_ln135_1_reg_6030_pp4_iter1_reg <= select_ln135_1_reg_6030;
        select_ln135_5_reg_6039_pp4_iter1_reg <= select_ln135_5_reg_6039;
        select_ln137_reg_6051_pp4_iter1_reg <= select_ln137_reg_6051;
        trunc_ln144_reg_6057_pp4_iter1_reg <= trunc_ln144_reg_6057;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_3179_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln137_1_reg_6022 <= icmp_ln137_1_fu_3190_p2;
        select_ln135_1_reg_6030 <= select_ln135_1_fu_3205_p3;
        select_ln135_5_reg_6039 <= select_ln135_5_fu_3229_p3;
        select_ln137_reg_6051 <= select_ln137_fu_3250_p3;
        trunc_ln144_reg_6057 <= trunc_ln144_fu_3258_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter16_reg == 1'd0))) begin
        icmp_ln174_reg_6257 <= icmp_ln174_fu_3694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln230_reg_6604 <= icmp_ln230_fu_4138_p2;
        icmp_ln230_reg_6604_pp6_iter1_reg <= icmp_ln230_reg_6604;
        icmp_ln231_reg_6613_pp6_iter1_reg <= icmp_ln231_reg_6613;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln230_reg_6604_pp6_iter2_reg <= icmp_ln230_reg_6604_pp6_iter1_reg;
        icmp_ln230_reg_6604_pp6_iter3_reg <= icmp_ln230_reg_6604_pp6_iter2_reg;
        select_ln231_1_reg_6636_pp6_iter3_reg <= select_ln231_1_reg_6636;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln230_fu_4138_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln231_reg_6613 <= icmp_ln231_fu_4149_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        icmp_ln232_reg_6599 <= icmp_ln232_fu_4133_p2;
        mul_ln230_reg_6594 <= grp_fu_4300_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln89_reg_5278 <= icmp_ln89_fu_2168_p2;
        select_ln89_reg_5287_pp3_iter1_reg <= select_ln89_reg_5287;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_2231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        lshr_ln116_10_reg_5607 <= {{add_ln117_11_fu_2622_p2[10:2]}};
        lshr_ln116_11_reg_5612 <= {{add_ln117_12_fu_2638_p2[10:2]}};
        lshr_ln116_12_reg_5617 <= {{add_ln117_13_fu_2654_p2[10:2]}};
        lshr_ln116_13_reg_5622 <= {{add_ln117_14_fu_2670_p2[10:2]}};
        lshr_ln116_14_reg_5627 <= {{add_ln117_15_fu_2686_p2[10:2]}};
        lshr_ln116_2_reg_5562 <= {{add_ln117_2_fu_2478_p2[10:2]}};
        lshr_ln116_3_reg_5567 <= {{add_ln117_3_fu_2494_p2[10:2]}};
        lshr_ln116_4_reg_5572 <= {{add_ln117_4_fu_2510_p2[10:2]}};
        lshr_ln116_5_reg_5577 <= {{add_ln117_5_fu_2526_p2[10:2]}};
        lshr_ln116_6_reg_5582 <= {{add_ln117_6_fu_2542_p2[10:2]}};
        lshr_ln116_7_reg_5587 <= {{add_ln117_7_fu_2558_p2[10:2]}};
        lshr_ln116_8_reg_5592 <= {{add_ln117_8_fu_2574_p2[10:2]}};
        lshr_ln116_9_reg_5597 <= {{add_ln117_9_fu_2590_p2[10:2]}};
        lshr_ln116_s_reg_5602 <= {{add_ln117_10_fu_2606_p2[10:2]}};
        select_ln100_1_reg_5405 <= select_ln100_1_fu_2261_p3;
        select_ln100_reg_5400 <= select_ln100_fu_2247_p3;
        trunc_ln100_10_reg_5466 <= trunc_ln100_10_fu_2373_p1;
        trunc_ln100_11_reg_5471 <= trunc_ln100_11_fu_2382_p1;
        trunc_ln100_12_reg_5476 <= trunc_ln100_12_fu_2391_p1;
        trunc_ln100_13_reg_5481 <= trunc_ln100_13_fu_2400_p1;
        trunc_ln100_14_reg_5486 <= trunc_ln100_14_fu_2409_p1;
        trunc_ln100_15_reg_5491 <= trunc_ln100_15_fu_2418_p1;
        trunc_ln100_1_reg_5421 <= trunc_ln100_1_fu_2292_p1;
        trunc_ln100_2_reg_5426 <= trunc_ln100_2_fu_2301_p1;
        trunc_ln100_3_reg_5431 <= trunc_ln100_3_fu_2310_p1;
        trunc_ln100_4_reg_5436 <= trunc_ln100_4_fu_2319_p1;
        trunc_ln100_5_reg_5441 <= trunc_ln100_5_fu_2328_p1;
        trunc_ln100_6_reg_5446 <= trunc_ln100_6_fu_2337_p1;
        trunc_ln100_7_reg_5451 <= trunc_ln100_7_fu_2346_p1;
        trunc_ln100_8_reg_5456 <= trunc_ln100_8_fu_2355_p1;
        trunc_ln100_9_reg_5461 <= trunc_ln100_9_fu_2364_p1;
        trunc_ln100_reg_5416 <= trunc_ln100_fu_2283_p1;
        trunc_ln117_reg_5501 <= trunc_ln117_fu_2426_p1;
        zext_ln100_1_reg_5411[7 : 0] <= zext_ln100_1_fu_2269_p1[7 : 0];
        zext_ln102_reg_5496[7 : 0] <= zext_ln102_fu_2422_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_1687_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln1_reg_4755 <= {{k_1_reg_1320[10:2]}};
        trunc_ln74_reg_4751 <= trunc_ln74_fu_1698_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln76_fu_1735_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lshr_ln2_reg_4783 <= {{k_2_reg_1331[10:2]}};
        trunc_ln78_reg_4779 <= trunc_ln78_fu_1746_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_1631_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln_reg_4716 <= {{k_reg_1309[7:2]}};
        trunc_ln70_reg_4712 <= trunc_ln70_fu_1642_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul42_reg_4737 <= grp_fu_4289_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul55_reg_4765 <= grp_fu_4295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_fu_1872_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        mul_ln81_1_reg_5082 <= mul_ln81_1_fu_1927_p2;
        mul_ln81_2_reg_5093 <= mul_ln81_2_fu_1936_p2;
        mul_ln81_3_reg_5101 <= mul_ln81_3_fu_1951_p2;
        mul_ln81_4_reg_5109 <= mul_ln81_4_fu_1966_p2;
        mul_ln81_5_reg_5117 <= mul_ln81_5_fu_1981_p2;
        mul_ln81_reg_5075 <= mul_ln81_fu_1922_p2;
        p_cast16_reg_5131[7 : 2] <= p_cast16_fu_1994_p1[7 : 2];
        p_mid_reg_5070[7 : 2] <= p_mid_fu_1910_p3[7 : 2];
        select_ln81_1_reg_5065 <= select_ln81_1_fu_1902_p3;
        select_ln81_reg_5058 <= select_ln81_fu_1888_p3;
        tmp_20_reg_5125[7 : 2] <= tmp_20_fu_1986_p3[7 : 2];
        zext_ln88_reg_5139[7 : 2] <= zext_ln88_fu_2004_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_fu_3485_p2 == 1'd0))) begin
        or_ln208_1_reg_6240 <= or_ln208_1_fu_3617_p2;
        or_ln208_2_reg_6244 <= or_ln208_2_fu_3642_p2;
        or_ln208_3_reg_6248 <= or_ln208_3_fu_3667_p2;
        or_ln208_reg_6236 <= or_ln208_fu_3586_p2;
        sext_ln172_1_reg_6212 <= sext_ln172_1_fu_3515_p1;
        sext_ln172_2_reg_6224 <= sext_ln172_2_fu_3538_p1;
        sext_ln172_reg_6206 <= sext_ln172_fu_3500_p1;
        tmp_21_reg_6218 <= add_ln172_1_fu_3509_p2[32'd16];
        tmp_22_reg_6230 <= add_ln172_2_fu_3532_p2[32'd16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        p_cast44_reg_6122 <= p_cast44_fu_3437_p1;
        p_cast52_reg_6127 <= p_cast52_fu_3440_p1;
        p_cast54_reg_6132 <= p_cast54_fu_3443_p1;
        p_cast58_reg_6137 <= p_cast58_fu_3446_p1;
        p_cast60_reg_6142 <= p_cast60_fu_3449_p1;
        p_cast64_reg_6147 <= p_cast64_fu_3452_p1;
        p_cast66_reg_6152 <= p_cast66_fu_3455_p1;
        p_cast69_reg_6157 <= p_cast69_fu_3458_p1;
        p_cast71_reg_6162 <= p_cast71_fu_3461_p1;
        p_cast73_reg_6167 <= p_cast73_fu_3464_p1;
        p_cast75_reg_6172 <= p_cast75_fu_3467_p1;
        p_cast78_reg_6177 <= p_cast78_fu_3470_p1;
        p_cast80_reg_6182 <= p_cast80_fu_3473_p1;
        p_cast82_reg_6187 <= p_cast82_fu_3476_p1;
        p_cast84_reg_6192 <= p_cast84_fu_3479_p1;
        sext_ln168_reg_6197 <= sext_ln168_fu_3482_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        p_mid131_reg_6003 <= p_mid131_fu_3160_p2;
        tmp_16_reg_5993 <= tmp_16_fu_3124_p6;
        tmp_17_reg_5998 <= tmp_17_fu_3146_p6;
        zext_ln100_reg_5987[7 : 0] <= zext_ln100_fu_3113_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln230_fu_4138_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln230_1_reg_6621 <= select_ln230_1_fu_4160_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln230_reg_6604_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln231_1_reg_6636 <= select_ln231_1_fu_4238_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2168_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln89_1_reg_5292 <= select_ln89_1_fu_2198_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_2168_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln89_reg_5287 <= select_ln89_fu_2184_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        sub250_cast_reg_6489 <= sub250_cast_fu_3969_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp1_reg_4726 <= tmp1_fu_1679_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_10_reg_5837 <= tmp_10_fu_2947_p6;
        tmp_11_reg_5842 <= tmp_11_fu_2969_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_12_reg_5887 <= tmp_12_fu_3005_p6;
        tmp_13_reg_5892 <= tmp_13_fu_3027_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_14_reg_5937 <= tmp_14_fu_3063_p6;
        tmp_15_reg_5942 <= tmp_15_fu_3085_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_3_reg_5637 <= tmp_3_fu_2715_p6;
        tmp_4_reg_5642 <= tmp_4_fu_2737_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_5_reg_5687 <= tmp_5_fu_2773_p6;
        tmp_6_reg_5692 <= tmp_6_fu_2795_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_7_reg_5737 <= tmp_7_fu_2831_p6;
        tmp_8_reg_5742 <= tmp_8_fu_2853_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_9_reg_5787 <= tmp_9_fu_2889_p6;
        tmp_s_reg_5792 <= tmp_s_fu_2911_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter17_reg == 1'd0))) begin
        wi_2_reg_6298 <= grp_fu_3679_p2;
        wi_3_reg_6303 <= grp_fu_3683_p2;
        wi_4_reg_6308 <= grp_fu_3687_p2;
    end
end

always @ (*) begin
    if ((icmp_ln68_fu_1631_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln72_fu_1687_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln76_fu_1735_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln89_fu_2168_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0))) begin
        ap_condition_pp4_exit_iter4_state45 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter4_state45 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln135_fu_3179_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter20 == 1'b1) & (ap_enable_reg_pp5_iter19 == 1'b0))) begin
        ap_condition_pp5_exit_iter20_state88 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter20_state88 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone) & (icmp_ln168_reg_6202 == 1'd1))) begin
        ap_condition_pp5_flush_enable = 1'b1;
    end else begin
        ap_condition_pp5_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        ap_condition_pp6_exit_iter2_state100 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter2_state100 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln230_fu_4138_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
        ap_condition_pp6_flush_enable = 1'b1;
    end else begin
        ap_condition_pp6_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter17 == 1'b0) & (ap_enable_reg_pp5_iter16 == 1'b0) & (ap_enable_reg_pp5_iter15 == 1'b0) & (ap_enable_reg_pp5_iter14 == 1'b0) & (ap_enable_reg_pp5_iter13 == 1'b0) & (ap_enable_reg_pp5_iter12 == 1'b0) & (ap_enable_reg_pp5_iter11 == 1'b0) & (ap_enable_reg_pp5_iter10 == 1'b0) & (ap_enable_reg_pp5_iter9 == 1'b0) & (ap_enable_reg_pp5_iter8 == 1'b0) & (ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter22 == 1'b0) & (ap_enable_reg_pp5_iter21 == 1'b0) & (ap_enable_reg_pp5_iter20 == 1'b0) & (ap_enable_reg_pp5_iter19 == 1'b0) & (ap_enable_reg_pp5_iter18 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_reg_5278 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_hi_phi_fu_1401_p4 = select_ln89_1_reg_5292;
    end else begin
        ap_phi_mux_hi_phi_fu_1401_p4 = hi_reg_1397;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln168_reg_6202 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_1511_p4 = i_1_reg_6252;
    end else begin
        ap_phi_mux_i_phi_fu_1511_p4 = i_reg_1507;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln230_reg_6604 == 1'd0) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_k_3_phi_fu_1534_p4 = select_ln230_1_reg_6621;
    end else begin
        ap_phi_mux_k_3_phi_fu_1534_p4 = k_3_reg_1530;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx1922_1_1_promoted669_load = ap_sig_allocacmp_arrayidx1922_2_1_promoted718_load;
    end else begin
        ap_sig_allocacmp_arrayidx1922_1_1_promoted669_load = arrayidx1922_1_1_promoted669_fu_308;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx1922_1_2_promoted683_load = ap_sig_allocacmp_arrayidx1922_2_2_promoted732_load;
    end else begin
        ap_sig_allocacmp_arrayidx1922_1_2_promoted683_load = arrayidx1922_1_2_promoted683_fu_316;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx1922_1_3_promoted697_load = arrayidx1922_2_3_promoted746_fu_352;
    end else begin
        ap_sig_allocacmp_arrayidx1922_1_3_promoted697_load = arrayidx1922_1_3_promoted697_fu_324;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter18 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx1922_1_promoted655_load = ap_sig_allocacmp_arrayidx1922_2_promoted704_load;
    end else begin
        ap_sig_allocacmp_arrayidx1922_1_promoted655_load = arrayidx1922_1_promoted655_fu_300;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx1922_2_1_promoted718_load = select_ln174_1_fu_3963_p3;
    end else begin
        ap_sig_allocacmp_arrayidx1922_2_1_promoted718_load = arrayidx1922_2_1_promoted718_fu_336;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter20_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx1922_2_2_promoted732_load = select_ln174_fu_4016_p3;
    end else begin
        ap_sig_allocacmp_arrayidx1922_2_2_promoted732_load = arrayidx1922_2_2_promoted732_fu_344;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx1922_2_promoted704_load = select_ln174_2_fu_3896_p3;
    end else begin
        ap_sig_allocacmp_arrayidx1922_2_promoted704_load = arrayidx1922_2_promoted704_fu_328;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_1351_promoted627_load = grp_fu_4497_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_1351_promoted627_load = arrayidx2284_1351_promoted627_fu_284;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_1_1_promoted676_load = grp_fu_4521_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_1_1_promoted676_load = arrayidx2284_1_1_promoted676_fu_312;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter20_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_1_2_promoted690_load = grp_fu_4537_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_1_2_promoted690_load = arrayidx2284_1_2_promoted690_fu_320;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_1_promoted662_load = grp_fu_4505_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_1_promoted662_load = arrayidx2284_1_promoted662_fu_304;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_2378_promoted641_load = grp_fu_4513_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_2378_promoted641_load = arrayidx2284_2378_promoted641_fu_292;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln168_reg_6202_pp5_iter20_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_2_1_promoted725_load = grp_fu_4553_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_2_1_promoted725_load = arrayidx2284_2_1_promoted725_fu_340;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter21_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_2_2_promoted739_load = grp_fu_4569_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_2_2_promoted739_load = arrayidx2284_2_2_promoted739_fu_348;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter20_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_2_promoted711_load = grp_fu_4545_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_2_promoted711_load = arrayidx2284_2_promoted711_fu_332;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter22 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln168_reg_6202_pp5_iter21_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_3_1_promoted760_load = grp_fu_4585_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_3_1_promoted760_load = arrayidx2284_3_1_promoted760_fu_360;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter22 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter22_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_3_2_promoted767_load = grp_fu_4593_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_3_2_promoted767_load = arrayidx2284_3_2_promoted767_fu_364;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (icmp_ln168_reg_6202_pp5_iter21_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_3_promoted753_load = grp_fu_4577_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_3_promoted753_load = arrayidx2284_3_promoted753_fu_356;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        ap_sig_allocacmp_arrayidx2284_promoted613_load = grp_fu_4456_p3;
    end else begin
        ap_sig_allocacmp_arrayidx2284_promoted613_load = arrayidx2284_promoted613_fu_276;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | (~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_0_address0 = newIndex122_cast_fu_2049_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_address0 = zext_ln70_fu_1664_p1;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln70_reg_4712 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_1_address0 = newIndex122_cast_fu_2049_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_address0 = zext_ln70_fu_1664_p1;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln70_reg_4712 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_2_address0 = newIndex122_cast_fu_2049_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_address0 = zext_ln70_fu_1664_p1;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln70_reg_4712 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_3_address0 = newIndex122_cast_fu_2049_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_address0 = zext_ln70_fu_1664_p1;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln70_reg_4712 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln230_reg_6604_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln230_reg_6604_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l1_0_0_address0 = zext_ln175_fu_3954_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_0_0_address0 = zext_ln142_fu_3430_p1;
    end else begin
        data_l1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        data_l1_0_0_ce0 = 1'b1;
    end else begin
        data_l1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln135_1_reg_6030_pp4_iter4_reg == 2'd0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_0_0_we0 = 1'b1;
    end else begin
        data_l1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l1_1_0_address0 = zext_ln175_1_fu_3959_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_1_0_address0 = zext_ln142_fu_3430_p1;
    end else begin
        data_l1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        data_l1_1_0_ce0 = 1'b1;
    end else begin
        data_l1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln135_1_reg_6030_pp4_iter4_reg == 2'd1) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_1_0_we0 = 1'b1;
    end else begin
        data_l1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l1_2_0_address0 = zext_ln175_2_fu_3837_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_2_0_address0 = zext_ln142_fu_3430_p1;
    end else begin
        data_l1_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        data_l1_2_0_ce0 = 1'b1;
    end else begin
        data_l1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln135_1_reg_6030_pp4_iter4_reg == 2'd2) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_2_0_we0 = 1'b1;
    end else begin
        data_l1_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l1_3_0_address0 = zext_ln175_3_fu_3841_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_3_0_address0 = zext_ln142_fu_3430_p1;
    end else begin
        data_l1_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        data_l1_3_0_ce0 = 1'b1;
    end else begin
        data_l1_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln135_1_reg_6030_pp4_iter4_reg == 2'd3) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_3_0_we0 = 1'b1;
    end else begin
        data_l1_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_0_address0 = zext_ln143_1_fu_3401_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_0_address0 = zext_ln78_fu_1768_p1;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_0_ce0 = 1'b1;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4779 == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_1_address0 = zext_ln143_1_fu_3401_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_1_address0 = zext_ln78_fu_1768_p1;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_1_ce0 = 1'b1;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4779 == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_2_address0 = zext_ln143_1_fu_3401_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_2_address0 = zext_ln78_fu_1768_p1;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_2_ce0 = 1'b1;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4779 == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_3_address0 = zext_ln143_1_fu_3401_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_3_address0 = zext_ln78_fu_1768_p1;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_3_ce0 = 1'b1;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4779 == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_1574_p0 = add_ln205_reg_6349;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter18 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        grp_fu_1574_p0 = add_ln205_fu_3788_p2;
    end else begin
        grp_fu_1574_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp5_iter19 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1))) begin
            grp_fu_1578_p0 = add_ln205_1_reg_6409;
        end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
            grp_fu_1578_p0 = add_ln205_1_fu_3857_p2;
        end else begin
            grp_fu_1578_p0 = 'bx;
        end
    end else begin
        grp_fu_1578_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp5_iter20 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1))) begin
            grp_fu_1582_p0 = sub250_cast_reg_6489;
        end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
            grp_fu_1582_p0 = sub250_cast_fu_3969_p2;
        end else begin
            grp_fu_1582_p0 = 'bx;
        end
    end else begin
        grp_fu_1582_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        grp_fu_4601_ce = 1'b1;
    end else begin
        grp_fu_4601_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_0_address0 = zext_ln215_7_fu_4108_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_0_address0 = zext_ln215_6_fu_4077_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_0_address0 = zext_ln93_fu_2224_p1;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_address1 = zext_ln233_fu_4264_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_0_address1 = zext_ln196_3_fu_4104_p1;
    end else begin
        output_l1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_0_ce0 = 1'b1;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_0_ce1 = 1'b1;
    end else begin
        output_l1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_0_d0 = add_ln204_12_reg_6549;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter21 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_0_d0 = grp_fu_4561_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_0_d0 = conv79_reg_5270;
    end else begin
        output_l1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_43_reg_5165 == 2'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter21 == 1'b1) & (or_ln208_3_reg_6248_pp5_iter20_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter21 == 1'b1) & (or_ln208_3_reg_6248_pp5_iter21_reg == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_0_we0 = 1'b1;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_1_address0 = zext_ln215_5_fu_4030_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_1_address0 = zext_ln215_4_fu_3982_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_1_address0 = zext_ln93_fu_2224_p1;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_address1 = zext_ln233_fu_4264_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_1_address1 = zext_ln196_2_fu_4026_p1;
    end else begin
        output_l1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_1_ce0 = 1'b1;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_1_ce1 = 1'b1;
    end else begin
        output_l1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_1_d0 = add_ln204_8_reg_6499;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_1_d0 = grp_fu_4529_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_1_d0 = conv79_reg_5270;
    end else begin
        output_l1_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_43_reg_5165 == 2'd1) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (or_ln208_2_reg_6244_pp5_iter19_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter20 == 1'b1) & (or_ln208_2_reg_6244_pp5_iter20_reg == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter20_reg == 1'd0)))) begin
        output_l1_1_we0 = 1'b1;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_2_address0 = zext_ln215_3_fu_3917_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_address0 = zext_ln215_2_fu_3863_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_2_address0 = zext_ln93_fu_2224_p1;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_address1 = zext_ln233_fu_4264_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_2_address1 = zext_ln196_1_fu_3913_p1;
    end else begin
        output_l1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_2_ce0 = 1'b1;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_2_ce1 = 1'b1;
    end else begin
        output_l1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_2_d0 = add_ln204_4_reg_6414;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_d0 = grp_fu_4473_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_2_d0 = conv79_reg_5270;
    end else begin
        output_l1_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_43_reg_5165 == 2'd2) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (or_ln208_1_reg_6240_pp5_iter18_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter19 == 1'b1) & (or_ln208_1_reg_6240_pp5_iter19_reg == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter19_reg == 1'd0)))) begin
        output_l1_2_we0 = 1'b1;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_address0 = zext_ln233_fu_4264_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_address0 = zext_ln215_1_fu_3852_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_3_address0 = zext_ln93_fu_2224_p1;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_address1 = zext_ln196_fu_3848_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter18 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_3_address1 = zext_ln215_fu_3795_p1;
    end else begin
        output_l1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_3_ce0 = 1'b1;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter18 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_3_ce1 = 1'b1;
    end else begin
        output_l1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_d0 = add_ln204_reg_6354;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_3_d0 = conv79_reg_5270;
    end else begin
        output_l1_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_43_reg_5165 == 2'd3) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1) & (or_ln208_reg_6236_pp5_iter18_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0)))) begin
        output_l1_3_we0 = 1'b1;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter18 == 1'b1) & (or_ln208_reg_6236_pp5_iter18_reg == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln168_reg_6202_pp5_iter18_reg == 1'd0))) begin
        output_l1_3_we1 = 1'b1;
    end else begin
        output_l1_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address0 = zext_ln116_30_fu_3099_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address0 = zext_ln116_28_fu_3041_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address0 = zext_ln116_26_fu_2983_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address0 = zext_ln116_24_fu_2925_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address0 = zext_ln116_22_fu_2867_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address0 = zext_ln116_20_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address0 = zext_ln116_18_fu_2751_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address0 = zext_ln116_17_fu_2470_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = zext_ln74_fu_1720_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address1 = zext_ln116_31_fu_3106_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address1 = zext_ln116_29_fu_3048_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address1 = zext_ln116_27_fu_2990_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address1 = zext_ln116_25_fu_2932_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address1 = zext_ln116_23_fu_2874_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address1 = zext_ln116_21_fu_2816_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address1 = zext_ln116_19_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address1 = zext_ln116_16_fu_2446_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4751 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address0 = zext_ln116_30_fu_3099_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address0 = zext_ln116_28_fu_3041_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address0 = zext_ln116_26_fu_2983_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address0 = zext_ln116_24_fu_2925_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address0 = zext_ln116_22_fu_2867_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address0 = zext_ln116_20_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address0 = zext_ln116_18_fu_2751_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address0 = zext_ln116_17_fu_2470_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = zext_ln74_fu_1720_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address1 = zext_ln116_31_fu_3106_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address1 = zext_ln116_29_fu_3048_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address1 = zext_ln116_27_fu_2990_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address1 = zext_ln116_25_fu_2932_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address1 = zext_ln116_23_fu_2874_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address1 = zext_ln116_21_fu_2816_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address1 = zext_ln116_19_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address1 = zext_ln116_16_fu_2446_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4751 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address0 = zext_ln116_30_fu_3099_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address0 = zext_ln116_28_fu_3041_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address0 = zext_ln116_26_fu_2983_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address0 = zext_ln116_24_fu_2925_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address0 = zext_ln116_22_fu_2867_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address0 = zext_ln116_20_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address0 = zext_ln116_18_fu_2751_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address0 = zext_ln116_17_fu_2470_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = zext_ln74_fu_1720_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address1 = zext_ln116_31_fu_3106_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address1 = zext_ln116_29_fu_3048_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address1 = zext_ln116_27_fu_2990_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address1 = zext_ln116_25_fu_2932_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address1 = zext_ln116_23_fu_2874_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address1 = zext_ln116_21_fu_2816_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address1 = zext_ln116_19_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address1 = zext_ln116_16_fu_2446_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4751 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address0 = zext_ln116_30_fu_3099_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address0 = zext_ln116_28_fu_3041_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address0 = zext_ln116_26_fu_2983_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address0 = zext_ln116_24_fu_2925_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address0 = zext_ln116_22_fu_2867_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address0 = zext_ln116_20_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address0 = zext_ln116_18_fu_2751_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address0 = zext_ln116_17_fu_2470_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = zext_ln74_fu_1720_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address1 = zext_ln116_31_fu_3106_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address1 = zext_ln116_29_fu_3048_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address1 = zext_ln116_27_fu_2990_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address1 = zext_ln116_25_fu_2932_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address1 = zext_ln116_23_fu_2874_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address1 = zext_ln116_21_fu_2816_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address1 = zext_ln116_19_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address1 = zext_ln116_16_fu_2446_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4751 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln68_fu_1631_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln68_fu_1631_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln72_fu_1687_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln72_fu_1687_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln76_fu_1735_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln76_fu_1735_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln81_fu_1872_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln88_fu_2014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2168_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2168_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln100_fu_2231_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter21 == 1'b0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (ap_enable_reg_pp5_iter19 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter21 == 1'b0) & (ap_enable_reg_pp5_iter20 == 1'b1) & (ap_enable_reg_pp5_iter19 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if ((~((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter22 == 1'b1) & (ap_enable_reg_pp5_iter21 == 1'b0) & (1'b0 == ap_block_pp5_stage1_subdone)) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter22 == 1'b1) & (ap_enable_reg_pp5_iter21 == 1'b0) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_cast_fu_1829_p1 = C_reg_4625;

assign C_fu_1590_p1 = bias_in_V_dout[7:0];

assign K_fu_1586_p1 = bias_in_V_dout[7:0];

assign RS_fu_1623_p1 = bias_in_V_dout[7:0];

assign WH_cast_fu_1826_p1 = WH_reg_4632;

assign WH_fu_1594_p1 = bias_in_V_dout[7:0];

assign WH_in_fu_1598_p1 = bias_in_V_dout[7:0];

assign add_ln100_10_fu_2359_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_2_1_cast_reg_5372));

assign add_ln100_11_fu_2368_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_2_2_cast_reg_5332));

assign add_ln100_12_fu_2377_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_2_3_cast_reg_5377));

assign add_ln100_13_fu_2386_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_3_cast_reg_5322));

assign add_ln100_14_fu_2395_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_3_1_cast_reg_5382));

assign add_ln100_15_fu_2404_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_3_2_cast_reg_5337));

assign add_ln100_16_fu_2413_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_3_3_cast_reg_5387));

assign add_ln100_17_fu_2255_p2 = (8'd1 + r_reg_1430);

assign add_ln100_1_fu_2278_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_cast_reg_5342));

assign add_ln100_2_fu_2287_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_1325_cast_reg_5347));

assign add_ln100_3_fu_2296_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_2333_cast_reg_5352));

assign add_ln100_4_fu_2305_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_3341_cast_reg_5357));

assign add_ln100_5_fu_2314_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_1_cast_reg_5317));

assign add_ln100_6_fu_2323_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_1_1_cast_reg_5362));

assign add_ln100_7_fu_2332_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_1_2_cast_reg_5327));

assign add_ln100_8_fu_2341_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_1_3_cast_reg_5367));

assign add_ln100_9_fu_2350_p2 = ($signed(mul_ln100_fu_2273_p2) + $signed(add107_2_cast_reg_5312));

assign add_ln100_fu_2236_p2 = (indvar_flatten105_reg_1419 + 16'd1);

assign add_ln102_fu_4128_p2 = (select_ln100_reg_5400 + 8'd1);

assign add_ln116_10_fu_2997_p2 = (trunc_ln100_10_reg_5466 + trunc_ln117_reg_5501);

assign add_ln116_11_fu_3019_p2 = (trunc_ln100_11_reg_5471 + trunc_ln117_reg_5501);

assign add_ln116_12_fu_3055_p2 = (trunc_ln100_12_reg_5476 + trunc_ln117_reg_5501);

assign add_ln116_13_fu_3077_p2 = (trunc_ln100_13_reg_5481 + trunc_ln117_reg_5501);

assign add_ln116_14_fu_3116_p2 = (trunc_ln100_14_reg_5486 + trunc_ln117_reg_5501);

assign add_ln116_15_fu_3138_p2 = (trunc_ln100_15_reg_5491 + trunc_ln117_reg_5501);

assign add_ln116_1_fu_2729_p2 = (trunc_ln100_1_reg_5421 + trunc_ln117_reg_5501);

assign add_ln116_2_fu_2765_p2 = (trunc_ln100_2_reg_5426 + trunc_ln117_reg_5501);

assign add_ln116_3_fu_2787_p2 = (trunc_ln100_3_reg_5431 + trunc_ln117_reg_5501);

assign add_ln116_4_fu_2823_p2 = (trunc_ln100_4_reg_5436 + trunc_ln117_reg_5501);

assign add_ln116_5_fu_2845_p2 = (trunc_ln100_5_reg_5441 + trunc_ln117_reg_5501);

assign add_ln116_6_fu_2881_p2 = (trunc_ln100_6_reg_5446 + trunc_ln117_reg_5501);

assign add_ln116_7_fu_2903_p2 = (trunc_ln100_7_reg_5451 + trunc_ln117_reg_5501);

assign add_ln116_8_fu_2939_p2 = (trunc_ln100_8_reg_5456 + trunc_ln117_reg_5501);

assign add_ln116_9_fu_2961_p2 = (trunc_ln100_9_reg_5461 + trunc_ln117_reg_5501);

assign add_ln116_fu_2707_p2 = (trunc_ln100_reg_5416 + trunc_ln117_reg_5501);

assign add_ln117_10_fu_2606_p2 = (zext_ln102_fu_2422_p1 + add_ln100_11_fu_2368_p2);

assign add_ln117_11_fu_2622_p2 = (zext_ln102_fu_2422_p1 + add_ln100_12_fu_2377_p2);

assign add_ln117_12_fu_2638_p2 = (zext_ln102_fu_2422_p1 + add_ln100_13_fu_2386_p2);

assign add_ln117_13_fu_2654_p2 = (zext_ln102_fu_2422_p1 + add_ln100_14_fu_2395_p2);

assign add_ln117_14_fu_2670_p2 = (zext_ln102_fu_2422_p1 + add_ln100_15_fu_2404_p2);

assign add_ln117_15_fu_2686_p2 = (zext_ln102_fu_2422_p1 + add_ln100_16_fu_2413_p2);

assign add_ln117_1_fu_2454_p2 = (zext_ln102_fu_2422_p1 + add_ln100_2_fu_2287_p2);

assign add_ln117_2_fu_2478_p2 = (zext_ln102_fu_2422_p1 + add_ln100_3_fu_2296_p2);

assign add_ln117_3_fu_2494_p2 = (zext_ln102_fu_2422_p1 + add_ln100_4_fu_2305_p2);

assign add_ln117_4_fu_2510_p2 = (zext_ln102_fu_2422_p1 + add_ln100_5_fu_2314_p2);

assign add_ln117_5_fu_2526_p2 = (zext_ln102_fu_2422_p1 + add_ln100_6_fu_2323_p2);

assign add_ln117_6_fu_2542_p2 = (zext_ln102_fu_2422_p1 + add_ln100_7_fu_2332_p2);

assign add_ln117_7_fu_2558_p2 = (zext_ln102_fu_2422_p1 + add_ln100_8_fu_2341_p2);

assign add_ln117_8_fu_2574_p2 = (zext_ln102_fu_2422_p1 + add_ln100_9_fu_2350_p2);

assign add_ln117_9_fu_2590_p2 = (zext_ln102_fu_2422_p1 + add_ln100_10_fu_2359_p2);

assign add_ln117_fu_2430_p2 = (zext_ln102_fu_2422_p1 + add_ln100_1_fu_2278_p2);

assign add_ln135_1_fu_3195_p2 = (3'd1 + ci_reg_1463);

assign add_ln135_fu_3184_p2 = (18'd1 + indvar_flatten47_reg_1452);

assign add_ln137_1_fu_3363_p2 = (zext_ln102_reg_5496 + select_ln137_2_fu_3357_p3);

assign add_ln137_2_fu_3372_p2 = (trunc_ln137_fu_3368_p1 + trunc_ln117_reg_5501);

assign add_ln137_3_fu_3268_p2 = (indvar_flatten15_reg_1474 + 16'd1);

assign add_ln137_fu_3305_p2 = (8'd1 + select_ln135_fu_3291_p3);

assign add_ln138_fu_3262_p2 = (select_ln137_fu_3250_p3 + 8'd1);

assign add_ln141_1_fu_3348_p2 = ($signed(grp_fu_4400_p2) + $signed(p_mid131_reg_6003));

assign add_ln142_fu_3337_p2 = (select_ln137_1_fu_3320_p3 + wi_4_cast62_fu_3334_p1);

assign add_ln143_fu_3386_p2 = (add_ln137_2_fu_3372_p2 + trunc_ln144_reg_6057_pp4_iter3_reg);

assign add_ln144_fu_3380_p2 = (wi_4_cast_fu_3377_p1 + add_ln137_1_fu_3363_p2);

assign add_ln172_1_fu_3509_p2 = ($signed(17'd131070) + $signed(i_cast_fu_3490_p1));

assign add_ln172_2_fu_3532_p2 = ($signed(17'd131069) + $signed(i_cast_fu_3490_p1));

assign add_ln172_3_fu_4060_p2 = ($signed(9'd509) + $signed(empty_54_reg_6323_pp5_iter20_reg));

assign add_ln172_fu_3494_p2 = ($signed(17'd131071) + $signed(i_cast_fu_3490_p1));

assign add_ln198_6_fu_4085_p2 = (empty_54_reg_6323_pp5_iter20_reg + mul_ln81_1_reg_5082);

assign add_ln205_1_fu_3857_p2 = ($signed(empty_54_reg_6323) + $signed(9'd507));

assign add_ln205_fu_3788_p2 = ($signed(9'd506) + $signed(empty_54_fu_3763_p1));

assign add_ln216_6_fu_4072_p2 = (add_ln172_3_fu_4060_p2 + mul_ln81_1_reg_5082);

assign add_ln216_7_fu_4092_p2 = (add_ln172_3_fu_4060_p2 + mul_ln81_1_reg_5082);

assign add_ln230_1_fu_4154_p2 = (6'd1 + ap_phi_mux_k_3_phi_fu_1534_p4);

assign add_ln230_fu_4143_p2 = (indvar_flatten163_reg_1519 + 24'd1);

assign add_ln231_1_fu_4172_p2 = (19'd1 + indvar_flatten149_reg_1541);

assign add_ln231_fu_4215_p2 = (3'd1 + select_ln230_fu_4186_p3);

assign add_ln232_fu_4258_p2 = (16'd1 + select_ln231_fu_4226_p3);

assign add_ln68_fu_1636_p2 = (k_reg_1309 + 8'd1);

assign add_ln72_fu_1692_p2 = (k_1_reg_1320 + 32'd1);

assign add_ln76_fu_1740_p2 = (k_2_reg_1331 + 24'd1);

assign add_ln81_1_fu_1799_p2 = (zext_ln81_1_fu_1795_p1 + mul152_fu_1775_p2);

assign add_ln81_2_fu_1877_p2 = (indvar_flatten142_reg_1342 + 12'd1);

assign add_ln81_3_fu_1896_p2 = (ko_reg_1353 + 6'd1);

assign add_ln81_fu_1790_p2 = (9'd6 + zext_ln55_reg_4654);

assign add_ln82_fu_2702_p2 = (select_ln81_reg_5058 + 6'd1);

assign add_ln88_fu_2020_p2 = (ki_1_reg_1375 + 3'd1);

assign add_ln89_1_fu_2192_p2 = (ap_phi_mux_hi_phi_fu_1401_p4 + 8'd1);

assign add_ln89_fu_2173_p2 = (indvar_flatten_reg_1386 + 16'd1);

assign add_ln90_fu_2210_p2 = (select_ln89_fu_2184_p3 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd41];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln230_reg_6604_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln230_reg_6604_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln230_reg_6604_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state100_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state102_pp6_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln230_reg_6604_pp6_iter3_reg == 1'd0));
end

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp1_stage0_iter1 = (weight_in_V_empty_n == 1'b0);
end

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp2_stage0_iter1 = (data_in_V_empty_n == 1'b0);
end

assign ap_block_state24_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp5_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp5_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp5_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp5_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp5_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp5_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp5_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp5_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp5_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp5_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp5_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp5_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp5_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp5_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp5_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp5_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp5_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp5_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp5_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp5_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp5_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp5_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp5_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp5_stage1_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (bias_in_V_empty_n == 1'b0);
end

assign ap_block_state80_pp5_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp5_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp5_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp5_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp5_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp5_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp5_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp5_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp5_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp5_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp5_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp5_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp5_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp5_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign bound110_fu_1861_p0 = bound110_fu_1861_p00;

assign bound110_fu_1861_p00 = div68_cast_fu_1808_p4;

assign bound110_fu_1861_p1 = bound110_fu_1861_p10;

assign bound110_fu_1861_p10 = div66_cast_fu_1817_p4;

assign bound20_fu_1849_p1 = tmp_2_fu_1841_p3;

assign conv79_fu_2164_p1 = $signed(tmp_1_fu_2150_p6);

assign conv_out_V_din = p_Repl2_s_fu_4271_p6;

assign div66_cast_fu_1817_p4 = {{bias_in_V_read_reg_4609[7:2]}};

assign div68_cast_fu_1808_p4 = {{bias_in_V_read_1_reg_4620[7:2]}};

assign empty_41_fu_1832_p1 = tmp1_reg_4726[10:0];

assign empty_43_fu_2030_p1 = ki_1_reg_1375[1:0];

assign empty_44_fu_2034_p2 = (p_mid_reg_5070 + zext_ln88_1_fu_2026_p1);

assign empty_46_fu_2057_p2 = (tmp_20_reg_5125 | 8'd1);

assign empty_47_fu_2066_p2 = (tmp_20_reg_5125 | 8'd2);

assign empty_48_fu_3164_p1 = ci_reg_1463[1:0];

assign empty_52_fu_3201_p1 = add_ln135_1_fu_3195_p2[1:0];

assign empty_54_fu_3763_p1 = i_reg_1507_pp5_iter18_reg[8:0];

assign empty_57_fu_1998_p2 = (tmp_20_fu_1986_p3 | 8'd3);

assign grp_fu_1574_p2 = (grp_fu_1574_p0 + mul_ln81_1_reg_5082);

assign grp_fu_1578_p2 = (grp_fu_1578_p0 + mul_ln81_1_reg_5082);

assign grp_fu_1582_p2 = (grp_fu_1582_p0 + mul_ln81_1_reg_5082);

assign grp_fu_3504_p0 = $signed(add_ln172_fu_3494_p2);

assign grp_fu_3504_p1 = zext_ln57_reg_4665;

assign grp_fu_3519_p0 = add_ln172_1_fu_3509_p2;

assign grp_fu_3519_p1 = zext_ln57_reg_4665;

assign grp_fu_3542_p0 = add_ln172_2_fu_3532_p2;

assign grp_fu_3542_p1 = zext_ln57_reg_4665;

assign grp_fu_3679_p1 = zext_ln57_reg_4665;

assign grp_fu_3683_p1 = zext_ln57_reg_4665;

assign grp_fu_3687_p1 = zext_ln57_reg_4665;

assign grp_fu_4289_p0 = grp_fu_4289_p00;

assign grp_fu_4289_p00 = tmp1_fu_1679_p2;

assign grp_fu_4289_p1 = grp_fu_4289_p10;

assign grp_fu_4289_p10 = tmp_fu_1671_p2;

assign grp_fu_4295_p0 = grp_fu_4295_p00;

assign grp_fu_4295_p00 = tmp2_fu_1727_p2;

assign grp_fu_4295_p1 = zext_ln61_reg_4681;

assign grp_fu_4300_p0 = grp_fu_4300_p00;

assign grp_fu_4300_p00 = div66_cast_reg_4975;

assign grp_fu_4300_p1 = grp_fu_4300_p10;

assign grp_fu_4300_p10 = tmp_2_reg_5029;

assign grp_fu_4306_p0 = (p_cast16_reg_5131 + mul_ln81_4_reg_5109);

assign grp_fu_4311_p0 = (p_cast16_reg_5131 + mul_ln81_3_reg_5101);

assign grp_fu_4316_p0 = (p_cast16_reg_5131 + mul_ln81_5_reg_5117);

assign grp_fu_4321_p0 = (p_cast17_fu_2071_p1 + mul_ln81_3_reg_5101);

assign grp_fu_4326_p0 = (p_cast17_fu_2071_p1 + mul_ln81_4_reg_5109);

assign grp_fu_4331_p0 = (p_cast17_fu_2071_p1 + mul_ln81_5_reg_5117);

assign grp_fu_4336_p0 = (p_cast16_reg_5131 + mul_ln81_2_reg_5093);

assign grp_fu_4341_p0 = (p_cast18_fu_2062_p1 + mul_ln81_2_reg_5093);

assign grp_fu_4346_p0 = (p_cast17_fu_2071_p1 + mul_ln81_2_reg_5093);

assign grp_fu_4351_p0 = (zext_ln88_reg_5139 + mul_ln81_2_reg_5093);

assign grp_fu_4356_p0 = (p_cast18_fu_2062_p1 + mul_ln81_3_reg_5101);

assign grp_fu_4361_p0 = (zext_ln88_reg_5139 + mul_ln81_3_reg_5101);

assign grp_fu_4366_p0 = (p_cast18_fu_2062_p1 + mul_ln81_4_reg_5109);

assign grp_fu_4371_p0 = (zext_ln88_reg_5139 + mul_ln81_4_reg_5109);

assign grp_fu_4376_p0 = (p_cast18_fu_2062_p1 + mul_ln81_5_reg_5117);

assign grp_fu_4381_p0 = (zext_ln88_reg_5139 + mul_ln81_5_reg_5117);

assign grp_fu_4386_p0 = grp_fu_4386_p00;

assign grp_fu_4386_p00 = select_ln89_1_fu_2198_p3;

assign grp_fu_4386_p1 = WH_cast_reg_4980;

assign grp_fu_4386_p2 = (wi_cast_fu_2216_p1 + mul_ln81_1_reg_5082);

assign grp_fu_4394_p1 = grp_fu_4394_p10;

assign grp_fu_4394_p10 = tmp_18_fu_3168_p3;

assign grp_fu_4400_p1 = grp_fu_4400_p10;

assign grp_fu_4400_p10 = tmp_19_mid1_fu_3213_p3;

assign grp_fu_4407_p0 = zext_ln100_reg_5987;

assign grp_fu_4407_p1 = zext_ln137_fu_3282_p1;

assign grp_fu_4407_p2 = trunc_ln3_cast48_reg_4953;

assign grp_fu_4416_p0 = zext_ln100_reg_5987;

assign grp_fu_4416_p1 = zext_ln137_1_fu_3311_p1;

assign grp_fu_4416_p2 = trunc_ln3_cast48_reg_4953;

assign grp_fu_4416_p3 = ((icmp_ln137_1_reg_6022_pp4_iter2_reg[0:0] === 1'b1) ? grp_fu_4400_p2 : grp_fu_4394_p2);

assign grp_fu_4425_p0 = p_cast44_reg_6122;

assign grp_fu_4433_p0 = WH_cast_reg_4980;

assign grp_fu_4433_p2 = zext_ln173_fu_3770_p1;

assign grp_fu_4440_p0 = WH_cast_reg_4980;

assign grp_fu_4440_p2 = zext_ln173_1_fu_3777_p1;

assign grp_fu_4448_p0 = WH_cast_reg_4980;

assign grp_fu_4448_p2 = zext_ln173_2_fu_3784_p1;

assign grp_fu_4456_p1 = p_cast52_reg_6127;

assign grp_fu_4464_p2 = WH_cast_reg_4980;

assign grp_fu_4464_p3 = zext_ln173_2_fu_3784_p1;

assign grp_fu_4473_p0 = p_cast60_reg_6142;

assign grp_fu_4481_p2 = WH_cast_reg_4980;

assign grp_fu_4481_p3 = zext_ln173_1_fu_3777_p1;

assign grp_fu_4489_p2 = WH_cast_reg_4980;

assign grp_fu_4489_p3 = zext_ln173_fu_3770_p1;

assign grp_fu_4497_p1 = p_cast54_reg_6132;

assign grp_fu_4505_p1 = p_cast64_reg_6147;

assign grp_fu_4513_p1 = p_cast58_reg_6137;

assign grp_fu_4513_p2 = ((tmp_22_reg_6230_pp5_iter19_reg[0:0] === 1'b1) ? 32'd0 : output_l1_3_q1);

assign grp_fu_4521_p1 = p_cast66_reg_6152;

assign grp_fu_4529_p1 = p_cast71_reg_6162;

assign grp_fu_4537_p1 = p_cast69_reg_6157;

assign grp_fu_4537_p2 = ((tmp_21_reg_6218_pp5_iter19_reg[0:0] === 1'b1) ? 32'd0 : output_l1_2_q1);

assign grp_fu_4545_p1 = p_cast73_reg_6167;

assign grp_fu_4553_p1 = p_cast75_reg_6172;

assign grp_fu_4561_p1 = p_cast80_reg_6182;

assign grp_fu_4569_p1 = p_cast78_reg_6177;

assign grp_fu_4569_p2 = ((icmp_ln174_reg_6257_pp5_iter20_reg[0:0] === 1'b1) ? output_l1_1_q1 : 32'd0);

assign grp_fu_4577_p1 = p_cast82_reg_6187;

assign grp_fu_4585_p1 = p_cast84_reg_6192;

assign grp_fu_4593_p1 = sext_ln168_reg_6197;

assign grp_fu_4601_p0 = grp_fu_4601_p00;

assign grp_fu_4601_p00 = select_ln230_1_fu_4160_p3;

assign grp_fu_4601_p2 = select_ln231_fu_4226_p3[8:0];

assign i_1_fu_3673_p2 = (i_reg_1507 + 16'd1);

assign i_cast_fu_3490_p1 = ap_phi_mux_i_phi_fu_1511_p4;

assign icmp_ln100_fu_2231_p2 = ((indvar_flatten105_reg_1419 == tmp1_reg_4726) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_2242_p2 = ((s_reg_1441 == RS_reg_4691) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_3179_p2 = ((indvar_flatten47_reg_1452 == tmp_2_reg_5029) ? 1'b1 : 1'b0);

assign icmp_ln137_1_fu_3190_p2 = ((indvar_flatten15_reg_1474 == mul152_reg_4932) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_1867_p2 = ((WH_reg_4632 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_3224_p2 = ((wi_1_reg_1485 == WH_reg_4632) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_3485_p2 = ((ap_phi_mux_i_phi_fu_1511_p4 == add_ln81_1_reg_4960) ? 1'b1 : 1'b0);

assign icmp_ln174_fu_3694_p2 = ((i_reg_1507_pp5_iter16_reg != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln208_1_fu_3606_p2 = ((sub252_1_fu_3592_p2 < zext_ln81_reg_4940) ? 1'b1 : 1'b0);

assign icmp_ln208_2_fu_3631_p2 = ((sub250_fu_3555_p2 < zext_ln81_reg_4940) ? 1'b1 : 1'b0);

assign icmp_ln208_3_fu_3656_p2 = ((add_ln172_2_fu_3532_p2 < zext_ln81_reg_4940) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_3575_p2 = ((sub252_fu_3561_p2 < zext_ln81_reg_4940) ? 1'b1 : 1'b0);

assign icmp_ln230_fu_4138_p2 = ((indvar_flatten163_reg_1519 == mul_ln230_reg_6594) ? 1'b1 : 1'b0);

assign icmp_ln231_fu_4149_p2 = ((indvar_flatten149_reg_1541 == bound20_reg_5035) ? 1'b1 : 1'b0);

assign icmp_ln232_1_fu_4204_p2 = ((wh_reg_1563 == mul152_reg_4932) ? 1'b1 : 1'b0);

assign icmp_ln232_fu_4133_p2 = ((mul152_reg_4932 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_1631_p2 = ((k_reg_1309 == K_reg_4614) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_1687_p2 = ((k_1_reg_1320 == mul42_reg_4737) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_1735_p2 = ((k_2_reg_1331 == mul55_reg_4765) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_1872_p2 = ((indvar_flatten142_reg_1342 == bound110_reg_5040) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1883_p2 = ((co_reg_1364 == div68_cast_reg_4970) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_2014_p2 = ((ki_1_reg_1375 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_2168_p2 = ((indvar_flatten_reg_1386 == mul152_reg_4932) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_2179_p2 = ((wi_reg_1408 == WH_reg_4632) ? 1'b1 : 1'b0);

assign lshr_ln116_1_fu_2460_p4 = {{add_ln117_1_fu_2454_p2[10:2]}};

assign lshr_ln3_fu_2436_p4 = {{add_ln117_fu_2430_p2[10:2]}};

assign lshr_ln4_fu_3391_p4 = {{add_ln144_fu_3380_p2[10:2]}};

assign mul152_fu_1775_p0 = zext_ln57_1_reg_4675;

assign mul152_fu_1775_p1 = zext_ln57_1_reg_4675;

assign mul_ln100_fu_2273_p0 = mul_ln100_fu_2273_p00;

assign mul_ln100_fu_2273_p00 = select_ln100_1_fu_2261_p3;

assign mul_ln100_fu_2273_p1 = trunc_ln4_cast21_reg_4965;

assign mul_ln141_1_fu_3315_p0 = WH_cast_reg_4980;

assign mul_ln141_1_fu_3315_p1 = zext_ln137_1_fu_3311_p1;

assign mul_ln141_fu_3286_p0 = WH_cast_reg_4980;

assign mul_ln141_fu_3286_p1 = zext_ln137_fu_3282_p1;

assign mul_ln81_1_fu_1927_p0 = WH_cast_reg_4980;

assign mul_ln81_2_fu_1936_p0 = C_cast_reg_4995;

assign mul_ln81_2_fu_1936_p1 = mul_ln81_2_fu_1936_p10;

assign mul_ln81_2_fu_1936_p10 = p_mid_fu_1910_p3;

assign mul_ln81_3_fu_1951_p0 = C_cast_reg_4995;

assign mul_ln81_3_fu_1951_p1 = mul_ln81_3_fu_1951_p10;

assign mul_ln81_3_fu_1951_p10 = or_ln81_fu_1941_p2;

assign mul_ln81_4_fu_1966_p0 = C_cast_reg_4995;

assign mul_ln81_4_fu_1966_p1 = mul_ln81_4_fu_1966_p10;

assign mul_ln81_4_fu_1966_p10 = or_ln81_1_fu_1956_p2;

assign mul_ln81_5_fu_1981_p0 = C_cast_reg_4995;

assign mul_ln81_5_fu_1981_p1 = mul_ln81_5_fu_1981_p10;

assign mul_ln81_5_fu_1981_p10 = or_ln81_2_fu_1971_p2;

assign mul_ln81_fu_1922_p0 = WH_cast_reg_4980;

assign mul_ln81_fu_1922_p1 = mul_ln81_fu_1922_p10;

assign mul_ln81_fu_1922_p10 = select_ln81_1_fu_1902_p3;

assign newIndex122_cast_fu_2049_p1 = newIndex_fu_2039_p4;

assign newIndex_fu_2039_p4 = {{empty_44_fu_2034_p2[7:2]}};

assign or_ln137_fu_3244_p2 = (select_ln135_5_fu_3229_p3 | icmp_ln137_1_fu_3190_p2);

assign or_ln208_1_fu_3617_p2 = (xor_ln208_1_fu_3611_p2 | tmp_24_fu_3598_p3);

assign or_ln208_2_fu_3642_p2 = (xor_ln208_2_fu_3636_p2 | tmp_25_fu_3623_p3);

assign or_ln208_3_fu_3667_p2 = (xor_ln208_3_fu_3661_p2 | tmp_26_fu_3648_p3);

assign or_ln208_fu_3586_p2 = (xor_ln208_fu_3580_p2 | tmp_23_fu_3567_p3);

assign or_ln231_fu_4221_p2 = (select_ln230_3_fu_4209_p3 | icmp_ln231_reg_6613_pp6_iter1_reg);

assign or_ln81_1_fu_1956_p2 = (p_mid_fu_1910_p3 | 8'd2);

assign or_ln81_2_fu_1971_p2 = (p_mid_fu_1910_p3 | 8'd3);

assign or_ln81_fu_1941_p2 = (p_mid_fu_1910_p3 | 8'd1);

assign p_cast16_fu_1994_p1 = tmp_20_fu_1986_p3;

assign p_cast17_fu_2071_p1 = empty_47_fu_2066_p2;

assign p_cast18_fu_2062_p1 = empty_46_fu_2057_p2;

assign p_cast44_fu_3437_p1 = $signed(tmp_17_reg_5998);

assign p_cast52_fu_3440_p1 = $signed(tmp_16_reg_5993);

assign p_cast54_fu_3443_p1 = $signed(tmp_15_reg_5942);

assign p_cast58_fu_3446_p1 = $signed(tmp_14_reg_5937);

assign p_cast60_fu_3449_p1 = $signed(tmp_13_reg_5892);

assign p_cast64_fu_3452_p1 = $signed(tmp_12_reg_5887);

assign p_cast66_fu_3455_p1 = $signed(tmp_11_reg_5842);

assign p_cast69_fu_3458_p1 = $signed(tmp_10_reg_5837);

assign p_cast71_fu_3461_p1 = $signed(tmp_s_reg_5792);

assign p_cast73_fu_3464_p1 = $signed(tmp_9_reg_5787);

assign p_cast75_fu_3467_p1 = $signed(tmp_8_reg_5742);

assign p_cast78_fu_3470_p1 = $signed(tmp_7_reg_5737);

assign p_cast80_fu_3473_p1 = $signed(tmp_6_reg_5692);

assign p_cast82_fu_3476_p1 = $signed(tmp_5_reg_5687);

assign p_cast84_fu_3479_p1 = $signed(tmp_4_reg_5642);

assign p_mid131_fu_3160_p0 = trunc_ln3_cast48_reg_4953;

assign p_mid131_fu_3160_p1 = zext_ln100_1_reg_5411;

assign p_mid_fu_1910_p3 = {{select_ln81_1_fu_1902_p3}, {2'd0}};

assign select_ln100_1_fu_2261_p3 = ((icmp_ln102_fu_2242_p2[0:0] === 1'b1) ? add_ln100_17_fu_2255_p2 : r_reg_1430);

assign select_ln100_fu_2247_p3 = ((icmp_ln102_fu_2242_p2[0:0] === 1'b1) ? 8'd0 : s_reg_1441);

assign select_ln135_1_fu_3205_p3 = ((icmp_ln137_1_fu_3190_p2[0:0] === 1'b1) ? empty_52_fu_3201_p1 : empty_48_fu_3164_p1);

assign select_ln135_3_fu_3298_p3 = ((icmp_ln137_1_reg_6022[0:0] === 1'b1) ? 9'd0 : mul_ln141_fu_3286_p2);

assign select_ln135_4_fu_3352_p3 = ((icmp_ln137_1_reg_6022_pp4_iter3_reg[0:0] === 1'b1) ? add_ln141_1_reg_6092 : grp_fu_4407_p4);

assign select_ln135_5_fu_3229_p3 = ((icmp_ln137_1_fu_3190_p2[0:0] === 1'b1) ? icmp_ln137_reg_5045 : icmp_ln138_fu_3224_p2);

assign select_ln135_6_fu_3236_p3 = ((icmp_ln137_1_fu_3190_p2[0:0] === 1'b1) ? add_ln135_1_fu_3195_p2 : ci_reg_1463);

assign select_ln135_fu_3291_p3 = ((icmp_ln137_1_reg_6022[0:0] === 1'b1) ? 8'd0 : hi_1_reg_1496);

assign select_ln137_1_fu_3320_p3 = ((select_ln135_5_reg_6039[0:0] === 1'b1) ? mul_ln141_1_fu_3315_p2 : select_ln135_3_fu_3298_p3);

assign select_ln137_2_fu_3357_p3 = ((select_ln135_5_reg_6039_pp4_iter3_reg[0:0] === 1'b1) ? grp_fu_4416_p4 : select_ln135_4_fu_3352_p3);

assign select_ln137_3_fu_3327_p3 = ((select_ln135_5_reg_6039[0:0] === 1'b1) ? add_ln137_fu_3305_p2 : select_ln135_fu_3291_p3);

assign select_ln137_4_fu_3274_p3 = ((icmp_ln137_1_fu_3190_p2[0:0] === 1'b1) ? 16'd1 : add_ln137_3_fu_3268_p2);

assign select_ln137_fu_3250_p3 = ((or_ln137_fu_3244_p2[0:0] === 1'b1) ? 8'd0 : wi_1_reg_1485);

assign select_ln174_1_fu_3963_p3 = ((tmp_21_reg_6218_pp5_iter19_reg[0:0] === 1'b1) ? 8'd0 : data_l1_2_0_load_reg_6444);

assign select_ln174_2_fu_3896_p3 = ((tmp_22_reg_6230_pp5_iter19_reg[0:0] === 1'b1) ? 8'd0 : data_l1_3_0_q0);

assign select_ln174_fu_4016_p3 = ((icmp_ln174_reg_6257_pp5_iter20_reg[0:0] === 1'b1) ? data_l1_1_0_q0 : 8'd0);

assign select_ln230_1_fu_4160_p3 = ((icmp_ln231_fu_4149_p2[0:0] === 1'b1) ? add_ln230_1_fu_4154_p2 : ap_phi_mux_k_3_phi_fu_1534_p4);

assign select_ln230_2_fu_4197_p3 = ((icmp_ln231_reg_6613_pp6_iter1_reg[0:0] === 1'b1) ? 2'd0 : trunc_ln233_fu_4193_p1);

assign select_ln230_3_fu_4209_p3 = ((icmp_ln231_reg_6613_pp6_iter1_reg[0:0] === 1'b1) ? icmp_ln232_reg_6599 : icmp_ln232_1_fu_4204_p2);

assign select_ln230_fu_4186_p3 = ((icmp_ln231_reg_6613_pp6_iter1_reg[0:0] === 1'b1) ? 3'd0 : ki_reg_1552);

assign select_ln231_1_fu_4238_p3 = ((select_ln230_3_fu_4209_p3[0:0] === 1'b1) ? trunc_ln233_1_fu_4234_p1 : select_ln230_2_fu_4197_p3);

assign select_ln231_2_fu_4246_p3 = ((select_ln230_3_fu_4209_p3[0:0] === 1'b1) ? add_ln231_fu_4215_p2 : select_ln230_fu_4186_p3);

assign select_ln231_3_fu_4178_p3 = ((icmp_ln231_fu_4149_p2[0:0] === 1'b1) ? 19'd1 : add_ln231_1_fu_4172_p2);

assign select_ln231_fu_4226_p3 = ((or_ln231_fu_4221_p2[0:0] === 1'b1) ? 16'd0 : wh_reg_1563);

assign select_ln81_1_fu_1902_p3 = ((icmp_ln82_fu_1883_p2[0:0] === 1'b1) ? add_ln81_3_fu_1896_p2 : ko_reg_1353);

assign select_ln81_fu_1888_p3 = ((icmp_ln82_fu_1883_p2[0:0] === 1'b1) ? 6'd0 : co_reg_1364);

assign select_ln89_1_fu_2198_p3 = ((icmp_ln90_fu_2179_p2[0:0] === 1'b1) ? add_ln89_1_fu_2192_p2 : ap_phi_mux_hi_phi_fu_1401_p4);

assign select_ln89_fu_2184_p3 = ((icmp_ln90_fu_2179_p2[0:0] === 1'b1) ? 8'd0 : wi_reg_1408);

assign sext_ln168_fu_3482_p1 = $signed(tmp_3_reg_5637);

assign sext_ln172_1_fu_3515_p1 = add_ln172_1_fu_3509_p2;

assign sext_ln172_2_fu_3538_p1 = add_ln172_2_fu_3532_p2;

assign sext_ln172_fu_3500_p1 = $signed(add_ln172_fu_3494_p2);

assign sub250_cast_fu_3969_p2 = ($signed(9'd508) + $signed(empty_54_reg_6323_pp5_iter19_reg));

assign sub250_fu_3555_p2 = ($signed(17'd131068) + $signed(i_cast_fu_3490_p1));

assign sub252_1_fu_3592_p2 = ($signed(i_cast_fu_3490_p1) + $signed(17'd131067));

assign sub252_fu_3561_p2 = ($signed(17'd131066) + $signed(i_cast_fu_3490_p1));

assign tmp1_fu_1679_p0 = zext_ln65_reg_4697;

assign tmp1_fu_1679_p1 = zext_ln65_reg_4697;

assign tmp2_fu_1727_p0 = zext_ln55_1_reg_4659;

assign tmp2_fu_1727_p1 = zext_ln61_1_reg_4686;

assign tmp5_cast_fu_1835_p0 = trunc_ln3_cast48_fu_1787_p1;

assign tmp5_cast_fu_1835_p1 = trunc_ln3_cast48_fu_1787_p1;

assign tmp_10_fu_2947_p5 = add_ln116_8_fu_2939_p2;

assign tmp_11_fu_2969_p5 = add_ln116_9_fu_2961_p2;

assign tmp_12_fu_3005_p5 = add_ln116_10_fu_2997_p2;

assign tmp_13_fu_3027_p5 = add_ln116_11_fu_3019_p2;

assign tmp_14_fu_3063_p5 = add_ln116_12_fu_3055_p2;

assign tmp_15_fu_3085_p5 = add_ln116_13_fu_3077_p2;

assign tmp_16_fu_3124_p5 = add_ln116_14_fu_3116_p2;

assign tmp_17_fu_3146_p5 = add_ln116_15_fu_3138_p2;

assign tmp_18_fu_3168_p3 = {{select_ln81_reg_5058}, {empty_48_fu_3164_p1}};

assign tmp_19_fu_3412_p5 = add_ln143_reg_6097;

assign tmp_19_mid1_fu_3213_p3 = {{select_ln81_reg_5058}, {empty_52_fu_3201_p1}};

assign tmp_1_fu_2150_p5 = empty_43_reg_5165;

assign tmp_20_fu_1986_p3 = {{select_ln81_fu_1888_p3}, {2'd0}};

assign tmp_23_fu_3567_p3 = sub252_fu_3561_p2[32'd16];

assign tmp_24_fu_3598_p3 = sub252_1_fu_3592_p2[32'd16];

assign tmp_25_fu_3623_p3 = sub250_fu_3555_p2[32'd16];

assign tmp_26_fu_3648_p3 = add_ln172_2_fu_3532_p2[32'd16];

assign tmp_2_fu_1841_p3 = {{mul152_fu_1775_p2}, {2'd0}};

assign tmp_3_fu_2715_p5 = add_ln116_fu_2707_p2;

assign tmp_4_fu_2737_p5 = add_ln116_1_fu_2729_p2;

assign tmp_5_fu_2773_p5 = add_ln116_2_fu_2765_p2;

assign tmp_6_fu_2795_p5 = add_ln116_3_fu_2787_p2;

assign tmp_7_fu_2831_p5 = add_ln116_4_fu_2823_p2;

assign tmp_8_fu_2853_p5 = add_ln116_5_fu_2845_p2;

assign tmp_9_fu_2889_p5 = add_ln116_6_fu_2881_p2;

assign tmp_fu_1671_p0 = zext_ln55_1_reg_4659;

assign tmp_fu_1671_p1 = zext_ln53_reg_4649;

assign tmp_s_fu_2911_p5 = add_ln116_7_fu_2903_p2;

assign trunc_ln100_10_fu_2373_p1 = add_ln100_11_fu_2368_p2[1:0];

assign trunc_ln100_11_fu_2382_p1 = add_ln100_12_fu_2377_p2[1:0];

assign trunc_ln100_12_fu_2391_p1 = add_ln100_13_fu_2386_p2[1:0];

assign trunc_ln100_13_fu_2400_p1 = add_ln100_14_fu_2395_p2[1:0];

assign trunc_ln100_14_fu_2409_p1 = add_ln100_15_fu_2404_p2[1:0];

assign trunc_ln100_15_fu_2418_p1 = add_ln100_16_fu_2413_p2[1:0];

assign trunc_ln100_1_fu_2292_p1 = add_ln100_2_fu_2287_p2[1:0];

assign trunc_ln100_2_fu_2301_p1 = add_ln100_3_fu_2296_p2[1:0];

assign trunc_ln100_3_fu_2310_p1 = add_ln100_4_fu_2305_p2[1:0];

assign trunc_ln100_4_fu_2319_p1 = add_ln100_5_fu_2314_p2[1:0];

assign trunc_ln100_5_fu_2328_p1 = add_ln100_6_fu_2323_p2[1:0];

assign trunc_ln100_6_fu_2337_p1 = add_ln100_7_fu_2332_p2[1:0];

assign trunc_ln100_7_fu_2346_p1 = add_ln100_8_fu_2341_p2[1:0];

assign trunc_ln100_8_fu_2355_p1 = add_ln100_9_fu_2350_p2[1:0];

assign trunc_ln100_9_fu_2364_p1 = add_ln100_10_fu_2359_p2[1:0];

assign trunc_ln100_fu_2283_p1 = add_ln100_1_fu_2278_p2[1:0];

assign trunc_ln117_fu_2426_p1 = select_ln100_fu_2247_p3[1:0];

assign trunc_ln137_fu_3368_p1 = select_ln137_2_fu_3357_p3[1:0];

assign trunc_ln144_fu_3258_p1 = select_ln137_fu_3250_p3[1:0];

assign trunc_ln172_1_fu_3711_p1 = grp_fu_3519_p2[8:0];

assign trunc_ln172_2_fu_3715_p1 = grp_fu_3542_p2[8:0];

assign trunc_ln172_fu_3707_p1 = grp_fu_3504_p2[8:0];

assign trunc_ln173_1_fu_3774_p1 = wi_3_reg_6303[7:0];

assign trunc_ln173_2_fu_3781_p1 = wi_4_reg_6308[7:0];

assign trunc_ln173_fu_3767_p1 = wi_2_reg_6298[7:0];

assign trunc_ln231_fu_1783_p1 = mul152_fu_1775_p2[8:0];

assign trunc_ln233_1_fu_4234_p1 = add_ln231_fu_4215_p2[1:0];

assign trunc_ln233_fu_4193_p1 = ki_reg_1552[1:0];

assign trunc_ln3_cast48_fu_1787_p1 = WH_in_reg_4642;

assign trunc_ln4_cast21_fu_1805_p1 = RS_reg_4691;

assign trunc_ln708_1_fu_1712_p1 = weight_in_V_dout[7:0];

assign trunc_ln708_2_fu_1760_p1 = data_in_V_dout[7:0];

assign trunc_ln708_fu_1656_p1 = bias_in_V_dout[7:0];

assign trunc_ln70_fu_1642_p1 = k_reg_1309[1:0];

assign trunc_ln74_fu_1698_p1 = k_1_reg_1320[1:0];

assign trunc_ln78_fu_1746_p1 = k_2_reg_1331[1:0];

assign wi_4_cast62_fu_3334_p1 = select_ln137_reg_6051;

assign wi_4_cast_fu_3377_p1 = select_ln137_reg_6051_pp4_iter3_reg;

assign wi_cast_fu_2216_p1 = select_ln89_reg_5287_pp3_iter1_reg;

assign xor_ln208_1_fu_3611_p2 = (icmp_ln208_1_fu_3606_p2 ^ 1'd1);

assign xor_ln208_2_fu_3636_p2 = (icmp_ln208_2_fu_3631_p2 ^ 1'd1);

assign xor_ln208_3_fu_3661_p2 = (icmp_ln208_3_fu_3656_p2 ^ 1'd1);

assign xor_ln208_fu_3580_p2 = (icmp_ln208_fu_3575_p2 ^ 1'd1);

assign zext_ln100_1_fu_2269_p1 = select_ln100_1_fu_2261_p3;

assign zext_ln100_fu_3113_p1 = select_ln100_1_reg_5405;

assign zext_ln102_fu_2422_p1 = select_ln100_fu_2247_p3;

assign zext_ln116_16_fu_2446_p1 = lshr_ln3_fu_2436_p4;

assign zext_ln116_17_fu_2470_p1 = lshr_ln116_1_fu_2460_p4;

assign zext_ln116_18_fu_2751_p1 = lshr_ln116_2_reg_5562;

assign zext_ln116_19_fu_2758_p1 = lshr_ln116_3_reg_5567;

assign zext_ln116_20_fu_2809_p1 = lshr_ln116_4_reg_5572;

assign zext_ln116_21_fu_2816_p1 = lshr_ln116_5_reg_5577;

assign zext_ln116_22_fu_2867_p1 = lshr_ln116_6_reg_5582;

assign zext_ln116_23_fu_2874_p1 = lshr_ln116_7_reg_5587;

assign zext_ln116_24_fu_2925_p1 = lshr_ln116_8_reg_5592;

assign zext_ln116_25_fu_2932_p1 = lshr_ln116_9_reg_5597;

assign zext_ln116_26_fu_2983_p1 = lshr_ln116_s_reg_5602;

assign zext_ln116_27_fu_2990_p1 = lshr_ln116_10_reg_5607;

assign zext_ln116_28_fu_3041_p1 = lshr_ln116_11_reg_5612;

assign zext_ln116_29_fu_3048_p1 = lshr_ln116_12_reg_5617;

assign zext_ln116_30_fu_3099_p1 = lshr_ln116_13_reg_5622;

assign zext_ln116_31_fu_3106_p1 = lshr_ln116_14_reg_5627;

assign zext_ln137_1_fu_3311_p1 = add_ln137_fu_3305_p2;

assign zext_ln137_fu_3282_p1 = hi_1_reg_1496;

assign zext_ln142_fu_3430_p1 = add_ln142_reg_6077_pp4_iter4_reg;

assign zext_ln143_1_fu_3401_p1 = lshr_ln4_fu_3391_p4;

assign zext_ln173_1_fu_3777_p1 = trunc_ln173_1_fu_3774_p1;

assign zext_ln173_2_fu_3784_p1 = trunc_ln173_2_fu_3781_p1;

assign zext_ln173_fu_3770_p1 = trunc_ln173_fu_3767_p1;

assign zext_ln175_1_fu_3959_p1 = $unsigned(add_ln176_reg_6384);

assign zext_ln175_2_fu_3837_p1 = $unsigned(grp_fu_4440_p3);

assign zext_ln175_3_fu_3841_p1 = $unsigned(grp_fu_4448_p3);

assign zext_ln175_fu_3954_p1 = i_reg_1507_pp5_iter19_reg;

assign zext_ln196_1_fu_3913_p1 = $unsigned(add_ln198_3_reg_6424);

assign zext_ln196_2_fu_4026_p1 = $unsigned(add_ln198_5_reg_6439_pp5_iter20_reg);

assign zext_ln196_3_fu_4104_p1 = add_ln198_6_reg_6559;

assign zext_ln196_fu_3848_p1 = $unsigned(grp_fu_4464_p4);

assign zext_ln215_1_fu_3852_p1 = grp_fu_1574_p2;

assign zext_ln215_2_fu_3863_p1 = grp_fu_1578_p2;

assign zext_ln215_3_fu_3917_p1 = grp_fu_1578_p2;

assign zext_ln215_4_fu_3982_p1 = grp_fu_1582_p2;

assign zext_ln215_5_fu_4030_p1 = grp_fu_1582_p2;

assign zext_ln215_6_fu_4077_p1 = add_ln216_6_fu_4072_p2;

assign zext_ln215_7_fu_4108_p1 = add_ln216_7_reg_6569;

assign zext_ln215_fu_3795_p1 = grp_fu_1574_p2;

assign zext_ln233_fu_4264_p1 = $unsigned(grp_fu_4601_p3);

assign zext_ln53_fu_1602_p1 = K_reg_4614;

assign zext_ln55_1_fu_1608_p1 = C_reg_4625;

assign zext_ln55_fu_1605_p1 = C_reg_4625;

assign zext_ln57_1_fu_1614_p1 = WH_reg_4632;

assign zext_ln57_fu_1611_p1 = WH_reg_4632;

assign zext_ln61_1_fu_1620_p1 = WH_in_reg_4642;

assign zext_ln61_fu_1617_p1 = WH_in_reg_4642;

assign zext_ln65_fu_1627_p1 = RS_fu_1623_p1;

assign zext_ln70_fu_1664_p1 = lshr_ln_reg_4716;

assign zext_ln74_fu_1720_p1 = lshr_ln1_reg_4755;

assign zext_ln78_fu_1768_p1 = lshr_ln2_reg_4783;

assign zext_ln81_1_fu_1795_p1 = add_ln81_fu_1790_p2;

assign zext_ln81_fu_1779_p1 = mul152_fu_1775_p2;

assign zext_ln88_1_fu_2026_p1 = ki_1_reg_1375;

assign zext_ln88_fu_2004_p1 = empty_57_fu_1998_p2;

assign zext_ln93_fu_2224_p1 = grp_fu_4386_p3;

always @ (posedge ap_clk) begin
    zext_ln53_reg_4649[15:8] <= 8'b00000000;
    zext_ln55_reg_4654[8] <= 1'b0;
    zext_ln55_1_reg_4659[15:8] <= 8'b00000000;
    zext_ln57_reg_4665[31:8] <= 24'b000000000000000000000000;
    zext_ln57_1_reg_4675[15:8] <= 8'b00000000;
    zext_ln61_reg_4681[23:8] <= 16'b0000000000000000;
    zext_ln61_1_reg_4686[15:8] <= 8'b00000000;
    zext_ln65_reg_4697[15:8] <= 8'b00000000;
    zext_ln81_reg_4940[16] <= 1'b0;
    trunc_ln3_cast48_reg_4953[10:8] <= 3'b000;
    trunc_ln4_cast21_reg_4965[10:8] <= 3'b000;
    WH_cast_reg_4980[8] <= 1'b0;
    C_cast_reg_4995[10:8] <= 3'b000;
    tmp_2_reg_5029[1:0] <= 2'b00;
    bound20_reg_5035[1:0] <= 2'b00;
    bound20_reg_5035[18] <= 1'b0;
    p_mid_reg_5070[1:0] <= 2'b00;
    tmp_20_reg_5125[1:0] <= 2'b00;
    p_cast16_reg_5131[1:0] <= 2'b00;
    p_cast16_reg_5131[10:8] <= 3'b000;
    zext_ln88_reg_5139[1:0] <= 2'b11;
    zext_ln88_reg_5139[10:8] <= 3'b000;
    zext_ln100_1_reg_5411[10:8] <= 3'b000;
    zext_ln102_reg_5496[10:8] <= 3'b000;
    zext_ln100_reg_5987[8] <= 1'b0;
end

endmodule //Conv_sysarr_dbbuf
