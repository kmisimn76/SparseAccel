// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_dbbuf_Conv_sysarr_dbbuf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.186000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=3153,HLS_SYN_LUT=5153,HLS_VERSION=2020_1}" *)

module Conv_sysarr_dbbuf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 43'd1;
parameter    ap_ST_fsm_state2 = 43'd2;
parameter    ap_ST_fsm_state3 = 43'd4;
parameter    ap_ST_fsm_state4 = 43'd8;
parameter    ap_ST_fsm_state5 = 43'd16;
parameter    ap_ST_fsm_pp0_stage0 = 43'd32;
parameter    ap_ST_fsm_state8 = 43'd64;
parameter    ap_ST_fsm_state9 = 43'd128;
parameter    ap_ST_fsm_state10 = 43'd256;
parameter    ap_ST_fsm_state11 = 43'd512;
parameter    ap_ST_fsm_pp1_stage0 = 43'd1024;
parameter    ap_ST_fsm_state14 = 43'd2048;
parameter    ap_ST_fsm_state15 = 43'd4096;
parameter    ap_ST_fsm_state16 = 43'd8192;
parameter    ap_ST_fsm_state17 = 43'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 43'd32768;
parameter    ap_ST_fsm_state20 = 43'd65536;
parameter    ap_ST_fsm_state21 = 43'd131072;
parameter    ap_ST_fsm_state22 = 43'd262144;
parameter    ap_ST_fsm_state23 = 43'd524288;
parameter    ap_ST_fsm_pp3_stage0 = 43'd1048576;
parameter    ap_ST_fsm_state28 = 43'd2097152;
parameter    ap_ST_fsm_state29 = 43'd4194304;
parameter    ap_ST_fsm_state30 = 43'd8388608;
parameter    ap_ST_fsm_state31 = 43'd16777216;
parameter    ap_ST_fsm_state32 = 43'd33554432;
parameter    ap_ST_fsm_state33 = 43'd67108864;
parameter    ap_ST_fsm_state34 = 43'd134217728;
parameter    ap_ST_fsm_state35 = 43'd268435456;
parameter    ap_ST_fsm_state36 = 43'd536870912;
parameter    ap_ST_fsm_state37 = 43'd1073741824;
parameter    ap_ST_fsm_state38 = 43'd2147483648;
parameter    ap_ST_fsm_state39 = 43'd4294967296;
parameter    ap_ST_fsm_state40 = 43'd8589934592;
parameter    ap_ST_fsm_pp4_stage0 = 43'd17179869184;
parameter    ap_ST_fsm_state47 = 43'd34359738368;
parameter    ap_ST_fsm_pp5_stage0 = 43'd68719476736;
parameter    ap_ST_fsm_state56 = 43'd137438953472;
parameter    ap_ST_fsm_state57 = 43'd274877906944;
parameter    ap_ST_fsm_state58 = 43'd549755813888;
parameter    ap_ST_fsm_state59 = 43'd1099511627776;
parameter    ap_ST_fsm_pp6_stage0 = 43'd2199023255552;
parameter    ap_ST_fsm_state65 = 43'd4398046511104;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [63:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [63:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [63:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    weight_in_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp6_iter4;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln294_reg_6198;
reg   [0:0] icmp_ln294_reg_6198_pp6_iter3_reg;
reg   [7:0] k_reg_1269;
reg   [31:0] k_1_reg_1280;
reg   [23:0] k_2_reg_1291;
reg   [15:0] indvar_flatten_reg_1346;
reg   [7:0] hi_reg_1357;
reg   [7:0] wi_reg_1368;
reg   [17:0] indvar_flatten47_reg_1412;
reg   [2:0] ci_reg_1423;
reg   [15:0] indvar_flatten15_reg_1434;
reg   [7:0] wi_1_reg_1445;
reg   [7:0] hi_1_reg_1456;
reg   [5:0] i_reg_1467;
reg   [23:0] indvar_flatten160_reg_1479;
reg   [5:0] k_3_reg_1490;
reg   [18:0] indvar_flatten143_reg_1501;
reg   [2:0] ki_reg_1512;
reg   [15:0] wh_reg_1523;
reg   [63:0] bias_in_V_read_reg_4351;
reg    ap_block_state1;
wire   [7:0] K_fu_1534_p1;
reg   [7:0] K_reg_4356;
reg   [63:0] bias_in_V_read_1_reg_4362;
wire   [7:0] C_fu_1538_p1;
reg   [7:0] C_reg_4367;
wire   [7:0] WH_fu_1542_p1;
reg   [7:0] WH_reg_4373;
wire   [7:0] WH_in_fu_1546_p1;
reg   [7:0] WH_in_reg_4382;
wire   [15:0] zext_ln54_fu_1550_p1;
reg   [15:0] zext_ln54_reg_4389;
wire   [15:0] zext_ln57_fu_1553_p1;
reg   [15:0] zext_ln57_reg_4394;
wire   [15:0] zext_ln60_fu_1556_p1;
reg   [15:0] zext_ln60_reg_4400;
wire   [23:0] zext_ln67_fu_1559_p1;
reg   [23:0] zext_ln67_reg_4406;
wire   [15:0] zext_ln67_1_fu_1562_p1;
reg   [15:0] zext_ln67_1_reg_4411;
wire   [7:0] RS_fu_1565_p1;
reg   [7:0] RS_reg_4416;
wire   [15:0] zext_ln72_fu_1569_p1;
reg   [15:0] zext_ln72_reg_4423;
wire   [0:0] icmp_ln76_fu_1573_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln76_fu_1578_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln78_fu_1584_p1;
reg   [1:0] trunc_ln78_reg_4438;
reg   [5:0] lshr_ln_reg_4442;
wire    ap_CS_fsm_state8;
wire   [15:0] tmp1_fu_1621_p2;
reg   [15:0] tmp1_reg_4452;
wire   [31:0] grp_fu_4079_p2;
reg   [31:0] mul42_reg_4463;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln80_fu_1629_p2;
wire    ap_block_state12_pp1_stage0_iter0;
reg    ap_block_state13_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [31:0] add_ln80_fu_1634_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln82_fu_1640_p1;
reg   [1:0] trunc_ln82_reg_4477;
reg   [8:0] lshr_ln1_reg_4481;
wire    ap_CS_fsm_state14;
wire   [23:0] grp_fu_4085_p2;
reg   [23:0] mul55_reg_4491;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln84_fu_1677_p2;
wire    ap_block_state18_pp2_stage0_iter0;
reg    ap_block_state19_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [23:0] add_ln84_fu_1682_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] trunc_ln86_fu_1688_p1;
reg   [1:0] trunc_ln86_reg_4505;
reg   [8:0] lshr_ln2_reg_4509;
wire   [15:0] mul310_fu_1717_p2;
reg   [15:0] mul310_reg_4658;
wire    ap_CS_fsm_state20;
wire   [16:0] mul310_cast49_fu_1721_p1;
reg   [16:0] mul310_cast49_reg_4666;
wire   [0:0] cmp92290_fu_1725_p2;
reg   [0:0] cmp92290_reg_4674;
wire   [10:0] trunc_ln3_cast52_fu_1730_p1;
reg   [10:0] trunc_ln3_cast52_reg_4678;
wire   [10:0] trunc_ln4_cast17_fu_1733_p1;
reg   [10:0] trunc_ln4_cast17_reg_4685;
wire   [5:0] div68_cast_fu_1736_p4;
reg   [5:0] div68_cast_reg_4690;
wire   [5:0] div66_cast_fu_1745_p4;
reg   [5:0] div66_cast_reg_4695;
wire   [10:0] C_cast_fu_1754_p1;
reg   [10:0] C_cast_reg_4700;
wire   [8:0] WH_cast_fu_1757_p1;
reg   [8:0] WH_cast_reg_4708;
wire  signed [10:0] empty_41_fu_1760_p1;
reg  signed [10:0] empty_41_reg_4715;
wire  signed [10:0] tmp4_cast_fu_1763_p2;
reg  signed [10:0] tmp4_cast_reg_4735;
wire   [17:0] tmp_2_fu_1769_p3;
reg   [17:0] tmp_2_reg_4741;
wire   [18:0] bound20_fu_1777_p1;
reg   [18:0] bound20_reg_4747;
wire   [11:0] bound110_fu_1789_p2;
reg   [11:0] bound110_reg_4752;
wire  signed [8:0] empty_42_fu_1795_p1;
reg  signed [8:0] empty_42_reg_4757;
wire   [0:0] icmp_ln134_fu_1799_p2;
reg   [0:0] icmp_ln134_reg_4763;
wire   [11:0] add_ln89_fu_1809_p2;
reg   [11:0] add_ln89_reg_4771;
wire    ap_CS_fsm_state21;
wire   [5:0] select_ln89_fu_1820_p3;
reg   [5:0] select_ln89_reg_4776;
wire   [0:0] icmp_ln89_fu_1804_p2;
wire   [5:0] select_ln89_1_fu_1834_p3;
reg   [5:0] select_ln89_1_reg_4783;
wire   [7:0] p_mid_fu_1842_p3;
reg   [7:0] p_mid_reg_4788;
wire   [8:0] mul_ln89_fu_1854_p2;
reg   [8:0] mul_ln89_reg_4793;
wire   [10:0] mul_ln89_1_fu_1863_p2;
reg   [10:0] mul_ln89_1_reg_4805;
wire   [10:0] mul_ln89_2_fu_1878_p2;
reg   [10:0] mul_ln89_2_reg_4813;
wire   [10:0] mul_ln89_3_fu_1893_p2;
reg   [10:0] mul_ln89_3_reg_4821;
wire   [10:0] mul_ln89_4_fu_1908_p2;
reg   [10:0] mul_ln89_4_reg_4829;
wire   [7:0] tmp_20_fu_1913_p3;
reg   [7:0] tmp_20_reg_4837;
wire   [10:0] p_cast11_fu_1921_p1;
reg   [10:0] p_cast11_reg_4843;
wire   [10:0] zext_ln96_fu_1931_p1;
reg   [10:0] zext_ln96_reg_4851;
wire   [2:0] add_ln96_fu_1947_p2;
reg   [2:0] add_ln96_reg_4872;
wire    ap_CS_fsm_state22;
wire   [1:0] empty_44_fu_1957_p1;
reg   [1:0] empty_44_reg_4877;
wire   [0:0] icmp_ln96_fu_1941_p2;
wire  signed [31:0] conv79_fu_2091_p1;
reg  signed [31:0] conv79_reg_4982;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln97_fu_2095_p2;
reg   [0:0] icmp_ln97_reg_4990;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state24_pp3_stage0_iter0;
wire    ap_block_state25_pp3_stage0_iter1;
wire    ap_block_state26_pp3_stage0_iter2;
wire    ap_block_state27_pp3_stage0_iter3;
wire    ap_block_pp3_stage0_11001;
wire   [15:0] add_ln97_fu_2100_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [7:0] select_ln97_fu_2111_p3;
reg   [7:0] select_ln97_reg_4999;
reg   [7:0] select_ln97_reg_4999_pp3_iter1_reg;
wire   [7:0] select_ln97_1_fu_2125_p3;
reg   [7:0] select_ln97_1_reg_5004;
wire   [7:0] add_ln98_fu_2137_p2;
wire  signed [10:0] grp_fu_4096_p2;
reg  signed [10:0] add107_2_cast_reg_5024;
wire    ap_CS_fsm_state31;
wire  signed [10:0] grp_fu_4101_p2;
reg  signed [10:0] add107_1_cast_reg_5029;
wire  signed [10:0] grp_fu_4106_p2;
reg  signed [10:0] add107_3_cast_reg_5034;
wire  signed [10:0] grp_fu_4111_p2;
reg  signed [10:0] add107_1_2_cast_reg_5039;
wire  signed [10:0] grp_fu_4116_p2;
reg  signed [10:0] add107_2_2_cast_reg_5044;
wire  signed [10:0] grp_fu_4121_p2;
reg  signed [10:0] add107_3_2_cast_reg_5049;
wire  signed [10:0] grp_fu_4126_p2;
reg  signed [10:0] add107_cast_reg_5054;
wire  signed [10:0] grp_fu_4131_p2;
reg  signed [10:0] add107_1331_cast_reg_5059;
wire  signed [10:0] grp_fu_4136_p2;
reg  signed [10:0] add107_2339_cast_reg_5064;
wire  signed [10:0] grp_fu_4141_p2;
reg  signed [10:0] add107_3347_cast_reg_5069;
wire  signed [10:0] grp_fu_4146_p2;
reg  signed [10:0] add107_1_1_cast_reg_5074;
wire  signed [10:0] grp_fu_4151_p2;
reg  signed [10:0] add107_1_3_cast_reg_5079;
wire  signed [10:0] grp_fu_4156_p2;
reg  signed [10:0] add107_2_1_cast_reg_5084;
wire  signed [10:0] grp_fu_4161_p2;
reg  signed [10:0] add107_2_3_cast_reg_5089;
wire  signed [10:0] grp_fu_4166_p2;
reg  signed [10:0] add107_3_1_cast_reg_5094;
wire  signed [10:0] grp_fu_4171_p2;
reg  signed [10:0] add107_3_3_cast_reg_5099;
wire   [15:0] add_ln108_fu_2163_p2;
reg   [15:0] add_ln108_reg_5107;
wire    ap_CS_fsm_state32;
wire   [7:0] select_ln108_fu_2174_p3;
reg   [7:0] select_ln108_reg_5112;
wire   [0:0] icmp_ln108_fu_2158_p2;
wire   [7:0] select_ln108_1_fu_2188_p3;
reg   [7:0] select_ln108_1_reg_5117;
wire   [10:0] zext_ln108_1_fu_2196_p1;
reg   [10:0] zext_ln108_1_reg_5123;
wire   [1:0] trunc_ln108_fu_2210_p1;
reg   [1:0] trunc_ln108_reg_5128;
wire   [1:0] trunc_ln108_1_fu_2219_p1;
reg   [1:0] trunc_ln108_1_reg_5133;
wire   [1:0] trunc_ln108_2_fu_2228_p1;
reg   [1:0] trunc_ln108_2_reg_5138;
wire   [1:0] trunc_ln108_3_fu_2237_p1;
reg   [1:0] trunc_ln108_3_reg_5143;
wire   [1:0] trunc_ln108_4_fu_2246_p1;
reg   [1:0] trunc_ln108_4_reg_5148;
wire   [1:0] trunc_ln108_5_fu_2255_p1;
reg   [1:0] trunc_ln108_5_reg_5153;
wire   [1:0] trunc_ln108_6_fu_2264_p1;
reg   [1:0] trunc_ln108_6_reg_5158;
wire   [1:0] trunc_ln108_7_fu_2273_p1;
reg   [1:0] trunc_ln108_7_reg_5163;
wire   [1:0] trunc_ln108_8_fu_2282_p1;
reg   [1:0] trunc_ln108_8_reg_5168;
wire   [1:0] trunc_ln108_9_fu_2291_p1;
reg   [1:0] trunc_ln108_9_reg_5173;
wire   [1:0] trunc_ln108_10_fu_2300_p1;
reg   [1:0] trunc_ln108_10_reg_5178;
wire   [1:0] trunc_ln108_11_fu_2309_p1;
reg   [1:0] trunc_ln108_11_reg_5183;
wire   [1:0] trunc_ln108_12_fu_2318_p1;
reg   [1:0] trunc_ln108_12_reg_5188;
wire   [1:0] trunc_ln108_13_fu_2327_p1;
reg   [1:0] trunc_ln108_13_reg_5193;
wire   [1:0] trunc_ln108_14_fu_2336_p1;
reg   [1:0] trunc_ln108_14_reg_5198;
wire   [1:0] trunc_ln108_15_fu_2345_p1;
reg   [1:0] trunc_ln108_15_reg_5203;
wire   [10:0] zext_ln110_fu_2349_p1;
reg   [10:0] zext_ln110_reg_5208;
wire   [1:0] trunc_ln125_fu_2353_p1;
reg   [1:0] trunc_ln125_reg_5213;
reg   [8:0] lshr_ln124_2_reg_5274;
reg   [8:0] lshr_ln124_3_reg_5279;
reg   [8:0] lshr_ln124_4_reg_5284;
reg   [8:0] lshr_ln124_5_reg_5289;
reg   [8:0] lshr_ln124_6_reg_5294;
reg   [8:0] lshr_ln124_7_reg_5299;
reg   [8:0] lshr_ln124_8_reg_5304;
reg   [8:0] lshr_ln124_9_reg_5309;
reg   [8:0] lshr_ln124_s_reg_5314;
reg   [8:0] lshr_ln124_10_reg_5319;
reg   [8:0] lshr_ln124_11_reg_5324;
reg   [8:0] lshr_ln124_12_reg_5329;
reg   [8:0] lshr_ln124_13_reg_5334;
reg   [8:0] lshr_ln124_14_reg_5339;
wire   [5:0] add_ln90_fu_2629_p2;
wire   [7:0] tmp_3_fu_2642_p6;
reg   [7:0] tmp_3_reg_5349;
wire    ap_CS_fsm_state33;
wire   [7:0] tmp_4_fu_2664_p6;
reg   [7:0] tmp_4_reg_5354;
wire   [7:0] tmp_5_fu_2700_p6;
reg   [7:0] tmp_5_reg_5399;
wire    ap_CS_fsm_state34;
wire   [7:0] tmp_6_fu_2722_p6;
reg   [7:0] tmp_6_reg_5404;
wire   [7:0] tmp_7_fu_2758_p6;
reg   [7:0] tmp_7_reg_5449;
wire    ap_CS_fsm_state35;
wire   [7:0] tmp_8_fu_2780_p6;
reg   [7:0] tmp_8_reg_5454;
wire   [7:0] tmp_9_fu_2816_p6;
reg   [7:0] tmp_9_reg_5499;
wire    ap_CS_fsm_state36;
wire   [7:0] tmp_s_fu_2838_p6;
reg   [7:0] tmp_s_reg_5504;
wire   [7:0] tmp_10_fu_2874_p6;
reg   [7:0] tmp_10_reg_5549;
wire    ap_CS_fsm_state37;
wire   [7:0] tmp_11_fu_2896_p6;
reg   [7:0] tmp_11_reg_5554;
wire   [7:0] tmp_12_fu_2932_p6;
reg   [7:0] tmp_12_reg_5599;
wire    ap_CS_fsm_state38;
wire   [7:0] tmp_13_fu_2954_p6;
reg   [7:0] tmp_13_reg_5604;
wire   [7:0] tmp_14_fu_2990_p6;
reg   [7:0] tmp_14_reg_5649;
wire    ap_CS_fsm_state39;
wire   [7:0] tmp_15_fu_3012_p6;
reg   [7:0] tmp_15_reg_5654;
wire   [8:0] zext_ln108_fu_3040_p1;
reg   [8:0] zext_ln108_reg_5699;
wire    ap_CS_fsm_state40;
wire   [7:0] tmp_16_fu_3051_p6;
reg   [7:0] tmp_16_reg_5705;
wire   [7:0] tmp_17_fu_3073_p6;
reg   [7:0] tmp_17_reg_5710;
wire   [10:0] p_mid131_fu_3087_p2;
reg   [10:0] p_mid131_reg_5715;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state41_pp4_stage0_iter0;
wire    ap_block_state42_pp4_stage0_iter1;
wire    ap_block_state43_pp4_stage0_iter2;
wire    ap_block_state44_pp4_stage0_iter3;
wire    ap_block_state45_pp4_stage0_iter4;
wire    ap_block_state46_pp4_stage0_iter5;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln130_fu_3106_p2;
reg   [0:0] icmp_ln130_reg_5725;
reg   [0:0] icmp_ln130_reg_5725_pp4_iter1_reg;
reg   [0:0] icmp_ln130_reg_5725_pp4_iter2_reg;
reg   [0:0] icmp_ln130_reg_5725_pp4_iter3_reg;
wire   [17:0] add_ln130_fu_3111_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln134_1_fu_3117_p2;
reg   [0:0] icmp_ln134_1_reg_5734;
reg   [0:0] icmp_ln134_1_reg_5734_pp4_iter1_reg;
reg   [0:0] icmp_ln134_1_reg_5734_pp4_iter2_reg;
reg   [0:0] icmp_ln134_1_reg_5734_pp4_iter3_reg;
wire   [1:0] select_ln130_1_fu_3132_p3;
reg   [1:0] select_ln130_1_reg_5742;
reg   [1:0] select_ln130_1_reg_5742_pp4_iter1_reg;
reg   [1:0] select_ln130_1_reg_5742_pp4_iter2_reg;
reg   [1:0] select_ln130_1_reg_5742_pp4_iter3_reg;
reg   [1:0] select_ln130_1_reg_5742_pp4_iter4_reg;
wire   [0:0] select_ln130_5_fu_3156_p3;
reg   [0:0] select_ln130_5_reg_5751;
reg   [0:0] select_ln130_5_reg_5751_pp4_iter1_reg;
reg   [0:0] select_ln130_5_reg_5751_pp4_iter2_reg;
reg   [0:0] select_ln130_5_reg_5751_pp4_iter3_reg;
wire   [2:0] select_ln130_6_fu_3163_p3;
wire   [7:0] select_ln134_fu_3177_p3;
reg   [7:0] select_ln134_reg_5763;
reg   [7:0] select_ln134_reg_5763_pp4_iter1_reg;
reg   [7:0] select_ln134_reg_5763_pp4_iter2_reg;
reg   [7:0] select_ln134_reg_5763_pp4_iter3_reg;
wire   [1:0] trunc_ln141_fu_3185_p1;
reg   [1:0] trunc_ln141_reg_5769;
reg   [1:0] trunc_ln141_reg_5769_pp4_iter1_reg;
reg   [1:0] trunc_ln141_reg_5769_pp4_iter2_reg;
reg   [1:0] trunc_ln141_reg_5769_pp4_iter3_reg;
wire   [7:0] add_ln135_fu_3189_p2;
wire   [15:0] select_ln134_4_fu_3201_p3;
wire   [7:0] select_ln134_3_fu_3254_p3;
reg    ap_enable_reg_pp4_iter1;
wire   [8:0] add_ln139_fu_3264_p2;
reg   [8:0] add_ln139_reg_5789;
reg   [8:0] add_ln139_reg_5789_pp4_iter2_reg;
reg   [8:0] add_ln139_reg_5789_pp4_iter3_reg;
reg   [8:0] add_ln139_reg_5789_pp4_iter4_reg;
wire  signed [10:0] grp_fu_4184_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln138_1_fu_3275_p2;
reg   [10:0] add_ln138_1_reg_5804;
wire   [1:0] add_ln140_fu_3313_p2;
reg   [1:0] add_ln140_reg_5809;
wire  signed [15:0] p_cast42_fu_3364_p1;
reg  signed [15:0] p_cast42_reg_5834;
wire    ap_CS_fsm_state47;
wire  signed [15:0] p_cast62_fu_3367_p1;
reg  signed [15:0] p_cast62_reg_5839;
wire  signed [15:0] p_cast64_fu_3370_p1;
reg  signed [15:0] p_cast64_reg_5844;
wire  signed [15:0] p_cast66_fu_3373_p1;
reg  signed [15:0] p_cast66_reg_5849;
wire  signed [15:0] p_cast44_fu_3376_p1;
reg  signed [15:0] p_cast44_reg_5854;
wire  signed [15:0] p_cast68_fu_3379_p1;
reg  signed [15:0] p_cast68_reg_5859;
wire  signed [15:0] p_cast70_fu_3382_p1;
reg  signed [15:0] p_cast70_reg_5864;
wire  signed [15:0] p_cast72_fu_3385_p1;
reg  signed [15:0] p_cast72_reg_5869;
wire  signed [15:0] p_cast46_fu_3388_p1;
reg  signed [15:0] p_cast46_reg_5874;
wire  signed [15:0] p_cast74_fu_3391_p1;
reg  signed [15:0] p_cast74_reg_5879;
wire  signed [15:0] p_cast76_fu_3394_p1;
reg  signed [15:0] p_cast76_reg_5884;
wire  signed [15:0] p_cast78_fu_3397_p1;
reg  signed [15:0] p_cast78_reg_5889;
wire  signed [15:0] p_cast48_fu_3400_p1;
reg  signed [15:0] p_cast48_reg_5894;
wire  signed [15:0] p_cast80_fu_3403_p1;
reg  signed [15:0] p_cast80_reg_5899;
wire  signed [15:0] p_cast82_fu_3406_p1;
reg  signed [15:0] p_cast82_reg_5904;
wire  signed [15:0] sext_ln151_fu_3409_p1;
reg  signed [15:0] sext_ln151_reg_5909;
wire   [0:0] icmp_ln151_fu_3412_p2;
reg   [0:0] icmp_ln151_reg_5914;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state48_pp5_stage0_iter0;
wire    ap_block_state49_pp5_stage0_iter1;
wire    ap_block_state50_pp5_stage0_iter2;
wire    ap_block_state51_pp5_stage0_iter3;
wire    ap_block_state52_pp5_stage0_iter4;
wire    ap_block_state53_pp5_stage0_iter5;
wire    ap_block_state54_pp5_stage0_iter6;
wire    ap_block_state55_pp5_stage0_iter7;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln151_reg_5914_pp5_iter1_reg;
reg   [0:0] icmp_ln151_reg_5914_pp5_iter2_reg;
reg   [0:0] icmp_ln151_reg_5914_pp5_iter3_reg;
reg   [0:0] icmp_ln151_reg_5914_pp5_iter4_reg;
reg   [0:0] icmp_ln151_reg_5914_pp5_iter5_reg;
wire   [5:0] add_ln151_fu_3418_p2;
reg   [5:0] add_ln151_reg_5918;
reg    ap_enable_reg_pp5_iter0;
wire   [6:0] zext_ln151_fu_3435_p1;
reg   [6:0] zext_ln151_reg_5928;
reg   [6:0] zext_ln151_reg_5928_pp5_iter2_reg;
reg   [6:0] zext_ln151_reg_5928_pp5_iter3_reg;
reg   [6:0] zext_ln151_reg_5928_pp5_iter4_reg;
reg   [6:0] zext_ln151_reg_5928_pp5_iter5_reg;
reg   [6:0] zext_ln151_reg_5928_pp5_iter6_reg;
wire  signed [8:0] sext_ln159_fu_3449_p1;
reg  signed [8:0] sext_ln159_reg_5937;
wire   [0:0] icmp_ln159_fu_3453_p2;
reg   [0:0] icmp_ln159_reg_5942;
reg   [0:0] icmp_ln159_reg_5942_pp5_iter2_reg;
wire   [8:0] add_ln169_3_fu_3464_p2;
reg   [8:0] add_ln169_3_reg_5953;
reg   [0:0] tmp_21_reg_5978;
wire  signed [8:0] sext_ln159_3_fu_3547_p1;
reg  signed [8:0] sext_ln159_3_reg_5989;
reg   [0:0] tmp_22_reg_5994;
reg   [0:0] tmp_22_reg_5994_pp5_iter3_reg;
wire   [63:0] zext_ln169_fu_3564_p1;
reg   [63:0] zext_ln169_reg_6000;
reg   [63:0] zext_ln169_reg_6000_pp5_iter3_reg;
reg   [63:0] zext_ln169_reg_6000_pp5_iter4_reg;
reg   [63:0] zext_ln169_reg_6000_pp5_iter5_reg;
reg   [63:0] zext_ln169_reg_6000_pp5_iter6_reg;
wire   [0:0] icmp_ln271_3_fu_3592_p2;
reg   [0:0] icmp_ln271_3_reg_6025;
reg   [0:0] icmp_ln271_3_reg_6025_pp5_iter3_reg;
reg   [0:0] icmp_ln271_3_reg_6025_pp5_iter4_reg;
reg   [0:0] icmp_ln271_3_reg_6025_pp5_iter5_reg;
reg   [0:0] icmp_ln271_3_reg_6025_pp5_iter6_reg;
wire   [31:0] output_l1_0_q1;
reg    ap_enable_reg_pp5_iter3;
wire   [7:0] add_ln110_fu_3918_p2;
wire    ap_CS_fsm_state56;
wire   [23:0] grp_fu_4090_p2;
reg   [23:0] bound148_reg_6188;
wire    ap_CS_fsm_state59;
wire   [0:0] icmp_ln296_fu_3923_p2;
reg   [0:0] icmp_ln296_reg_6193;
wire   [0:0] icmp_ln294_fu_3928_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state60_pp6_stage0_iter0;
wire    ap_block_state61_pp6_stage0_iter1;
wire    ap_block_state62_pp6_stage0_iter2;
wire    ap_block_state63_pp6_stage0_iter3;
reg    ap_block_state64_pp6_stage0_iter4;
reg    ap_block_pp6_stage0_11001;
reg   [0:0] icmp_ln294_reg_6198_pp6_iter1_reg;
reg   [0:0] icmp_ln294_reg_6198_pp6_iter2_reg;
wire   [23:0] add_ln294_fu_3933_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln295_fu_3939_p2;
reg   [0:0] icmp_ln295_reg_6207;
reg   [0:0] icmp_ln295_reg_6207_pp6_iter1_reg;
wire   [5:0] select_ln294_1_fu_3950_p3;
reg   [5:0] select_ln294_1_reg_6215;
wire   [18:0] select_ln295_3_fu_3968_p3;
wire   [1:0] select_ln295_1_fu_4028_p3;
reg   [1:0] select_ln295_1_reg_6230;
reg   [1:0] select_ln295_1_reg_6230_pp6_iter3_reg;
wire   [2:0] select_ln295_2_fu_4036_p3;
reg    ap_enable_reg_pp6_iter2;
wire   [15:0] add_ln296_fu_4048_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state24;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_flush_enable;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_condition_pp4_exit_iter4_state45;
reg    ap_enable_reg_pp4_iter5;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_flush_enable;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter5;
reg    ap_condition_pp5_exit_iter4_state52;
reg    ap_enable_reg_pp5_iter6;
reg    ap_enable_reg_pp5_iter7;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_flush_enable;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter3;
reg    ap_condition_pp6_exit_iter2_state62;
reg   [8:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_q0;
reg   [8:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_q0;
reg   [8:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_q0;
reg   [8:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_q0;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_0_address1;
reg    weight_l2_0_ce1;
wire   [7:0] weight_l2_0_q1;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_1_address1;
reg    weight_l2_1_ce1;
wire   [7:0] weight_l2_1_q1;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_2_address1;
reg    weight_l2_2_ce1;
wire   [7:0] weight_l2_2_q1;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_q0;
reg   [8:0] weight_l2_3_address1;
reg    weight_l2_3_ce1;
wire   [7:0] weight_l2_3_q1;
reg   [8:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_q0;
reg   [8:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_q0;
reg   [8:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_q0;
reg   [8:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] data_l1_0_0_address0;
reg    data_l1_0_0_ce0;
reg    data_l1_0_0_we0;
wire  signed [7:0] data_l1_0_0_q0;
reg   [8:0] data_l1_1_0_address0;
reg    data_l1_1_0_ce0;
reg    data_l1_1_0_we0;
wire   [7:0] data_l1_1_0_q0;
reg   [8:0] data_l1_2_0_address0;
reg    data_l1_2_0_ce0;
reg    data_l1_2_0_we0;
wire   [7:0] data_l1_2_0_q0;
reg   [8:0] data_l1_3_0_address0;
reg    data_l1_3_0_ce0;
reg    data_l1_3_0_we0;
wire   [7:0] data_l1_3_0_q0;
reg   [8:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
reg   [31:0] output_l1_0_d0;
reg   [8:0] output_l1_0_address1;
reg    output_l1_0_ce1;
reg   [8:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
reg   [31:0] output_l1_1_d0;
reg   [8:0] output_l1_1_address1;
reg    output_l1_1_ce1;
wire   [31:0] output_l1_1_q1;
reg   [8:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
reg   [31:0] output_l1_2_d0;
reg   [8:0] output_l1_2_address1;
reg    output_l1_2_ce1;
wire   [31:0] output_l1_2_q1;
reg   [8:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
reg   [31:0] output_l1_3_d0;
reg   [8:0] output_l1_3_address1;
reg    output_l1_3_ce1;
wire   [31:0] output_l1_3_q1;
reg   [11:0] indvar_flatten136_reg_1302;
reg   [5:0] ko_reg_1313;
reg   [5:0] co_reg_1324;
reg   [2:0] ki_1_reg_1335;
wire    ap_CS_fsm_state28;
reg   [7:0] ap_phi_mux_hi_phi_fu_1361_p4;
wire    ap_block_pp3_stage0;
reg   [15:0] indvar_flatten105_reg_1379;
reg   [7:0] r_reg_1390;
reg   [7:0] s_reg_1401;
reg   [5:0] ap_phi_mux_i_phi_fu_1471_p4;
wire    ap_block_pp5_stage0;
reg   [5:0] ap_phi_mux_k_3_phi_fu_1494_p4;
wire   [63:0] zext_ln78_fu_1606_p1;
wire   [63:0] zext_ln82_fu_1662_p1;
wire   [63:0] zext_ln86_fu_1710_p1;
wire   [63:0] newIndex66_cast_fu_1976_p1;
wire   [63:0] zext_ln101_fu_2151_p1;
wire   [63:0] zext_ln124_16_fu_2373_p1;
wire   [63:0] zext_ln124_17_fu_2397_p1;
wire   [63:0] zext_ln124_18_fu_2678_p1;
wire   [63:0] zext_ln124_19_fu_2685_p1;
wire   [63:0] zext_ln124_20_fu_2736_p1;
wire   [63:0] zext_ln124_21_fu_2743_p1;
wire   [63:0] zext_ln124_22_fu_2794_p1;
wire   [63:0] zext_ln124_23_fu_2801_p1;
wire   [63:0] zext_ln124_24_fu_2852_p1;
wire   [63:0] zext_ln124_25_fu_2859_p1;
wire   [63:0] zext_ln124_26_fu_2910_p1;
wire   [63:0] zext_ln124_27_fu_2917_p1;
wire   [63:0] zext_ln124_28_fu_2968_p1;
wire   [63:0] zext_ln124_29_fu_2975_p1;
wire   [63:0] zext_ln124_30_fu_3026_p1;
wire   [63:0] zext_ln124_31_fu_3033_p1;
wire   [63:0] zext_ln140_1_fu_3328_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln139_fu_3357_p1;
wire   [63:0] zext_ln160_fu_3424_p1;
wire   [63:0] zext_ln160_2_fu_3459_p1;
wire   [63:0] zext_ln160_3_fu_3533_p1;
wire   [63:0] zext_ln169_1_fu_3574_p1;
wire   [63:0] zext_ln169_2_fu_3583_p1;
wire   [63:0] zext_ln169_3_fu_3588_p1;
wire   [63:0] zext_ln160_4_fu_3644_p1;
wire   [63:0] zext_ln278_fu_3857_p1;
wire   [0:0] icmp_ln271_fu_3847_p2;
wire   [63:0] zext_ln278_1_fu_3885_p1;
wire   [0:0] icmp_ln271_1_fu_3875_p2;
wire   [63:0] zext_ln278_2_fu_3913_p1;
wire   [0:0] icmp_ln271_2_fu_3903_p2;
wire   [63:0] zext_ln297_fu_4054_p1;
reg   [31:0] psum3_fu_260;
wire  signed [31:0] grp_fu_4279_p3;
reg   [31:0] psum2_fu_264;
wire  signed [31:0] grp_fu_4247_p3;
reg   [31:0] psum1_fu_268;
wire  signed [31:0] grp_fu_4215_p3;
reg   [31:0] psum3_1_fu_272;
wire  signed [31:0] grp_fu_4287_p3;
reg   [31:0] psum2_1_fu_276;
wire  signed [31:0] grp_fu_4255_p3;
reg   [31:0] psum1_1_fu_280;
wire  signed [31:0] grp_fu_4223_p3;
reg   [31:0] psum3_2_fu_284;
wire  signed [31:0] grp_fu_4295_p3;
reg   [31:0] psum2_2_fu_288;
wire  signed [31:0] grp_fu_4263_p3;
reg   [31:0] psum1_2_fu_292;
wire  signed [31:0] grp_fu_4231_p3;
reg   [31:0] psum3_3_fu_296;
wire  signed [31:0] grp_fu_4303_p3;
reg   [31:0] psum2_3_fu_300;
wire  signed [31:0] grp_fu_4271_p3;
reg   [31:0] psum1_3_fu_304;
wire  signed [31:0] grp_fu_4239_p3;
reg  signed [7:0] arrayidx2187_promoted_fu_308;
reg  signed [7:0] arrayidx24011_promoted_fu_312;
reg  signed [7:0] arrayidx26315_promoted_fu_316;
reg  signed [7:0] arrayidx28619_promoted_fu_320;
reg  signed [7:0] arrayidx2187_1_promoted_fu_324;
reg  signed [7:0] arrayidx24011_1_promoted_fu_328;
reg  signed [7:0] arrayidx26315_1_promoted_fu_332;
reg  signed [7:0] arrayidx28619_1_promoted_fu_336;
reg  signed [7:0] arrayidx2187_2_promoted_fu_340;
wire  signed [7:0] select_ln159_2_fu_3712_p3;
reg  signed [7:0] arrayidx24011_2_promoted_fu_344;
wire  signed [7:0] select_ln159_1_fu_3637_p3;
reg  signed [7:0] arrayidx26315_2_promoted_fu_348;
wire  signed [7:0] select_ln159_fu_3509_p3;
reg  signed [7:0] arrayidx28619_2_promoted_fu_352;
reg    ap_block_pp6_stage0_01001;
wire   [7:0] trunc_ln708_fu_1598_p1;
wire   [7:0] trunc_ln708_1_fu_1654_p1;
wire   [7:0] trunc_ln708_2_fu_1702_p1;
wire  signed [31:0] grp_fu_4319_p3;
wire  signed [31:0] grp_fu_4327_p3;
wire  signed [31:0] grp_fu_4335_p3;
wire  signed [31:0] grp_fu_4311_p3;
wire   [7:0] tmp_19_fu_3339_p6;
wire   [7:0] tmp_fu_1613_p0;
wire   [7:0] tmp_fu_1613_p1;
wire   [15:0] tmp_fu_1613_p2;
wire   [7:0] tmp1_fu_1621_p0;
wire   [7:0] tmp1_fu_1621_p1;
wire   [7:0] tmp2_fu_1669_p0;
wire   [7:0] tmp2_fu_1669_p1;
wire   [15:0] tmp2_fu_1669_p2;
wire   [7:0] mul310_fu_1717_p0;
wire   [7:0] mul310_fu_1717_p1;
wire   [7:0] tmp4_cast_fu_1763_p0;
wire   [7:0] tmp4_cast_fu_1763_p1;
wire   [5:0] bound110_fu_1789_p0;
wire   [5:0] bound110_fu_1789_p1;
wire   [0:0] icmp_ln90_fu_1815_p2;
wire   [5:0] add_ln89_1_fu_1828_p2;
wire   [5:0] mul_ln89_fu_1854_p1;
wire   [7:0] mul_ln89_1_fu_1863_p0;
wire   [7:0] mul_ln89_1_fu_1863_p1;
wire   [7:0] or_ln89_fu_1868_p2;
wire   [7:0] mul_ln89_2_fu_1878_p0;
wire   [7:0] mul_ln89_2_fu_1878_p1;
wire   [7:0] or_ln89_1_fu_1883_p2;
wire   [7:0] mul_ln89_3_fu_1893_p0;
wire   [7:0] mul_ln89_3_fu_1893_p1;
wire   [7:0] or_ln89_2_fu_1898_p2;
wire   [7:0] mul_ln89_4_fu_1908_p0;
wire   [7:0] mul_ln89_4_fu_1908_p1;
wire   [7:0] empty_57_fu_1925_p2;
wire   [7:0] zext_ln96_1_fu_1953_p1;
wire   [7:0] empty_45_fu_1961_p2;
wire   [5:0] newIndex_fu_1966_p4;
wire   [7:0] empty_47_fu_1984_p2;
wire   [7:0] empty_48_fu_1993_p2;
wire   [10:0] p_cast12_fu_1998_p1;
wire   [10:0] p_cast13_fu_1989_p1;
wire   [63:0] tmp_1_fu_2077_p5;
wire   [7:0] tmp_1_fu_2077_p6;
wire   [0:0] icmp_ln98_fu_2106_p2;
wire   [7:0] add_ln97_1_fu_2119_p2;
wire   [8:0] wi_cast_fu_2143_p1;
wire   [8:0] grp_fu_4176_p3;
wire   [0:0] icmp_ln110_fu_2169_p2;
wire   [7:0] add_ln108_17_fu_2182_p2;
wire   [7:0] mul_ln108_fu_2200_p0;
wire   [7:0] mul_ln108_fu_2200_p1;
wire   [10:0] mul_ln108_fu_2200_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_1_fu_2205_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_2_fu_2214_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_3_fu_2223_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_4_fu_2232_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_5_fu_2241_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_6_fu_2250_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_7_fu_2259_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_8_fu_2268_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_9_fu_2277_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_10_fu_2286_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_11_fu_2295_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_12_fu_2304_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_13_fu_2313_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_14_fu_2322_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_15_fu_2331_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln108_16_fu_2340_p2;
wire   [10:0] add_ln125_fu_2357_p2;
wire   [8:0] lshr_ln3_fu_2363_p4;
wire   [10:0] add_ln125_1_fu_2381_p2;
wire   [8:0] lshr_ln124_1_fu_2387_p4;
wire   [10:0] add_ln125_2_fu_2405_p2;
wire   [10:0] add_ln125_3_fu_2421_p2;
wire   [10:0] add_ln125_4_fu_2437_p2;
wire   [10:0] add_ln125_5_fu_2453_p2;
wire   [10:0] add_ln125_6_fu_2469_p2;
wire   [10:0] add_ln125_7_fu_2485_p2;
wire   [10:0] add_ln125_8_fu_2501_p2;
wire   [10:0] add_ln125_9_fu_2517_p2;
wire   [10:0] add_ln125_10_fu_2533_p2;
wire   [10:0] add_ln125_11_fu_2549_p2;
wire   [10:0] add_ln125_12_fu_2565_p2;
wire   [10:0] add_ln125_13_fu_2581_p2;
wire   [10:0] add_ln125_14_fu_2597_p2;
wire   [10:0] add_ln125_15_fu_2613_p2;
wire   [1:0] add_ln124_fu_2634_p2;
wire   [63:0] tmp_3_fu_2642_p5;
wire   [1:0] add_ln124_1_fu_2656_p2;
wire   [63:0] tmp_4_fu_2664_p5;
wire   [1:0] add_ln124_2_fu_2692_p2;
wire   [63:0] tmp_5_fu_2700_p5;
wire   [1:0] add_ln124_3_fu_2714_p2;
wire   [63:0] tmp_6_fu_2722_p5;
wire   [1:0] add_ln124_4_fu_2750_p2;
wire   [63:0] tmp_7_fu_2758_p5;
wire   [1:0] add_ln124_5_fu_2772_p2;
wire   [63:0] tmp_8_fu_2780_p5;
wire   [1:0] add_ln124_6_fu_2808_p2;
wire   [63:0] tmp_9_fu_2816_p5;
wire   [1:0] add_ln124_7_fu_2830_p2;
wire   [63:0] tmp_s_fu_2838_p5;
wire   [1:0] add_ln124_8_fu_2866_p2;
wire   [63:0] tmp_10_fu_2874_p5;
wire   [1:0] add_ln124_9_fu_2888_p2;
wire   [63:0] tmp_11_fu_2896_p5;
wire   [1:0] add_ln124_10_fu_2924_p2;
wire   [63:0] tmp_12_fu_2932_p5;
wire   [1:0] add_ln124_11_fu_2946_p2;
wire   [63:0] tmp_13_fu_2954_p5;
wire   [1:0] add_ln124_12_fu_2982_p2;
wire   [63:0] tmp_14_fu_2990_p5;
wire   [1:0] add_ln124_13_fu_3004_p2;
wire   [63:0] tmp_15_fu_3012_p5;
wire   [1:0] add_ln124_14_fu_3043_p2;
wire   [63:0] tmp_16_fu_3051_p5;
wire   [1:0] add_ln124_15_fu_3065_p2;
wire   [63:0] tmp_17_fu_3073_p5;
wire   [7:0] p_mid131_fu_3087_p0;
wire   [7:0] p_mid131_fu_3087_p1;
wire   [1:0] empty_49_fu_3091_p1;
wire   [7:0] tmp_18_fu_3095_p3;
wire   [2:0] add_ln130_1_fu_3122_p2;
wire   [1:0] empty_53_fu_3128_p1;
wire   [7:0] tmp_19_mid1_fu_3140_p3;
wire   [0:0] icmp_ln135_fu_3151_p2;
wire   [0:0] or_ln134_fu_3171_p2;
wire   [15:0] add_ln134_3_fu_3195_p2;
wire   [7:0] mul_ln138_fu_3213_p0;
wire   [7:0] mul_ln138_fu_3213_p1;
wire   [8:0] zext_ln134_fu_3209_p1;
wire   [8:0] mul_ln138_fu_3213_p2;
wire   [7:0] select_ln130_fu_3218_p3;
wire   [7:0] add_ln134_fu_3232_p2;
wire   [7:0] mul_ln138_1_fu_3242_p0;
wire   [7:0] mul_ln138_1_fu_3242_p1;
wire   [8:0] zext_ln134_1_fu_3238_p1;
wire   [8:0] mul_ln138_1_fu_3242_p2;
wire   [8:0] select_ln130_3_fu_3225_p3;
wire   [8:0] select_ln134_1_fu_3247_p3;
wire   [8:0] wi_1_cast58_fu_3261_p1;
wire  signed [10:0] grp_fu_4190_p2;
wire  signed [10:0] grp_fu_4197_p4;
wire   [10:0] grp_fu_4206_p4;
wire   [10:0] select_ln130_4_fu_3279_p3;
wire   [10:0] select_ln134_2_fu_3284_p3;
wire   [1:0] trunc_ln134_fu_3295_p1;
wire   [10:0] wi_1_cast_fu_3304_p1;
wire   [10:0] add_ln134_1_fu_3290_p2;
wire   [1:0] add_ln134_2_fu_3299_p2;
wire   [10:0] add_ln141_fu_3307_p2;
wire   [8:0] lshr_ln4_fu_3318_p4;
wire   [63:0] tmp_19_fu_3339_p5;
wire   [6:0] add_ln157_fu_3443_p2;
wire   [8:0] zext_ln160_1_fu_3439_p1;
wire  signed [6:0] add_ln157_1_fu_3516_p2;
wire  signed [8:0] sext_ln159_1_fu_3521_p1;
wire  signed [6:0] add_ln157_2_fu_3538_p2;
wire   [8:0] add_ln169_fu_3559_p2;
wire   [8:0] add_ln169_1_fu_3569_p2;
wire   [8:0] add_ln169_2_fu_3579_p2;
wire  signed [16:0] sext_ln159_2_fu_3543_p1;
wire  signed [6:0] add_ln271_fu_3834_p2;
wire  signed [16:0] sext_ln271_1_fu_3843_p1;
wire  signed [8:0] sext_ln271_fu_3839_p1;
wire   [8:0] add_ln279_fu_3852_p2;
wire  signed [6:0] add_ln271_1_fu_3862_p2;
wire  signed [16:0] sext_ln271_3_fu_3871_p1;
wire  signed [8:0] sext_ln271_2_fu_3867_p1;
wire   [8:0] add_ln279_1_fu_3880_p2;
wire  signed [6:0] add_ln271_2_fu_3890_p2;
wire  signed [16:0] sext_ln271_5_fu_3899_p1;
wire  signed [8:0] sext_ln271_4_fu_3895_p1;
wire   [8:0] add_ln279_2_fu_3908_p2;
wire   [5:0] add_ln294_1_fu_3944_p2;
wire   [18:0] add_ln295_1_fu_3962_p2;
wire   [1:0] trunc_ln297_fu_3983_p1;
wire   [0:0] icmp_ln296_1_fu_3994_p2;
wire   [2:0] select_ln294_fu_3976_p3;
wire   [0:0] select_ln294_3_fu_3999_p3;
wire   [0:0] or_ln295_fu_4011_p2;
wire   [2:0] add_ln295_fu_4005_p2;
wire   [1:0] trunc_ln297_1_fu_4024_p1;
wire   [1:0] select_ln294_2_fu_3987_p3;
wire   [15:0] select_ln295_fu_4016_p3;
wire  signed [8:0] grp_fu_4343_p3;
wire   [31:0] p_Repl2_s_fu_4061_p6;
wire   [15:0] grp_fu_4079_p0;
wire   [15:0] grp_fu_4079_p1;
wire   [15:0] grp_fu_4085_p0;
wire   [7:0] grp_fu_4085_p1;
wire   [5:0] grp_fu_4090_p0;
wire   [17:0] grp_fu_4090_p1;
wire  signed [10:0] grp_fu_4096_p0;
wire  signed [10:0] grp_fu_4101_p0;
wire  signed [10:0] grp_fu_4106_p0;
wire  signed [10:0] grp_fu_4111_p0;
wire  signed [10:0] grp_fu_4116_p0;
wire  signed [10:0] grp_fu_4121_p0;
wire  signed [10:0] grp_fu_4126_p0;
wire  signed [10:0] grp_fu_4131_p0;
wire  signed [10:0] grp_fu_4136_p0;
wire  signed [10:0] grp_fu_4141_p0;
wire  signed [10:0] grp_fu_4146_p0;
wire  signed [10:0] grp_fu_4151_p0;
wire  signed [10:0] grp_fu_4156_p0;
wire  signed [10:0] grp_fu_4161_p0;
wire  signed [10:0] grp_fu_4166_p0;
wire  signed [10:0] grp_fu_4171_p0;
wire   [7:0] grp_fu_4176_p0;
wire   [7:0] grp_fu_4176_p1;
wire   [8:0] grp_fu_4176_p2;
wire   [7:0] grp_fu_4184_p1;
wire   [7:0] grp_fu_4190_p1;
wire   [7:0] grp_fu_4197_p0;
wire   [7:0] grp_fu_4197_p1;
wire   [7:0] grp_fu_4197_p2;
wire   [7:0] grp_fu_4206_p0;
wire   [7:0] grp_fu_4206_p1;
wire   [7:0] grp_fu_4206_p2;
wire   [10:0] grp_fu_4206_p3;
wire  signed [7:0] grp_fu_4215_p1;
wire   [31:0] grp_fu_4215_p2;
wire  signed [7:0] grp_fu_4223_p1;
wire   [31:0] grp_fu_4223_p2;
wire  signed [7:0] grp_fu_4231_p1;
wire   [31:0] grp_fu_4231_p2;
wire  signed [7:0] grp_fu_4239_p1;
wire  signed [7:0] grp_fu_4247_p1;
wire  signed [7:0] grp_fu_4255_p1;
wire  signed [7:0] grp_fu_4263_p1;
wire  signed [7:0] grp_fu_4271_p1;
wire  signed [7:0] grp_fu_4279_p1;
wire  signed [7:0] grp_fu_4287_p1;
wire  signed [7:0] grp_fu_4295_p1;
wire  signed [7:0] grp_fu_4303_p1;
wire  signed [7:0] grp_fu_4311_p1;
wire  signed [7:0] grp_fu_4319_p1;
wire  signed [7:0] grp_fu_4327_p1;
wire  signed [7:0] grp_fu_4335_p1;
wire   [5:0] grp_fu_4343_p0;
wire   [8:0] grp_fu_4343_p2;
reg    grp_fu_4343_ce;
wire    ap_CS_fsm_state65;
reg   [42:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_block_pp4;
reg    ap_block_pp5;
reg    ap_block_pp6;
reg    ap_enable_operation_951;
reg    ap_enable_state50_pp5_iter2_stage0;
reg    ap_enable_operation_988;
reg    ap_enable_state51_pp5_iter3_stage0;
reg    ap_enable_operation_1135;
reg    ap_enable_state55_pp5_iter7_stage0;
reg    ap_enable_operation_955;
reg    ap_enable_operation_990;
reg    ap_enable_operation_1145;
reg    ap_predicate_op959_load_state50;
reg    ap_enable_operation_959;
reg    ap_predicate_op992_load_state51;
reg    ap_enable_operation_992;
reg    ap_enable_operation_1155;
reg    ap_enable_operation_962;
reg    ap_enable_operation_994;
reg    ap_enable_operation_1158;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire   [11:0] bound110_fu_1789_p00;
wire   [11:0] bound110_fu_1789_p10;
wire   [31:0] grp_fu_4079_p00;
wire   [31:0] grp_fu_4079_p10;
wire   [23:0] grp_fu_4085_p00;
wire   [23:0] grp_fu_4090_p00;
wire   [23:0] grp_fu_4090_p10;
wire   [8:0] grp_fu_4176_p00;
wire   [10:0] grp_fu_4184_p10;
wire   [10:0] grp_fu_4190_p10;
wire   [8:0] grp_fu_4343_p00;
wire   [10:0] mul_ln108_fu_2200_p00;
wire   [10:0] mul_ln89_1_fu_1863_p10;
wire   [10:0] mul_ln89_2_fu_1878_p10;
wire   [10:0] mul_ln89_3_fu_1893_p10;
wire   [10:0] mul_ln89_4_fu_1908_p10;
wire   [8:0] mul_ln89_fu_1854_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
end

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(trunc_ln708_fu_1598_p1),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(trunc_ln708_fu_1598_p1),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(trunc_ln708_fu_1598_p1),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(trunc_ln708_fu_1598_p1),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(trunc_ln708_1_fu_1654_p1),
    .q0(weight_l2_0_q0),
    .address1(weight_l2_0_address1),
    .ce1(weight_l2_0_ce1),
    .q1(weight_l2_0_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(trunc_ln708_1_fu_1654_p1),
    .q0(weight_l2_1_q0),
    .address1(weight_l2_1_address1),
    .ce1(weight_l2_1_ce1),
    .q1(weight_l2_1_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(trunc_ln708_1_fu_1654_p1),
    .q0(weight_l2_2_q0),
    .address1(weight_l2_2_address1),
    .ce1(weight_l2_2_ce1),
    .q1(weight_l2_2_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(trunc_ln708_1_fu_1654_p1),
    .q0(weight_l2_3_q0),
    .address1(weight_l2_3_address1),
    .ce1(weight_l2_3_ce1),
    .q1(weight_l2_3_q1)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(trunc_ln708_2_fu_1702_p1),
    .q0(data_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(trunc_ln708_2_fu_1702_p1),
    .q0(data_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(trunc_ln708_2_fu_1702_p1),
    .q0(data_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(trunc_ln708_2_fu_1702_p1),
    .q0(data_l2_3_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_0_0_address0),
    .ce0(data_l1_0_0_ce0),
    .we0(data_l1_0_0_we0),
    .d0(tmp_19_fu_3339_p6),
    .q0(data_l1_0_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_1_0_address0),
    .ce0(data_l1_1_0_ce0),
    .we0(data_l1_1_0_we0),
    .d0(tmp_19_fu_3339_p6),
    .q0(data_l1_1_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_2_0_address0),
    .ce0(data_l1_2_0_ce0),
    .we0(data_l1_2_0_we0),
    .d0(tmp_19_fu_3339_p6),
    .q0(data_l1_2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_3_0_address0),
    .ce0(data_l1_3_0_ce0),
    .we0(data_l1_3_0_we0),
    .d0(tmp_19_fu_3339_p6),
    .q0(data_l1_3_0_q0)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(output_l1_0_d0),
    .address1(output_l1_0_address1),
    .ce1(output_l1_0_ce1),
    .q1(output_l1_0_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(output_l1_1_d0),
    .address1(output_l1_1_address1),
    .ce1(output_l1_1_ce1),
    .q1(output_l1_1_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(output_l1_2_d0),
    .address1(output_l1_2_address1),
    .ce1(output_l1_2_ce1),
    .q1(output_l1_2_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(output_l1_3_d0),
    .address1(output_l1_3_address1),
    .ce1(output_l1_3_ce1),
    .q1(output_l1_3_q1)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(tmp_fu_1613_p0),
    .din1(tmp_fu_1613_p1),
    .dout(tmp_fu_1613_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U2(
    .din0(tmp1_fu_1621_p0),
    .din1(tmp1_fu_1621_p1),
    .dout(tmp1_fu_1621_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U3(
    .din0(tmp2_fu_1669_p0),
    .din1(tmp2_fu_1669_p1),
    .dout(tmp2_fu_1669_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U4(
    .din0(mul310_fu_1717_p0),
    .din1(mul310_fu_1717_p1),
    .dout(mul310_fu_1717_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U5(
    .din0(tmp4_cast_fu_1763_p0),
    .din1(tmp4_cast_fu_1763_p1),
    .dout(tmp4_cast_fu_1763_p2)
);

Conv_sysarr_dbbuf_mul_6ns_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6ns_6ns_12_1_1_U6(
    .din0(bound110_fu_1789_p0),
    .din1(bound110_fu_1789_p1),
    .dout(bound110_fu_1789_p2)
);

Conv_sysarr_dbbuf_mul_9s_6ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_9s_6ns_9_1_1_U7(
    .din0(empty_42_reg_4757),
    .din1(mul_ln89_fu_1854_p1),
    .dout(mul_ln89_fu_1854_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U8(
    .din0(mul_ln89_1_fu_1863_p0),
    .din1(mul_ln89_1_fu_1863_p1),
    .dout(mul_ln89_1_fu_1863_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U9(
    .din0(mul_ln89_2_fu_1878_p0),
    .din1(mul_ln89_2_fu_1878_p1),
    .dout(mul_ln89_2_fu_1878_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U10(
    .din0(mul_ln89_3_fu_1893_p0),
    .din1(mul_ln89_3_fu_1893_p1),
    .dout(mul_ln89_3_fu_1893_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U11(
    .din0(mul_ln89_4_fu_1908_p0),
    .din1(mul_ln89_4_fu_1908_p1),
    .dout(mul_ln89_4_fu_1908_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U12(
    .din0(bias_l2_0_q0),
    .din1(bias_l2_1_q0),
    .din2(bias_l2_2_q0),
    .din3(bias_l2_3_q0),
    .din4(tmp_1_fu_2077_p5),
    .dout(tmp_1_fu_2077_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U13(
    .din0(mul_ln108_fu_2200_p0),
    .din1(mul_ln108_fu_2200_p1),
    .dout(mul_ln108_fu_2200_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U14(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_3_fu_2642_p5),
    .dout(tmp_3_fu_2642_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U15(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_4_fu_2664_p5),
    .dout(tmp_4_fu_2664_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U16(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_5_fu_2700_p5),
    .dout(tmp_5_fu_2700_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U17(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_6_fu_2722_p5),
    .dout(tmp_6_fu_2722_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U18(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_7_fu_2758_p5),
    .dout(tmp_7_fu_2758_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U19(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_8_fu_2780_p5),
    .dout(tmp_8_fu_2780_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U20(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_9_fu_2816_p5),
    .dout(tmp_9_fu_2816_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U21(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_s_fu_2838_p5),
    .dout(tmp_s_fu_2838_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U22(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_10_fu_2874_p5),
    .dout(tmp_10_fu_2874_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U23(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_11_fu_2896_p5),
    .dout(tmp_11_fu_2896_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U24(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_12_fu_2932_p5),
    .dout(tmp_12_fu_2932_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U25(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_13_fu_2954_p5),
    .dout(tmp_13_fu_2954_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U26(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_14_fu_2990_p5),
    .dout(tmp_14_fu_2990_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U27(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_15_fu_3012_p5),
    .dout(tmp_15_fu_3012_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U28(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_16_fu_3051_p5),
    .dout(tmp_16_fu_3051_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U29(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_17_fu_3073_p5),
    .dout(tmp_17_fu_3073_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U30(
    .din0(p_mid131_fu_3087_p0),
    .din1(p_mid131_fu_3087_p1),
    .dout(p_mid131_fu_3087_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U31(
    .din0(mul_ln138_fu_3213_p0),
    .din1(mul_ln138_fu_3213_p1),
    .dout(mul_ln138_fu_3213_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U32(
    .din0(mul_ln138_1_fu_3242_p0),
    .din1(mul_ln138_1_fu_3242_p1),
    .dout(mul_ln138_1_fu_3242_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U33(
    .din0(data_l2_0_q0),
    .din1(data_l2_1_q0),
    .din2(data_l2_2_q0),
    .din3(data_l2_3_q0),
    .din4(tmp_19_fu_3339_p5),
    .dout(tmp_19_fu_3339_p6)
);

Conv_sysarr_dbbuf_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U34(
    .din0(output_l1_0_q1),
    .din1(output_l1_1_q1),
    .din2(output_l1_2_q1),
    .din3(output_l1_3_q1),
    .din4(select_ln295_1_reg_6230_pp6_iter3_reg),
    .dout(p_Repl2_s_fu_4061_p6)
);

Conv_sysarr_dbbuf_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4079_p0),
    .din1(grp_fu_4079_p1),
    .ce(1'b1),
    .dout(grp_fu_4079_p2)
);

Conv_sysarr_dbbuf_mul_mul_16ns_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16ns_8ns_24_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4085_p0),
    .din1(grp_fu_4085_p1),
    .ce(1'b1),
    .dout(grp_fu_4085_p2)
);

Conv_sysarr_dbbuf_mul_mul_6ns_18ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 24 ))
mul_mul_6ns_18ns_24_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4090_p0),
    .din1(grp_fu_4090_p1),
    .ce(1'b1),
    .dout(grp_fu_4090_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4096_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4096_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4101_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4101_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4106_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4106_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4111_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4111_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4116_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4116_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4121_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4121_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4126_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4126_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4131_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4131_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4136_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4136_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4141_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4141_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4146_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4146_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4151_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4151_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4156_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4156_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4161_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4161_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4166_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4166_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4171_p0),
    .din1(empty_41_reg_4715),
    .ce(1'b1),
    .dout(grp_fu_4171_p2)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_8ns_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_8ns_9ns_9_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4176_p0),
    .din1(grp_fu_4176_p1),
    .din2(grp_fu_4176_p2),
    .ce(1'b1),
    .dout(grp_fu_4176_p3)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp4_cast_reg_4735),
    .din1(grp_fu_4184_p1),
    .ce(1'b1),
    .dout(grp_fu_4184_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp4_cast_reg_4735),
    .din1(grp_fu_4190_p1),
    .ce(1'b1),
    .dout(grp_fu_4190_p2)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11s_11_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4197_p0),
    .din1(grp_fu_4197_p1),
    .din2(grp_fu_4197_p2),
    .din3(grp_fu_4184_p2),
    .ce(1'b1),
    .dout(grp_fu_4197_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4206_p0),
    .din1(grp_fu_4206_p1),
    .din2(grp_fu_4206_p2),
    .din3(grp_fu_4206_p3),
    .ce(1'b1),
    .dout(grp_fu_4206_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx28619_promoted_fu_320),
    .din1(grp_fu_4215_p1),
    .din2(grp_fu_4215_p2),
    .ce(1'b1),
    .dout(grp_fu_4215_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx28619_1_promoted_fu_336),
    .din1(grp_fu_4223_p1),
    .din2(grp_fu_4223_p2),
    .ce(1'b1),
    .dout(grp_fu_4223_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx28619_2_promoted_fu_352),
    .din1(grp_fu_4231_p1),
    .din2(grp_fu_4231_p2),
    .ce(1'b1),
    .dout(grp_fu_4231_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1_0_0_q0),
    .din1(grp_fu_4239_p1),
    .din2(output_l1_0_q1),
    .ce(1'b1),
    .dout(grp_fu_4239_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx26315_promoted_fu_316),
    .din1(grp_fu_4247_p1),
    .din2(psum1_fu_268),
    .ce(1'b1),
    .dout(grp_fu_4247_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx26315_1_promoted_fu_332),
    .din1(grp_fu_4255_p1),
    .din2(psum1_1_fu_280),
    .ce(1'b1),
    .dout(grp_fu_4255_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx26315_2_promoted_fu_348),
    .din1(grp_fu_4263_p1),
    .din2(psum1_2_fu_292),
    .ce(1'b1),
    .dout(grp_fu_4263_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln159_fu_3509_p3),
    .din1(grp_fu_4271_p1),
    .din2(psum1_3_fu_304),
    .ce(1'b1),
    .dout(grp_fu_4271_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx24011_promoted_fu_312),
    .din1(grp_fu_4279_p1),
    .din2(psum2_fu_264),
    .ce(1'b1),
    .dout(grp_fu_4279_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx24011_1_promoted_fu_328),
    .din1(grp_fu_4287_p1),
    .din2(psum2_1_fu_276),
    .ce(1'b1),
    .dout(grp_fu_4287_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx24011_2_promoted_fu_344),
    .din1(grp_fu_4295_p1),
    .din2(psum2_2_fu_288),
    .ce(1'b1),
    .dout(grp_fu_4295_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln159_1_fu_3637_p3),
    .din1(grp_fu_4303_p1),
    .din2(psum2_3_fu_300),
    .ce(1'b1),
    .dout(grp_fu_4303_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2187_promoted_fu_308),
    .din1(grp_fu_4311_p1),
    .din2(psum3_fu_260),
    .ce(1'b1),
    .dout(grp_fu_4311_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2187_1_promoted_fu_324),
    .din1(grp_fu_4319_p1),
    .din2(psum3_1_fu_272),
    .ce(1'b1),
    .dout(grp_fu_4319_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2187_2_promoted_fu_340),
    .din1(grp_fu_4327_p1),
    .din2(psum3_2_fu_284),
    .ce(1'b1),
    .dout(grp_fu_4327_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln159_2_fu_3712_p3),
    .din1(grp_fu_4335_p1),
    .din2(psum3_3_fu_296),
    .ce(1'b1),
    .dout(grp_fu_4335_p3)
);

Conv_sysarr_dbbuf_mac_muladd_6ns_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_6ns_9s_9ns_9_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4343_p0),
    .din1(empty_42_reg_4757),
    .din2(grp_fu_4343_p2),
    .ce(grp_fu_4343_ce),
    .dout(grp_fu_4343_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state18);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state24) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state24)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state24);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end else if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_condition_pp4_exit_iter4_state45) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
            ap_enable_reg_pp4_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter4_state45) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter3;
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp5_flush_enable)) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter4_state52)) begin
                ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp6_flush_enable)) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state59)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter2_state62)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end else if ((1'b1 == ap_CS_fsm_state59)) begin
            ap_enable_reg_pp6_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln130_fu_3106_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        ci_reg_1423 <= select_ln130_6_fu_3163_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        ci_reg_1423 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & ((icmp_ln108_fu_2158_p2 == 1'd1) | (cmp92290_reg_4674 == 1'd1)))) begin
        co_reg_1324 <= add_ln90_fu_2629_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        co_reg_1324 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln130_reg_5725 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        hi_1_reg_1456 <= select_ln134_3_fu_3254_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        hi_1_reg_1456 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_4990 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        hi_reg_1357 <= select_ln97_1_reg_5004;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        hi_reg_1357 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_5914 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        i_reg_1467 <= add_ln151_reg_5918;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        i_reg_1467 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp92290_reg_4674 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        indvar_flatten105_reg_1379 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        indvar_flatten105_reg_1379 <= add_ln108_reg_5107;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & ((icmp_ln108_fu_2158_p2 == 1'd1) | (cmp92290_reg_4674 == 1'd1)))) begin
        indvar_flatten136_reg_1302 <= add_ln89_reg_4771;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        indvar_flatten136_reg_1302 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln294_fu_3928_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten143_reg_1501 <= select_ln295_3_fu_3968_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        indvar_flatten143_reg_1501 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln130_fu_3106_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten15_reg_1434 <= select_ln134_4_fu_3201_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten15_reg_1434 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln294_fu_3928_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten160_reg_1479 <= add_ln294_fu_3933_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        indvar_flatten160_reg_1479 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln130_fu_3106_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten47_reg_1412 <= add_ln130_fu_3111_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten47_reg_1412 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln97_fu_2095_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten_reg_1346 <= add_ln97_fu_2100_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten_reg_1346 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_1_reg_1280 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln80_fu_1629_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_1_reg_1280 <= add_ln80_fu_1634_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_2_reg_1291 <= 24'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln84_fu_1677_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        k_2_reg_1291 <= add_ln84_fu_1682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln294_reg_6198 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        k_3_reg_1490 <= select_ln294_1_reg_6215;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        k_3_reg_1490 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        k_reg_1269 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln76_fu_1573_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_1269 <= add_ln76_fu_1578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_1804_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ki_1_reg_1335 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        ki_1_reg_1335 <= add_ln96_reg_4872;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln294_reg_6198_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        ki_reg_1512 <= select_ln295_2_fu_4036_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ki_reg_1512 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & ((icmp_ln108_fu_2158_p2 == 1'd1) | (cmp92290_reg_4674 == 1'd1)))) begin
        ko_reg_1313 <= select_ln89_1_reg_4783;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ko_reg_1313 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp92290_reg_4674 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        r_reg_1390 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        r_reg_1390 <= select_ln108_1_reg_5117;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp92290_reg_4674 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        s_reg_1401 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        s_reg_1401 <= add_ln110_fu_3918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln294_reg_6198_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        wh_reg_1523 <= add_ln296_fu_4048_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        wh_reg_1523 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln130_fu_3106_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        wi_1_reg_1445 <= add_ln135_fu_3189_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        wi_1_reg_1445 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln97_fu_2095_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        wi_reg_1368 <= add_ln98_fu_2137_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        wi_reg_1368 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        C_cast_reg_4700[7 : 0] <= C_cast_fu_1754_p1[7 : 0];
        WH_cast_reg_4708[7 : 0] <= WH_cast_fu_1757_p1[7 : 0];
        bound110_reg_4752 <= bound110_fu_1789_p2;
        bound20_reg_4747[17 : 2] <= bound20_fu_1777_p1[17 : 2];
        cmp92290_reg_4674 <= cmp92290_fu_1725_p2;
        div66_cast_reg_4695 <= {{bias_in_V_read_reg_4351[7:2]}};
        div68_cast_reg_4690 <= {{bias_in_V_read_1_reg_4362[7:2]}};
        empty_41_reg_4715 <= empty_41_fu_1760_p1;
        empty_42_reg_4757 <= empty_42_fu_1795_p1;
        icmp_ln134_reg_4763 <= icmp_ln134_fu_1799_p2;
        mul310_cast49_reg_4666[15 : 0] <= mul310_cast49_fu_1721_p1[15 : 0];
        mul310_reg_4658 <= mul310_fu_1717_p2;
        tmp4_cast_reg_4735 <= tmp4_cast_fu_1763_p2;
        tmp_2_reg_4741[17 : 2] <= tmp_2_fu_1769_p3[17 : 2];
        trunc_ln3_cast52_reg_4678[7 : 0] <= trunc_ln3_cast52_fu_1730_p1[7 : 0];
        trunc_ln4_cast17_reg_4685[7 : 0] <= trunc_ln4_cast17_fu_1733_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        C_reg_4367 <= C_fu_1538_p1;
        bias_in_V_read_1_reg_4362 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        K_reg_4356 <= K_fu_1534_p1;
        bias_in_V_read_reg_4351 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        RS_reg_4416 <= RS_fu_1565_p1;
        zext_ln54_reg_4389[7 : 0] <= zext_ln54_fu_1550_p1[7 : 0];
        zext_ln57_reg_4394[7 : 0] <= zext_ln57_fu_1553_p1[7 : 0];
        zext_ln60_reg_4400[7 : 0] <= zext_ln60_fu_1556_p1[7 : 0];
        zext_ln67_1_reg_4411[7 : 0] <= zext_ln67_1_fu_1562_p1[7 : 0];
        zext_ln67_reg_4406[7 : 0] <= zext_ln67_fu_1559_p1[7 : 0];
        zext_ln72_reg_4423[7 : 0] <= zext_ln72_fu_1569_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        WH_in_reg_4382 <= WH_in_fu_1546_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        WH_reg_4373 <= WH_fu_1542_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add107_1331_cast_reg_5059 <= grp_fu_4131_p2;
        add107_1_1_cast_reg_5074 <= grp_fu_4146_p2;
        add107_1_2_cast_reg_5039 <= grp_fu_4111_p2;
        add107_1_3_cast_reg_5079 <= grp_fu_4151_p2;
        add107_1_cast_reg_5029 <= grp_fu_4101_p2;
        add107_2339_cast_reg_5064 <= grp_fu_4136_p2;
        add107_2_1_cast_reg_5084 <= grp_fu_4156_p2;
        add107_2_2_cast_reg_5044 <= grp_fu_4116_p2;
        add107_2_3_cast_reg_5089 <= grp_fu_4161_p2;
        add107_2_cast_reg_5024 <= grp_fu_4096_p2;
        add107_3347_cast_reg_5069 <= grp_fu_4141_p2;
        add107_3_1_cast_reg_5094 <= grp_fu_4166_p2;
        add107_3_2_cast_reg_5049 <= grp_fu_4121_p2;
        add107_3_3_cast_reg_5099 <= grp_fu_4171_p2;
        add107_3_cast_reg_5034 <= grp_fu_4106_p2;
        add107_cast_reg_5054 <= grp_fu_4126_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp92290_reg_4674 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        add_ln108_reg_5107 <= add_ln108_fu_2163_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln130_5_reg_5751_pp4_iter2_reg == 1'd0) & (icmp_ln134_1_reg_5734_pp4_iter2_reg == 1'd1) & (icmp_ln130_reg_5725_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln138_1_reg_5804 <= add_ln138_1_fu_3275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_5725 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln139_reg_5789 <= add_ln139_fu_3264_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        add_ln139_reg_5789_pp4_iter2_reg <= add_ln139_reg_5789;
        add_ln139_reg_5789_pp4_iter3_reg <= add_ln139_reg_5789_pp4_iter2_reg;
        add_ln139_reg_5789_pp4_iter4_reg <= add_ln139_reg_5789_pp4_iter3_reg;
        icmp_ln130_reg_5725_pp4_iter2_reg <= icmp_ln130_reg_5725_pp4_iter1_reg;
        icmp_ln130_reg_5725_pp4_iter3_reg <= icmp_ln130_reg_5725_pp4_iter2_reg;
        icmp_ln134_1_reg_5734_pp4_iter2_reg <= icmp_ln134_1_reg_5734_pp4_iter1_reg;
        icmp_ln134_1_reg_5734_pp4_iter3_reg <= icmp_ln134_1_reg_5734_pp4_iter2_reg;
        select_ln130_1_reg_5742_pp4_iter2_reg <= select_ln130_1_reg_5742_pp4_iter1_reg;
        select_ln130_1_reg_5742_pp4_iter3_reg <= select_ln130_1_reg_5742_pp4_iter2_reg;
        select_ln130_1_reg_5742_pp4_iter4_reg <= select_ln130_1_reg_5742_pp4_iter3_reg;
        select_ln130_5_reg_5751_pp4_iter2_reg <= select_ln130_5_reg_5751_pp4_iter1_reg;
        select_ln130_5_reg_5751_pp4_iter3_reg <= select_ln130_5_reg_5751_pp4_iter2_reg;
        select_ln134_reg_5763_pp4_iter2_reg <= select_ln134_reg_5763_pp4_iter1_reg;
        select_ln134_reg_5763_pp4_iter3_reg <= select_ln134_reg_5763_pp4_iter2_reg;
        trunc_ln141_reg_5769_pp4_iter2_reg <= trunc_ln141_reg_5769_pp4_iter1_reg;
        trunc_ln141_reg_5769_pp4_iter3_reg <= trunc_ln141_reg_5769_pp4_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_5725_pp4_iter3_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln140_reg_5809 <= add_ln140_fu_3313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        add_ln151_reg_5918 <= add_ln151_fu_3418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_5914 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln169_3_reg_5953 <= add_ln169_3_fu_3464_p2;
        icmp_ln159_reg_5942 <= icmp_ln159_fu_3453_p2;
        sext_ln159_reg_5937 <= sext_ln159_fu_3449_p1;
        zext_ln151_reg_5928[5 : 0] <= zext_ln151_fu_3435_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln89_reg_4771 <= add_ln89_fu_1809_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln96_reg_4872 <= add_ln96_fu_1947_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter4 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln151_reg_5914_pp5_iter3_reg == 1'd0))) begin
        arrayidx2187_1_promoted_fu_324 <= arrayidx2187_2_promoted_fu_340;
        arrayidx2187_2_promoted_fu_340 <= select_ln159_2_fu_3712_p3;
        arrayidx2187_promoted_fu_308 <= arrayidx2187_1_promoted_fu_324;
        psum1_1_fu_280 <= grp_fu_4223_p3;
        psum1_2_fu_292 <= grp_fu_4231_p3;
        psum1_3_fu_304 <= grp_fu_4239_p3;
        psum1_fu_268 <= grp_fu_4215_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1) & (icmp_ln151_reg_5914_pp5_iter2_reg == 1'd0))) begin
        arrayidx24011_1_promoted_fu_328 <= arrayidx24011_2_promoted_fu_344;
        arrayidx24011_2_promoted_fu_344 <= select_ln159_1_fu_3637_p3;
        arrayidx24011_promoted_fu_312 <= arrayidx24011_1_promoted_fu_328;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln151_reg_5914_pp5_iter1_reg == 1'd0))) begin
        arrayidx26315_1_promoted_fu_332 <= arrayidx26315_2_promoted_fu_348;
        arrayidx26315_2_promoted_fu_348 <= select_ln159_fu_3509_p3;
        arrayidx26315_promoted_fu_316 <= arrayidx26315_1_promoted_fu_332;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_5914 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        arrayidx28619_1_promoted_fu_336 <= arrayidx28619_2_promoted_fu_352;
        arrayidx28619_2_promoted_fu_352 <= data_l1_0_0_q0;
        arrayidx28619_promoted_fu_320 <= arrayidx28619_1_promoted_fu_336;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        bound148_reg_6188 <= grp_fu_4090_p2;
        icmp_ln296_reg_6193 <= icmp_ln296_fu_3923_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv79_reg_4982 <= conv79_fu_2091_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_1941_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        empty_44_reg_4877 <= empty_44_fu_1957_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln130_reg_5725 <= icmp_ln130_fu_3106_p2;
        icmp_ln130_reg_5725_pp4_iter1_reg <= icmp_ln130_reg_5725;
        icmp_ln134_1_reg_5734_pp4_iter1_reg <= icmp_ln134_1_reg_5734;
        select_ln130_1_reg_5742_pp4_iter1_reg <= select_ln130_1_reg_5742;
        select_ln130_5_reg_5751_pp4_iter1_reg <= select_ln130_5_reg_5751;
        select_ln134_reg_5763_pp4_iter1_reg <= select_ln134_reg_5763;
        trunc_ln141_reg_5769_pp4_iter1_reg <= trunc_ln141_reg_5769;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_fu_3106_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln134_1_reg_5734 <= icmp_ln134_1_fu_3117_p2;
        select_ln130_1_reg_5742 <= select_ln130_1_fu_3132_p3;
        select_ln130_5_reg_5751 <= select_ln130_5_fu_3156_p3;
        select_ln134_reg_5763 <= select_ln134_fu_3177_p3;
        trunc_ln141_reg_5769 <= trunc_ln141_fu_3185_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln151_reg_5914 <= icmp_ln151_fu_3412_p2;
        icmp_ln151_reg_5914_pp5_iter1_reg <= icmp_ln151_reg_5914;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        icmp_ln151_reg_5914_pp5_iter2_reg <= icmp_ln151_reg_5914_pp5_iter1_reg;
        icmp_ln151_reg_5914_pp5_iter3_reg <= icmp_ln151_reg_5914_pp5_iter2_reg;
        icmp_ln151_reg_5914_pp5_iter4_reg <= icmp_ln151_reg_5914_pp5_iter3_reg;
        icmp_ln151_reg_5914_pp5_iter5_reg <= icmp_ln151_reg_5914_pp5_iter4_reg;
        icmp_ln159_reg_5942_pp5_iter2_reg <= icmp_ln159_reg_5942;
        icmp_ln271_3_reg_6025_pp5_iter3_reg <= icmp_ln271_3_reg_6025;
        icmp_ln271_3_reg_6025_pp5_iter4_reg <= icmp_ln271_3_reg_6025_pp5_iter3_reg;
        icmp_ln271_3_reg_6025_pp5_iter5_reg <= icmp_ln271_3_reg_6025_pp5_iter4_reg;
        icmp_ln271_3_reg_6025_pp5_iter6_reg <= icmp_ln271_3_reg_6025_pp5_iter5_reg;
        tmp_22_reg_5994_pp5_iter3_reg <= tmp_22_reg_5994;
        zext_ln151_reg_5928_pp5_iter2_reg[5 : 0] <= zext_ln151_reg_5928[5 : 0];
        zext_ln151_reg_5928_pp5_iter3_reg[5 : 0] <= zext_ln151_reg_5928_pp5_iter2_reg[5 : 0];
        zext_ln151_reg_5928_pp5_iter4_reg[5 : 0] <= zext_ln151_reg_5928_pp5_iter3_reg[5 : 0];
        zext_ln151_reg_5928_pp5_iter5_reg[5 : 0] <= zext_ln151_reg_5928_pp5_iter4_reg[5 : 0];
        zext_ln151_reg_5928_pp5_iter6_reg[5 : 0] <= zext_ln151_reg_5928_pp5_iter5_reg[5 : 0];
        zext_ln169_reg_6000_pp5_iter3_reg[8 : 0] <= zext_ln169_reg_6000[8 : 0];
        zext_ln169_reg_6000_pp5_iter4_reg[8 : 0] <= zext_ln169_reg_6000_pp5_iter3_reg[8 : 0];
        zext_ln169_reg_6000_pp5_iter5_reg[8 : 0] <= zext_ln169_reg_6000_pp5_iter4_reg[8 : 0];
        zext_ln169_reg_6000_pp5_iter6_reg[8 : 0] <= zext_ln169_reg_6000_pp5_iter5_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln151_reg_5914_pp5_iter1_reg == 1'd0))) begin
        icmp_ln271_3_reg_6025 <= icmp_ln271_3_fu_3592_p2;
        sext_ln159_3_reg_5989 <= sext_ln159_3_fu_3547_p1;
        tmp_21_reg_5978 <= add_ln157_1_fu_3516_p2[32'd6];
        tmp_22_reg_5994 <= add_ln157_2_fu_3538_p2[32'd6];
        zext_ln169_reg_6000[8 : 0] <= zext_ln169_fu_3564_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln294_reg_6198 <= icmp_ln294_fu_3928_p2;
        icmp_ln294_reg_6198_pp6_iter1_reg <= icmp_ln294_reg_6198;
        icmp_ln295_reg_6207_pp6_iter1_reg <= icmp_ln295_reg_6207;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln294_reg_6198_pp6_iter2_reg <= icmp_ln294_reg_6198_pp6_iter1_reg;
        icmp_ln294_reg_6198_pp6_iter3_reg <= icmp_ln294_reg_6198_pp6_iter2_reg;
        select_ln295_1_reg_6230_pp6_iter3_reg <= select_ln295_1_reg_6230;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln294_fu_3928_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln295_reg_6207 <= icmp_ln295_fu_3939_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln97_reg_4990 <= icmp_ln97_fu_2095_p2;
        select_ln97_reg_4999_pp3_iter1_reg <= select_ln97_reg_4999;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_fu_2158_p2 == 1'd0) & (cmp92290_reg_4674 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        lshr_ln124_10_reg_5319 <= {{add_ln125_11_fu_2549_p2[10:2]}};
        lshr_ln124_11_reg_5324 <= {{add_ln125_12_fu_2565_p2[10:2]}};
        lshr_ln124_12_reg_5329 <= {{add_ln125_13_fu_2581_p2[10:2]}};
        lshr_ln124_13_reg_5334 <= {{add_ln125_14_fu_2597_p2[10:2]}};
        lshr_ln124_14_reg_5339 <= {{add_ln125_15_fu_2613_p2[10:2]}};
        lshr_ln124_2_reg_5274 <= {{add_ln125_2_fu_2405_p2[10:2]}};
        lshr_ln124_3_reg_5279 <= {{add_ln125_3_fu_2421_p2[10:2]}};
        lshr_ln124_4_reg_5284 <= {{add_ln125_4_fu_2437_p2[10:2]}};
        lshr_ln124_5_reg_5289 <= {{add_ln125_5_fu_2453_p2[10:2]}};
        lshr_ln124_6_reg_5294 <= {{add_ln125_6_fu_2469_p2[10:2]}};
        lshr_ln124_7_reg_5299 <= {{add_ln125_7_fu_2485_p2[10:2]}};
        lshr_ln124_8_reg_5304 <= {{add_ln125_8_fu_2501_p2[10:2]}};
        lshr_ln124_9_reg_5309 <= {{add_ln125_9_fu_2517_p2[10:2]}};
        lshr_ln124_s_reg_5314 <= {{add_ln125_10_fu_2533_p2[10:2]}};
        select_ln108_1_reg_5117 <= select_ln108_1_fu_2188_p3;
        select_ln108_reg_5112 <= select_ln108_fu_2174_p3;
        trunc_ln108_10_reg_5178 <= trunc_ln108_10_fu_2300_p1;
        trunc_ln108_11_reg_5183 <= trunc_ln108_11_fu_2309_p1;
        trunc_ln108_12_reg_5188 <= trunc_ln108_12_fu_2318_p1;
        trunc_ln108_13_reg_5193 <= trunc_ln108_13_fu_2327_p1;
        trunc_ln108_14_reg_5198 <= trunc_ln108_14_fu_2336_p1;
        trunc_ln108_15_reg_5203 <= trunc_ln108_15_fu_2345_p1;
        trunc_ln108_1_reg_5133 <= trunc_ln108_1_fu_2219_p1;
        trunc_ln108_2_reg_5138 <= trunc_ln108_2_fu_2228_p1;
        trunc_ln108_3_reg_5143 <= trunc_ln108_3_fu_2237_p1;
        trunc_ln108_4_reg_5148 <= trunc_ln108_4_fu_2246_p1;
        trunc_ln108_5_reg_5153 <= trunc_ln108_5_fu_2255_p1;
        trunc_ln108_6_reg_5158 <= trunc_ln108_6_fu_2264_p1;
        trunc_ln108_7_reg_5163 <= trunc_ln108_7_fu_2273_p1;
        trunc_ln108_8_reg_5168 <= trunc_ln108_8_fu_2282_p1;
        trunc_ln108_9_reg_5173 <= trunc_ln108_9_fu_2291_p1;
        trunc_ln108_reg_5128 <= trunc_ln108_fu_2210_p1;
        trunc_ln125_reg_5213 <= trunc_ln125_fu_2353_p1;
        zext_ln108_1_reg_5123[7 : 0] <= zext_ln108_1_fu_2196_p1[7 : 0];
        zext_ln110_reg_5208[7 : 0] <= zext_ln110_fu_2349_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_fu_1629_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln1_reg_4481 <= {{k_1_reg_1280[10:2]}};
        trunc_ln82_reg_4477 <= trunc_ln82_fu_1640_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_1677_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lshr_ln2_reg_4509 <= {{k_2_reg_1291[10:2]}};
        trunc_ln86_reg_4505 <= trunc_ln86_fu_1688_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln76_fu_1573_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln_reg_4442 <= {{k_reg_1269[7:2]}};
        trunc_ln78_reg_4438 <= trunc_ln78_fu_1584_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul42_reg_4463 <= grp_fu_4079_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul55_reg_4491 <= grp_fu_4085_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_1804_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        mul_ln89_1_reg_4805 <= mul_ln89_1_fu_1863_p2;
        mul_ln89_2_reg_4813 <= mul_ln89_2_fu_1878_p2;
        mul_ln89_3_reg_4821 <= mul_ln89_3_fu_1893_p2;
        mul_ln89_4_reg_4829 <= mul_ln89_4_fu_1908_p2;
        mul_ln89_reg_4793 <= mul_ln89_fu_1854_p2;
        p_cast11_reg_4843[7 : 2] <= p_cast11_fu_1921_p1[7 : 2];
        p_mid_reg_4788[7 : 2] <= p_mid_fu_1842_p3[7 : 2];
        select_ln89_1_reg_4783 <= select_ln89_1_fu_1834_p3;
        select_ln89_reg_4776 <= select_ln89_fu_1820_p3;
        tmp_20_reg_4837[7 : 2] <= tmp_20_fu_1913_p3[7 : 2];
        zext_ln96_reg_4851[7 : 2] <= zext_ln96_fu_1931_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        p_cast42_reg_5834 <= p_cast42_fu_3364_p1;
        p_cast44_reg_5854 <= p_cast44_fu_3376_p1;
        p_cast46_reg_5874 <= p_cast46_fu_3388_p1;
        p_cast48_reg_5894 <= p_cast48_fu_3400_p1;
        p_cast62_reg_5839 <= p_cast62_fu_3367_p1;
        p_cast64_reg_5844 <= p_cast64_fu_3370_p1;
        p_cast66_reg_5849 <= p_cast66_fu_3373_p1;
        p_cast68_reg_5859 <= p_cast68_fu_3379_p1;
        p_cast70_reg_5864 <= p_cast70_fu_3382_p1;
        p_cast72_reg_5869 <= p_cast72_fu_3385_p1;
        p_cast74_reg_5879 <= p_cast74_fu_3391_p1;
        p_cast76_reg_5884 <= p_cast76_fu_3394_p1;
        p_cast78_reg_5889 <= p_cast78_fu_3397_p1;
        p_cast80_reg_5899 <= p_cast80_fu_3403_p1;
        p_cast82_reg_5904 <= p_cast82_fu_3406_p1;
        sext_ln151_reg_5909 <= sext_ln151_fu_3409_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        p_mid131_reg_5715 <= p_mid131_fu_3087_p2;
        tmp_16_reg_5705 <= tmp_16_fu_3051_p6;
        tmp_17_reg_5710 <= tmp_17_fu_3073_p6;
        zext_ln108_reg_5699[7 : 0] <= zext_ln108_fu_3040_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln151_reg_5914_pp5_iter4_reg == 1'd0))) begin
        psum2_1_fu_276 <= grp_fu_4255_p3;
        psum2_2_fu_288 <= grp_fu_4263_p3;
        psum2_3_fu_300 <= grp_fu_4271_p3;
        psum2_fu_264 <= grp_fu_4247_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter6 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln151_reg_5914_pp5_iter5_reg == 1'd0))) begin
        psum3_1_fu_272 <= grp_fu_4287_p3;
        psum3_2_fu_284 <= grp_fu_4295_p3;
        psum3_3_fu_296 <= grp_fu_4303_p3;
        psum3_fu_260 <= grp_fu_4279_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln294_fu_3928_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln294_1_reg_6215 <= select_ln294_1_fu_3950_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln294_reg_6198_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln295_1_reg_6230 <= select_ln295_1_fu_4028_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln97_fu_2095_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln97_1_reg_5004 <= select_ln97_1_fu_2125_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_fu_2095_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln97_reg_4999 <= select_ln97_fu_2111_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp1_reg_4452 <= tmp1_fu_1621_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_10_reg_5549 <= tmp_10_fu_2874_p6;
        tmp_11_reg_5554 <= tmp_11_fu_2896_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_12_reg_5599 <= tmp_12_fu_2932_p6;
        tmp_13_reg_5604 <= tmp_13_fu_2954_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_14_reg_5649 <= tmp_14_fu_2990_p6;
        tmp_15_reg_5654 <= tmp_15_fu_3012_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_3_reg_5349 <= tmp_3_fu_2642_p6;
        tmp_4_reg_5354 <= tmp_4_fu_2664_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_5_reg_5399 <= tmp_5_fu_2700_p6;
        tmp_6_reg_5404 <= tmp_6_fu_2722_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_7_reg_5449 <= tmp_7_fu_2758_p6;
        tmp_8_reg_5454 <= tmp_8_fu_2780_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_9_reg_5499 <= tmp_9_fu_2816_p6;
        tmp_s_reg_5504 <= tmp_s_fu_2838_p6;
    end
end

always @ (*) begin
    if ((icmp_ln76_fu_1573_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln80_fu_1629_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln84_fu_1677_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln97_fu_2095_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0))) begin
        ap_condition_pp4_exit_iter4_state45 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter4_state45 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln130_fu_3106_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter4 == 1'b1) & (ap_enable_reg_pp5_iter3 == 1'b0))) begin
        ap_condition_pp5_exit_iter4_state52 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter4_state52 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln151_fu_3412_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
        ap_condition_pp5_flush_enable = 1'b1;
    end else begin
        ap_condition_pp5_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        ap_condition_pp6_exit_iter2_state62 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter2_state62 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln294_fu_3928_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
        ap_condition_pp6_flush_enable = 1'b1;
    end else begin
        ap_condition_pp6_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln97_reg_4990 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_hi_phi_fu_1361_p4 = select_ln97_1_reg_5004;
    end else begin
        ap_phi_mux_hi_phi_fu_1361_p4 = hi_reg_1357;
    end
end

always @ (*) begin
    if (((icmp_ln151_reg_5914 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        ap_phi_mux_i_phi_fu_1471_p4 = add_ln151_reg_5918;
    end else begin
        ap_phi_mux_i_phi_fu_1471_p4 = i_reg_1467;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln294_reg_6198 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_k_3_phi_fu_1494_p4 = select_ln294_1_reg_6215;
    end else begin
        ap_phi_mux_k_3_phi_fu_1494_p4 = k_3_reg_1490;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | (~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_0_address0 = newIndex66_cast_fu_1976_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_address0 = zext_ln78_fu_1606_p1;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4438 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_1_address0 = newIndex66_cast_fu_1976_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_address0 = zext_ln78_fu_1606_p1;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4438 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_2_address0 = newIndex66_cast_fu_1976_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_address0 = zext_ln78_fu_1606_p1;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4438 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_3_address0 = newIndex66_cast_fu_1976_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_address0 = zext_ln78_fu_1606_p1;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4438 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln294_reg_6198_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln294_reg_6198_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        data_l1_0_0_address0 = zext_ln160_fu_3424_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_0_0_address0 = zext_ln139_fu_3357_p1;
    end else begin
        data_l1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l1_0_0_ce0 = 1'b1;
    end else begin
        data_l1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln130_1_reg_5742_pp4_iter4_reg == 2'd0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_0_0_we0 = 1'b1;
    end else begin
        data_l1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l1_1_0_address0 = zext_ln160_2_fu_3459_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_1_0_address0 = zext_ln139_fu_3357_p1;
    end else begin
        data_l1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l1_1_0_ce0 = 1'b1;
    end else begin
        data_l1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln130_1_reg_5742_pp4_iter4_reg == 2'd1) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_1_0_we0 = 1'b1;
    end else begin
        data_l1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l1_2_0_address0 = zext_ln160_3_fu_3533_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_2_0_address0 = zext_ln139_fu_3357_p1;
    end else begin
        data_l1_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l1_2_0_ce0 = 1'b1;
    end else begin
        data_l1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln130_1_reg_5742_pp4_iter4_reg == 2'd2) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_2_0_we0 = 1'b1;
    end else begin
        data_l1_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter3 == 1'b1))) begin
        data_l1_3_0_address0 = zext_ln160_4_fu_3644_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_3_0_address0 = zext_ln139_fu_3357_p1;
    end else begin
        data_l1_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1)))) begin
        data_l1_3_0_ce0 = 1'b1;
    end else begin
        data_l1_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln130_1_reg_5742_pp4_iter4_reg == 2'd3) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_3_0_we0 = 1'b1;
    end else begin
        data_l1_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_0_address0 = zext_ln140_1_fu_3328_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_0_address0 = zext_ln86_fu_1710_p1;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_0_ce0 = 1'b1;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln86_reg_4505 == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_1_address0 = zext_ln140_1_fu_3328_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_1_address0 = zext_ln86_fu_1710_p1;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_1_ce0 = 1'b1;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln86_reg_4505 == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_2_address0 = zext_ln140_1_fu_3328_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_2_address0 = zext_ln86_fu_1710_p1;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_2_ce0 = 1'b1;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln86_reg_4505 == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_3_address0 = zext_ln140_1_fu_3328_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_3_address0 = zext_ln86_fu_1710_p1;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_3_ce0 = 1'b1;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln86_reg_4505 == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        grp_fu_4343_ce = 1'b1;
    end else begin
        grp_fu_4343_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_0_address0 = zext_ln169_reg_6000_pp5_iter6_reg;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_0_address0 = zext_ln101_fu_2151_p1;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_address1 = zext_ln297_fu_4054_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_0_address1 = zext_ln169_3_fu_3588_p1;
    end else begin
        output_l1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        output_l1_0_ce0 = 1'b1;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_0_ce1 = 1'b1;
    end else begin
        output_l1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_0_d0 = grp_fu_4335_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_0_d0 = conv79_reg_4982;
    end else begin
        output_l1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4877 == 2'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln271_3_reg_6025_pp5_iter6_reg == 1'd1)))) begin
        output_l1_0_we0 = 1'b1;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_1_address0 = zext_ln278_2_fu_3913_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_1_address0 = zext_ln101_fu_2151_p1;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_address1 = zext_ln297_fu_4054_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_1_address1 = zext_ln169_2_fu_3583_p1;
    end else begin
        output_l1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        output_l1_1_ce0 = 1'b1;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_1_ce1 = 1'b1;
    end else begin
        output_l1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_1_d0 = grp_fu_4327_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_1_d0 = conv79_reg_4982;
    end else begin
        output_l1_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4877 == 2'd1) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln271_2_fu_3903_p2 == 1'd1) & (ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_1_we0 = 1'b1;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_address0 = zext_ln278_1_fu_3885_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_2_address0 = zext_ln101_fu_2151_p1;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_address1 = zext_ln297_fu_4054_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_address1 = zext_ln169_1_fu_3574_p1;
    end else begin
        output_l1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        output_l1_2_ce0 = 1'b1;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_2_ce1 = 1'b1;
    end else begin
        output_l1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_d0 = grp_fu_4319_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_2_d0 = conv79_reg_4982;
    end else begin
        output_l1_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4877 == 2'd2) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln271_1_fu_3875_p2 == 1'd1) & (ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_2_we0 = 1'b1;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_address0 = zext_ln278_fu_3857_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_3_address0 = zext_ln101_fu_2151_p1;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_address1 = zext_ln297_fu_4054_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_address1 = zext_ln169_fu_3564_p1;
    end else begin
        output_l1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        output_l1_3_ce0 = 1'b1;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_3_ce1 = 1'b1;
    end else begin
        output_l1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_d0 = grp_fu_4311_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_3_d0 = conv79_reg_4982;
    end else begin
        output_l1_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4877 == 2'd3) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln271_fu_3847_p2 == 1'd1) & (ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_3_we0 = 1'b1;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address0 = zext_ln124_30_fu_3026_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address0 = zext_ln124_28_fu_2968_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address0 = zext_ln124_26_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address0 = zext_ln124_24_fu_2852_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address0 = zext_ln124_22_fu_2794_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address0 = zext_ln124_20_fu_2736_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address0 = zext_ln124_18_fu_2678_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address0 = zext_ln124_17_fu_2397_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = zext_ln82_fu_1662_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address1 = zext_ln124_31_fu_3033_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address1 = zext_ln124_29_fu_2975_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address1 = zext_ln124_27_fu_2917_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address1 = zext_ln124_25_fu_2859_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address1 = zext_ln124_23_fu_2801_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address1 = zext_ln124_21_fu_2743_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address1 = zext_ln124_19_fu_2685_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address1 = zext_ln124_16_fu_2373_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln82_reg_4477 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address0 = zext_ln124_30_fu_3026_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address0 = zext_ln124_28_fu_2968_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address0 = zext_ln124_26_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address0 = zext_ln124_24_fu_2852_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address0 = zext_ln124_22_fu_2794_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address0 = zext_ln124_20_fu_2736_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address0 = zext_ln124_18_fu_2678_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address0 = zext_ln124_17_fu_2397_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = zext_ln82_fu_1662_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address1 = zext_ln124_31_fu_3033_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address1 = zext_ln124_29_fu_2975_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address1 = zext_ln124_27_fu_2917_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address1 = zext_ln124_25_fu_2859_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address1 = zext_ln124_23_fu_2801_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address1 = zext_ln124_21_fu_2743_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address1 = zext_ln124_19_fu_2685_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address1 = zext_ln124_16_fu_2373_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln82_reg_4477 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address0 = zext_ln124_30_fu_3026_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address0 = zext_ln124_28_fu_2968_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address0 = zext_ln124_26_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address0 = zext_ln124_24_fu_2852_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address0 = zext_ln124_22_fu_2794_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address0 = zext_ln124_20_fu_2736_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address0 = zext_ln124_18_fu_2678_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address0 = zext_ln124_17_fu_2397_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = zext_ln82_fu_1662_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address1 = zext_ln124_31_fu_3033_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address1 = zext_ln124_29_fu_2975_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address1 = zext_ln124_27_fu_2917_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address1 = zext_ln124_25_fu_2859_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address1 = zext_ln124_23_fu_2801_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address1 = zext_ln124_21_fu_2743_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address1 = zext_ln124_19_fu_2685_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address1 = zext_ln124_16_fu_2373_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln82_reg_4477 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address0 = zext_ln124_30_fu_3026_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address0 = zext_ln124_28_fu_2968_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address0 = zext_ln124_26_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address0 = zext_ln124_24_fu_2852_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address0 = zext_ln124_22_fu_2794_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address0 = zext_ln124_20_fu_2736_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address0 = zext_ln124_18_fu_2678_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address0 = zext_ln124_17_fu_2397_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = zext_ln82_fu_1662_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address1 = zext_ln124_31_fu_3033_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address1 = zext_ln124_29_fu_2975_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address1 = zext_ln124_27_fu_2917_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address1 = zext_ln124_25_fu_2859_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address1 = zext_ln124_23_fu_2801_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address1 = zext_ln124_21_fu_2743_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address1 = zext_ln124_19_fu_2685_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address1 = zext_ln124_16_fu_2373_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln82_reg_4477 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln76_fu_1573_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln76_fu_1573_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln80_fu_1629_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln80_fu_1629_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln84_fu_1677_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln84_fu_1677_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln89_fu_1804_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln96_fu_1941_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln97_fu_2095_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln97_fu_2095_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & ((icmp_ln108_fu_2158_p2 == 1'd1) | (cmp92290_reg_4674 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter3 == 1'b0)) & ~((ap_enable_reg_pp5_iter7 == 1'b1) & (ap_enable_reg_pp5_iter6 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (ap_enable_reg_pp5_iter6 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter4 == 1'b1) & (ap_enable_reg_pp6_iter3 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter4 == 1'b1) & (ap_enable_reg_pp6_iter3 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_cast_fu_1754_p1 = C_reg_4367;

assign C_fu_1538_p1 = bias_in_V_dout[7:0];

assign K_fu_1534_p1 = bias_in_V_dout[7:0];

assign RS_fu_1565_p1 = bias_in_V_dout[7:0];

assign WH_cast_fu_1757_p1 = WH_reg_4373;

assign WH_fu_1542_p1 = bias_in_V_dout[7:0];

assign WH_in_fu_1546_p1 = bias_in_V_dout[7:0];

assign add_ln108_10_fu_2286_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_2_1_cast_reg_5084));

assign add_ln108_11_fu_2295_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_2_2_cast_reg_5044));

assign add_ln108_12_fu_2304_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_2_3_cast_reg_5089));

assign add_ln108_13_fu_2313_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_3_cast_reg_5034));

assign add_ln108_14_fu_2322_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_3_1_cast_reg_5094));

assign add_ln108_15_fu_2331_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_3_2_cast_reg_5049));

assign add_ln108_16_fu_2340_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_3_3_cast_reg_5099));

assign add_ln108_17_fu_2182_p2 = (8'd1 + r_reg_1390);

assign add_ln108_1_fu_2205_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_cast_reg_5054));

assign add_ln108_2_fu_2214_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_1331_cast_reg_5059));

assign add_ln108_3_fu_2223_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_2339_cast_reg_5064));

assign add_ln108_4_fu_2232_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_3347_cast_reg_5069));

assign add_ln108_5_fu_2241_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_1_cast_reg_5029));

assign add_ln108_6_fu_2250_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_1_1_cast_reg_5074));

assign add_ln108_7_fu_2259_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_1_2_cast_reg_5039));

assign add_ln108_8_fu_2268_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_1_3_cast_reg_5079));

assign add_ln108_9_fu_2277_p2 = ($signed(mul_ln108_fu_2200_p2) + $signed(add107_2_cast_reg_5024));

assign add_ln108_fu_2163_p2 = (indvar_flatten105_reg_1379 + 16'd1);

assign add_ln110_fu_3918_p2 = (select_ln108_reg_5112 + 8'd1);

assign add_ln124_10_fu_2924_p2 = (trunc_ln108_10_reg_5178 + trunc_ln125_reg_5213);

assign add_ln124_11_fu_2946_p2 = (trunc_ln108_11_reg_5183 + trunc_ln125_reg_5213);

assign add_ln124_12_fu_2982_p2 = (trunc_ln108_12_reg_5188 + trunc_ln125_reg_5213);

assign add_ln124_13_fu_3004_p2 = (trunc_ln108_13_reg_5193 + trunc_ln125_reg_5213);

assign add_ln124_14_fu_3043_p2 = (trunc_ln108_14_reg_5198 + trunc_ln125_reg_5213);

assign add_ln124_15_fu_3065_p2 = (trunc_ln108_15_reg_5203 + trunc_ln125_reg_5213);

assign add_ln124_1_fu_2656_p2 = (trunc_ln108_1_reg_5133 + trunc_ln125_reg_5213);

assign add_ln124_2_fu_2692_p2 = (trunc_ln108_2_reg_5138 + trunc_ln125_reg_5213);

assign add_ln124_3_fu_2714_p2 = (trunc_ln108_3_reg_5143 + trunc_ln125_reg_5213);

assign add_ln124_4_fu_2750_p2 = (trunc_ln108_4_reg_5148 + trunc_ln125_reg_5213);

assign add_ln124_5_fu_2772_p2 = (trunc_ln108_5_reg_5153 + trunc_ln125_reg_5213);

assign add_ln124_6_fu_2808_p2 = (trunc_ln108_6_reg_5158 + trunc_ln125_reg_5213);

assign add_ln124_7_fu_2830_p2 = (trunc_ln108_7_reg_5163 + trunc_ln125_reg_5213);

assign add_ln124_8_fu_2866_p2 = (trunc_ln108_8_reg_5168 + trunc_ln125_reg_5213);

assign add_ln124_9_fu_2888_p2 = (trunc_ln108_9_reg_5173 + trunc_ln125_reg_5213);

assign add_ln124_fu_2634_p2 = (trunc_ln108_reg_5128 + trunc_ln125_reg_5213);

assign add_ln125_10_fu_2533_p2 = (zext_ln110_fu_2349_p1 + add_ln108_11_fu_2295_p2);

assign add_ln125_11_fu_2549_p2 = (zext_ln110_fu_2349_p1 + add_ln108_12_fu_2304_p2);

assign add_ln125_12_fu_2565_p2 = (zext_ln110_fu_2349_p1 + add_ln108_13_fu_2313_p2);

assign add_ln125_13_fu_2581_p2 = (zext_ln110_fu_2349_p1 + add_ln108_14_fu_2322_p2);

assign add_ln125_14_fu_2597_p2 = (zext_ln110_fu_2349_p1 + add_ln108_15_fu_2331_p2);

assign add_ln125_15_fu_2613_p2 = (zext_ln110_fu_2349_p1 + add_ln108_16_fu_2340_p2);

assign add_ln125_1_fu_2381_p2 = (zext_ln110_fu_2349_p1 + add_ln108_2_fu_2214_p2);

assign add_ln125_2_fu_2405_p2 = (zext_ln110_fu_2349_p1 + add_ln108_3_fu_2223_p2);

assign add_ln125_3_fu_2421_p2 = (zext_ln110_fu_2349_p1 + add_ln108_4_fu_2232_p2);

assign add_ln125_4_fu_2437_p2 = (zext_ln110_fu_2349_p1 + add_ln108_5_fu_2241_p2);

assign add_ln125_5_fu_2453_p2 = (zext_ln110_fu_2349_p1 + add_ln108_6_fu_2250_p2);

assign add_ln125_6_fu_2469_p2 = (zext_ln110_fu_2349_p1 + add_ln108_7_fu_2259_p2);

assign add_ln125_7_fu_2485_p2 = (zext_ln110_fu_2349_p1 + add_ln108_8_fu_2268_p2);

assign add_ln125_8_fu_2501_p2 = (zext_ln110_fu_2349_p1 + add_ln108_9_fu_2277_p2);

assign add_ln125_9_fu_2517_p2 = (zext_ln110_fu_2349_p1 + add_ln108_10_fu_2286_p2);

assign add_ln125_fu_2357_p2 = (zext_ln110_fu_2349_p1 + add_ln108_1_fu_2205_p2);

assign add_ln130_1_fu_3122_p2 = (3'd1 + ci_reg_1423);

assign add_ln130_fu_3111_p2 = (18'd1 + indvar_flatten47_reg_1412);

assign add_ln134_1_fu_3290_p2 = (zext_ln110_reg_5208 + select_ln134_2_fu_3284_p3);

assign add_ln134_2_fu_3299_p2 = (trunc_ln134_fu_3295_p1 + trunc_ln125_reg_5213);

assign add_ln134_3_fu_3195_p2 = (indvar_flatten15_reg_1434 + 16'd1);

assign add_ln134_fu_3232_p2 = (8'd1 + select_ln130_fu_3218_p3);

assign add_ln135_fu_3189_p2 = (select_ln134_fu_3177_p3 + 8'd1);

assign add_ln138_1_fu_3275_p2 = ($signed(grp_fu_4190_p2) + $signed(p_mid131_reg_5715));

assign add_ln139_fu_3264_p2 = (select_ln134_1_fu_3247_p3 + wi_1_cast58_fu_3261_p1);

assign add_ln140_fu_3313_p2 = (add_ln134_2_fu_3299_p2 + trunc_ln141_reg_5769_pp4_iter3_reg);

assign add_ln141_fu_3307_p2 = (wi_1_cast_fu_3304_p1 + add_ln134_1_fu_3290_p2);

assign add_ln151_fu_3418_p2 = (ap_phi_mux_i_phi_fu_1471_p4 + 6'd1);

assign add_ln157_1_fu_3516_p2 = ($signed(zext_ln151_reg_5928) + $signed(7'd126));

assign add_ln157_2_fu_3538_p2 = ($signed(zext_ln151_reg_5928) + $signed(7'd125));

assign add_ln157_fu_3443_p2 = ($signed(zext_ln151_fu_3435_p1) + $signed(7'd127));

assign add_ln169_1_fu_3569_p2 = ($signed(sext_ln159_1_fu_3521_p1) + $signed(mul_ln89_reg_4793));

assign add_ln169_2_fu_3579_p2 = ($signed(sext_ln159_reg_5937) + $signed(mul_ln89_reg_4793));

assign add_ln169_3_fu_3464_p2 = (zext_ln160_1_fu_3439_p1 + mul_ln89_reg_4793);

assign add_ln169_fu_3559_p2 = ($signed(sext_ln159_3_fu_3547_p1) + $signed(mul_ln89_reg_4793));

assign add_ln271_1_fu_3862_p2 = ($signed(zext_ln151_reg_5928_pp5_iter6_reg) + $signed(7'd123));

assign add_ln271_2_fu_3890_p2 = ($signed(zext_ln151_reg_5928_pp5_iter6_reg) + $signed(7'd124));

assign add_ln271_fu_3834_p2 = ($signed(zext_ln151_reg_5928_pp5_iter6_reg) + $signed(7'd122));

assign add_ln279_1_fu_3880_p2 = ($signed(sext_ln271_2_fu_3867_p1) + $signed(mul_ln89_reg_4793));

assign add_ln279_2_fu_3908_p2 = ($signed(sext_ln271_4_fu_3895_p1) + $signed(mul_ln89_reg_4793));

assign add_ln279_fu_3852_p2 = ($signed(sext_ln271_fu_3839_p1) + $signed(mul_ln89_reg_4793));

assign add_ln294_1_fu_3944_p2 = (6'd1 + ap_phi_mux_k_3_phi_fu_1494_p4);

assign add_ln294_fu_3933_p2 = (indvar_flatten160_reg_1479 + 24'd1);

assign add_ln295_1_fu_3962_p2 = (19'd1 + indvar_flatten143_reg_1501);

assign add_ln295_fu_4005_p2 = (3'd1 + select_ln294_fu_3976_p3);

assign add_ln296_fu_4048_p2 = (16'd1 + select_ln295_fu_4016_p3);

assign add_ln76_fu_1578_p2 = (k_reg_1269 + 8'd1);

assign add_ln80_fu_1634_p2 = (k_1_reg_1280 + 32'd1);

assign add_ln84_fu_1682_p2 = (k_2_reg_1291 + 24'd1);

assign add_ln89_1_fu_1828_p2 = (ko_reg_1313 + 6'd1);

assign add_ln89_fu_1809_p2 = (indvar_flatten136_reg_1302 + 12'd1);

assign add_ln90_fu_2629_p2 = (select_ln89_reg_4776 + 6'd1);

assign add_ln96_fu_1947_p2 = (ki_1_reg_1335 + 3'd1);

assign add_ln97_1_fu_2119_p2 = (ap_phi_mux_hi_phi_fu_1361_p4 + 8'd1);

assign add_ln97_fu_2100_p2 = (indvar_flatten_reg_1346 + 16'd1);

assign add_ln98_fu_2137_p2 = (select_ln97_fu_2111_p3 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1 = ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4 = ((1'b1 == ap_block_pp4_stage0_subdone) & (ap_ST_fsm_pp4_stage0 == ap_CS_fsm));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5 = ((1'b1 == ap_block_pp5_stage0_subdone) & (ap_ST_fsm_pp5_stage0 == ap_CS_fsm));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6 = ((1'b1 == ap_block_pp6_stage0_subdone) & (ap_ST_fsm_pp6_stage0 == ap_CS_fsm));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln294_reg_6198_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln294_reg_6198_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln294_reg_6198_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp1_stage0_iter1 = (weight_in_V_empty_n == 1'b0);
end

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp2_stage0_iter1 = (data_in_V_empty_n == 1'b0);
end

assign ap_block_state24_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state64_pp6_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln294_reg_6198_pp6_iter3_reg == 1'd0));
end

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (bias_in_V_empty_n == 1'b0);
end

always @ (*) begin
    ap_enable_operation_1135 = (icmp_ln271_fu_3847_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1145 = (icmp_ln271_1_fu_3875_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1155 = (icmp_ln271_2_fu_3903_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1158 = (icmp_ln271_3_reg_6025_pp5_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_951 = (icmp_ln151_reg_5914_pp5_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_955 = (icmp_ln151_reg_5914_pp5_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_959 = (ap_predicate_op959_load_state50 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_962 = (icmp_ln151_reg_5914_pp5_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_988 = (icmp_ln151_reg_5914_pp5_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_990 = (icmp_ln151_reg_5914_pp5_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_992 = (ap_predicate_op992_load_state51 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_994 = (icmp_ln151_reg_5914_pp5_iter2_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

always @ (*) begin
    ap_enable_state50_pp5_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state51_pp5_iter3_stage0 = ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter3 == 1'b1));
end

always @ (*) begin
    ap_enable_state55_pp5_iter7_stage0 = ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1));
end

always @ (*) begin
    ap_predicate_op959_load_state50 = ((icmp_ln159_reg_5942 == 1'd1) & (icmp_ln151_reg_5914_pp5_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op992_load_state51 = ((icmp_ln159_reg_5942_pp5_iter2_reg == 1'd1) & (icmp_ln151_reg_5914_pp5_iter2_reg == 1'd0));
end

assign bound110_fu_1789_p0 = bound110_fu_1789_p00;

assign bound110_fu_1789_p00 = div68_cast_fu_1736_p4;

assign bound110_fu_1789_p1 = bound110_fu_1789_p10;

assign bound110_fu_1789_p10 = div66_cast_fu_1745_p4;

assign bound20_fu_1777_p1 = tmp_2_fu_1769_p3;

assign cmp92290_fu_1725_p2 = ((RS_reg_4416 == 8'd0) ? 1'b1 : 1'b0);

assign conv79_fu_2091_p1 = $signed(tmp_1_fu_2077_p6);

assign conv_out_V_din = p_Repl2_s_fu_4061_p6;

assign div66_cast_fu_1745_p4 = {{bias_in_V_read_reg_4351[7:2]}};

assign div68_cast_fu_1736_p4 = {{bias_in_V_read_1_reg_4362[7:2]}};

assign empty_41_fu_1760_p1 = tmp1_reg_4452[10:0];

assign empty_42_fu_1795_p1 = mul310_fu_1717_p2[8:0];

assign empty_44_fu_1957_p1 = ki_1_reg_1335[1:0];

assign empty_45_fu_1961_p2 = (p_mid_reg_4788 + zext_ln96_1_fu_1953_p1);

assign empty_47_fu_1984_p2 = (tmp_20_reg_4837 | 8'd1);

assign empty_48_fu_1993_p2 = (tmp_20_reg_4837 | 8'd2);

assign empty_49_fu_3091_p1 = ci_reg_1423[1:0];

assign empty_53_fu_3128_p1 = add_ln130_1_fu_3122_p2[1:0];

assign empty_57_fu_1925_p2 = (tmp_20_fu_1913_p3 | 8'd3);

assign grp_fu_4079_p0 = grp_fu_4079_p00;

assign grp_fu_4079_p00 = tmp1_fu_1621_p2;

assign grp_fu_4079_p1 = grp_fu_4079_p10;

assign grp_fu_4079_p10 = tmp_fu_1613_p2;

assign grp_fu_4085_p0 = grp_fu_4085_p00;

assign grp_fu_4085_p00 = tmp2_fu_1669_p2;

assign grp_fu_4085_p1 = zext_ln67_reg_4406;

assign grp_fu_4090_p0 = grp_fu_4090_p00;

assign grp_fu_4090_p00 = div66_cast_reg_4695;

assign grp_fu_4090_p1 = grp_fu_4090_p10;

assign grp_fu_4090_p10 = tmp_2_reg_4741;

assign grp_fu_4096_p0 = (p_cast11_reg_4843 + mul_ln89_3_reg_4821);

assign grp_fu_4101_p0 = (p_cast11_reg_4843 + mul_ln89_2_reg_4813);

assign grp_fu_4106_p0 = (p_cast11_reg_4843 + mul_ln89_4_reg_4829);

assign grp_fu_4111_p0 = (p_cast12_fu_1998_p1 + mul_ln89_2_reg_4813);

assign grp_fu_4116_p0 = (p_cast12_fu_1998_p1 + mul_ln89_3_reg_4821);

assign grp_fu_4121_p0 = (p_cast12_fu_1998_p1 + mul_ln89_4_reg_4829);

assign grp_fu_4126_p0 = (p_cast11_reg_4843 + mul_ln89_1_reg_4805);

assign grp_fu_4131_p0 = (p_cast13_fu_1989_p1 + mul_ln89_1_reg_4805);

assign grp_fu_4136_p0 = (p_cast12_fu_1998_p1 + mul_ln89_1_reg_4805);

assign grp_fu_4141_p0 = (zext_ln96_reg_4851 + mul_ln89_1_reg_4805);

assign grp_fu_4146_p0 = (p_cast13_fu_1989_p1 + mul_ln89_2_reg_4813);

assign grp_fu_4151_p0 = (zext_ln96_reg_4851 + mul_ln89_2_reg_4813);

assign grp_fu_4156_p0 = (p_cast13_fu_1989_p1 + mul_ln89_3_reg_4821);

assign grp_fu_4161_p0 = (zext_ln96_reg_4851 + mul_ln89_3_reg_4821);

assign grp_fu_4166_p0 = (p_cast13_fu_1989_p1 + mul_ln89_4_reg_4829);

assign grp_fu_4171_p0 = (zext_ln96_reg_4851 + mul_ln89_4_reg_4829);

assign grp_fu_4176_p0 = grp_fu_4176_p00;

assign grp_fu_4176_p00 = select_ln97_1_fu_2125_p3;

assign grp_fu_4176_p1 = WH_cast_reg_4708;

assign grp_fu_4176_p2 = (wi_cast_fu_2143_p1 + mul_ln89_reg_4793);

assign grp_fu_4184_p1 = grp_fu_4184_p10;

assign grp_fu_4184_p10 = tmp_18_fu_3095_p3;

assign grp_fu_4190_p1 = grp_fu_4190_p10;

assign grp_fu_4190_p10 = tmp_19_mid1_fu_3140_p3;

assign grp_fu_4197_p0 = zext_ln108_reg_5699;

assign grp_fu_4197_p1 = zext_ln134_fu_3209_p1;

assign grp_fu_4197_p2 = trunc_ln3_cast52_reg_4678;

assign grp_fu_4206_p0 = zext_ln108_reg_5699;

assign grp_fu_4206_p1 = zext_ln134_1_fu_3238_p1;

assign grp_fu_4206_p2 = trunc_ln3_cast52_reg_4678;

assign grp_fu_4206_p3 = ((icmp_ln134_1_reg_5734_pp4_iter2_reg[0:0] === 1'b1) ? grp_fu_4190_p2 : grp_fu_4184_p2);

assign grp_fu_4215_p1 = p_cast66_reg_5849;

assign grp_fu_4215_p2 = ((tmp_22_reg_5994[0:0] === 1'b1) ? 32'd0 : output_l1_3_q1);

assign grp_fu_4223_p1 = p_cast72_reg_5869;

assign grp_fu_4223_p2 = ((tmp_21_reg_5978[0:0] === 1'b1) ? 32'd0 : output_l1_2_q1);

assign grp_fu_4231_p1 = p_cast78_reg_5889;

assign grp_fu_4231_p2 = ((icmp_ln159_reg_5942_pp5_iter2_reg[0:0] === 1'b1) ? output_l1_1_q1 : 32'd0);

assign grp_fu_4239_p1 = sext_ln151_reg_5909;

assign grp_fu_4247_p1 = p_cast64_reg_5844;

assign grp_fu_4255_p1 = p_cast70_reg_5864;

assign grp_fu_4263_p1 = p_cast76_reg_5884;

assign grp_fu_4271_p1 = p_cast82_reg_5904;

assign grp_fu_4279_p1 = p_cast62_reg_5839;

assign grp_fu_4287_p1 = p_cast68_reg_5859;

assign grp_fu_4295_p1 = p_cast74_reg_5879;

assign grp_fu_4303_p1 = p_cast80_reg_5899;

assign grp_fu_4311_p1 = p_cast42_reg_5834;

assign grp_fu_4319_p1 = p_cast44_reg_5854;

assign grp_fu_4327_p1 = p_cast46_reg_5874;

assign grp_fu_4335_p1 = p_cast48_reg_5894;

assign grp_fu_4343_p0 = grp_fu_4343_p00;

assign grp_fu_4343_p00 = select_ln294_1_fu_3950_p3;

assign grp_fu_4343_p2 = select_ln295_fu_4016_p3[8:0];

assign icmp_ln108_fu_2158_p2 = ((indvar_flatten105_reg_1379 == tmp1_reg_4452) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_2169_p2 = ((s_reg_1401 == RS_reg_4416) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_3106_p2 = ((indvar_flatten47_reg_1412 == tmp_2_reg_4741) ? 1'b1 : 1'b0);

assign icmp_ln134_1_fu_3117_p2 = ((indvar_flatten15_reg_1434 == mul310_reg_4658) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_1799_p2 = ((WH_reg_4373 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_3151_p2 = ((wi_1_reg_1445 == WH_reg_4373) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_3412_p2 = ((ap_phi_mux_i_phi_fu_1471_p4 == 6'd59) ? 1'b1 : 1'b0);

assign icmp_ln159_fu_3453_p2 = ((i_reg_1467 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_1_fu_3875_p2 = ((sext_ln271_3_fu_3871_p1 < mul310_cast49_reg_4666) ? 1'b1 : 1'b0);

assign icmp_ln271_2_fu_3903_p2 = ((sext_ln271_5_fu_3899_p1 < mul310_cast49_reg_4666) ? 1'b1 : 1'b0);

assign icmp_ln271_3_fu_3592_p2 = ((sext_ln159_2_fu_3543_p1 < mul310_cast49_reg_4666) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_3847_p2 = ((sext_ln271_1_fu_3843_p1 < mul310_cast49_reg_4666) ? 1'b1 : 1'b0);

assign icmp_ln294_fu_3928_p2 = ((indvar_flatten160_reg_1479 == bound148_reg_6188) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_3939_p2 = ((indvar_flatten143_reg_1501 == bound20_reg_4747) ? 1'b1 : 1'b0);

assign icmp_ln296_1_fu_3994_p2 = ((wh_reg_1523 == mul310_reg_4658) ? 1'b1 : 1'b0);

assign icmp_ln296_fu_3923_p2 = ((mul310_reg_4658 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_1573_p2 = ((k_reg_1269 == K_reg_4356) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_1629_p2 = ((k_1_reg_1280 == mul42_reg_4463) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_1677_p2 = ((k_2_reg_1291 == mul55_reg_4491) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_1804_p2 = ((indvar_flatten136_reg_1302 == bound110_reg_4752) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_1815_p2 = ((co_reg_1324 == div68_cast_reg_4690) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1941_p2 = ((ki_1_reg_1335 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_2095_p2 = ((indvar_flatten_reg_1346 == mul310_reg_4658) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_2106_p2 = ((wi_reg_1368 == WH_reg_4373) ? 1'b1 : 1'b0);

assign lshr_ln124_1_fu_2387_p4 = {{add_ln125_1_fu_2381_p2[10:2]}};

assign lshr_ln3_fu_2363_p4 = {{add_ln125_fu_2357_p2[10:2]}};

assign lshr_ln4_fu_3318_p4 = {{add_ln141_fu_3307_p2[10:2]}};

assign mul310_cast49_fu_1721_p1 = mul310_fu_1717_p2;

assign mul310_fu_1717_p0 = zext_ln60_reg_4400;

assign mul310_fu_1717_p1 = zext_ln60_reg_4400;

assign mul_ln108_fu_2200_p0 = mul_ln108_fu_2200_p00;

assign mul_ln108_fu_2200_p00 = select_ln108_1_fu_2188_p3;

assign mul_ln108_fu_2200_p1 = trunc_ln4_cast17_reg_4685;

assign mul_ln138_1_fu_3242_p0 = WH_cast_reg_4708;

assign mul_ln138_1_fu_3242_p1 = zext_ln134_1_fu_3238_p1;

assign mul_ln138_fu_3213_p0 = WH_cast_reg_4708;

assign mul_ln138_fu_3213_p1 = zext_ln134_fu_3209_p1;

assign mul_ln89_1_fu_1863_p0 = C_cast_reg_4700;

assign mul_ln89_1_fu_1863_p1 = mul_ln89_1_fu_1863_p10;

assign mul_ln89_1_fu_1863_p10 = p_mid_fu_1842_p3;

assign mul_ln89_2_fu_1878_p0 = C_cast_reg_4700;

assign mul_ln89_2_fu_1878_p1 = mul_ln89_2_fu_1878_p10;

assign mul_ln89_2_fu_1878_p10 = or_ln89_fu_1868_p2;

assign mul_ln89_3_fu_1893_p0 = C_cast_reg_4700;

assign mul_ln89_3_fu_1893_p1 = mul_ln89_3_fu_1893_p10;

assign mul_ln89_3_fu_1893_p10 = or_ln89_1_fu_1883_p2;

assign mul_ln89_4_fu_1908_p0 = C_cast_reg_4700;

assign mul_ln89_4_fu_1908_p1 = mul_ln89_4_fu_1908_p10;

assign mul_ln89_4_fu_1908_p10 = or_ln89_2_fu_1898_p2;

assign mul_ln89_fu_1854_p1 = mul_ln89_fu_1854_p10;

assign mul_ln89_fu_1854_p10 = select_ln89_1_fu_1834_p3;

assign newIndex66_cast_fu_1976_p1 = newIndex_fu_1966_p4;

assign newIndex_fu_1966_p4 = {{empty_45_fu_1961_p2[7:2]}};

assign or_ln134_fu_3171_p2 = (select_ln130_5_fu_3156_p3 | icmp_ln134_1_fu_3117_p2);

assign or_ln295_fu_4011_p2 = (select_ln294_3_fu_3999_p3 | icmp_ln295_reg_6207_pp6_iter1_reg);

assign or_ln89_1_fu_1883_p2 = (p_mid_fu_1842_p3 | 8'd2);

assign or_ln89_2_fu_1898_p2 = (p_mid_fu_1842_p3 | 8'd3);

assign or_ln89_fu_1868_p2 = (p_mid_fu_1842_p3 | 8'd1);

assign p_cast11_fu_1921_p1 = tmp_20_fu_1913_p3;

assign p_cast12_fu_1998_p1 = empty_48_fu_1993_p2;

assign p_cast13_fu_1989_p1 = empty_47_fu_1984_p2;

assign p_cast42_fu_3364_p1 = $signed(tmp_17_reg_5710);

assign p_cast44_fu_3376_p1 = $signed(tmp_13_reg_5604);

assign p_cast46_fu_3388_p1 = $signed(tmp_s_reg_5504);

assign p_cast48_fu_3400_p1 = $signed(tmp_6_reg_5404);

assign p_cast62_fu_3367_p1 = $signed(tmp_16_reg_5705);

assign p_cast64_fu_3370_p1 = $signed(tmp_15_reg_5654);

assign p_cast66_fu_3373_p1 = $signed(tmp_14_reg_5649);

assign p_cast68_fu_3379_p1 = $signed(tmp_12_reg_5599);

assign p_cast70_fu_3382_p1 = $signed(tmp_11_reg_5554);

assign p_cast72_fu_3385_p1 = $signed(tmp_10_reg_5549);

assign p_cast74_fu_3391_p1 = $signed(tmp_9_reg_5499);

assign p_cast76_fu_3394_p1 = $signed(tmp_8_reg_5454);

assign p_cast78_fu_3397_p1 = $signed(tmp_7_reg_5449);

assign p_cast80_fu_3403_p1 = $signed(tmp_5_reg_5399);

assign p_cast82_fu_3406_p1 = $signed(tmp_4_reg_5354);

assign p_mid131_fu_3087_p0 = trunc_ln3_cast52_reg_4678;

assign p_mid131_fu_3087_p1 = zext_ln108_1_reg_5123;

assign p_mid_fu_1842_p3 = {{select_ln89_1_fu_1834_p3}, {2'd0}};

assign select_ln108_1_fu_2188_p3 = ((icmp_ln110_fu_2169_p2[0:0] === 1'b1) ? add_ln108_17_fu_2182_p2 : r_reg_1390);

assign select_ln108_fu_2174_p3 = ((icmp_ln110_fu_2169_p2[0:0] === 1'b1) ? 8'd0 : s_reg_1401);

assign select_ln130_1_fu_3132_p3 = ((icmp_ln134_1_fu_3117_p2[0:0] === 1'b1) ? empty_53_fu_3128_p1 : empty_49_fu_3091_p1);

assign select_ln130_3_fu_3225_p3 = ((icmp_ln134_1_reg_5734[0:0] === 1'b1) ? 9'd0 : mul_ln138_fu_3213_p2);

assign select_ln130_4_fu_3279_p3 = ((icmp_ln134_1_reg_5734_pp4_iter3_reg[0:0] === 1'b1) ? add_ln138_1_reg_5804 : grp_fu_4197_p4);

assign select_ln130_5_fu_3156_p3 = ((icmp_ln134_1_fu_3117_p2[0:0] === 1'b1) ? icmp_ln134_reg_4763 : icmp_ln135_fu_3151_p2);

assign select_ln130_6_fu_3163_p3 = ((icmp_ln134_1_fu_3117_p2[0:0] === 1'b1) ? add_ln130_1_fu_3122_p2 : ci_reg_1423);

assign select_ln130_fu_3218_p3 = ((icmp_ln134_1_reg_5734[0:0] === 1'b1) ? 8'd0 : hi_1_reg_1456);

assign select_ln134_1_fu_3247_p3 = ((select_ln130_5_reg_5751[0:0] === 1'b1) ? mul_ln138_1_fu_3242_p2 : select_ln130_3_fu_3225_p3);

assign select_ln134_2_fu_3284_p3 = ((select_ln130_5_reg_5751_pp4_iter3_reg[0:0] === 1'b1) ? grp_fu_4206_p4 : select_ln130_4_fu_3279_p3);

assign select_ln134_3_fu_3254_p3 = ((select_ln130_5_reg_5751[0:0] === 1'b1) ? add_ln134_fu_3232_p2 : select_ln130_fu_3218_p3);

assign select_ln134_4_fu_3201_p3 = ((icmp_ln134_1_fu_3117_p2[0:0] === 1'b1) ? 16'd1 : add_ln134_3_fu_3195_p2);

assign select_ln134_fu_3177_p3 = ((or_ln134_fu_3171_p2[0:0] === 1'b1) ? 8'd0 : wi_1_reg_1445);

assign select_ln159_1_fu_3637_p3 = ((tmp_21_reg_5978[0:0] === 1'b1) ? 8'd0 : data_l1_2_0_q0);

assign select_ln159_2_fu_3712_p3 = ((tmp_22_reg_5994_pp5_iter3_reg[0:0] === 1'b1) ? 8'd0 : data_l1_3_0_q0);

assign select_ln159_fu_3509_p3 = ((icmp_ln159_reg_5942[0:0] === 1'b1) ? data_l1_1_0_q0 : 8'd0);

assign select_ln294_1_fu_3950_p3 = ((icmp_ln295_fu_3939_p2[0:0] === 1'b1) ? add_ln294_1_fu_3944_p2 : ap_phi_mux_k_3_phi_fu_1494_p4);

assign select_ln294_2_fu_3987_p3 = ((icmp_ln295_reg_6207_pp6_iter1_reg[0:0] === 1'b1) ? 2'd0 : trunc_ln297_fu_3983_p1);

assign select_ln294_3_fu_3999_p3 = ((icmp_ln295_reg_6207_pp6_iter1_reg[0:0] === 1'b1) ? icmp_ln296_reg_6193 : icmp_ln296_1_fu_3994_p2);

assign select_ln294_fu_3976_p3 = ((icmp_ln295_reg_6207_pp6_iter1_reg[0:0] === 1'b1) ? 3'd0 : ki_reg_1512);

assign select_ln295_1_fu_4028_p3 = ((select_ln294_3_fu_3999_p3[0:0] === 1'b1) ? trunc_ln297_1_fu_4024_p1 : select_ln294_2_fu_3987_p3);

assign select_ln295_2_fu_4036_p3 = ((select_ln294_3_fu_3999_p3[0:0] === 1'b1) ? add_ln295_fu_4005_p2 : select_ln294_fu_3976_p3);

assign select_ln295_3_fu_3968_p3 = ((icmp_ln295_fu_3939_p2[0:0] === 1'b1) ? 19'd1 : add_ln295_1_fu_3962_p2);

assign select_ln295_fu_4016_p3 = ((or_ln295_fu_4011_p2[0:0] === 1'b1) ? 16'd0 : wh_reg_1523);

assign select_ln89_1_fu_1834_p3 = ((icmp_ln90_fu_1815_p2[0:0] === 1'b1) ? add_ln89_1_fu_1828_p2 : ko_reg_1313);

assign select_ln89_fu_1820_p3 = ((icmp_ln90_fu_1815_p2[0:0] === 1'b1) ? 6'd0 : co_reg_1324);

assign select_ln97_1_fu_2125_p3 = ((icmp_ln98_fu_2106_p2[0:0] === 1'b1) ? add_ln97_1_fu_2119_p2 : ap_phi_mux_hi_phi_fu_1361_p4);

assign select_ln97_fu_2111_p3 = ((icmp_ln98_fu_2106_p2[0:0] === 1'b1) ? 8'd0 : wi_reg_1368);

assign sext_ln151_fu_3409_p1 = $signed(tmp_3_reg_5349);

assign sext_ln159_1_fu_3521_p1 = add_ln157_1_fu_3516_p2;

assign sext_ln159_2_fu_3543_p1 = add_ln157_2_fu_3538_p2;

assign sext_ln159_3_fu_3547_p1 = add_ln157_2_fu_3538_p2;

assign sext_ln159_fu_3449_p1 = $signed(add_ln157_fu_3443_p2);

assign sext_ln271_1_fu_3843_p1 = add_ln271_fu_3834_p2;

assign sext_ln271_2_fu_3867_p1 = add_ln271_1_fu_3862_p2;

assign sext_ln271_3_fu_3871_p1 = add_ln271_1_fu_3862_p2;

assign sext_ln271_4_fu_3895_p1 = add_ln271_2_fu_3890_p2;

assign sext_ln271_5_fu_3899_p1 = add_ln271_2_fu_3890_p2;

assign sext_ln271_fu_3839_p1 = add_ln271_fu_3834_p2;

assign tmp1_fu_1621_p0 = zext_ln72_reg_4423;

assign tmp1_fu_1621_p1 = zext_ln72_reg_4423;

assign tmp2_fu_1669_p0 = zext_ln57_reg_4394;

assign tmp2_fu_1669_p1 = zext_ln67_1_reg_4411;

assign tmp4_cast_fu_1763_p0 = trunc_ln3_cast52_fu_1730_p1;

assign tmp4_cast_fu_1763_p1 = trunc_ln3_cast52_fu_1730_p1;

assign tmp_10_fu_2874_p5 = add_ln124_8_fu_2866_p2;

assign tmp_11_fu_2896_p5 = add_ln124_9_fu_2888_p2;

assign tmp_12_fu_2932_p5 = add_ln124_10_fu_2924_p2;

assign tmp_13_fu_2954_p5 = add_ln124_11_fu_2946_p2;

assign tmp_14_fu_2990_p5 = add_ln124_12_fu_2982_p2;

assign tmp_15_fu_3012_p5 = add_ln124_13_fu_3004_p2;

assign tmp_16_fu_3051_p5 = add_ln124_14_fu_3043_p2;

assign tmp_17_fu_3073_p5 = add_ln124_15_fu_3065_p2;

assign tmp_18_fu_3095_p3 = {{select_ln89_reg_4776}, {empty_49_fu_3091_p1}};

assign tmp_19_fu_3339_p5 = add_ln140_reg_5809;

assign tmp_19_mid1_fu_3140_p3 = {{select_ln89_reg_4776}, {empty_53_fu_3128_p1}};

assign tmp_1_fu_2077_p5 = empty_44_reg_4877;

assign tmp_20_fu_1913_p3 = {{select_ln89_fu_1820_p3}, {2'd0}};

assign tmp_2_fu_1769_p3 = {{mul310_fu_1717_p2}, {2'd0}};

assign tmp_3_fu_2642_p5 = add_ln124_fu_2634_p2;

assign tmp_4_fu_2664_p5 = add_ln124_1_fu_2656_p2;

assign tmp_5_fu_2700_p5 = add_ln124_2_fu_2692_p2;

assign tmp_6_fu_2722_p5 = add_ln124_3_fu_2714_p2;

assign tmp_7_fu_2758_p5 = add_ln124_4_fu_2750_p2;

assign tmp_8_fu_2780_p5 = add_ln124_5_fu_2772_p2;

assign tmp_9_fu_2816_p5 = add_ln124_6_fu_2808_p2;

assign tmp_fu_1613_p0 = zext_ln57_reg_4394;

assign tmp_fu_1613_p1 = zext_ln54_reg_4389;

assign tmp_s_fu_2838_p5 = add_ln124_7_fu_2830_p2;

assign trunc_ln108_10_fu_2300_p1 = add_ln108_11_fu_2295_p2[1:0];

assign trunc_ln108_11_fu_2309_p1 = add_ln108_12_fu_2304_p2[1:0];

assign trunc_ln108_12_fu_2318_p1 = add_ln108_13_fu_2313_p2[1:0];

assign trunc_ln108_13_fu_2327_p1 = add_ln108_14_fu_2322_p2[1:0];

assign trunc_ln108_14_fu_2336_p1 = add_ln108_15_fu_2331_p2[1:0];

assign trunc_ln108_15_fu_2345_p1 = add_ln108_16_fu_2340_p2[1:0];

assign trunc_ln108_1_fu_2219_p1 = add_ln108_2_fu_2214_p2[1:0];

assign trunc_ln108_2_fu_2228_p1 = add_ln108_3_fu_2223_p2[1:0];

assign trunc_ln108_3_fu_2237_p1 = add_ln108_4_fu_2232_p2[1:0];

assign trunc_ln108_4_fu_2246_p1 = add_ln108_5_fu_2241_p2[1:0];

assign trunc_ln108_5_fu_2255_p1 = add_ln108_6_fu_2250_p2[1:0];

assign trunc_ln108_6_fu_2264_p1 = add_ln108_7_fu_2259_p2[1:0];

assign trunc_ln108_7_fu_2273_p1 = add_ln108_8_fu_2268_p2[1:0];

assign trunc_ln108_8_fu_2282_p1 = add_ln108_9_fu_2277_p2[1:0];

assign trunc_ln108_9_fu_2291_p1 = add_ln108_10_fu_2286_p2[1:0];

assign trunc_ln108_fu_2210_p1 = add_ln108_1_fu_2205_p2[1:0];

assign trunc_ln125_fu_2353_p1 = select_ln108_fu_2174_p3[1:0];

assign trunc_ln134_fu_3295_p1 = select_ln134_2_fu_3284_p3[1:0];

assign trunc_ln141_fu_3185_p1 = select_ln134_fu_3177_p3[1:0];

assign trunc_ln297_1_fu_4024_p1 = add_ln295_fu_4005_p2[1:0];

assign trunc_ln297_fu_3983_p1 = ki_reg_1512[1:0];

assign trunc_ln3_cast52_fu_1730_p1 = WH_in_reg_4382;

assign trunc_ln4_cast17_fu_1733_p1 = RS_reg_4416;

assign trunc_ln708_1_fu_1654_p1 = weight_in_V_dout[7:0];

assign trunc_ln708_2_fu_1702_p1 = data_in_V_dout[7:0];

assign trunc_ln708_fu_1598_p1 = bias_in_V_dout[7:0];

assign trunc_ln78_fu_1584_p1 = k_reg_1269[1:0];

assign trunc_ln82_fu_1640_p1 = k_1_reg_1280[1:0];

assign trunc_ln86_fu_1688_p1 = k_2_reg_1291[1:0];

assign wi_1_cast58_fu_3261_p1 = select_ln134_reg_5763;

assign wi_1_cast_fu_3304_p1 = select_ln134_reg_5763_pp4_iter3_reg;

assign wi_cast_fu_2143_p1 = select_ln97_reg_4999_pp3_iter1_reg;

assign zext_ln101_fu_2151_p1 = grp_fu_4176_p3;

assign zext_ln108_1_fu_2196_p1 = select_ln108_1_fu_2188_p3;

assign zext_ln108_fu_3040_p1 = select_ln108_1_reg_5117;

assign zext_ln110_fu_2349_p1 = select_ln108_fu_2174_p3;

assign zext_ln124_16_fu_2373_p1 = lshr_ln3_fu_2363_p4;

assign zext_ln124_17_fu_2397_p1 = lshr_ln124_1_fu_2387_p4;

assign zext_ln124_18_fu_2678_p1 = lshr_ln124_2_reg_5274;

assign zext_ln124_19_fu_2685_p1 = lshr_ln124_3_reg_5279;

assign zext_ln124_20_fu_2736_p1 = lshr_ln124_4_reg_5284;

assign zext_ln124_21_fu_2743_p1 = lshr_ln124_5_reg_5289;

assign zext_ln124_22_fu_2794_p1 = lshr_ln124_6_reg_5294;

assign zext_ln124_23_fu_2801_p1 = lshr_ln124_7_reg_5299;

assign zext_ln124_24_fu_2852_p1 = lshr_ln124_8_reg_5304;

assign zext_ln124_25_fu_2859_p1 = lshr_ln124_9_reg_5309;

assign zext_ln124_26_fu_2910_p1 = lshr_ln124_s_reg_5314;

assign zext_ln124_27_fu_2917_p1 = lshr_ln124_10_reg_5319;

assign zext_ln124_28_fu_2968_p1 = lshr_ln124_11_reg_5324;

assign zext_ln124_29_fu_2975_p1 = lshr_ln124_12_reg_5329;

assign zext_ln124_30_fu_3026_p1 = lshr_ln124_13_reg_5334;

assign zext_ln124_31_fu_3033_p1 = lshr_ln124_14_reg_5339;

assign zext_ln134_1_fu_3238_p1 = add_ln134_fu_3232_p2;

assign zext_ln134_fu_3209_p1 = hi_1_reg_1456;

assign zext_ln139_fu_3357_p1 = add_ln139_reg_5789_pp4_iter4_reg;

assign zext_ln140_1_fu_3328_p1 = lshr_ln4_fu_3318_p4;

assign zext_ln151_fu_3435_p1 = i_reg_1467;

assign zext_ln160_1_fu_3439_p1 = i_reg_1467;

assign zext_ln160_2_fu_3459_p1 = $unsigned(sext_ln159_fu_3449_p1);

assign zext_ln160_3_fu_3533_p1 = $unsigned(sext_ln159_1_fu_3521_p1);

assign zext_ln160_4_fu_3644_p1 = $unsigned(sext_ln159_3_reg_5989);

assign zext_ln160_fu_3424_p1 = ap_phi_mux_i_phi_fu_1471_p4;

assign zext_ln169_1_fu_3574_p1 = add_ln169_1_fu_3569_p2;

assign zext_ln169_2_fu_3583_p1 = add_ln169_2_fu_3579_p2;

assign zext_ln169_3_fu_3588_p1 = add_ln169_3_reg_5953;

assign zext_ln169_fu_3564_p1 = add_ln169_fu_3559_p2;

assign zext_ln278_1_fu_3885_p1 = add_ln279_1_fu_3880_p2;

assign zext_ln278_2_fu_3913_p1 = add_ln279_2_fu_3908_p2;

assign zext_ln278_fu_3857_p1 = add_ln279_fu_3852_p2;

assign zext_ln297_fu_4054_p1 = $unsigned(grp_fu_4343_p3);

assign zext_ln54_fu_1550_p1 = K_reg_4356;

assign zext_ln57_fu_1553_p1 = C_reg_4367;

assign zext_ln60_fu_1556_p1 = WH_reg_4373;

assign zext_ln67_1_fu_1562_p1 = WH_in_reg_4382;

assign zext_ln67_fu_1559_p1 = WH_in_reg_4382;

assign zext_ln72_fu_1569_p1 = RS_fu_1565_p1;

assign zext_ln78_fu_1606_p1 = lshr_ln_reg_4442;

assign zext_ln82_fu_1662_p1 = lshr_ln1_reg_4481;

assign zext_ln86_fu_1710_p1 = lshr_ln2_reg_4509;

assign zext_ln96_1_fu_1953_p1 = ki_1_reg_1335;

assign zext_ln96_fu_1931_p1 = empty_57_fu_1925_p2;

always @ (posedge ap_clk) begin
    zext_ln54_reg_4389[15:8] <= 8'b00000000;
    zext_ln57_reg_4394[15:8] <= 8'b00000000;
    zext_ln60_reg_4400[15:8] <= 8'b00000000;
    zext_ln67_reg_4406[23:8] <= 16'b0000000000000000;
    zext_ln67_1_reg_4411[15:8] <= 8'b00000000;
    zext_ln72_reg_4423[15:8] <= 8'b00000000;
    mul310_cast49_reg_4666[16] <= 1'b0;
    trunc_ln3_cast52_reg_4678[10:8] <= 3'b000;
    trunc_ln4_cast17_reg_4685[10:8] <= 3'b000;
    C_cast_reg_4700[10:8] <= 3'b000;
    WH_cast_reg_4708[8] <= 1'b0;
    tmp_2_reg_4741[1:0] <= 2'b00;
    bound20_reg_4747[1:0] <= 2'b00;
    bound20_reg_4747[18] <= 1'b0;
    p_mid_reg_4788[1:0] <= 2'b00;
    tmp_20_reg_4837[1:0] <= 2'b00;
    p_cast11_reg_4843[1:0] <= 2'b00;
    p_cast11_reg_4843[10:8] <= 3'b000;
    zext_ln96_reg_4851[1:0] <= 2'b11;
    zext_ln96_reg_4851[10:8] <= 3'b000;
    zext_ln108_1_reg_5123[10:8] <= 3'b000;
    zext_ln110_reg_5208[10:8] <= 3'b000;
    zext_ln108_reg_5699[8] <= 1'b0;
    zext_ln151_reg_5928[6] <= 1'b0;
    zext_ln151_reg_5928_pp5_iter2_reg[6] <= 1'b0;
    zext_ln151_reg_5928_pp5_iter3_reg[6] <= 1'b0;
    zext_ln151_reg_5928_pp5_iter4_reg[6] <= 1'b0;
    zext_ln151_reg_5928_pp5_iter5_reg[6] <= 1'b0;
    zext_ln151_reg_5928_pp5_iter6_reg[6] <= 1'b0;
    zext_ln169_reg_6000[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln169_reg_6000_pp5_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln169_reg_6000_pp5_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln169_reg_6000_pp5_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln169_reg_6000_pp5_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //Conv_sysarr_dbbuf
