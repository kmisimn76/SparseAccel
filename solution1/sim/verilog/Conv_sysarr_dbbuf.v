// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_dbbuf_Conv_sysarr_dbbuf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.340000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=4501,HLS_SYN_LUT=5746,HLS_VERSION=2020_1}" *)

module Conv_sysarr_dbbuf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 47'd1;
parameter    ap_ST_fsm_state2 = 47'd2;
parameter    ap_ST_fsm_state3 = 47'd4;
parameter    ap_ST_fsm_state4 = 47'd8;
parameter    ap_ST_fsm_state5 = 47'd16;
parameter    ap_ST_fsm_pp0_stage0 = 47'd32;
parameter    ap_ST_fsm_state8 = 47'd64;
parameter    ap_ST_fsm_pp1_stage0 = 47'd128;
parameter    ap_ST_fsm_state11 = 47'd256;
parameter    ap_ST_fsm_state12 = 47'd512;
parameter    ap_ST_fsm_pp2_stage0 = 47'd1024;
parameter    ap_ST_fsm_state15 = 47'd2048;
parameter    ap_ST_fsm_pp3_stage0 = 47'd4096;
parameter    ap_ST_fsm_state18 = 47'd8192;
parameter    ap_ST_fsm_pp4_stage0 = 47'd16384;
parameter    ap_ST_fsm_state21 = 47'd32768;
parameter    ap_ST_fsm_pp5_stage0 = 47'd65536;
parameter    ap_ST_fsm_state24 = 47'd131072;
parameter    ap_ST_fsm_state25 = 47'd262144;
parameter    ap_ST_fsm_state26 = 47'd524288;
parameter    ap_ST_fsm_state27 = 47'd1048576;
parameter    ap_ST_fsm_state28 = 47'd2097152;
parameter    ap_ST_fsm_state29 = 47'd4194304;
parameter    ap_ST_fsm_state30 = 47'd8388608;
parameter    ap_ST_fsm_pp6_stage0 = 47'd16777216;
parameter    ap_ST_fsm_state35 = 47'd33554432;
parameter    ap_ST_fsm_state36 = 47'd67108864;
parameter    ap_ST_fsm_state37 = 47'd134217728;
parameter    ap_ST_fsm_state38 = 47'd268435456;
parameter    ap_ST_fsm_state39 = 47'd536870912;
parameter    ap_ST_fsm_state40 = 47'd1073741824;
parameter    ap_ST_fsm_state41 = 47'd2147483648;
parameter    ap_ST_fsm_state42 = 47'd4294967296;
parameter    ap_ST_fsm_state43 = 47'd8589934592;
parameter    ap_ST_fsm_state44 = 47'd17179869184;
parameter    ap_ST_fsm_state45 = 47'd34359738368;
parameter    ap_ST_fsm_state46 = 47'd68719476736;
parameter    ap_ST_fsm_state47 = 47'd137438953472;
parameter    ap_ST_fsm_state48 = 47'd274877906944;
parameter    ap_ST_fsm_state49 = 47'd549755813888;
parameter    ap_ST_fsm_state50 = 47'd1099511627776;
parameter    ap_ST_fsm_pp7_stage0 = 47'd2199023255552;
parameter    ap_ST_fsm_state56 = 47'd4398046511104;
parameter    ap_ST_fsm_pp8_stage0 = 47'd8796093022208;
parameter    ap_ST_fsm_state65 = 47'd17592186044416;
parameter    ap_ST_fsm_pp9_stage0 = 47'd35184372088832;
parameter    ap_ST_fsm_state71 = 47'd70368744177664;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [63:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [63:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [63:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    weight_in_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln94_reg_4769;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln94_1_reg_4783;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] icmp_ln94_2_reg_4797;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln94_3_reg_4811;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp9_iter4;
wire    ap_block_pp9_stage0;
reg   [0:0] icmp_ln330_reg_6208;
reg   [0:0] icmp_ln330_reg_6208_pp9_iter3_reg;
reg   [31:0] k_reg_1327;
reg   [31:0] k_1_reg_1338;
reg   [31:0] wh_reg_1360;
reg   [31:0] wh_1_reg_1371;
reg   [31:0] wh_2_reg_1382;
reg   [31:0] wh_4_reg_1393;
reg   [63:0] indvar_flatten_reg_1449;
reg   [31:0] hi_reg_1460;
reg   [31:0] wi_reg_1471;
reg   [63:0] indvar_flatten6_reg_1516;
reg   [31:0] hi_1_reg_1527;
reg   [31:0] wi_1_reg_1538;
reg   [30:0] i_reg_1549;
reg   [63:0] indvar_flatten50_reg_1560;
reg   [29:0] k_2_reg_1571;
reg   [34:0] indvar_flatten36_reg_1582;
reg   [2:0] ki_reg_1593;
reg   [31:0] wh_3_reg_1604;
reg   [63:0] bias_in_V_read_reg_4390;
reg    ap_block_state1;
wire  signed [31:0] tmp_data_V_1_fu_1651_p1;
reg  signed [31:0] tmp_data_V_1_reg_4395;
reg   [63:0] bias_in_V_read_1_reg_4401;
wire  signed [31:0] tmp_data_V_2_fu_1655_p1;
reg  signed [31:0] tmp_data_V_2_reg_4407;
wire  signed [10:0] trunc_ln521_fu_1659_p1;
reg  signed [10:0] trunc_ln521_reg_4412;
wire  signed [31:0] tmp_data_V_3_fu_1663_p1;
reg  signed [31:0] tmp_data_V_3_reg_4419;
wire  signed [8:0] trunc_ln521_1_fu_1667_p1;
reg  signed [8:0] trunc_ln521_1_reg_4428;
wire  signed [31:0] tmp_data_V_4_fu_1671_p1;
reg  signed [31:0] tmp_data_V_4_reg_4436;
wire  signed [9:0] trunc_ln521_2_fu_1675_p1;
reg  signed [9:0] trunc_ln521_2_reg_4442;
wire  signed [31:0] tmp_data_V_5_fu_1679_p1;
reg  signed [31:0] tmp_data_V_5_reg_4448;
wire  signed [10:0] trunc_ln521_3_fu_1683_p1;
reg  signed [10:0] trunc_ln521_3_reg_4456;
wire   [0:0] icmp_ln82_fu_1687_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] add_ln82_fu_1692_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln84_fu_1698_p1;
reg   [1:0] trunc_ln84_reg_4501;
reg   [8:0] lshr_ln_reg_4505;
wire   [31:0] mul37_fu_1735_p2;
reg   [31:0] mul37_reg_4510;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln86_fu_1741_p2;
wire    ap_block_state9_pp1_stage0_iter0;
reg    ap_block_state10_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [31:0] add_ln86_fu_1746_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln88_fu_1752_p1;
reg   [1:0] trunc_ln88_reg_4524;
reg   [8:0] lshr_ln1_reg_4528;
reg   [29:0] div48_cast_reg_4533;
wire    ap_CS_fsm_state11;
wire   [31:0] mul51_fu_1790_p2;
reg   [31:0] mul51_reg_4540;
wire  signed [9:0] empty_fu_1794_p1;
reg  signed [9:0] empty_reg_4548;
wire   [0:0] cmp52307_fu_1798_p2;
reg   [0:0] cmp52307_reg_4553;
wire   [0:0] icmp_ln91_fu_1804_p2;
wire    ap_CS_fsm_state12;
wire   [29:0] co_3_fu_1809_p2;
reg   [29:0] co_3_reg_4561;
wire   [9:0] mul60_fu_1819_p2;
reg   [9:0] mul60_reg_4566;
wire   [29:0] div68_cast8_fu_1824_p4;
reg   [29:0] div68_cast8_reg_4718;
wire   [31:0] mul158_fu_1833_p2;
reg   [31:0] mul158_reg_4723;
wire  signed [8:0] empty_34_fu_1837_p1;
reg  signed [8:0] empty_34_reg_4734;
wire   [31:0] input_rows_fu_1841_p2;
reg   [31:0] input_rows_reg_4739;
wire   [0:0] cmp162278_fu_1847_p2;
reg   [0:0] cmp162278_reg_4744;
wire  signed [8:0] empty_35_fu_1853_p1;
reg  signed [8:0] empty_35_reg_4748;
wire   [63:0] bound_fu_1859_p2;
reg   [63:0] bound_reg_4753;
wire   [63:0] bound11_fu_1868_p2;
reg   [63:0] bound11_reg_4759;
wire   [59:0] bound18_fu_1881_p2;
reg   [59:0] bound18_reg_4764;
wire   [0:0] icmp_ln94_fu_1887_p2;
wire    ap_block_state13_pp2_stage0_iter0;
reg    ap_block_state14_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [31:0] add_ln94_fu_1892_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [9:0] trunc_ln97_fu_1898_p1;
reg   [9:0] trunc_ln97_reg_4778;
wire   [0:0] icmp_ln94_1_fu_1916_p2;
wire    ap_block_state16_pp3_stage0_iter0;
reg    ap_block_state17_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [31:0] add_ln94_1_fu_1921_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [9:0] trunc_ln97_1_fu_1927_p1;
reg   [9:0] trunc_ln97_1_reg_4792;
wire   [0:0] icmp_ln94_2_fu_1945_p2;
wire    ap_block_state19_pp4_stage0_iter0;
reg    ap_block_state20_pp4_stage0_iter1;
reg    ap_block_pp4_stage0_11001;
wire   [31:0] add_ln94_2_fu_1950_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [9:0] trunc_ln97_2_fu_1956_p1;
reg   [9:0] trunc_ln97_2_reg_4806;
wire   [0:0] icmp_ln94_3_fu_1974_p2;
wire    ap_block_state22_pp5_stage0_iter0;
reg    ap_block_state23_pp5_stage0_iter1;
reg    ap_block_pp5_stage0_11001;
wire   [31:0] add_ln94_3_fu_1979_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [9:0] add_ln97_3_fu_1989_p2;
reg   [9:0] add_ln97_3_reg_4820;
wire   [0:0] icmp_ln102_fu_2003_p2;
wire    ap_CS_fsm_state25;
wire   [59:0] add_ln102_fu_2008_p2;
reg   [59:0] add_ln102_reg_4829;
wire   [0:0] icmp_ln105_fu_2014_p2;
reg   [0:0] icmp_ln105_reg_4834;
wire  signed [8:0] select_ln102_1_fu_2033_p3;
reg  signed [8:0] select_ln102_1_reg_4839;
wire   [10:0] p_mid2_fu_2041_p3;
reg   [10:0] p_mid2_reg_4845;
wire   [29:0] select_ln102_2_fu_2067_p3;
reg   [29:0] select_ln102_2_reg_4865;
wire   [34:0] zext_ln330_fu_2082_p1;
reg   [34:0] zext_ln330_reg_4870;
wire   [63:0] mul_ln330_fu_2093_p2;
reg   [63:0] mul_ln330_reg_4875;
wire   [0:0] icmp_ln332_fu_2099_p2;
reg   [0:0] icmp_ln332_reg_4880;
wire   [29:0] select_ln102_fu_2104_p3;
reg   [29:0] select_ln102_reg_4885;
wire    ap_CS_fsm_state28;
wire  signed [8:0] mul_ln102_fu_2111_p2;
reg  signed [8:0] mul_ln102_reg_4890;
wire   [8:0] mul_ln102_1_fu_2115_p2;
reg   [8:0] mul_ln102_1_reg_4895;
wire   [10:0] mul107_mid2_fu_2124_p3;
reg   [10:0] mul107_mid2_reg_4906;
wire  signed [10:0] grp_fu_3893_p2;
reg  signed [10:0] mul_ln102_3_reg_4914;
wire  signed [10:0] grp_fu_3898_p2;
reg  signed [10:0] mul_ln102_4_reg_4922;
wire  signed [10:0] grp_fu_3903_p2;
reg  signed [10:0] mul_ln102_5_reg_4930;
wire  signed [9:0] trunc_ln105_fu_2132_p1;
reg  signed [9:0] trunc_ln105_reg_4938;
wire   [10:0] c_fu_2140_p3;
reg   [10:0] c_reg_4943;
wire   [10:0] c_3_fu_2148_p2;
reg   [10:0] c_3_reg_4953;
wire   [2:0] add_ln113_fu_2160_p2;
reg   [2:0] add_ln113_reg_4964;
wire    ap_CS_fsm_state29;
wire   [1:0] empty_36_fu_2170_p1;
reg   [1:0] empty_36_reg_4969;
wire   [0:0] icmp_ln113_fu_2154_p2;
wire  signed [31:0] conv83_fu_2296_p1;
reg  signed [31:0] conv83_reg_5074;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln114_fu_2300_p2;
reg   [0:0] icmp_ln114_reg_5082;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state31_pp6_stage0_iter0;
wire    ap_block_state32_pp6_stage0_iter1;
wire    ap_block_state33_pp6_stage0_iter2;
wire    ap_block_state34_pp6_stage0_iter3;
wire    ap_block_pp6_stage0_11001;
wire   [63:0] add_ln114_1_fu_2305_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [31:0] select_ln114_1_fu_2330_p3;
reg   [31:0] select_ln114_1_reg_5091;
wire   [8:0] trunc_ln123_fu_2342_p1;
reg   [8:0] trunc_ln123_reg_5096;
reg   [8:0] trunc_ln123_reg_5096_pp6_iter1_reg;
wire   [31:0] add_ln117_fu_2346_p2;
wire  signed [10:0] grp_fu_3908_p2;
reg  signed [10:0] mul109_2262_reg_5106;
wire    ap_CS_fsm_state38;
wire  signed [10:0] grp_fu_3913_p2;
reg  signed [10:0] mul109_1264_reg_5111;
wire  signed [10:0] grp_fu_3918_p2;
reg  signed [10:0] mul109_3266_reg_5116;
wire   [9:0] mul139_fu_2359_p2;
reg   [9:0] mul139_reg_5121;
wire  signed [10:0] grp_fu_3923_p2;
reg  signed [10:0] mul109_1268_reg_5126;
wire  signed [10:0] grp_fu_3928_p2;
reg  signed [10:0] mul109_2270_reg_5131;
wire  signed [10:0] grp_fu_3933_p2;
reg  signed [10:0] mul109_3272_reg_5136;
wire  signed [10:0] grp_fu_3938_p2;
reg  signed [10:0] mul109274_reg_5141;
wire  signed [10:0] grp_fu_3943_p2;
reg  signed [10:0] mul109276_reg_5146;
wire  signed [10:0] grp_fu_3948_p2;
reg  signed [10:0] mul109278_reg_5151;
wire  signed [10:0] grp_fu_3953_p2;
reg  signed [10:0] mul109280_reg_5156;
wire  signed [10:0] grp_fu_3958_p2;
reg  signed [10:0] mul109_1282_reg_5161;
wire  signed [10:0] grp_fu_3963_p2;
reg  signed [10:0] mul109_1284_reg_5166;
wire  signed [10:0] grp_fu_3968_p2;
reg  signed [10:0] mul109_2286_reg_5171;
wire  signed [10:0] grp_fu_3973_p2;
reg  signed [10:0] mul109_2288_reg_5176;
wire  signed [10:0] grp_fu_3978_p2;
reg  signed [10:0] mul109_3290_reg_5181;
wire  signed [10:0] grp_fu_3983_p2;
reg  signed [10:0] mul109_3292_reg_5186;
wire   [63:0] add_ln129_16_fu_2368_p2;
reg   [63:0] add_ln129_16_reg_5194;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln132_fu_2374_p2;
reg   [0:0] icmp_ln132_reg_5199;
wire   [0:0] icmp_ln129_fu_2363_p2;
wire   [31:0] select_ln129_1_fu_2385_p3;
reg   [31:0] select_ln129_1_reg_5204;
wire   [9:0] trunc_ln129_fu_2393_p1;
reg   [9:0] trunc_ln129_reg_5209;
wire   [29:0] co_2_fu_2401_p2;
wire   [31:0] select_ln129_fu_2406_p3;
reg   [31:0] select_ln129_reg_5219;
wire    ap_CS_fsm_state41;
wire   [10:0] trunc_ln148_fu_2413_p1;
wire   [9:0] trunc_ln148_1_fu_2417_p1;
reg   [9:0] trunc_ln148_1_reg_5244;
wire   [1:0] trunc_ln147_fu_2421_p1;
reg   [1:0] trunc_ln147_reg_5249;
wire    ap_CS_fsm_state42;
wire   [1:0] trunc_ln147_1_fu_2441_p1;
reg   [1:0] trunc_ln147_1_reg_5274;
wire   [1:0] trunc_ln147_2_fu_2461_p1;
reg   [1:0] trunc_ln147_2_reg_5299;
reg   [8:0] lshr_ln147_2_reg_5304;
wire   [1:0] trunc_ln147_3_fu_2473_p1;
reg   [1:0] trunc_ln147_3_reg_5309;
reg   [8:0] lshr_ln147_3_reg_5314;
wire   [1:0] trunc_ln147_4_fu_2485_p1;
reg   [1:0] trunc_ln147_4_reg_5319;
reg   [8:0] lshr_ln147_4_reg_5324;
wire   [1:0] trunc_ln147_5_fu_2497_p1;
reg   [1:0] trunc_ln147_5_reg_5329;
reg   [8:0] lshr_ln147_5_reg_5334;
wire   [1:0] trunc_ln147_6_fu_2509_p1;
reg   [1:0] trunc_ln147_6_reg_5339;
reg   [8:0] lshr_ln147_6_reg_5344;
wire   [1:0] trunc_ln147_7_fu_2521_p1;
reg   [1:0] trunc_ln147_7_reg_5349;
reg   [8:0] lshr_ln147_7_reg_5354;
wire   [1:0] trunc_ln147_8_fu_2533_p1;
reg   [1:0] trunc_ln147_8_reg_5359;
reg   [8:0] lshr_ln147_8_reg_5364;
wire   [1:0] trunc_ln147_9_fu_2545_p1;
reg   [1:0] trunc_ln147_9_reg_5369;
reg   [8:0] lshr_ln147_9_reg_5374;
wire   [1:0] trunc_ln147_10_fu_2557_p1;
reg   [1:0] trunc_ln147_10_reg_5379;
reg   [8:0] lshr_ln147_s_reg_5384;
wire   [1:0] trunc_ln147_11_fu_2569_p1;
reg   [1:0] trunc_ln147_11_reg_5389;
reg   [8:0] lshr_ln147_10_reg_5394;
wire   [1:0] trunc_ln147_12_fu_2581_p1;
reg   [1:0] trunc_ln147_12_reg_5399;
reg   [8:0] lshr_ln147_11_reg_5404;
wire   [1:0] trunc_ln147_13_fu_2593_p1;
reg   [1:0] trunc_ln147_13_reg_5409;
reg   [8:0] lshr_ln147_12_reg_5414;
wire   [1:0] trunc_ln147_14_fu_2605_p1;
reg   [1:0] trunc_ln147_14_reg_5419;
reg   [8:0] lshr_ln147_13_reg_5424;
wire   [1:0] trunc_ln147_15_fu_2617_p1;
reg   [1:0] trunc_ln147_15_reg_5429;
reg   [8:0] lshr_ln147_14_reg_5434;
wire   [7:0] tmp_3_fu_2632_p6;
reg   [7:0] tmp_3_reg_5439;
wire    ap_CS_fsm_state43;
wire   [7:0] tmp_4_fu_2649_p6;
reg   [7:0] tmp_4_reg_5444;
wire   [7:0] tmp_5_fu_2680_p6;
reg   [7:0] tmp_5_reg_5489;
wire    ap_CS_fsm_state44;
wire   [7:0] tmp_6_fu_2697_p6;
reg   [7:0] tmp_6_reg_5494;
wire   [7:0] tmp_7_fu_2728_p6;
reg   [7:0] tmp_7_reg_5539;
wire    ap_CS_fsm_state45;
wire   [7:0] tmp_8_fu_2745_p6;
reg   [7:0] tmp_8_reg_5544;
wire   [7:0] tmp_9_fu_2776_p6;
reg   [7:0] tmp_9_reg_5589;
wire    ap_CS_fsm_state46;
wire   [7:0] tmp_s_fu_2793_p6;
reg   [7:0] tmp_s_reg_5594;
wire   [7:0] tmp_10_fu_2824_p6;
reg   [7:0] tmp_10_reg_5639;
wire    ap_CS_fsm_state47;
wire   [7:0] tmp_11_fu_2841_p6;
reg   [7:0] tmp_11_reg_5644;
wire   [7:0] tmp_12_fu_2872_p6;
reg   [7:0] tmp_12_reg_5689;
wire    ap_CS_fsm_state48;
wire   [7:0] tmp_13_fu_2889_p6;
reg   [7:0] tmp_13_reg_5694;
wire   [7:0] tmp_14_fu_2920_p6;
reg   [7:0] tmp_14_reg_5739;
wire    ap_CS_fsm_state49;
wire   [7:0] tmp_15_fu_2937_p6;
reg   [7:0] tmp_15_reg_5744;
wire   [7:0] tmp_16_fu_2968_p6;
reg   [7:0] tmp_16_reg_5789;
wire    ap_CS_fsm_state50;
wire   [7:0] tmp_17_fu_2985_p6;
reg   [7:0] tmp_17_reg_5794;
wire   [0:0] icmp_ln155_fu_2999_p2;
reg   [0:0] icmp_ln155_reg_5799;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state51_pp7_stage0_iter0;
wire    ap_block_state52_pp7_stage0_iter1;
wire    ap_block_state53_pp7_stage0_iter2;
wire    ap_block_state54_pp7_stage0_iter3;
wire    ap_block_state55_pp7_stage0_iter4;
wire    ap_block_pp7_stage0_11001;
reg   [0:0] icmp_ln155_reg_5799_pp7_iter1_reg;
reg   [0:0] icmp_ln155_reg_5799_pp7_iter2_reg;
reg   [0:0] icmp_ln155_reg_5799_pp7_iter3_reg;
wire   [63:0] add_ln155_2_fu_3004_p2;
reg    ap_enable_reg_pp7_iter0;
wire   [31:0] select_ln155_1_fu_3029_p3;
reg   [31:0] select_ln155_1_reg_5808;
wire   [8:0] empty_39_fu_3054_p1;
reg   [8:0] empty_39_reg_5818;
reg   [8:0] empty_39_reg_5818_pp7_iter1_reg;
(* use_dsp48 = "no" *) wire   [9:0] tmp3_fu_3058_p2;
reg   [9:0] tmp3_reg_5823;
reg   [9:0] tmp3_reg_5823_pp7_iter1_reg;
wire   [31:0] add_ln158_fu_3063_p2;
wire  signed [8:0] grp_fu_4164_p3;
reg  signed [8:0] add149_reg_5833;
reg    ap_enable_reg_pp7_iter3;
wire  signed [15:0] p_cast13_fu_3083_p1;
reg  signed [15:0] p_cast13_reg_5858;
wire    ap_CS_fsm_state56;
wire  signed [15:0] p_cast22_fu_3086_p1;
reg  signed [15:0] p_cast22_reg_5863;
wire  signed [15:0] p_cast24_fu_3089_p1;
reg  signed [15:0] p_cast24_reg_5868;
wire  signed [15:0] p_cast26_fu_3092_p1;
reg  signed [15:0] p_cast26_reg_5873;
wire  signed [15:0] p_cast15_fu_3095_p1;
reg  signed [15:0] p_cast15_reg_5878;
wire  signed [15:0] p_cast28_fu_3098_p1;
reg  signed [15:0] p_cast28_reg_5883;
wire  signed [15:0] p_cast30_fu_3101_p1;
reg  signed [15:0] p_cast30_reg_5888;
wire  signed [15:0] p_cast32_fu_3104_p1;
reg  signed [15:0] p_cast32_reg_5893;
wire  signed [15:0] p_cast17_fu_3107_p1;
reg  signed [15:0] p_cast17_reg_5898;
wire  signed [15:0] p_cast34_fu_3110_p1;
reg  signed [15:0] p_cast34_reg_5903;
wire  signed [15:0] p_cast36_fu_3113_p1;
reg  signed [15:0] p_cast36_reg_5908;
wire  signed [15:0] p_cast38_fu_3116_p1;
reg  signed [15:0] p_cast38_reg_5913;
wire  signed [15:0] p_cast19_fu_3119_p1;
reg  signed [15:0] p_cast19_reg_5918;
wire  signed [15:0] p_cast40_fu_3122_p1;
reg  signed [15:0] p_cast40_reg_5923;
wire  signed [15:0] p_cast42_fu_3125_p1;
reg  signed [15:0] p_cast42_reg_5928;
wire  signed [15:0] sext_ln183_fu_3128_p1;
reg  signed [15:0] sext_ln183_reg_5933;
wire   [31:0] zext_ln183_fu_3131_p1;
reg   [31:0] zext_ln183_reg_5938;
wire    ap_CS_fsm_pp8_stage0;
wire    ap_block_state57_pp8_stage0_iter0;
wire    ap_block_state58_pp8_stage0_iter1;
wire    ap_block_state59_pp8_stage0_iter2;
wire    ap_block_state60_pp8_stage0_iter3;
wire    ap_block_state61_pp8_stage0_iter4;
wire    ap_block_state62_pp8_stage0_iter5;
wire    ap_block_state63_pp8_stage0_iter6;
wire    ap_block_state64_pp8_stage0_iter7;
wire    ap_block_pp8_stage0_11001;
reg   [31:0] zext_ln183_reg_5938_pp8_iter1_reg;
reg   [31:0] zext_ln183_reg_5938_pp8_iter2_reg;
wire   [0:0] icmp_ln183_fu_3135_p2;
reg   [0:0] icmp_ln183_reg_5946;
reg   [0:0] icmp_ln183_reg_5946_pp8_iter1_reg;
reg   [0:0] icmp_ln183_reg_5946_pp8_iter2_reg;
reg   [0:0] icmp_ln183_reg_5946_pp8_iter3_reg;
reg   [0:0] icmp_ln183_reg_5946_pp8_iter4_reg;
reg   [0:0] icmp_ln183_reg_5946_pp8_iter5_reg;
wire   [30:0] add_ln183_fu_3140_p2;
reg    ap_enable_reg_pp8_iter0;
wire   [8:0] trunc_ln196_fu_3146_p1;
reg   [8:0] trunc_ln196_reg_5955;
reg   [8:0] trunc_ln196_reg_5955_pp8_iter1_reg;
reg   [8:0] trunc_ln196_reg_5955_pp8_iter2_reg;
reg   [8:0] trunc_ln196_reg_5955_pp8_iter3_reg;
reg   [8:0] trunc_ln196_reg_5955_pp8_iter4_reg;
reg   [8:0] trunc_ln196_reg_5955_pp8_iter5_reg;
reg   [8:0] trunc_ln196_reg_5955_pp8_iter6_reg;
wire   [0:0] icmp_ln195_fu_3155_p2;
reg   [0:0] icmp_ln195_reg_5971;
reg   [0:0] icmp_ln195_reg_5971_pp8_iter1_reg;
reg   [0:0] icmp_ln195_reg_5971_pp8_iter2_reg;
wire   [0:0] and_ln306_fu_3186_p2;
reg   [0:0] and_ln306_reg_5977;
reg   [0:0] and_ln306_reg_5977_pp8_iter1_reg;
reg   [0:0] and_ln306_reg_5977_pp8_iter2_reg;
reg   [0:0] and_ln306_reg_5977_pp8_iter3_reg;
reg   [0:0] and_ln306_reg_5977_pp8_iter4_reg;
reg   [0:0] and_ln306_reg_5977_pp8_iter5_reg;
reg   [0:0] and_ln306_reg_5977_pp8_iter6_reg;
wire   [8:0] add_ln193_fu_3198_p2;
reg   [8:0] add_ln193_reg_5981;
wire   [63:0] zext_ln205_fu_3275_p1;
reg   [63:0] zext_ln205_reg_6016;
reg   [63:0] zext_ln205_reg_6016_pp8_iter3_reg;
reg   [63:0] zext_ln205_reg_6016_pp8_iter4_reg;
reg   [63:0] zext_ln205_reg_6016_pp8_iter5_reg;
reg   [63:0] zext_ln205_reg_6016_pp8_iter6_reg;
wire   [0:0] tmp_19_fu_3374_p3;
reg   [0:0] tmp_19_reg_6061;
wire   [31:0] output_l1_0_q1;
reg    ap_enable_reg_pp8_iter3;
wire   [0:0] and_ln306_1_fu_3440_p2;
reg   [0:0] and_ln306_1_reg_6091;
reg   [0:0] and_ln306_1_reg_6091_pp8_iter4_reg;
reg   [0:0] and_ln306_1_reg_6091_pp8_iter5_reg;
reg   [0:0] and_ln306_1_reg_6091_pp8_iter6_reg;
wire   [0:0] and_ln306_2_fu_3470_p2;
reg   [0:0] and_ln306_2_reg_6095;
reg   [0:0] and_ln306_2_reg_6095_pp8_iter4_reg;
reg   [0:0] and_ln306_2_reg_6095_pp8_iter5_reg;
reg   [0:0] and_ln306_2_reg_6095_pp8_iter6_reg;
wire   [0:0] and_ln306_3_fu_3481_p2;
reg   [0:0] and_ln306_3_reg_6099;
reg   [0:0] and_ln306_3_reg_6099_pp8_iter4_reg;
reg   [0:0] and_ln306_3_reg_6099_pp8_iter5_reg;
reg   [0:0] and_ln306_3_reg_6099_pp8_iter6_reg;
reg    ap_enable_reg_pp8_iter4;
reg    ap_enable_reg_pp8_iter5;
reg    ap_enable_reg_pp8_iter6;
wire   [31:0] add_ln132_fu_3737_p2;
wire    ap_CS_fsm_state65;
wire   [0:0] icmp_ln330_fu_3742_p2;
wire    ap_CS_fsm_pp9_stage0;
wire    ap_block_state66_pp9_stage0_iter0;
wire    ap_block_state67_pp9_stage0_iter1;
wire    ap_block_state68_pp9_stage0_iter2;
wire    ap_block_state69_pp9_stage0_iter3;
reg    ap_block_state70_pp9_stage0_iter4;
reg    ap_block_pp9_stage0_11001;
reg   [0:0] icmp_ln330_reg_6208_pp9_iter1_reg;
reg   [0:0] icmp_ln330_reg_6208_pp9_iter2_reg;
wire   [63:0] add_ln330_fu_3747_p2;
reg    ap_enable_reg_pp9_iter0;
wire   [0:0] icmp_ln331_fu_3753_p2;
reg   [0:0] icmp_ln331_reg_6217;
reg   [0:0] icmp_ln331_reg_6217_pp9_iter1_reg;
wire   [29:0] select_ln330_1_fu_3764_p3;
reg   [29:0] select_ln330_1_reg_6225;
wire   [34:0] select_ln331_3_fu_3782_p3;
wire   [1:0] select_ln331_1_fu_3842_p3;
reg   [1:0] select_ln331_1_reg_6240;
reg   [1:0] select_ln331_1_reg_6240_pp9_iter3_reg;
wire   [2:0] select_ln331_2_fu_3850_p3;
reg    ap_enable_reg_pp9_iter2;
wire   [31:0] add_ln332_fu_3862_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state13;
wire    ap_CS_fsm_state15;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state16;
wire    ap_CS_fsm_state18;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state19;
wire    ap_CS_fsm_state21;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state22;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state31;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state51;
reg    ap_enable_reg_pp7_iter1;
reg    ap_enable_reg_pp7_iter2;
reg    ap_enable_reg_pp7_iter4;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_flush_enable;
reg    ap_enable_reg_pp8_iter1;
reg    ap_enable_reg_pp8_iter2;
reg    ap_condition_pp8_exit_iter4_state61;
reg    ap_enable_reg_pp8_iter7;
reg    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_flush_enable;
reg    ap_enable_reg_pp9_iter1;
reg    ap_enable_reg_pp9_iter3;
reg    ap_condition_pp9_exit_iter2_state68;
reg   [8:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_q0;
reg   [8:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_q0;
reg   [8:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_q0;
reg   [8:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_q0;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_0_address1;
reg    weight_l2_0_ce1;
wire   [7:0] weight_l2_0_q1;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_1_address1;
reg    weight_l2_1_ce1;
wire   [7:0] weight_l2_1_q1;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_2_address1;
reg    weight_l2_2_ce1;
wire   [7:0] weight_l2_2_q1;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_q0;
reg   [8:0] weight_l2_3_address1;
reg    weight_l2_3_ce1;
wire   [7:0] weight_l2_3_q1;
reg   [9:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_d0;
wire   [7:0] data_l2_0_q0;
reg   [9:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_d0;
wire   [7:0] data_l2_1_q0;
reg   [9:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_d0;
wire   [7:0] data_l2_2_q0;
reg   [9:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_d0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] data_l1_0_0_address0;
reg    data_l1_0_0_ce0;
reg    data_l1_0_0_we0;
wire  signed [7:0] data_l1_0_0_q0;
reg   [8:0] data_l1_1_0_address0;
reg    data_l1_1_0_ce0;
reg    data_l1_1_0_we0;
wire   [7:0] data_l1_1_0_q0;
reg   [8:0] data_l1_2_0_address0;
reg    data_l1_2_0_ce0;
reg    data_l1_2_0_we0;
wire   [7:0] data_l1_2_0_q0;
reg   [8:0] data_l1_3_0_address0;
reg    data_l1_3_0_ce0;
reg    data_l1_3_0_we0;
wire   [7:0] data_l1_3_0_q0;
reg   [8:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
reg   [31:0] output_l1_0_d0;
reg   [8:0] output_l1_0_address1;
reg    output_l1_0_ce1;
reg   [8:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
reg   [31:0] output_l1_1_d0;
reg   [8:0] output_l1_1_address1;
reg    output_l1_1_ce1;
wire   [31:0] output_l1_1_q1;
reg   [8:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
reg   [31:0] output_l1_2_d0;
reg   [8:0] output_l1_2_address1;
reg    output_l1_2_ce1;
wire   [31:0] output_l1_2_q1;
reg   [8:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
reg   [31:0] output_l1_3_d0;
reg   [8:0] output_l1_3_address1;
reg    output_l1_3_ce1;
wire   [31:0] output_l1_3_q1;
reg   [29:0] co_reg_1349;
wire    ap_CS_fsm_state24;
reg   [59:0] indvar_flatten29_reg_1404;
reg   [29:0] ko_reg_1415;
reg   [29:0] co_1_reg_1426;
reg   [2:0] ki_1_reg_1438;
wire    ap_CS_fsm_state35;
reg   [31:0] ap_phi_mux_hi_phi_fu_1464_p4;
wire    ap_block_pp6_stage0;
reg   [63:0] indvar_flatten13_reg_1482;
reg   [31:0] r_reg_1493;
reg   [31:0] s_reg_1504;
reg   [31:0] ap_phi_mux_hi_1_phi_fu_1531_p4;
wire    ap_block_pp7_stage0;
reg   [29:0] ap_phi_mux_k_2_phi_fu_1575_p4;
wire   [63:0] zext_ln84_fu_1720_p1;
wire   [63:0] zext_ln88_fu_1774_p1;
wire   [63:0] zext_ln97_fu_1911_p1;
wire   [63:0] zext_ln97_1_fu_1940_p1;
wire   [63:0] zext_ln97_2_fu_1969_p1;
wire   [63:0] zext_ln97_3_fu_1999_p1;
wire   [63:0] newIndex66_cast_cast_fu_2189_p1;
wire   [63:0] zext_ln122_fu_2352_p1;
wire   [63:0] zext_ln147_1_fu_2433_p1;
wire   [63:0] zext_ln147_3_fu_2453_p1;
wire   [63:0] zext_ln147_5_fu_2663_p1;
wire   [63:0] zext_ln147_7_fu_2670_p1;
wire   [63:0] zext_ln147_9_fu_2711_p1;
wire   [63:0] zext_ln147_11_fu_2718_p1;
wire   [63:0] zext_ln147_13_fu_2759_p1;
wire   [63:0] zext_ln147_15_fu_2766_p1;
wire   [63:0] zext_ln147_17_fu_2807_p1;
wire   [63:0] zext_ln147_19_fu_2814_p1;
wire   [63:0] zext_ln147_21_fu_2855_p1;
wire   [63:0] zext_ln147_23_fu_2862_p1;
wire   [63:0] zext_ln147_25_fu_2903_p1;
wire   [63:0] zext_ln147_27_fu_2910_p1;
wire   [63:0] zext_ln147_29_fu_2951_p1;
wire   [63:0] zext_ln147_31_fu_2958_p1;
wire   [63:0] idxprom144_fu_3069_p1;
wire   [63:0] idxprom150_fu_3076_p1;
wire   [63:0] zext_ln196_fu_3150_p1;
wire    ap_block_pp8_stage0;
wire   [63:0] zext_ln196_1_fu_3203_p1;
wire   [63:0] zext_ln196_2_fu_3260_p1;
wire   [63:0] zext_ln205_1_fu_3285_p1;
wire   [63:0] zext_ln205_2_fu_3294_p1;
wire   [63:0] zext_ln205_3_fu_3303_p1;
wire   [63:0] zext_ln196_3_fu_3388_p1;
wire   [63:0] zext_ln314_fu_3642_p1;
wire   [63:0] zext_ln314_1_fu_3657_p1;
wire   [63:0] zext_ln314_2_fu_3672_p1;
wire   [63:0] zext_ln333_fu_3868_p1;
wire  signed [31:0] grp_fu_4293_p3;
wire  signed [31:0] grp_fu_4284_p3;
wire  signed [31:0] grp_fu_4275_p3;
wire  signed [31:0] grp_fu_4266_p3;
reg  signed [7:0] arrayidx2174_promoted538_fu_314;
reg   [31:0] output_reg_3_2_1_fu_318;
wire  signed [31:0] grp_fu_4234_p3;
reg  signed [7:0] arrayidx2174_1364_promoted552_fu_322;
reg   [31:0] output_reg_3_1_1_fu_326;
wire  signed [31:0] grp_fu_4202_p3;
reg  signed [7:0] arrayidx2174_2376_promoted566_fu_330;
reg   [31:0] output_reg_3_0_1_fu_334;
wire  signed [31:0] grp_fu_4170_p3;
reg  signed [7:0] arrayidx2174_3388_promoted580_fu_338;
reg  signed [7:0] arrayidx2174_1_promoted587_fu_342;
reg   [31:0] output_reg_2_2_1_fu_346;
wire  signed [31:0] grp_fu_4242_p3;
reg  signed [7:0] arrayidx2174_1_1_promoted601_fu_350;
reg   [31:0] output_reg_2_1_1_fu_354;
wire  signed [31:0] grp_fu_4210_p3;
reg  signed [7:0] arrayidx2174_1_2_promoted615_fu_358;
reg   [31:0] output_reg_2_0_1_fu_362;
wire  signed [31:0] grp_fu_4178_p3;
reg  signed [7:0] arrayidx2174_1_3_promoted629_fu_366;
reg  signed [7:0] arrayidx2174_2_promoted636_fu_370;
wire  signed [7:0] select_ln195_2_fu_3530_p3;
reg   [31:0] output_reg_1_2_1_fu_374;
wire  signed [31:0] grp_fu_4250_p3;
reg  signed [7:0] arrayidx2174_2_1_promoted650_fu_378;
wire  signed [7:0] select_ln195_1_fu_3361_p3;
reg   [31:0] output_reg_1_1_1_fu_382;
wire  signed [31:0] grp_fu_4218_p3;
reg  signed [7:0] arrayidx2174_2_2_promoted664_fu_386;
wire  signed [7:0] select_ln195_fu_3248_p3;
reg   [31:0] output_reg_1_0_1_fu_390;
wire  signed [31:0] grp_fu_4186_p3;
reg  signed [7:0] arrayidx2174_2_3_promoted678_fu_394;
reg   [31:0] output_reg_0_2_1_fu_398;
wire  signed [31:0] grp_fu_4258_p3;
reg   [31:0] output_reg_0_1_1_fu_402;
wire  signed [31:0] grp_fu_4226_p3;
reg   [31:0] output_reg_0_0_1_fu_406;
wire  signed [31:0] grp_fu_4194_p3;
reg    ap_block_pp9_stage0_01001;
wire   [7:0] trunc_ln708_fu_1712_p1;
wire   [7:0] trunc_ln708_1_fu_1766_p1;
wire  signed [31:0] tmp1_fu_1731_p2;
wire  signed [31:0] tmp_fu_1727_p2;
wire  signed [9:0] mul60_fu_1819_p0;
wire   [31:0] bound_fu_1859_p0;
wire   [63:0] cast_fu_1856_p1;
wire   [31:0] bound_fu_1859_p1;
wire   [31:0] bound11_fu_1868_p0;
wire   [63:0] cast9_fu_1865_p1;
wire   [31:0] bound11_fu_1868_p1;
wire   [29:0] bound18_fu_1881_p0;
wire   [29:0] bound18_fu_1881_p1;
wire   [9:0] add_ln97_fu_1907_p2;
wire   [9:0] add_ln97_1_fu_1936_p2;
wire   [9:0] add_ln97_2_fu_1965_p2;
wire   [9:0] trunc_ln97_3_fu_1985_p1;
wire   [29:0] add_ln102_1_fu_2019_p2;
wire   [8:0] trunc_ln102_fu_2025_p1;
wire   [8:0] trunc_ln102_1_fu_2029_p1;
wire   [33:0] tmp_2_fu_2075_p3;
wire   [33:0] mul_ln330_fu_2093_p0;
wire   [29:0] mul_ln330_fu_2093_p1;
wire   [8:0] mul_ln102_2_fu_2120_p2;
wire   [8:0] empty_40_fu_2136_p1;
wire   [10:0] zext_ln113_fu_2166_p1;
wire   [10:0] empty_37_fu_2174_p2;
wire   [8:0] newIndex_fu_2179_p4;
wire   [10:0] c_2_fu_2202_p2;
wire   [10:0] c_1_fu_2197_p2;
wire   [63:0] tmp_1_fu_2282_p5;
wire   [7:0] tmp_1_fu_2282_p6;
wire   [0:0] icmp_ln117_fu_2311_p2;
wire   [31:0] add_ln114_2_fu_2324_p2;
wire   [31:0] select_ln114_fu_2316_p3;
wire  signed [8:0] grp_fu_3988_p4;
wire   [31:0] add_ln129_17_fu_2379_p2;
wire  signed [10:0] grp_fu_3996_p4;
wire   [8:0] lshr_ln2_fu_2424_p4;
wire  signed [10:0] grp_fu_4006_p4;
wire   [8:0] lshr_ln147_1_fu_2444_p4;
wire  signed [10:0] grp_fu_4016_p4;
wire  signed [10:0] grp_fu_4026_p4;
wire  signed [10:0] grp_fu_4036_p4;
wire  signed [10:0] grp_fu_4046_p4;
wire  signed [10:0] grp_fu_4056_p4;
wire  signed [10:0] grp_fu_4066_p4;
wire  signed [10:0] grp_fu_4076_p4;
wire  signed [10:0] grp_fu_4086_p4;
wire  signed [10:0] grp_fu_4096_p4;
wire  signed [10:0] grp_fu_4106_p4;
wire  signed [10:0] grp_fu_4116_p4;
wire  signed [10:0] grp_fu_4126_p4;
wire  signed [10:0] grp_fu_4136_p4;
wire  signed [10:0] grp_fu_4146_p4;
wire   [31:0] tmp_3_fu_2632_p5;
wire   [31:0] tmp_4_fu_2649_p5;
wire   [31:0] tmp_5_fu_2680_p5;
wire   [31:0] tmp_6_fu_2697_p5;
wire   [31:0] tmp_7_fu_2728_p5;
wire   [31:0] tmp_8_fu_2745_p5;
wire   [31:0] tmp_9_fu_2776_p5;
wire   [31:0] tmp_s_fu_2793_p5;
wire   [31:0] tmp_10_fu_2824_p5;
wire   [31:0] tmp_11_fu_2841_p5;
wire   [31:0] tmp_12_fu_2872_p5;
wire   [31:0] tmp_13_fu_2889_p5;
wire   [31:0] tmp_14_fu_2920_p5;
wire   [31:0] tmp_15_fu_2937_p5;
wire   [31:0] tmp_16_fu_2968_p5;
wire   [31:0] tmp_17_fu_2985_p5;
wire   [0:0] icmp_ln158_fu_3010_p2;
wire   [31:0] add_ln155_3_fu_3023_p2;
wire   [9:0] trunc_ln155_fu_3037_p1;
wire   [31:0] select_ln155_fu_3015_p3;
wire   [9:0] empty_38_fu_3050_p1;
wire  signed [9:0] grp_fu_4156_p4;
wire   [31:0] add_ln305_fu_3161_p2;
wire   [0:0] tmp_20_fu_3167_p3;
wire   [0:0] icmp_ln307_fu_3181_p2;
wire   [0:0] xor_ln305_fu_3175_p2;
wire   [8:0] add_ln193_3_fu_3255_p2;
wire   [8:0] add_ln195_fu_3265_p2;
wire   [8:0] add_ln205_fu_3270_p2;
wire   [8:0] add_ln205_1_fu_3280_p2;
wire   [8:0] add_ln205_2_fu_3290_p2;
wire   [8:0] add_ln205_3_fu_3299_p2;
wire   [31:0] add_ln193_1_fu_3348_p2;
wire   [0:0] tmp_18_fu_3353_p3;
wire   [31:0] add_ln193_2_fu_3369_p2;
wire   [31:0] add_ln305_1_fu_3416_p2;
wire   [0:0] tmp_21_fu_3421_p3;
wire   [0:0] icmp_ln307_1_fu_3435_p2;
wire   [0:0] xor_ln305_1_fu_3429_p2;
wire   [31:0] add_ln305_2_fu_3446_p2;
wire   [0:0] tmp_22_fu_3451_p3;
wire   [0:0] icmp_ln307_2_fu_3465_p2;
wire   [0:0] xor_ln305_2_fu_3459_p2;
wire   [0:0] icmp_ln307_3_fu_3476_p2;
wire   [0:0] xor_ln195_fu_3382_p2;
wire   [8:0] add_ln307_fu_3632_p2;
wire   [8:0] add_ln315_fu_3637_p2;
wire   [8:0] add_ln307_1_fu_3647_p2;
wire   [8:0] add_ln315_1_fu_3652_p2;
wire   [8:0] add_ln307_2_fu_3662_p2;
wire   [8:0] add_ln315_2_fu_3667_p2;
wire   [29:0] add_ln330_1_fu_3758_p2;
wire   [34:0] add_ln331_1_fu_3776_p2;
wire   [1:0] trunc_ln333_fu_3797_p1;
wire   [0:0] icmp_ln332_1_fu_3808_p2;
wire   [2:0] select_ln330_fu_3790_p3;
wire   [0:0] select_ln330_3_fu_3813_p3;
wire   [0:0] or_ln331_fu_3825_p2;
wire   [2:0] add_ln331_fu_3819_p2;
wire   [1:0] trunc_ln333_1_fu_3838_p1;
wire   [1:0] select_ln330_2_fu_3801_p3;
wire   [31:0] select_ln331_fu_3830_p3;
wire  signed [8:0] grp_fu_4302_p3;
wire   [31:0] p_Repl2_s_fu_3875_p6;
wire  signed [10:0] grp_fu_3893_p0;
wire  signed [10:0] grp_fu_3898_p0;
wire  signed [10:0] grp_fu_3903_p0;
wire  signed [10:0] grp_fu_3908_p0;
wire  signed [10:0] grp_fu_3913_p0;
wire  signed [10:0] grp_fu_3918_p0;
wire  signed [10:0] grp_fu_3923_p0;
wire  signed [10:0] grp_fu_3928_p0;
wire  signed [10:0] grp_fu_3933_p0;
wire  signed [10:0] grp_fu_3938_p0;
wire  signed [10:0] grp_fu_3943_p0;
wire  signed [10:0] grp_fu_3948_p0;
wire  signed [10:0] grp_fu_3953_p0;
wire  signed [10:0] grp_fu_3958_p0;
wire  signed [10:0] grp_fu_3963_p0;
wire  signed [10:0] grp_fu_3968_p0;
wire  signed [10:0] grp_fu_3973_p0;
wire  signed [10:0] grp_fu_3978_p0;
wire  signed [10:0] grp_fu_3983_p0;
wire   [8:0] grp_fu_3988_p0;
wire   [10:0] trunc_ln129_1_fu_2397_p1;
wire   [9:0] grp_fu_4156_p0;
wire  signed [8:0] grp_fu_4164_p0;
wire  signed [7:0] grp_fu_4170_p1;
wire   [31:0] grp_fu_4170_p2;
wire  signed [7:0] grp_fu_4178_p1;
wire   [31:0] grp_fu_4178_p2;
wire  signed [7:0] grp_fu_4186_p1;
wire   [31:0] grp_fu_4186_p2;
wire  signed [7:0] grp_fu_4194_p1;
wire  signed [7:0] grp_fu_4202_p1;
wire  signed [7:0] grp_fu_4210_p1;
wire  signed [7:0] grp_fu_4218_p1;
wire  signed [7:0] grp_fu_4226_p1;
wire  signed [7:0] grp_fu_4234_p1;
wire  signed [7:0] grp_fu_4242_p1;
wire  signed [7:0] grp_fu_4250_p1;
wire  signed [7:0] grp_fu_4258_p1;
wire  signed [7:0] grp_fu_4266_p1;
wire  signed [7:0] grp_fu_4275_p1;
wire  signed [7:0] grp_fu_4284_p1;
wire  signed [7:0] grp_fu_4293_p1;
wire  signed [8:0] grp_fu_4302_p0;
wire   [8:0] grp_fu_4302_p2;
reg    grp_fu_4302_ce;
wire    ap_CS_fsm_state71;
reg   [46:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_block_pp4;
reg    ap_block_pp5;
reg    ap_block_pp6;
reg    ap_block_pp7;
reg    ap_block_pp8;
reg    ap_block_pp9;
reg    ap_enable_operation_1007;
reg    ap_enable_state59_pp8_iter2_stage0;
reg    ap_enable_operation_1048;
reg    ap_enable_state60_pp8_iter3_stage0;
reg    ap_enable_operation_1210;
reg    ap_enable_state64_pp8_iter7_stage0;
reg    ap_enable_operation_1011;
reg    ap_enable_operation_1050;
reg    ap_enable_operation_1216;
reg    ap_predicate_op1015_load_state59;
reg    ap_enable_operation_1015;
reg    ap_predicate_op1052_load_state60;
reg    ap_enable_operation_1052;
reg    ap_enable_operation_1222;
reg    ap_enable_operation_1019;
reg    ap_enable_operation_1054;
reg    ap_enable_operation_1225;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
wire   [59:0] bound18_fu_1881_p00;
wire   [59:0] bound18_fu_1881_p10;
wire   [63:0] mul_ln330_fu_2093_p00;
wire   [63:0] mul_ln330_fu_2093_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter3 = 1'b0;
#0 ap_enable_reg_pp8_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter5 = 1'b0;
#0 ap_enable_reg_pp8_iter6 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter7 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter3 = 1'b0;
end

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(trunc_ln708_fu_1712_p1),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(trunc_ln708_fu_1712_p1),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(trunc_ln708_fu_1712_p1),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(trunc_ln708_fu_1712_p1),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(trunc_ln708_1_fu_1766_p1),
    .q0(weight_l2_0_q0),
    .address1(weight_l2_0_address1),
    .ce1(weight_l2_0_ce1),
    .q1(weight_l2_0_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(trunc_ln708_1_fu_1766_p1),
    .q0(weight_l2_1_q0),
    .address1(weight_l2_1_address1),
    .ce1(weight_l2_1_ce1),
    .q1(weight_l2_1_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(trunc_ln708_1_fu_1766_p1),
    .q0(weight_l2_2_q0),
    .address1(weight_l2_2_address1),
    .ce1(weight_l2_2_ce1),
    .q1(weight_l2_2_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(trunc_ln708_1_fu_1766_p1),
    .q0(weight_l2_3_q0),
    .address1(weight_l2_3_address1),
    .ce1(weight_l2_3_ce1),
    .q1(weight_l2_3_q1)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(data_l2_0_d0),
    .q0(data_l2_0_q0)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(data_l2_1_d0),
    .q0(data_l2_1_q0)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(data_l2_2_d0),
    .q0(data_l2_2_q0)
);

Conv_sysarr_dbbuf_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(data_l2_3_d0),
    .q0(data_l2_3_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_0_0_address0),
    .ce0(data_l1_0_0_ce0),
    .we0(data_l1_0_0_we0),
    .d0(data_l2_0_q0),
    .q0(data_l1_0_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_1_0_address0),
    .ce0(data_l1_1_0_ce0),
    .we0(data_l1_1_0_we0),
    .d0(data_l2_1_q0),
    .q0(data_l1_1_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_2_0_address0),
    .ce0(data_l1_2_0_ce0),
    .we0(data_l1_2_0_we0),
    .d0(data_l2_2_q0),
    .q0(data_l1_2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_3_0_address0),
    .ce0(data_l1_3_0_ce0),
    .we0(data_l1_3_0_we0),
    .d0(data_l2_3_q0),
    .q0(data_l1_3_0_q0)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(output_l1_0_d0),
    .address1(output_l1_0_address1),
    .ce1(output_l1_0_ce1),
    .q1(output_l1_0_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(output_l1_1_d0),
    .address1(output_l1_1_address1),
    .ce1(output_l1_1_ce1),
    .q1(output_l1_1_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(output_l1_2_d0),
    .address1(output_l1_2_address1),
    .ce1(output_l1_2_ce1),
    .q1(output_l1_2_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(output_l1_3_d0),
    .address1(output_l1_3_address1),
    .ce1(output_l1_3_ce1),
    .q1(output_l1_3_q1)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U1(
    .din0(tmp_data_V_2_reg_4407),
    .din1(tmp_data_V_1_reg_4395),
    .dout(tmp_fu_1727_p2)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U2(
    .din0(tmp_data_V_5_reg_4448),
    .din1(tmp_data_V_5_reg_4448),
    .dout(tmp1_fu_1731_p2)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U3(
    .din0(tmp1_fu_1731_p2),
    .din1(tmp_fu_1727_p2),
    .dout(mul37_fu_1735_p2)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U4(
    .din0(tmp_data_V_4_reg_4436),
    .din1(tmp_data_V_4_reg_4436),
    .dout(mul51_fu_1790_p2)
);

Conv_sysarr_dbbuf_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U5(
    .din0(mul60_fu_1819_p0),
    .din1(empty_reg_4548),
    .dout(mul60_fu_1819_p2)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U6(
    .din0(tmp_data_V_3_reg_4419),
    .din1(tmp_data_V_3_reg_4419),
    .dout(mul158_fu_1833_p2)
);

Conv_sysarr_dbbuf_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U7(
    .din0(bound_fu_1859_p0),
    .din1(bound_fu_1859_p1),
    .dout(bound_fu_1859_p2)
);

Conv_sysarr_dbbuf_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U8(
    .din0(bound11_fu_1868_p0),
    .din1(bound11_fu_1868_p1),
    .dout(bound11_fu_1868_p2)
);

Conv_sysarr_dbbuf_mul_30ns_30ns_60_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 60 ))
mul_30ns_30ns_60_1_1_U9(
    .din0(bound18_fu_1881_p0),
    .din1(bound18_fu_1881_p1),
    .dout(bound18_fu_1881_p2)
);

Conv_sysarr_dbbuf_mul_34ns_30ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 64 ))
mul_34ns_30ns_64_1_1_U10(
    .din0(mul_ln330_fu_2093_p0),
    .din1(mul_ln330_fu_2093_p1),
    .dout(mul_ln330_fu_2093_p2)
);

Conv_sysarr_dbbuf_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U11(
    .din0(select_ln102_1_reg_4839),
    .din1(trunc_ln521_1_reg_4428),
    .dout(mul_ln102_fu_2111_p2)
);

Conv_sysarr_dbbuf_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U12(
    .din0(mul_ln102_fu_2111_p2),
    .din1(trunc_ln521_1_reg_4428),
    .dout(mul_ln102_1_fu_2115_p2)
);

Conv_sysarr_dbbuf_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U13(
    .din0(empty_35_reg_4748),
    .din1(select_ln102_1_reg_4839),
    .dout(mul_ln102_2_fu_2120_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U14(
    .din0(bias_l2_0_q0),
    .din1(bias_l2_1_q0),
    .din2(bias_l2_2_q0),
    .din3(bias_l2_3_q0),
    .din4(tmp_1_fu_2282_p5),
    .dout(tmp_1_fu_2282_p6)
);

Conv_sysarr_dbbuf_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U15(
    .din0(trunc_ln105_reg_4938),
    .din1(trunc_ln521_2_reg_4442),
    .dout(mul139_fu_2359_p2)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U16(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_3_fu_2632_p5),
    .dout(tmp_3_fu_2632_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U17(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_4_fu_2649_p5),
    .dout(tmp_4_fu_2649_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U18(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_5_fu_2680_p5),
    .dout(tmp_5_fu_2680_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U19(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_6_fu_2697_p5),
    .dout(tmp_6_fu_2697_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U20(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_7_fu_2728_p5),
    .dout(tmp_7_fu_2728_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U21(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_8_fu_2745_p5),
    .dout(tmp_8_fu_2745_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U22(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_9_fu_2776_p5),
    .dout(tmp_9_fu_2776_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U23(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_s_fu_2793_p5),
    .dout(tmp_s_fu_2793_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U24(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_10_fu_2824_p5),
    .dout(tmp_10_fu_2824_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U25(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_11_fu_2841_p5),
    .dout(tmp_11_fu_2841_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U26(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_12_fu_2872_p5),
    .dout(tmp_12_fu_2872_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U27(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_13_fu_2889_p5),
    .dout(tmp_13_fu_2889_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U28(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_14_fu_2920_p5),
    .dout(tmp_14_fu_2920_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U29(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_15_fu_2937_p5),
    .dout(tmp_15_fu_2937_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U30(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_16_fu_2968_p5),
    .dout(tmp_16_fu_2968_p6)
);

Conv_sysarr_dbbuf_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U31(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_17_fu_2985_p5),
    .dout(tmp_17_fu_2985_p6)
);

Conv_sysarr_dbbuf_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U32(
    .din0(output_l1_0_q1),
    .din1(output_l1_1_q1),
    .din2(output_l1_2_q1),
    .din3(output_l1_3_q1),
    .din4(select_ln331_1_reg_6240_pp9_iter3_reg),
    .dout(p_Repl2_s_fu_3875_p6)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3893_p0),
    .din1(trunc_ln521_reg_4412),
    .ce(1'b1),
    .dout(grp_fu_3893_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3898_p0),
    .din1(trunc_ln521_reg_4412),
    .ce(1'b1),
    .dout(grp_fu_3898_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3903_p0),
    .din1(trunc_ln521_reg_4412),
    .ce(1'b1),
    .dout(grp_fu_3903_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3908_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3908_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3913_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3913_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3918_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3918_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3923_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3923_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3928_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3928_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3933_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3933_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3938_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3938_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3943_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3943_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3948_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3948_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3953_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3953_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3958_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3958_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3963_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3963_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3968_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3968_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3973_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3973_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3978_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3978_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3983_p0),
    .din1(trunc_ln521_3_reg_4456),
    .ce(1'b1),
    .dout(grp_fu_3983_p2)
);

Conv_sysarr_dbbuf_ama_addmuladd_9ns_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
ama_addmuladd_9ns_9s_9s_9ns_9_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3988_p0),
    .din1(mul_ln102_reg_4890),
    .din2(trunc_ln521_1_reg_4428),
    .din3(trunc_ln123_reg_5096_pp6_iter1_reg),
    .ce(1'b1),
    .dout(grp_fu_3988_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109274_reg_5141),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_3996_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109276_reg_5146),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4006_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109278_reg_5151),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4016_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109280_reg_5156),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4026_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_1264_reg_5111),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4036_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_1282_reg_5161),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4046_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_1268_reg_5126),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4056_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_1284_reg_5166),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4066_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_2262_reg_5106),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4076_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_2286_reg_5171),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4086_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_2270_reg_5131),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4096_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_2288_reg_5176),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4106_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_3266_reg_5116),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4116_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_3290_reg_5181),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4126_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_3272_reg_5136),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4136_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_11ns_11s_11s_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_11ns_11s_11s_11ns_11_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln129_1_fu_2397_p1),
    .din1(mul109_3292_reg_5186),
    .din2(trunc_ln521_3_reg_4456),
    .din3(trunc_ln148_fu_2413_p1),
    .ce(1'b1),
    .dout(grp_fu_4146_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_10ns_10ns_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
ama_addmuladd_10ns_10ns_10s_10ns_10_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4156_p0),
    .din1(trunc_ln129_reg_5209),
    .din2(trunc_ln521_2_reg_4442),
    .din3(tmp3_reg_5823_pp7_iter1_reg),
    .ce(1'b1),
    .dout(grp_fu_4156_p4)
);

Conv_sysarr_dbbuf_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4164_p0),
    .din1(trunc_ln521_1_reg_4428),
    .din2(empty_39_reg_5818_pp7_iter1_reg),
    .ce(1'b1),
    .dout(grp_fu_4164_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_3388_promoted580_fu_338),
    .din1(grp_fu_4170_p1),
    .din2(grp_fu_4170_p2),
    .ce(1'b1),
    .dout(grp_fu_4170_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_1_3_promoted629_fu_366),
    .din1(grp_fu_4178_p1),
    .din2(grp_fu_4178_p2),
    .ce(1'b1),
    .dout(grp_fu_4178_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_2_3_promoted678_fu_394),
    .din1(grp_fu_4186_p1),
    .din2(grp_fu_4186_p2),
    .ce(1'b1),
    .dout(grp_fu_4186_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1_0_0_q0),
    .din1(grp_fu_4194_p1),
    .din2(output_l1_0_q1),
    .ce(1'b1),
    .dout(grp_fu_4194_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_2376_promoted566_fu_330),
    .din1(grp_fu_4202_p1),
    .din2(output_reg_3_0_1_fu_334),
    .ce(1'b1),
    .dout(grp_fu_4202_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_1_2_promoted615_fu_358),
    .din1(grp_fu_4210_p1),
    .din2(output_reg_2_0_1_fu_362),
    .ce(1'b1),
    .dout(grp_fu_4210_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_2_2_promoted664_fu_386),
    .din1(grp_fu_4218_p1),
    .din2(output_reg_1_0_1_fu_390),
    .ce(1'b1),
    .dout(grp_fu_4218_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln195_fu_3248_p3),
    .din1(grp_fu_4226_p1),
    .din2(output_reg_0_0_1_fu_406),
    .ce(1'b1),
    .dout(grp_fu_4226_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_1364_promoted552_fu_322),
    .din1(grp_fu_4234_p1),
    .din2(output_reg_3_1_1_fu_326),
    .ce(1'b1),
    .dout(grp_fu_4234_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_1_1_promoted601_fu_350),
    .din1(grp_fu_4242_p1),
    .din2(output_reg_2_1_1_fu_354),
    .ce(1'b1),
    .dout(grp_fu_4242_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_2_1_promoted650_fu_378),
    .din1(grp_fu_4250_p1),
    .din2(output_reg_1_1_1_fu_382),
    .ce(1'b1),
    .dout(grp_fu_4250_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln195_1_fu_3361_p3),
    .din1(grp_fu_4258_p1),
    .din2(output_reg_0_1_1_fu_402),
    .ce(1'b1),
    .dout(grp_fu_4258_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_promoted538_fu_314),
    .din1(grp_fu_4266_p1),
    .din2(output_reg_3_2_1_fu_318),
    .ce(1'b1),
    .dout(grp_fu_4266_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_1_promoted587_fu_342),
    .din1(grp_fu_4275_p1),
    .din2(output_reg_2_2_1_fu_346),
    .ce(1'b1),
    .dout(grp_fu_4275_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx2174_2_promoted636_fu_370),
    .din1(grp_fu_4284_p1),
    .din2(output_reg_1_2_1_fu_374),
    .ce(1'b1),
    .dout(grp_fu_4284_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln195_2_fu_3530_p3),
    .din1(grp_fu_4293_p1),
    .din2(output_reg_0_2_1_fu_398),
    .ce(1'b1),
    .dout(grp_fu_4293_p3)
);

Conv_sysarr_dbbuf_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4302_p0),
    .din1(empty_34_reg_4734),
    .din2(grp_fu_4302_p2),
    .ce(grp_fu_4302_ce),
    .dout(grp_fu_4302_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln91_fu_1804_p2 == 1'd0) & (cmp52307_reg_4553 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln91_fu_1804_p2 == 1'd0) & (cmp52307_reg_4553 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state16) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state16) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state16);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state19) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state19) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state19);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state22) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state22) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state22);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state31) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state31)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state31);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp6_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state51) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state50)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state51)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state51);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end else if ((1'b1 == ap_CS_fsm_state50)) begin
            ap_enable_reg_pp7_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp8_flush_enable)) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if (((cmp162278_reg_4744 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter3 <= ap_enable_reg_pp8_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter4 <= ap_enable_reg_pp8_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp8_exit_iter4_state61)) begin
                ap_enable_reg_pp8_iter5 <= ap_enable_reg_pp8_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp8_iter5 <= ap_enable_reg_pp8_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter6 <= ap_enable_reg_pp8_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter7 <= ap_enable_reg_pp8_iter6;
        end else if (((cmp162278_reg_4744 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
            ap_enable_reg_pp8_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp9_flush_enable)) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if (((icmp_ln102_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter2 <= ap_enable_reg_pp9_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp9_exit_iter2_state68)) begin
                ap_enable_reg_pp9_iter3 <= ap_enable_reg_pp9_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp9_iter3 <= ap_enable_reg_pp9_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter4 <= ap_enable_reg_pp9_iter3;
        end else if (((icmp_ln102_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
            ap_enable_reg_pp9_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_2363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        co_1_reg_1426 <= co_2_fu_2401_p2;
    end else if (((icmp_ln91_fu_1804_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        co_1_reg_1426 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        co_reg_1349 <= co_3_reg_4561;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        co_reg_1349 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln155_reg_5799 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        hi_1_reg_1527 <= select_ln155_1_reg_5808;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        hi_1_reg_1527 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_5082 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        hi_reg_1460 <= select_ln114_1_reg_5091;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        hi_reg_1460 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln183_fu_3135_p2 == 1'd0))) begin
        i_reg_1549 <= add_ln183_fu_3140_p2;
    end else if (((cmp162278_reg_4744 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        i_reg_1549 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        indvar_flatten13_reg_1482 <= add_ln129_16_reg_5194;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        indvar_flatten13_reg_1482 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_2363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        indvar_flatten29_reg_1404 <= add_ln102_reg_4829;
    end else if (((icmp_ln91_fu_1804_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        indvar_flatten29_reg_1404 <= 60'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln330_fu_3742_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        indvar_flatten36_reg_1582 <= select_ln331_3_fu_3782_p3;
    end else if (((icmp_ln102_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        indvar_flatten36_reg_1582 <= 35'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln330_fu_3742_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        indvar_flatten50_reg_1560 <= add_ln330_fu_3747_p2;
    end else if (((icmp_ln102_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        indvar_flatten50_reg_1560 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_2999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        indvar_flatten6_reg_1516 <= add_ln155_2_fu_3004_p2;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        indvar_flatten6_reg_1516 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2300_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten_reg_1449 <= add_ln114_1_fu_2305_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        indvar_flatten_reg_1449 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_1_reg_1338 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln86_fu_1741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_1_reg_1338 <= add_ln86_fu_1746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln330_reg_6208 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        k_2_reg_1571 <= select_ln330_1_reg_6225;
    end else if (((icmp_ln102_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        k_2_reg_1571 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        k_reg_1327 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln82_fu_1687_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_1327 <= add_ln82_fu_1692_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ki_1_reg_1438 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ki_1_reg_1438 <= add_ln113_reg_4964;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln330_reg_6208_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        ki_reg_1593 <= select_ln331_2_fu_3850_p3;
    end else if (((icmp_ln102_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        ki_reg_1593 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_2363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        ko_reg_1415 <= select_ln102_2_reg_4865;
    end else if (((icmp_ln91_fu_1804_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ko_reg_1415 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        r_reg_1493 <= select_ln129_1_reg_5204;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_reg_1493 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        s_reg_1504 <= add_ln132_fu_3737_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        s_reg_1504 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        wh_1_reg_1371 <= 32'd0;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln94_1_fu_1916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        wh_1_reg_1371 <= add_ln94_1_fu_1921_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        wh_2_reg_1382 <= 32'd0;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln94_2_fu_1945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        wh_2_reg_1382 <= add_ln94_2_fu_1950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln330_reg_6208_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        wh_3_reg_1604 <= add_ln332_fu_3862_p2;
    end else if (((icmp_ln102_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        wh_3_reg_1604 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        wh_4_reg_1393 <= 32'd0;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln94_3_fu_1974_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        wh_4_reg_1393 <= add_ln94_3_fu_1979_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_1804_p2 == 1'd0) & (cmp52307_reg_4553 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        wh_reg_1360 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln94_fu_1887_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        wh_reg_1360 <= add_ln94_fu_1892_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_2999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        wi_1_reg_1538 <= add_ln158_fu_3063_p2;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        wi_1_reg_1538 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2300_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        wi_reg_1471 <= add_ln117_fu_2346_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        wi_reg_1471 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (icmp_ln155_reg_5799_pp7_iter2_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        add149_reg_5833 <= grp_fu_4164_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln102_reg_4829 <= add_ln102_fu_2008_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln113_reg_4964 <= add_ln113_fu_2160_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        add_ln129_16_reg_5194 <= add_ln129_16_fu_2368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5946 == 1'd0))) begin
        add_ln193_reg_5981 <= add_ln193_fu_3198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_3_fu_1974_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln97_3_reg_4820 <= add_ln97_3_fu_1989_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5946_pp8_iter2_reg == 1'd0))) begin
        and_ln306_1_reg_6091 <= and_ln306_1_fu_3440_p2;
        and_ln306_2_reg_6095 <= and_ln306_2_fu_3470_p2;
        and_ln306_3_reg_6099 <= and_ln306_3_fu_3481_p2;
        tmp_19_reg_6061 <= add_ln193_2_fu_3369_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp8_stage0_11001)) begin
        and_ln306_1_reg_6091_pp8_iter4_reg <= and_ln306_1_reg_6091;
        and_ln306_1_reg_6091_pp8_iter5_reg <= and_ln306_1_reg_6091_pp8_iter4_reg;
        and_ln306_1_reg_6091_pp8_iter6_reg <= and_ln306_1_reg_6091_pp8_iter5_reg;
        and_ln306_2_reg_6095_pp8_iter4_reg <= and_ln306_2_reg_6095;
        and_ln306_2_reg_6095_pp8_iter5_reg <= and_ln306_2_reg_6095_pp8_iter4_reg;
        and_ln306_2_reg_6095_pp8_iter6_reg <= and_ln306_2_reg_6095_pp8_iter5_reg;
        and_ln306_3_reg_6099_pp8_iter4_reg <= and_ln306_3_reg_6099;
        and_ln306_3_reg_6099_pp8_iter5_reg <= and_ln306_3_reg_6099_pp8_iter4_reg;
        and_ln306_3_reg_6099_pp8_iter6_reg <= and_ln306_3_reg_6099_pp8_iter5_reg;
        and_ln306_reg_5977_pp8_iter2_reg <= and_ln306_reg_5977_pp8_iter1_reg;
        and_ln306_reg_5977_pp8_iter3_reg <= and_ln306_reg_5977_pp8_iter2_reg;
        and_ln306_reg_5977_pp8_iter4_reg <= and_ln306_reg_5977_pp8_iter3_reg;
        and_ln306_reg_5977_pp8_iter5_reg <= and_ln306_reg_5977_pp8_iter4_reg;
        and_ln306_reg_5977_pp8_iter6_reg <= and_ln306_reg_5977_pp8_iter5_reg;
        icmp_ln183_reg_5946_pp8_iter2_reg <= icmp_ln183_reg_5946_pp8_iter1_reg;
        icmp_ln183_reg_5946_pp8_iter3_reg <= icmp_ln183_reg_5946_pp8_iter2_reg;
        icmp_ln183_reg_5946_pp8_iter4_reg <= icmp_ln183_reg_5946_pp8_iter3_reg;
        icmp_ln183_reg_5946_pp8_iter5_reg <= icmp_ln183_reg_5946_pp8_iter4_reg;
        icmp_ln195_reg_5971_pp8_iter2_reg <= icmp_ln195_reg_5971_pp8_iter1_reg;
        trunc_ln196_reg_5955_pp8_iter2_reg <= trunc_ln196_reg_5955_pp8_iter1_reg;
        trunc_ln196_reg_5955_pp8_iter3_reg <= trunc_ln196_reg_5955_pp8_iter2_reg;
        trunc_ln196_reg_5955_pp8_iter4_reg <= trunc_ln196_reg_5955_pp8_iter3_reg;
        trunc_ln196_reg_5955_pp8_iter5_reg <= trunc_ln196_reg_5955_pp8_iter4_reg;
        trunc_ln196_reg_5955_pp8_iter6_reg <= trunc_ln196_reg_5955_pp8_iter5_reg;
        zext_ln183_reg_5938_pp8_iter2_reg[30 : 0] <= zext_ln183_reg_5938_pp8_iter1_reg[30 : 0];
        zext_ln205_reg_6016_pp8_iter3_reg[8 : 0] <= zext_ln205_reg_6016[8 : 0];
        zext_ln205_reg_6016_pp8_iter4_reg[8 : 0] <= zext_ln205_reg_6016_pp8_iter3_reg[8 : 0];
        zext_ln205_reg_6016_pp8_iter5_reg[8 : 0] <= zext_ln205_reg_6016_pp8_iter4_reg[8 : 0];
        zext_ln205_reg_6016_pp8_iter6_reg[8 : 0] <= zext_ln205_reg_6016_pp8_iter5_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_fu_3135_p2 == 1'd0))) begin
        and_ln306_reg_5977 <= and_ln306_fu_3186_p2;
        icmp_ln195_reg_5971 <= icmp_ln195_fu_3155_p2;
        trunc_ln196_reg_5955 <= trunc_ln196_fu_3146_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        and_ln306_reg_5977_pp8_iter1_reg <= and_ln306_reg_5977;
        icmp_ln183_reg_5946 <= icmp_ln183_fu_3135_p2;
        icmp_ln183_reg_5946_pp8_iter1_reg <= icmp_ln183_reg_5946;
        icmp_ln195_reg_5971_pp8_iter1_reg <= icmp_ln195_reg_5971;
        trunc_ln196_reg_5955_pp8_iter1_reg <= trunc_ln196_reg_5955;
        zext_ln183_reg_5938[30 : 0] <= zext_ln183_fu_3131_p1[30 : 0];
        zext_ln183_reg_5938_pp8_iter1_reg[30 : 0] <= zext_ln183_reg_5938[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter3 == 1'b1) & (icmp_ln183_reg_5946_pp8_iter2_reg == 1'd0))) begin
        arrayidx2174_1364_promoted552_fu_322 <= arrayidx2174_1_1_promoted601_fu_350;
        arrayidx2174_1_1_promoted601_fu_350 <= arrayidx2174_2_1_promoted650_fu_378;
        arrayidx2174_2_1_promoted650_fu_378 <= select_ln195_1_fu_3361_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5946_pp8_iter1_reg == 1'd0))) begin
        arrayidx2174_1_2_promoted615_fu_358 <= arrayidx2174_2_2_promoted664_fu_386;
        arrayidx2174_2376_promoted566_fu_330 <= arrayidx2174_1_2_promoted615_fu_358;
        arrayidx2174_2_2_promoted664_fu_386 <= select_ln195_fu_3248_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5946 == 1'd0))) begin
        arrayidx2174_1_3_promoted629_fu_366 <= arrayidx2174_2_3_promoted678_fu_394;
        arrayidx2174_2_3_promoted678_fu_394 <= data_l1_0_0_q0;
        arrayidx2174_3388_promoted580_fu_338 <= arrayidx2174_1_3_promoted629_fu_366;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter4 == 1'b1) & (icmp_ln183_reg_5946_pp8_iter3_reg == 1'd0))) begin
        arrayidx2174_1_promoted587_fu_342 <= arrayidx2174_2_promoted636_fu_370;
        arrayidx2174_2_promoted636_fu_370 <= select_ln195_2_fu_3530_p3;
        arrayidx2174_promoted538_fu_314 <= arrayidx2174_1_promoted587_fu_342;
        output_reg_0_0_1_fu_406 <= grp_fu_4194_p3;
        output_reg_1_0_1_fu_390 <= grp_fu_4186_p3;
        output_reg_2_0_1_fu_362 <= grp_fu_4178_p3;
        output_reg_3_0_1_fu_334 <= grp_fu_4170_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        bias_in_V_read_1_reg_4401 <= bias_in_V_dout;
        tmp_data_V_2_reg_4407 <= tmp_data_V_2_fu_1655_p1;
        trunc_ln521_reg_4412 <= trunc_ln521_fu_1659_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_in_V_read_reg_4390 <= bias_in_V_dout;
        tmp_data_V_1_reg_4395 <= tmp_data_V_1_fu_1651_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_1804_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        bound11_reg_4759 <= bound11_fu_1868_p2;
        bound18_reg_4764 <= bound18_fu_1881_p2;
        bound_reg_4753 <= bound_fu_1859_p2;
        cmp162278_reg_4744 <= cmp162278_fu_1847_p2;
        div68_cast8_reg_4718 <= {{bias_in_V_read_reg_4390[31:2]}};
        empty_34_reg_4734 <= empty_34_fu_1837_p1;
        empty_35_reg_4748 <= empty_35_fu_1853_p1;
        input_rows_reg_4739 <= input_rows_fu_1841_p2;
        mul158_reg_4723 <= mul158_fu_1833_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        c_3_reg_4953[10 : 2] <= c_3_fu_2148_p2[10 : 2];
        c_reg_4943[10 : 2] <= c_fu_2140_p3[10 : 2];
        mul107_mid2_reg_4906[10 : 2] <= mul107_mid2_fu_2124_p3[10 : 2];
        mul_ln102_1_reg_4895 <= mul_ln102_1_fu_2115_p2;
        mul_ln102_3_reg_4914 <= grp_fu_3893_p2;
        mul_ln102_4_reg_4922 <= grp_fu_3898_p2;
        mul_ln102_5_reg_4930 <= grp_fu_3903_p2;
        mul_ln102_reg_4890 <= mul_ln102_fu_2111_p2;
        select_ln102_reg_4885 <= select_ln102_fu_2104_p3;
        trunc_ln105_reg_4938 <= trunc_ln105_fu_2132_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        cmp52307_reg_4553 <= cmp52307_fu_1798_p2;
        div48_cast_reg_4533 <= {{bias_in_V_read_1_reg_4401[31:2]}};
        empty_reg_4548 <= empty_fu_1794_p1;
        mul51_reg_4540 <= mul51_fu_1790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        co_3_reg_4561 <= co_3_fu_1809_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        conv83_reg_5074 <= conv83_fu_2296_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_2154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        empty_36_reg_4969 <= empty_36_fu_2170_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln155_fu_2999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        empty_39_reg_5818 <= empty_39_fu_3054_p1;
        tmp3_reg_5823 <= tmp3_fu_3058_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        empty_39_reg_5818_pp7_iter1_reg <= empty_39_reg_5818;
        icmp_ln155_reg_5799 <= icmp_ln155_fu_2999_p2;
        icmp_ln155_reg_5799_pp7_iter1_reg <= icmp_ln155_reg_5799;
        tmp3_reg_5823_pp7_iter1_reg <= tmp3_reg_5823;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_2003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        icmp_ln105_reg_4834 <= icmp_ln105_fu_2014_p2;
        p_mid2_reg_4845[10 : 2] <= p_mid2_fu_2041_p3[10 : 2];
        select_ln102_1_reg_4839 <= select_ln102_1_fu_2033_p3;
        select_ln102_2_reg_4865 <= select_ln102_2_fu_2067_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln114_reg_5082 <= icmp_ln114_fu_2300_p2;
        trunc_ln123_reg_5096_pp6_iter1_reg <= trunc_ln123_reg_5096;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_2363_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        icmp_ln132_reg_5199 <= icmp_ln132_fu_2374_p2;
        select_ln129_1_reg_5204 <= select_ln129_1_fu_2385_p3;
        trunc_ln129_reg_5209 <= trunc_ln129_fu_2393_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp7_stage0_11001)) begin
        icmp_ln155_reg_5799_pp7_iter2_reg <= icmp_ln155_reg_5799_pp7_iter1_reg;
        icmp_ln155_reg_5799_pp7_iter3_reg <= icmp_ln155_reg_5799_pp7_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        icmp_ln330_reg_6208 <= icmp_ln330_fu_3742_p2;
        icmp_ln330_reg_6208_pp9_iter1_reg <= icmp_ln330_reg_6208;
        icmp_ln331_reg_6217_pp9_iter1_reg <= icmp_ln331_reg_6217;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp9_stage0_11001)) begin
        icmp_ln330_reg_6208_pp9_iter2_reg <= icmp_ln330_reg_6208_pp9_iter1_reg;
        icmp_ln330_reg_6208_pp9_iter3_reg <= icmp_ln330_reg_6208_pp9_iter2_reg;
        select_ln331_1_reg_6240_pp9_iter3_reg <= select_ln331_1_reg_6240;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln330_fu_3742_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        icmp_ln331_reg_6217 <= icmp_ln331_fu_3753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        icmp_ln332_reg_4880 <= icmp_ln332_fu_2099_p2;
        mul_ln330_reg_4875 <= mul_ln330_fu_2093_p2;
        zext_ln330_reg_4870[33 : 2] <= zext_ln330_fu_2082_p1[33 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln94_1_reg_4783 <= icmp_ln94_1_fu_1916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln94_2_reg_4797 <= icmp_ln94_2_fu_1945_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln94_3_reg_4811 <= icmp_ln94_3_fu_1974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln94_reg_4769 <= icmp_ln94_fu_1887_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        lshr_ln147_10_reg_5394 <= {{grp_fu_4106_p4[10:2]}};
        lshr_ln147_11_reg_5404 <= {{grp_fu_4116_p4[10:2]}};
        lshr_ln147_12_reg_5414 <= {{grp_fu_4126_p4[10:2]}};
        lshr_ln147_13_reg_5424 <= {{grp_fu_4136_p4[10:2]}};
        lshr_ln147_14_reg_5434 <= {{grp_fu_4146_p4[10:2]}};
        lshr_ln147_2_reg_5304 <= {{grp_fu_4016_p4[10:2]}};
        lshr_ln147_3_reg_5314 <= {{grp_fu_4026_p4[10:2]}};
        lshr_ln147_4_reg_5324 <= {{grp_fu_4036_p4[10:2]}};
        lshr_ln147_5_reg_5334 <= {{grp_fu_4046_p4[10:2]}};
        lshr_ln147_6_reg_5344 <= {{grp_fu_4056_p4[10:2]}};
        lshr_ln147_7_reg_5354 <= {{grp_fu_4066_p4[10:2]}};
        lshr_ln147_8_reg_5364 <= {{grp_fu_4076_p4[10:2]}};
        lshr_ln147_9_reg_5374 <= {{grp_fu_4086_p4[10:2]}};
        lshr_ln147_s_reg_5384 <= {{grp_fu_4096_p4[10:2]}};
        trunc_ln147_10_reg_5379 <= trunc_ln147_10_fu_2557_p1;
        trunc_ln147_11_reg_5389 <= trunc_ln147_11_fu_2569_p1;
        trunc_ln147_12_reg_5399 <= trunc_ln147_12_fu_2581_p1;
        trunc_ln147_13_reg_5409 <= trunc_ln147_13_fu_2593_p1;
        trunc_ln147_14_reg_5419 <= trunc_ln147_14_fu_2605_p1;
        trunc_ln147_15_reg_5429 <= trunc_ln147_15_fu_2617_p1;
        trunc_ln147_1_reg_5274 <= trunc_ln147_1_fu_2441_p1;
        trunc_ln147_2_reg_5299 <= trunc_ln147_2_fu_2461_p1;
        trunc_ln147_3_reg_5309 <= trunc_ln147_3_fu_2473_p1;
        trunc_ln147_4_reg_5319 <= trunc_ln147_4_fu_2485_p1;
        trunc_ln147_5_reg_5329 <= trunc_ln147_5_fu_2497_p1;
        trunc_ln147_6_reg_5339 <= trunc_ln147_6_fu_2509_p1;
        trunc_ln147_7_reg_5349 <= trunc_ln147_7_fu_2521_p1;
        trunc_ln147_8_reg_5359 <= trunc_ln147_8_fu_2533_p1;
        trunc_ln147_9_reg_5369 <= trunc_ln147_9_fu_2545_p1;
        trunc_ln147_reg_5249 <= trunc_ln147_fu_2421_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_1741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln1_reg_4528 <= {{k_1_reg_1338[10:2]}};
        trunc_ln88_reg_4524 <= trunc_ln88_fu_1752_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_1687_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln_reg_4505 <= {{k_reg_1327[10:2]}};
        trunc_ln84_reg_4501 <= trunc_ln84_fu_1698_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        mul109274_reg_5141 <= grp_fu_3938_p2;
        mul109276_reg_5146 <= grp_fu_3943_p2;
        mul109278_reg_5151 <= grp_fu_3948_p2;
        mul109280_reg_5156 <= grp_fu_3953_p2;
        mul109_1264_reg_5111 <= grp_fu_3913_p2;
        mul109_1268_reg_5126 <= grp_fu_3923_p2;
        mul109_1282_reg_5161 <= grp_fu_3958_p2;
        mul109_1284_reg_5166 <= grp_fu_3963_p2;
        mul109_2262_reg_5106 <= grp_fu_3908_p2;
        mul109_2270_reg_5131 <= grp_fu_3928_p2;
        mul109_2286_reg_5171 <= grp_fu_3968_p2;
        mul109_2288_reg_5176 <= grp_fu_3973_p2;
        mul109_3266_reg_5116 <= grp_fu_3918_p2;
        mul109_3272_reg_5136 <= grp_fu_3933_p2;
        mul109_3290_reg_5181 <= grp_fu_3978_p2;
        mul109_3292_reg_5186 <= grp_fu_3983_p2;
        mul139_reg_5121 <= mul139_fu_2359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        mul37_reg_4510 <= mul37_fu_1735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_1804_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        mul60_reg_4566 <= mul60_fu_1819_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter5 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5946_pp8_iter4_reg == 1'd0))) begin
        output_reg_0_1_1_fu_402 <= grp_fu_4226_p3;
        output_reg_1_1_1_fu_382 <= grp_fu_4218_p3;
        output_reg_2_1_1_fu_354 <= grp_fu_4210_p3;
        output_reg_3_1_1_fu_326 <= grp_fu_4202_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter6 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5946_pp8_iter5_reg == 1'd0))) begin
        output_reg_0_2_1_fu_398 <= grp_fu_4258_p3;
        output_reg_1_2_1_fu_374 <= grp_fu_4250_p3;
        output_reg_2_2_1_fu_346 <= grp_fu_4242_p3;
        output_reg_3_2_1_fu_318 <= grp_fu_4234_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp162278_reg_4744 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        p_cast13_reg_5858 <= p_cast13_fu_3083_p1;
        p_cast15_reg_5878 <= p_cast15_fu_3095_p1;
        p_cast17_reg_5898 <= p_cast17_fu_3107_p1;
        p_cast19_reg_5918 <= p_cast19_fu_3119_p1;
        p_cast22_reg_5863 <= p_cast22_fu_3086_p1;
        p_cast24_reg_5868 <= p_cast24_fu_3089_p1;
        p_cast26_reg_5873 <= p_cast26_fu_3092_p1;
        p_cast28_reg_5883 <= p_cast28_fu_3098_p1;
        p_cast30_reg_5888 <= p_cast30_fu_3101_p1;
        p_cast32_reg_5893 <= p_cast32_fu_3104_p1;
        p_cast34_reg_5903 <= p_cast34_fu_3110_p1;
        p_cast36_reg_5908 <= p_cast36_fu_3113_p1;
        p_cast38_reg_5913 <= p_cast38_fu_3116_p1;
        p_cast40_reg_5923 <= p_cast40_fu_3122_p1;
        p_cast42_reg_5928 <= p_cast42_fu_3125_p1;
        sext_ln183_reg_5933 <= sext_ln183_fu_3128_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2300_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln114_1_reg_5091 <= select_ln114_1_fu_2330_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        select_ln129_reg_5219 <= select_ln129_fu_2406_p3;
        trunc_ln148_1_reg_5244 <= trunc_ln148_1_fu_2417_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_2999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        select_ln155_1_reg_5808 <= select_ln155_1_fu_3029_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln330_fu_3742_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        select_ln330_1_reg_6225 <= select_ln330_1_fu_3764_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln330_reg_6208_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        select_ln331_1_reg_6240 <= select_ln331_1_fu_3842_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        tmp_10_reg_5639 <= tmp_10_fu_2824_p6;
        tmp_11_reg_5644 <= tmp_11_fu_2841_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        tmp_12_reg_5689 <= tmp_12_fu_2872_p6;
        tmp_13_reg_5694 <= tmp_13_fu_2889_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_14_reg_5739 <= tmp_14_fu_2920_p6;
        tmp_15_reg_5744 <= tmp_15_fu_2937_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        tmp_16_reg_5789 <= tmp_16_fu_2968_p6;
        tmp_17_reg_5794 <= tmp_17_fu_2985_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_3_reg_5439 <= tmp_3_fu_2632_p6;
        tmp_4_reg_5444 <= tmp_4_fu_2649_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_5_reg_5489 <= tmp_5_fu_2680_p6;
        tmp_6_reg_5494 <= tmp_6_fu_2697_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_7_reg_5539 <= tmp_7_fu_2728_p6;
        tmp_8_reg_5544 <= tmp_8_fu_2745_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_9_reg_5589 <= tmp_9_fu_2776_p6;
        tmp_s_reg_5594 <= tmp_s_fu_2793_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_data_V_3_reg_4419 <= tmp_data_V_3_fu_1663_p1;
        trunc_ln521_1_reg_4428 <= trunc_ln521_1_fu_1667_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_data_V_4_reg_4436 <= tmp_data_V_4_fu_1671_p1;
        trunc_ln521_2_reg_4442 <= trunc_ln521_2_fu_1675_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_data_V_5_reg_4448 <= tmp_data_V_5_fu_1679_p1;
        trunc_ln521_3_reg_4456 <= trunc_ln521_3_fu_1683_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_fu_2300_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        trunc_ln123_reg_5096 <= trunc_ln123_fu_2342_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_1_fu_1916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        trunc_ln97_1_reg_4792 <= trunc_ln97_1_fu_1927_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_2_fu_1945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        trunc_ln97_2_reg_4806 <= trunc_ln97_2_fu_1956_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_1887_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        trunc_ln97_reg_4778 <= trunc_ln97_fu_1898_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln183_reg_5946_pp8_iter1_reg == 1'd0))) begin
        zext_ln205_reg_6016[8 : 0] <= zext_ln205_fu_3275_p1[8 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln82_fu_1687_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln86_fu_1741_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_fu_1887_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_1_fu_1916_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_2_fu_1945_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_3_fu_1974_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln114_fu_2300_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln155_fu_2999_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state51 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state51 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter4 == 1'b1) & (ap_enable_reg_pp8_iter3 == 1'b0))) begin
        ap_condition_pp8_exit_iter4_state61 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter4_state61 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln183_fu_3135_p2 == 1'd1))) begin
        ap_condition_pp8_flush_enable = 1'b1;
    end else begin
        ap_condition_pp8_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b1))) begin
        ap_condition_pp9_exit_iter2_state68 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter2_state68 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln330_fu_3742_p2 == 1'd1) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
        ap_condition_pp9_flush_enable = 1'b1;
    end else begin
        ap_condition_pp9_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter6 == 1'b0) & (ap_enable_reg_pp8_iter5 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b0) & (ap_enable_reg_pp8_iter3 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter4 == 1'b0) & (ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5799 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        ap_phi_mux_hi_1_phi_fu_1531_p4 = select_ln155_1_reg_5808;
    end else begin
        ap_phi_mux_hi_1_phi_fu_1531_p4 = hi_1_reg_1527;
    end
end

always @ (*) begin
    if (((icmp_ln114_reg_5082 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_hi_phi_fu_1464_p4 = select_ln114_1_reg_5091;
    end else begin
        ap_phi_mux_hi_phi_fu_1464_p4 = hi_reg_1460;
    end
end

always @ (*) begin
    if (((icmp_ln330_reg_6208 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        ap_phi_mux_k_2_phi_fu_1575_p4 = select_ln330_1_reg_6225;
    end else begin
        ap_phi_mux_k_2_phi_fu_1575_p4 = k_2_reg_1571;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_0_address0 = newIndex66_cast_cast_fu_2189_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_address0 = zext_ln84_fu_1720_p1;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4501 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_1_address0 = newIndex66_cast_cast_fu_2189_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_address0 = zext_ln84_fu_1720_p1;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4501 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_2_address0 = newIndex66_cast_cast_fu_2189_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_address0 = zext_ln84_fu_1720_p1;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4501 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_l2_3_address0 = newIndex66_cast_cast_fu_2189_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_address0 = zext_ln84_fu_1720_p1;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln84_reg_4501 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln330_reg_6208_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln330_reg_6208_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln94_3_reg_4811 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln94_2_reg_4797 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln94_1_reg_4783 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln94_reg_4769 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln94_3_reg_4811 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln94_2_reg_4797 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln94_1_reg_4783 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln94_reg_4769 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        data_l1_0_0_address0 = zext_ln196_fu_3150_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_0_0_address0 = idxprom150_fu_3076_p1;
    end else begin
        data_l1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        data_l1_0_0_ce0 = 1'b1;
    end else begin
        data_l1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5799_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_0_0_we0 = 1'b1;
    end else begin
        data_l1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        data_l1_1_0_address0 = zext_ln196_1_fu_3203_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_1_0_address0 = idxprom150_fu_3076_p1;
    end else begin
        data_l1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        data_l1_1_0_ce0 = 1'b1;
    end else begin
        data_l1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5799_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_1_0_we0 = 1'b1;
    end else begin
        data_l1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        data_l1_2_0_address0 = zext_ln196_2_fu_3260_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_2_0_address0 = idxprom150_fu_3076_p1;
    end else begin
        data_l1_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        data_l1_2_0_ce0 = 1'b1;
    end else begin
        data_l1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5799_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_2_0_we0 = 1'b1;
    end else begin
        data_l1_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter3 == 1'b1))) begin
        data_l1_3_0_address0 = zext_ln196_3_fu_3388_p1;
    end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l1_3_0_address0 = idxprom150_fu_3076_p1;
    end else begin
        data_l1_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter3 == 1'b1)))) begin
        data_l1_3_0_ce0 = 1'b1;
    end else begin
        data_l1_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_5799_pp7_iter3_reg == 1'd0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        data_l1_3_0_we0 = 1'b1;
    end else begin
        data_l1_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_0_address0 = idxprom144_fu_3069_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_0_address0 = zext_ln97_fu_1911_p1;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_0_ce0 = 1'b1;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln94_reg_4769 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_1_address0 = idxprom144_fu_3069_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        data_l2_1_address0 = zext_ln97_1_fu_1940_p1;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        data_l2_1_ce0 = 1'b1;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln94_1_reg_4783 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_2_address0 = idxprom144_fu_3069_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_2_address0 = zext_ln97_2_fu_1969_p1;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_2_ce0 = 1'b1;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln94_2_reg_4797 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        data_l2_3_address0 = idxprom144_fu_3069_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l2_3_address0 = zext_ln97_3_fu_1999_p1;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        data_l2_3_ce0 = 1'b1;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln94_3_reg_4811 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        grp_fu_4302_ce = 1'b1;
    end else begin
        grp_fu_4302_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_0_address0 = zext_ln205_reg_6016_pp8_iter6_reg;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_address0 = zext_ln122_fu_2352_p1;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_0_address1 = zext_ln333_fu_3868_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_0_address1 = zext_ln205_3_fu_3303_p1;
    end else begin
        output_l1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_0_ce0 = 1'b1;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_0_ce1 = 1'b1;
    end else begin
        output_l1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_0_d0 = grp_fu_4293_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_d0 = conv83_reg_5074;
    end else begin
        output_l1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_36_reg_4969 == 2'd0) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'd1 == and_ln306_3_reg_6099_pp8_iter6_reg) & (ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_0_we0 = 1'b1;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_1_address0 = zext_ln314_2_fu_3672_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_address0 = zext_ln122_fu_2352_p1;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_1_address1 = zext_ln333_fu_3868_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_1_address1 = zext_ln205_2_fu_3294_p1;
    end else begin
        output_l1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_1_ce0 = 1'b1;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_1_ce1 = 1'b1;
    end else begin
        output_l1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_1_d0 = grp_fu_4284_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_d0 = conv83_reg_5074;
    end else begin
        output_l1_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_36_reg_4969 == 2'd1) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'd1 == and_ln306_2_reg_6095_pp8_iter6_reg) & (ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_1_we0 = 1'b1;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_2_address0 = zext_ln314_1_fu_3657_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_address0 = zext_ln122_fu_2352_p1;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_2_address1 = zext_ln333_fu_3868_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_2_address1 = zext_ln205_1_fu_3285_p1;
    end else begin
        output_l1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_2_ce0 = 1'b1;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_2_ce1 = 1'b1;
    end else begin
        output_l1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_2_d0 = grp_fu_4275_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_d0 = conv83_reg_5074;
    end else begin
        output_l1_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_36_reg_4969 == 2'd2) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'd1 == and_ln306_1_reg_6091_pp8_iter6_reg) & (ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_2_we0 = 1'b1;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_3_address0 = zext_ln314_fu_3642_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_address0 = zext_ln122_fu_2352_p1;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        output_l1_3_address1 = zext_ln333_fu_3868_p1;
    end else if (((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_3_address1 = zext_ln205_fu_3275_p1;
    end else begin
        output_l1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        output_l1_3_ce0 = 1'b1;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp9_iter3 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_3_ce1 = 1'b1;
    end else begin
        output_l1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0))) begin
        output_l1_3_d0 = grp_fu_4266_p3;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_d0 = conv83_reg_5074;
    end else begin
        output_l1_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_36_reg_4969 == 2'd3) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'd1 == and_ln306_reg_5977_pp8_iter6_reg) & (ap_enable_reg_pp8_iter7 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        output_l1_3_we0 = 1'b1;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_0_address0 = zext_ln147_29_fu_2951_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_0_address0 = zext_ln147_25_fu_2903_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_0_address0 = zext_ln147_21_fu_2855_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_0_address0 = zext_ln147_17_fu_2807_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_0_address0 = zext_ln147_13_fu_2759_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_0_address0 = zext_ln147_9_fu_2711_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_0_address0 = zext_ln147_5_fu_2663_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_0_address0 = zext_ln147_3_fu_2453_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = zext_ln88_fu_1774_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_0_address1 = zext_ln147_31_fu_2958_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_0_address1 = zext_ln147_27_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_0_address1 = zext_ln147_23_fu_2862_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_0_address1 = zext_ln147_19_fu_2814_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_0_address1 = zext_ln147_15_fu_2766_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_0_address1 = zext_ln147_11_fu_2718_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_0_address1 = zext_ln147_7_fu_2670_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_0_address1 = zext_ln147_1_fu_2433_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln88_reg_4524 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_1_address0 = zext_ln147_29_fu_2951_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_1_address0 = zext_ln147_25_fu_2903_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_1_address0 = zext_ln147_21_fu_2855_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_1_address0 = zext_ln147_17_fu_2807_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_1_address0 = zext_ln147_13_fu_2759_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_1_address0 = zext_ln147_9_fu_2711_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_1_address0 = zext_ln147_5_fu_2663_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_1_address0 = zext_ln147_3_fu_2453_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = zext_ln88_fu_1774_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_1_address1 = zext_ln147_31_fu_2958_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_1_address1 = zext_ln147_27_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_1_address1 = zext_ln147_23_fu_2862_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_1_address1 = zext_ln147_19_fu_2814_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_1_address1 = zext_ln147_15_fu_2766_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_1_address1 = zext_ln147_11_fu_2718_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_1_address1 = zext_ln147_7_fu_2670_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_1_address1 = zext_ln147_1_fu_2433_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln88_reg_4524 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_2_address0 = zext_ln147_29_fu_2951_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_2_address0 = zext_ln147_25_fu_2903_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_2_address0 = zext_ln147_21_fu_2855_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_2_address0 = zext_ln147_17_fu_2807_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_2_address0 = zext_ln147_13_fu_2759_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_2_address0 = zext_ln147_9_fu_2711_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_2_address0 = zext_ln147_5_fu_2663_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_2_address0 = zext_ln147_3_fu_2453_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = zext_ln88_fu_1774_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_2_address1 = zext_ln147_31_fu_2958_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_2_address1 = zext_ln147_27_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_2_address1 = zext_ln147_23_fu_2862_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_2_address1 = zext_ln147_19_fu_2814_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_2_address1 = zext_ln147_15_fu_2766_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_2_address1 = zext_ln147_11_fu_2718_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_2_address1 = zext_ln147_7_fu_2670_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_2_address1 = zext_ln147_1_fu_2433_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln88_reg_4524 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_3_address0 = zext_ln147_29_fu_2951_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_3_address0 = zext_ln147_25_fu_2903_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_3_address0 = zext_ln147_21_fu_2855_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_3_address0 = zext_ln147_17_fu_2807_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_3_address0 = zext_ln147_13_fu_2759_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_3_address0 = zext_ln147_9_fu_2711_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_3_address0 = zext_ln147_5_fu_2663_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_3_address0 = zext_ln147_3_fu_2453_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = zext_ln88_fu_1774_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        weight_l2_3_address1 = zext_ln147_31_fu_2958_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        weight_l2_3_address1 = zext_ln147_27_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        weight_l2_3_address1 = zext_ln147_23_fu_2862_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        weight_l2_3_address1 = zext_ln147_19_fu_2814_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        weight_l2_3_address1 = zext_ln147_15_fu_2766_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        weight_l2_3_address1 = zext_ln147_11_fu_2718_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        weight_l2_3_address1 = zext_ln147_7_fu_2670_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_l2_3_address1 = zext_ln147_1_fu_2433_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln88_reg_4524 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln82_fu_1687_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln82_fu_1687_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln86_fu_1741_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln86_fu_1741_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln91_fu_1804_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if (((icmp_ln91_fu_1804_p2 == 1'd0) & (cmp52307_reg_4553 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln94_fu_1887_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln94_fu_1887_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln94_1_fu_1916_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln94_1_fu_1916_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln94_2_fu_1945_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln94_2_fu_1945_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln94_3_fu_1974_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln94_3_fu_1974_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln102_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln113_fu_2154_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2300_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter3 == 1'b1) & (ap_enable_reg_pp6_iter2 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln114_fu_2300_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (ap_enable_reg_pp6_iter2 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((icmp_ln129_fu_2363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_2999_p2 == 1'd1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)) & ~((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln155_fu_2999_p2 == 1'd1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state56 : begin
            if (((cmp162278_reg_4744 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter5 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter4 == 1'b1) & (ap_enable_reg_pp8_iter3 == 1'b0)) & ~((ap_enable_reg_pp8_iter7 == 1'b1) & (ap_enable_reg_pp8_iter6 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if ((((ap_enable_reg_pp8_iter7 == 1'b1) & (ap_enable_reg_pp8_iter6 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone)) | ((ap_enable_reg_pp8_iter5 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter4 == 1'b1) & (ap_enable_reg_pp8_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_pp9_stage0 : begin
            if ((~((ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone)) & ~((ap_enable_reg_pp9_iter4 == 1'b1) & (ap_enable_reg_pp9_iter3 == 1'b0) & (1'b0 == ap_block_pp9_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if ((((ap_enable_reg_pp9_iter4 == 1'b1) & (ap_enable_reg_pp9_iter3 == 1'b0) & (1'b0 == ap_block_pp9_stage0_subdone)) | ((ap_enable_reg_pp9_iter3 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln102_1_fu_2019_p2 = (30'd1 + ko_reg_1415);

assign add_ln102_fu_2008_p2 = (indvar_flatten29_reg_1404 + 60'd1);

assign add_ln113_fu_2160_p2 = (ki_1_reg_1438 + 3'd1);

assign add_ln114_1_fu_2305_p2 = (indvar_flatten_reg_1449 + 64'd1);

assign add_ln114_2_fu_2324_p2 = (32'd1 + ap_phi_mux_hi_phi_fu_1464_p4);

assign add_ln117_fu_2346_p2 = (select_ln114_fu_2316_p3 + 32'd1);

assign add_ln129_16_fu_2368_p2 = (indvar_flatten13_reg_1482 + 64'd1);

assign add_ln129_17_fu_2379_p2 = (32'd1 + r_reg_1493);

assign add_ln132_fu_3737_p2 = (select_ln129_reg_5219 + 32'd1);

assign add_ln155_2_fu_3004_p2 = (indvar_flatten6_reg_1516 + 64'd1);

assign add_ln155_3_fu_3023_p2 = (32'd1 + ap_phi_mux_hi_1_phi_fu_1531_p4);

assign add_ln158_fu_3063_p2 = (32'd1 + select_ln155_fu_3015_p3);

assign add_ln183_fu_3140_p2 = (i_reg_1549 + 31'd1);

assign add_ln193_1_fu_3348_p2 = ($signed(32'd4294967294) + $signed(zext_ln183_reg_5938_pp8_iter2_reg));

assign add_ln193_2_fu_3369_p2 = ($signed(32'd4294967293) + $signed(zext_ln183_reg_5938_pp8_iter2_reg));

assign add_ln193_3_fu_3255_p2 = ($signed(9'd510) + $signed(trunc_ln196_reg_5955_pp8_iter1_reg));

assign add_ln193_fu_3198_p2 = ($signed(9'd511) + $signed(trunc_ln196_reg_5955));

assign add_ln195_fu_3265_p2 = ($signed(9'd509) + $signed(trunc_ln196_reg_5955_pp8_iter1_reg));

assign add_ln205_1_fu_3280_p2 = (mul_ln102_1_reg_4895 + add_ln193_3_fu_3255_p2);

assign add_ln205_2_fu_3290_p2 = (mul_ln102_1_reg_4895 + add_ln193_reg_5981);

assign add_ln205_3_fu_3299_p2 = (mul_ln102_1_reg_4895 + trunc_ln196_reg_5955_pp8_iter1_reg);

assign add_ln205_fu_3270_p2 = (mul_ln102_1_reg_4895 + add_ln195_fu_3265_p2);

assign add_ln305_1_fu_3416_p2 = ($signed(zext_ln183_reg_5938_pp8_iter2_reg) + $signed(32'd4294967291));

assign add_ln305_2_fu_3446_p2 = ($signed(zext_ln183_reg_5938_pp8_iter2_reg) + $signed(32'd4294967292));

assign add_ln305_fu_3161_p2 = ($signed(32'd4294967290) + $signed(zext_ln183_fu_3131_p1));

assign add_ln307_1_fu_3647_p2 = ($signed(trunc_ln196_reg_5955_pp8_iter6_reg) + $signed(9'd507));

assign add_ln307_2_fu_3662_p2 = ($signed(trunc_ln196_reg_5955_pp8_iter6_reg) + $signed(9'd508));

assign add_ln307_fu_3632_p2 = ($signed(9'd506) + $signed(trunc_ln196_reg_5955_pp8_iter6_reg));

assign add_ln315_1_fu_3652_p2 = (add_ln307_1_fu_3647_p2 + mul_ln102_1_reg_4895);

assign add_ln315_2_fu_3667_p2 = (add_ln307_2_fu_3662_p2 + mul_ln102_1_reg_4895);

assign add_ln315_fu_3637_p2 = (add_ln307_fu_3632_p2 + mul_ln102_1_reg_4895);

assign add_ln330_1_fu_3758_p2 = (30'd1 + ap_phi_mux_k_2_phi_fu_1575_p4);

assign add_ln330_fu_3747_p2 = (indvar_flatten50_reg_1560 + 64'd1);

assign add_ln331_1_fu_3776_p2 = (35'd1 + indvar_flatten36_reg_1582);

assign add_ln331_fu_3819_p2 = (3'd1 + select_ln330_fu_3790_p3);

assign add_ln332_fu_3862_p2 = (32'd1 + select_ln331_fu_3830_p3);

assign add_ln82_fu_1692_p2 = (k_reg_1327 + 32'd1);

assign add_ln86_fu_1746_p2 = (k_1_reg_1338 + 32'd1);

assign add_ln94_1_fu_1921_p2 = (wh_1_reg_1371 + 32'd1);

assign add_ln94_2_fu_1950_p2 = (wh_2_reg_1382 + 32'd1);

assign add_ln94_3_fu_1979_p2 = (wh_4_reg_1393 + 32'd1);

assign add_ln94_fu_1892_p2 = (wh_reg_1360 + 32'd1);

assign add_ln97_1_fu_1936_p2 = (trunc_ln97_1_reg_4792 + mul60_reg_4566);

assign add_ln97_2_fu_1965_p2 = (trunc_ln97_2_reg_4806 + mul60_reg_4566);

assign add_ln97_3_fu_1989_p2 = (trunc_ln97_3_fu_1985_p1 + mul60_reg_4566);

assign add_ln97_fu_1907_p2 = (trunc_ln97_reg_4778 + mul60_reg_4566);

assign and_ln306_1_fu_3440_p2 = (xor_ln305_1_fu_3429_p2 & icmp_ln307_1_fu_3435_p2);

assign and_ln306_2_fu_3470_p2 = (xor_ln305_2_fu_3459_p2 & icmp_ln307_2_fu_3465_p2);

assign and_ln306_3_fu_3481_p2 = (xor_ln195_fu_3382_p2 & icmp_ln307_3_fu_3476_p2);

assign and_ln306_fu_3186_p2 = (xor_ln305_fu_3175_p2 & icmp_ln307_fu_3181_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1 = ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_reg_4769 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_reg_4769 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_1_reg_4783 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_1_reg_4783 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp4 = ((1'b1 == ap_block_pp4_stage0_subdone) & (ap_ST_fsm_pp4_stage0 == ap_CS_fsm));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_2_reg_4797 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_2_reg_4797 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp5 = ((1'b1 == ap_block_pp5_stage0_subdone) & (ap_ST_fsm_pp5_stage0 == ap_CS_fsm));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_3_reg_4811 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_3_reg_4811 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp6 = ((1'b1 == ap_block_pp6_stage0_subdone) & (ap_ST_fsm_pp6_stage0 == ap_CS_fsm));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7 = ((1'b1 == ap_block_pp7_stage0_subdone) & (ap_ST_fsm_pp7_stage0 == ap_CS_fsm));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8 = ((1'b1 == ap_block_pp8_stage0_subdone) & (ap_ST_fsm_pp8_stage0 == ap_CS_fsm));
end

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9 = ((1'b1 == ap_block_pp9_stage0_subdone) & (ap_ST_fsm_pp9_stage0 == ap_CS_fsm));
end

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln330_reg_6208_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln330_reg_6208_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln330_reg_6208_pp9_iter3_reg == 1'd0) & (ap_enable_reg_pp9_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter1 = (weight_in_V_empty_n == 1'b0);
end

assign ap_block_state13_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp2_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_reg_4769 == 1'd0));
end

assign ap_block_state16_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp3_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_1_reg_4783 == 1'd0));
end

assign ap_block_state19_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp4_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_2_reg_4797 == 1'd0));
end

assign ap_block_state22_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp5_stage0_iter1 = ((data_in_V_empty_n == 1'b0) & (icmp_ln94_3_reg_4811 == 1'd0));
end

assign ap_block_state31_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp8_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp8_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp8_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp8_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp8_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp9_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp9_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state70_pp9_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln330_reg_6208_pp9_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (bias_in_V_empty_n == 1'b0);
end

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_1007 = (icmp_ln183_reg_5946_pp8_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1011 = (icmp_ln183_reg_5946_pp8_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1015 = (ap_predicate_op1015_load_state59 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_1019 = (icmp_ln183_reg_5946_pp8_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1048 = (icmp_ln183_reg_5946_pp8_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1050 = (icmp_ln183_reg_5946_pp8_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1052 = (ap_predicate_op1052_load_state60 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_1054 = (icmp_ln183_reg_5946_pp8_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1210 = (1'd1 == and_ln306_reg_5977_pp8_iter6_reg);
end

always @ (*) begin
    ap_enable_operation_1216 = (1'd1 == and_ln306_1_reg_6091_pp8_iter6_reg);
end

always @ (*) begin
    ap_enable_operation_1222 = (1'd1 == and_ln306_2_reg_6095_pp8_iter6_reg);
end

always @ (*) begin
    ap_enable_operation_1225 = (1'd1 == and_ln306_3_reg_6099_pp8_iter6_reg);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

always @ (*) begin
    ap_enable_state59_pp8_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state60_pp8_iter3_stage0 = ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter3 == 1'b1));
end

always @ (*) begin
    ap_enable_state64_pp8_iter7_stage0 = ((1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter7 == 1'b1));
end

always @ (*) begin
    ap_predicate_op1015_load_state59 = ((icmp_ln195_reg_5971_pp8_iter1_reg == 1'd1) & (icmp_ln183_reg_5946_pp8_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op1052_load_state60 = ((icmp_ln195_reg_5971_pp8_iter2_reg == 1'd1) & (icmp_ln183_reg_5946_pp8_iter2_reg == 1'd0));
end

assign bound11_fu_1868_p0 = cast9_fu_1865_p1;

assign bound11_fu_1868_p1 = cast9_fu_1865_p1;

assign bound18_fu_1881_p0 = bound18_fu_1881_p00;

assign bound18_fu_1881_p00 = div48_cast_reg_4533;

assign bound18_fu_1881_p1 = bound18_fu_1881_p10;

assign bound18_fu_1881_p10 = div68_cast8_fu_1824_p4;

assign bound_fu_1859_p0 = cast_fu_1856_p1;

assign bound_fu_1859_p1 = cast_fu_1856_p1;

assign c_1_fu_2197_p2 = (c_reg_4943 | 11'd1);

assign c_2_fu_2202_p2 = (c_reg_4943 | 11'd2);

assign c_3_fu_2148_p2 = (c_fu_2140_p3 | 11'd3);

assign c_fu_2140_p3 = {{empty_40_fu_2136_p1}, {2'd0}};

assign cast9_fu_1865_p1 = $unsigned(tmp_data_V_5_reg_4448);

assign cast_fu_1856_p1 = $unsigned(tmp_data_V_3_reg_4419);

assign cmp162278_fu_1847_p2 = (($signed(input_rows_fu_1841_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign cmp52307_fu_1798_p2 = ((mul51_fu_1790_p2 == 32'd0) ? 1'b1 : 1'b0);

assign co_2_fu_2401_p2 = (select_ln102_reg_4885 + 30'd1);

assign co_3_fu_1809_p2 = (co_reg_1349 + 30'd1);

assign conv83_fu_2296_p1 = $signed(tmp_1_fu_2282_p6);

assign conv_out_V_din = p_Repl2_s_fu_3875_p6;

assign data_l2_0_d0 = data_in_V_dout[7:0];

assign data_l2_1_d0 = data_in_V_dout[7:0];

assign data_l2_2_d0 = data_in_V_dout[7:0];

assign data_l2_3_d0 = data_in_V_dout[7:0];

assign div68_cast8_fu_1824_p4 = {{bias_in_V_read_reg_4390[31:2]}};

assign empty_34_fu_1837_p1 = mul158_fu_1833_p2[8:0];

assign empty_35_fu_1853_p1 = bias_in_V_read_1_reg_4401[8:0];

assign empty_36_fu_2170_p1 = ki_1_reg_1438[1:0];

assign empty_37_fu_2174_p2 = (p_mid2_reg_4845 + zext_ln113_fu_2166_p1);

assign empty_38_fu_3050_p1 = select_ln155_fu_3015_p3[9:0];

assign empty_39_fu_3054_p1 = select_ln155_fu_3015_p3[8:0];

assign empty_40_fu_2136_p1 = select_ln102_fu_2104_p3[8:0];

assign empty_fu_1794_p1 = mul51_fu_1790_p2[9:0];

assign grp_fu_3893_p0 = (p_mid2_fu_2041_p3 | 11'd1);

assign grp_fu_3898_p0 = (p_mid2_fu_2041_p3 | 11'd2);

assign grp_fu_3903_p0 = (p_mid2_fu_2041_p3 | 11'd3);

assign grp_fu_3908_p0 = ($signed(c_reg_4943) + $signed(mul_ln102_4_reg_4922));

assign grp_fu_3913_p0 = ($signed(c_reg_4943) + $signed(mul_ln102_3_reg_4914));

assign grp_fu_3918_p0 = ($signed(c_reg_4943) + $signed(mul_ln102_5_reg_4930));

assign grp_fu_3923_p0 = ($signed(c_2_fu_2202_p2) + $signed(mul_ln102_3_reg_4914));

assign grp_fu_3928_p0 = ($signed(c_2_fu_2202_p2) + $signed(mul_ln102_4_reg_4922));

assign grp_fu_3933_p0 = ($signed(c_2_fu_2202_p2) + $signed(mul_ln102_5_reg_4930));

assign grp_fu_3938_p0 = (c_reg_4943 + mul107_mid2_reg_4906);

assign grp_fu_3943_p0 = (c_1_fu_2197_p2 + mul107_mid2_reg_4906);

assign grp_fu_3948_p0 = (c_2_fu_2202_p2 + mul107_mid2_reg_4906);

assign grp_fu_3953_p0 = (c_3_reg_4953 + mul107_mid2_reg_4906);

assign grp_fu_3958_p0 = ($signed(c_1_fu_2197_p2) + $signed(mul_ln102_3_reg_4914));

assign grp_fu_3963_p0 = ($signed(c_3_reg_4953) + $signed(mul_ln102_3_reg_4914));

assign grp_fu_3968_p0 = ($signed(c_1_fu_2197_p2) + $signed(mul_ln102_4_reg_4922));

assign grp_fu_3973_p0 = ($signed(c_3_reg_4953) + $signed(mul_ln102_4_reg_4922));

assign grp_fu_3978_p0 = ($signed(c_1_fu_2197_p2) + $signed(mul_ln102_5_reg_4930));

assign grp_fu_3983_p0 = ($signed(c_3_reg_4953) + $signed(mul_ln102_5_reg_4930));

assign grp_fu_3988_p0 = select_ln114_1_fu_2330_p3[8:0];

assign grp_fu_4156_p0 = (mul139_reg_5121 + trunc_ln155_fu_3037_p1);

assign grp_fu_4164_p0 = select_ln155_1_fu_3029_p3[8:0];

assign grp_fu_4170_p1 = p_cast26_reg_5873;

assign grp_fu_4170_p2 = ((tmp_19_fu_3374_p3[0:0] === 1'b1) ? 32'd0 : output_l1_3_q1);

assign grp_fu_4178_p1 = p_cast32_reg_5893;

assign grp_fu_4178_p2 = ((tmp_18_fu_3353_p3[0:0] === 1'b1) ? 32'd0 : output_l1_2_q1);

assign grp_fu_4186_p1 = p_cast38_reg_5913;

assign grp_fu_4186_p2 = ((icmp_ln195_reg_5971_pp8_iter2_reg[0:0] === 1'b1) ? output_l1_1_q1 : 32'd0);

assign grp_fu_4194_p1 = sext_ln183_reg_5933;

assign grp_fu_4202_p1 = p_cast24_reg_5868;

assign grp_fu_4210_p1 = p_cast30_reg_5888;

assign grp_fu_4218_p1 = p_cast36_reg_5908;

assign grp_fu_4226_p1 = p_cast42_reg_5928;

assign grp_fu_4234_p1 = p_cast22_reg_5863;

assign grp_fu_4242_p1 = p_cast28_reg_5883;

assign grp_fu_4250_p1 = p_cast34_reg_5903;

assign grp_fu_4258_p1 = p_cast40_reg_5923;

assign grp_fu_4266_p1 = p_cast13_reg_5858;

assign grp_fu_4275_p1 = p_cast15_reg_5878;

assign grp_fu_4284_p1 = p_cast17_reg_5898;

assign grp_fu_4293_p1 = p_cast19_reg_5918;

assign grp_fu_4302_p0 = select_ln330_1_fu_3764_p3[8:0];

assign grp_fu_4302_p2 = select_ln331_fu_3830_p3[8:0];

assign icmp_ln102_fu_2003_p2 = ((indvar_flatten29_reg_1404 == bound18_reg_4764) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_2014_p2 = ((co_1_reg_1426 == div48_cast_reg_4533) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_2154_p2 = ((ki_1_reg_1438 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_2300_p2 = ((indvar_flatten_reg_1449 == bound_reg_4753) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_2311_p2 = ((wi_reg_1471 == tmp_data_V_3_reg_4419) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_2363_p2 = ((indvar_flatten13_reg_1482 == bound11_reg_4759) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_2374_p2 = ((s_reg_1504 == tmp_data_V_5_reg_4448) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_2999_p2 = ((indvar_flatten6_reg_1516 == bound_reg_4753) ? 1'b1 : 1'b0);

assign icmp_ln158_fu_3010_p2 = ((wi_1_reg_1538 == tmp_data_V_3_reg_4419) ? 1'b1 : 1'b0);

assign icmp_ln183_fu_3135_p2 = ((zext_ln183_fu_3131_p1 == input_rows_reg_4739) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_3155_p2 = ((i_reg_1549 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln307_1_fu_3435_p2 = ((add_ln305_1_fu_3416_p2 < mul158_reg_4723) ? 1'b1 : 1'b0);

assign icmp_ln307_2_fu_3465_p2 = ((add_ln305_2_fu_3446_p2 < mul158_reg_4723) ? 1'b1 : 1'b0);

assign icmp_ln307_3_fu_3476_p2 = ((add_ln193_2_fu_3369_p2 < mul158_reg_4723) ? 1'b1 : 1'b0);

assign icmp_ln307_fu_3181_p2 = ((add_ln305_fu_3161_p2 < mul158_reg_4723) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_3742_p2 = ((indvar_flatten50_reg_1560 == mul_ln330_reg_4875) ? 1'b1 : 1'b0);

assign icmp_ln331_fu_3753_p2 = ((indvar_flatten36_reg_1582 == zext_ln330_reg_4870) ? 1'b1 : 1'b0);

assign icmp_ln332_1_fu_3808_p2 = ((wh_3_reg_1604 == mul158_reg_4723) ? 1'b1 : 1'b0);

assign icmp_ln332_fu_2099_p2 = ((mul158_reg_4723 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1687_p2 = ((k_reg_1327 == tmp_data_V_1_reg_4395) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_1741_p2 = ((k_1_reg_1338 == mul37_reg_4510) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_1804_p2 = ((co_reg_1349 == div48_cast_reg_4533) ? 1'b1 : 1'b0);

assign icmp_ln94_1_fu_1916_p2 = ((wh_1_reg_1371 == mul51_reg_4540) ? 1'b1 : 1'b0);

assign icmp_ln94_2_fu_1945_p2 = ((wh_2_reg_1382 == mul51_reg_4540) ? 1'b1 : 1'b0);

assign icmp_ln94_3_fu_1974_p2 = ((wh_4_reg_1393 == mul51_reg_4540) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1887_p2 = ((wh_reg_1360 == mul51_reg_4540) ? 1'b1 : 1'b0);

assign idxprom144_fu_3069_p1 = $unsigned(grp_fu_4156_p4);

assign idxprom150_fu_3076_p1 = $unsigned(add149_reg_5833);

assign input_rows_fu_1841_p2 = (32'd10 + mul158_fu_1833_p2);

assign lshr_ln147_1_fu_2444_p4 = {{grp_fu_4006_p4[10:2]}};

assign lshr_ln2_fu_2424_p4 = {{grp_fu_3996_p4[10:2]}};

assign mul107_mid2_fu_2124_p3 = {{mul_ln102_2_fu_2120_p2}, {2'd0}};

assign mul60_fu_1819_p0 = co_reg_1349[9:0];

assign mul_ln330_fu_2093_p0 = mul_ln330_fu_2093_p00;

assign mul_ln330_fu_2093_p00 = tmp_2_fu_2075_p3;

assign mul_ln330_fu_2093_p1 = mul_ln330_fu_2093_p10;

assign mul_ln330_fu_2093_p10 = div68_cast8_reg_4718;

assign newIndex66_cast_cast_fu_2189_p1 = newIndex_fu_2179_p4;

assign newIndex_fu_2179_p4 = {{empty_37_fu_2174_p2[10:2]}};

assign or_ln331_fu_3825_p2 = (select_ln330_3_fu_3813_p3 | icmp_ln331_reg_6217_pp9_iter1_reg);

assign p_cast13_fu_3083_p1 = $signed(tmp_17_reg_5794);

assign p_cast15_fu_3095_p1 = $signed(tmp_13_reg_5694);

assign p_cast17_fu_3107_p1 = $signed(tmp_s_reg_5594);

assign p_cast19_fu_3119_p1 = $signed(tmp_6_reg_5494);

assign p_cast22_fu_3086_p1 = $signed(tmp_16_reg_5789);

assign p_cast24_fu_3089_p1 = $signed(tmp_15_reg_5744);

assign p_cast26_fu_3092_p1 = $signed(tmp_14_reg_5739);

assign p_cast28_fu_3098_p1 = $signed(tmp_12_reg_5689);

assign p_cast30_fu_3101_p1 = $signed(tmp_11_reg_5644);

assign p_cast32_fu_3104_p1 = $signed(tmp_10_reg_5639);

assign p_cast34_fu_3110_p1 = $signed(tmp_9_reg_5589);

assign p_cast36_fu_3113_p1 = $signed(tmp_8_reg_5544);

assign p_cast38_fu_3116_p1 = $signed(tmp_7_reg_5539);

assign p_cast40_fu_3122_p1 = $signed(tmp_5_reg_5489);

assign p_cast42_fu_3125_p1 = $signed(tmp_4_reg_5444);

assign p_mid2_fu_2041_p3 = {{select_ln102_1_fu_2033_p3}, {2'd0}};

assign select_ln102_1_fu_2033_p3 = ((icmp_ln105_fu_2014_p2[0:0] === 1'b1) ? trunc_ln102_fu_2025_p1 : trunc_ln102_1_fu_2029_p1);

assign select_ln102_2_fu_2067_p3 = ((icmp_ln105_fu_2014_p2[0:0] === 1'b1) ? add_ln102_1_fu_2019_p2 : ko_reg_1415);

assign select_ln102_fu_2104_p3 = ((icmp_ln105_reg_4834[0:0] === 1'b1) ? 30'd0 : co_1_reg_1426);

assign select_ln114_1_fu_2330_p3 = ((icmp_ln117_fu_2311_p2[0:0] === 1'b1) ? add_ln114_2_fu_2324_p2 : ap_phi_mux_hi_phi_fu_1464_p4);

assign select_ln114_fu_2316_p3 = ((icmp_ln117_fu_2311_p2[0:0] === 1'b1) ? 32'd0 : wi_reg_1471);

assign select_ln129_1_fu_2385_p3 = ((icmp_ln132_fu_2374_p2[0:0] === 1'b1) ? add_ln129_17_fu_2379_p2 : r_reg_1493);

assign select_ln129_fu_2406_p3 = ((icmp_ln132_reg_5199[0:0] === 1'b1) ? 32'd0 : s_reg_1504);

assign select_ln155_1_fu_3029_p3 = ((icmp_ln158_fu_3010_p2[0:0] === 1'b1) ? add_ln155_3_fu_3023_p2 : ap_phi_mux_hi_1_phi_fu_1531_p4);

assign select_ln155_fu_3015_p3 = ((icmp_ln158_fu_3010_p2[0:0] === 1'b1) ? 32'd0 : wi_1_reg_1538);

assign select_ln195_1_fu_3361_p3 = ((tmp_18_fu_3353_p3[0:0] === 1'b1) ? 8'd0 : data_l1_2_0_q0);

assign select_ln195_2_fu_3530_p3 = ((tmp_19_reg_6061[0:0] === 1'b1) ? 8'd0 : data_l1_3_0_q0);

assign select_ln195_fu_3248_p3 = ((icmp_ln195_reg_5971_pp8_iter1_reg[0:0] === 1'b1) ? data_l1_1_0_q0 : 8'd0);

assign select_ln330_1_fu_3764_p3 = ((icmp_ln331_fu_3753_p2[0:0] === 1'b1) ? add_ln330_1_fu_3758_p2 : ap_phi_mux_k_2_phi_fu_1575_p4);

assign select_ln330_2_fu_3801_p3 = ((icmp_ln331_reg_6217_pp9_iter1_reg[0:0] === 1'b1) ? 2'd0 : trunc_ln333_fu_3797_p1);

assign select_ln330_3_fu_3813_p3 = ((icmp_ln331_reg_6217_pp9_iter1_reg[0:0] === 1'b1) ? icmp_ln332_reg_4880 : icmp_ln332_1_fu_3808_p2);

assign select_ln330_fu_3790_p3 = ((icmp_ln331_reg_6217_pp9_iter1_reg[0:0] === 1'b1) ? 3'd0 : ki_reg_1593);

assign select_ln331_1_fu_3842_p3 = ((select_ln330_3_fu_3813_p3[0:0] === 1'b1) ? trunc_ln333_1_fu_3838_p1 : select_ln330_2_fu_3801_p3);

assign select_ln331_2_fu_3850_p3 = ((select_ln330_3_fu_3813_p3[0:0] === 1'b1) ? add_ln331_fu_3819_p2 : select_ln330_fu_3790_p3);

assign select_ln331_3_fu_3782_p3 = ((icmp_ln331_fu_3753_p2[0:0] === 1'b1) ? 35'd1 : add_ln331_1_fu_3776_p2);

assign select_ln331_fu_3830_p3 = ((or_ln331_fu_3825_p2[0:0] === 1'b1) ? 32'd0 : wh_3_reg_1604);

assign sext_ln183_fu_3128_p1 = $signed(tmp_3_reg_5439);

assign tmp3_fu_3058_p2 = (trunc_ln148_1_reg_5244 + empty_38_fu_3050_p1);

assign tmp_10_fu_2824_p5 = trunc_ln147_8_reg_5359;

assign tmp_11_fu_2841_p5 = trunc_ln147_9_reg_5369;

assign tmp_12_fu_2872_p5 = trunc_ln147_10_reg_5379;

assign tmp_13_fu_2889_p5 = trunc_ln147_11_reg_5389;

assign tmp_14_fu_2920_p5 = trunc_ln147_12_reg_5399;

assign tmp_15_fu_2937_p5 = trunc_ln147_13_reg_5409;

assign tmp_16_fu_2968_p5 = trunc_ln147_14_reg_5419;

assign tmp_17_fu_2985_p5 = trunc_ln147_15_reg_5429;

assign tmp_18_fu_3353_p3 = add_ln193_1_fu_3348_p2[32'd31];

assign tmp_19_fu_3374_p3 = add_ln193_2_fu_3369_p2[32'd31];

assign tmp_1_fu_2282_p5 = empty_36_reg_4969;

assign tmp_20_fu_3167_p3 = add_ln305_fu_3161_p2[32'd31];

assign tmp_21_fu_3421_p3 = add_ln305_1_fu_3416_p2[32'd31];

assign tmp_22_fu_3451_p3 = add_ln305_2_fu_3446_p2[32'd31];

assign tmp_2_fu_2075_p3 = {{mul158_reg_4723}, {2'd0}};

assign tmp_3_fu_2632_p5 = trunc_ln147_reg_5249;

assign tmp_4_fu_2649_p5 = trunc_ln147_1_reg_5274;

assign tmp_5_fu_2680_p5 = trunc_ln147_2_reg_5299;

assign tmp_6_fu_2697_p5 = trunc_ln147_3_reg_5309;

assign tmp_7_fu_2728_p5 = trunc_ln147_4_reg_5319;

assign tmp_8_fu_2745_p5 = trunc_ln147_5_reg_5329;

assign tmp_9_fu_2776_p5 = trunc_ln147_6_reg_5339;

assign tmp_data_V_1_fu_1651_p1 = bias_in_V_dout[31:0];

assign tmp_data_V_2_fu_1655_p1 = bias_in_V_dout[31:0];

assign tmp_data_V_3_fu_1663_p1 = bias_in_V_dout[31:0];

assign tmp_data_V_4_fu_1671_p1 = bias_in_V_dout[31:0];

assign tmp_data_V_5_fu_1679_p1 = bias_in_V_dout[31:0];

assign tmp_s_fu_2793_p5 = trunc_ln147_7_reg_5349;

assign trunc_ln102_1_fu_2029_p1 = ko_reg_1415[8:0];

assign trunc_ln102_fu_2025_p1 = add_ln102_1_fu_2019_p2[8:0];

assign trunc_ln105_fu_2132_p1 = select_ln102_fu_2104_p3[9:0];

assign trunc_ln123_fu_2342_p1 = select_ln114_fu_2316_p3[8:0];

assign trunc_ln129_1_fu_2397_p1 = select_ln129_1_fu_2385_p3[10:0];

assign trunc_ln129_fu_2393_p1 = select_ln129_1_fu_2385_p3[9:0];

assign trunc_ln147_10_fu_2557_p1 = grp_fu_4096_p4[1:0];

assign trunc_ln147_11_fu_2569_p1 = grp_fu_4106_p4[1:0];

assign trunc_ln147_12_fu_2581_p1 = grp_fu_4116_p4[1:0];

assign trunc_ln147_13_fu_2593_p1 = grp_fu_4126_p4[1:0];

assign trunc_ln147_14_fu_2605_p1 = grp_fu_4136_p4[1:0];

assign trunc_ln147_15_fu_2617_p1 = grp_fu_4146_p4[1:0];

assign trunc_ln147_1_fu_2441_p1 = grp_fu_4006_p4[1:0];

assign trunc_ln147_2_fu_2461_p1 = grp_fu_4016_p4[1:0];

assign trunc_ln147_3_fu_2473_p1 = grp_fu_4026_p4[1:0];

assign trunc_ln147_4_fu_2485_p1 = grp_fu_4036_p4[1:0];

assign trunc_ln147_5_fu_2497_p1 = grp_fu_4046_p4[1:0];

assign trunc_ln147_6_fu_2509_p1 = grp_fu_4056_p4[1:0];

assign trunc_ln147_7_fu_2521_p1 = grp_fu_4066_p4[1:0];

assign trunc_ln147_8_fu_2533_p1 = grp_fu_4076_p4[1:0];

assign trunc_ln147_9_fu_2545_p1 = grp_fu_4086_p4[1:0];

assign trunc_ln147_fu_2421_p1 = grp_fu_3996_p4[1:0];

assign trunc_ln148_1_fu_2417_p1 = select_ln129_fu_2406_p3[9:0];

assign trunc_ln148_fu_2413_p1 = select_ln129_fu_2406_p3[10:0];

assign trunc_ln155_fu_3037_p1 = select_ln155_1_fu_3029_p3[9:0];

assign trunc_ln196_fu_3146_p1 = i_reg_1549[8:0];

assign trunc_ln333_1_fu_3838_p1 = add_ln331_fu_3819_p2[1:0];

assign trunc_ln333_fu_3797_p1 = ki_reg_1593[1:0];

assign trunc_ln521_1_fu_1667_p1 = bias_in_V_dout[8:0];

assign trunc_ln521_2_fu_1675_p1 = bias_in_V_dout[9:0];

assign trunc_ln521_3_fu_1683_p1 = bias_in_V_dout[10:0];

assign trunc_ln521_fu_1659_p1 = bias_in_V_dout[10:0];

assign trunc_ln708_1_fu_1766_p1 = weight_in_V_dout[7:0];

assign trunc_ln708_fu_1712_p1 = bias_in_V_dout[7:0];

assign trunc_ln84_fu_1698_p1 = k_reg_1327[1:0];

assign trunc_ln88_fu_1752_p1 = k_1_reg_1338[1:0];

assign trunc_ln97_1_fu_1927_p1 = wh_1_reg_1371[9:0];

assign trunc_ln97_2_fu_1956_p1 = wh_2_reg_1382[9:0];

assign trunc_ln97_3_fu_1985_p1 = wh_4_reg_1393[9:0];

assign trunc_ln97_fu_1898_p1 = wh_reg_1360[9:0];

assign xor_ln195_fu_3382_p2 = (tmp_19_fu_3374_p3 ^ 1'd1);

assign xor_ln305_1_fu_3429_p2 = (tmp_21_fu_3421_p3 ^ 1'd1);

assign xor_ln305_2_fu_3459_p2 = (tmp_22_fu_3451_p3 ^ 1'd1);

assign xor_ln305_fu_3175_p2 = (tmp_20_fu_3167_p3 ^ 1'd1);

assign zext_ln113_fu_2166_p1 = ki_1_reg_1438;

assign zext_ln122_fu_2352_p1 = $unsigned(grp_fu_3988_p4);

assign zext_ln147_11_fu_2718_p1 = lshr_ln147_5_reg_5334;

assign zext_ln147_13_fu_2759_p1 = lshr_ln147_6_reg_5344;

assign zext_ln147_15_fu_2766_p1 = lshr_ln147_7_reg_5354;

assign zext_ln147_17_fu_2807_p1 = lshr_ln147_8_reg_5364;

assign zext_ln147_19_fu_2814_p1 = lshr_ln147_9_reg_5374;

assign zext_ln147_1_fu_2433_p1 = lshr_ln2_fu_2424_p4;

assign zext_ln147_21_fu_2855_p1 = lshr_ln147_s_reg_5384;

assign zext_ln147_23_fu_2862_p1 = lshr_ln147_10_reg_5394;

assign zext_ln147_25_fu_2903_p1 = lshr_ln147_11_reg_5404;

assign zext_ln147_27_fu_2910_p1 = lshr_ln147_12_reg_5414;

assign zext_ln147_29_fu_2951_p1 = lshr_ln147_13_reg_5424;

assign zext_ln147_31_fu_2958_p1 = lshr_ln147_14_reg_5434;

assign zext_ln147_3_fu_2453_p1 = lshr_ln147_1_fu_2444_p4;

assign zext_ln147_5_fu_2663_p1 = lshr_ln147_2_reg_5304;

assign zext_ln147_7_fu_2670_p1 = lshr_ln147_3_reg_5314;

assign zext_ln147_9_fu_2711_p1 = lshr_ln147_4_reg_5324;

assign zext_ln183_fu_3131_p1 = i_reg_1549;

assign zext_ln196_1_fu_3203_p1 = add_ln193_fu_3198_p2;

assign zext_ln196_2_fu_3260_p1 = add_ln193_3_fu_3255_p2;

assign zext_ln196_3_fu_3388_p1 = add_ln193_2_fu_3369_p2;

assign zext_ln196_fu_3150_p1 = i_reg_1549;

assign zext_ln205_1_fu_3285_p1 = add_ln205_1_fu_3280_p2;

assign zext_ln205_2_fu_3294_p1 = add_ln205_2_fu_3290_p2;

assign zext_ln205_3_fu_3303_p1 = add_ln205_3_fu_3299_p2;

assign zext_ln205_fu_3275_p1 = add_ln205_fu_3270_p2;

assign zext_ln314_1_fu_3657_p1 = add_ln315_1_fu_3652_p2;

assign zext_ln314_2_fu_3672_p1 = add_ln315_2_fu_3667_p2;

assign zext_ln314_fu_3642_p1 = add_ln315_fu_3637_p2;

assign zext_ln330_fu_2082_p1 = tmp_2_fu_2075_p3;

assign zext_ln333_fu_3868_p1 = $unsigned(grp_fu_4302_p3);

assign zext_ln84_fu_1720_p1 = lshr_ln_reg_4505;

assign zext_ln88_fu_1774_p1 = lshr_ln1_reg_4528;

assign zext_ln97_1_fu_1940_p1 = add_ln97_1_fu_1936_p2;

assign zext_ln97_2_fu_1969_p1 = add_ln97_2_fu_1965_p2;

assign zext_ln97_3_fu_1999_p1 = add_ln97_3_reg_4820;

assign zext_ln97_fu_1911_p1 = add_ln97_fu_1907_p2;

always @ (posedge ap_clk) begin
    p_mid2_reg_4845[1:0] <= 2'b00;
    zext_ln330_reg_4870[1:0] <= 2'b00;
    zext_ln330_reg_4870[34] <= 1'b0;
    mul107_mid2_reg_4906[1:0] <= 2'b00;
    c_reg_4943[1:0] <= 2'b00;
    c_3_reg_4953[1:0] <= 2'b11;
    zext_ln183_reg_5938[31] <= 1'b0;
    zext_ln183_reg_5938_pp8_iter1_reg[31] <= 1'b0;
    zext_ln183_reg_5938_pp8_iter2_reg[31] <= 1'b0;
    zext_ln205_reg_6016[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln205_reg_6016_pp8_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln205_reg_6016_pp8_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln205_reg_6016_pp8_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln205_reg_6016_pp8_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //Conv_sysarr_dbbuf
