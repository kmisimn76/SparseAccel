// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_dbbuf_Conv_sysarr_dbbuf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.186000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=3559,HLS_SYN_LUT=5510,HLS_VERSION=2020_1}" *)

module Conv_sysarr_dbbuf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 43'd1;
parameter    ap_ST_fsm_state2 = 43'd2;
parameter    ap_ST_fsm_state3 = 43'd4;
parameter    ap_ST_fsm_state4 = 43'd8;
parameter    ap_ST_fsm_state5 = 43'd16;
parameter    ap_ST_fsm_pp0_stage0 = 43'd32;
parameter    ap_ST_fsm_state8 = 43'd64;
parameter    ap_ST_fsm_state9 = 43'd128;
parameter    ap_ST_fsm_state10 = 43'd256;
parameter    ap_ST_fsm_state11 = 43'd512;
parameter    ap_ST_fsm_pp1_stage0 = 43'd1024;
parameter    ap_ST_fsm_state14 = 43'd2048;
parameter    ap_ST_fsm_state15 = 43'd4096;
parameter    ap_ST_fsm_state16 = 43'd8192;
parameter    ap_ST_fsm_state17 = 43'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 43'd32768;
parameter    ap_ST_fsm_state20 = 43'd65536;
parameter    ap_ST_fsm_state21 = 43'd131072;
parameter    ap_ST_fsm_state22 = 43'd262144;
parameter    ap_ST_fsm_state23 = 43'd524288;
parameter    ap_ST_fsm_pp3_stage0 = 43'd1048576;
parameter    ap_ST_fsm_state28 = 43'd2097152;
parameter    ap_ST_fsm_state29 = 43'd4194304;
parameter    ap_ST_fsm_state30 = 43'd8388608;
parameter    ap_ST_fsm_state31 = 43'd16777216;
parameter    ap_ST_fsm_state32 = 43'd33554432;
parameter    ap_ST_fsm_state33 = 43'd67108864;
parameter    ap_ST_fsm_state34 = 43'd134217728;
parameter    ap_ST_fsm_state35 = 43'd268435456;
parameter    ap_ST_fsm_state36 = 43'd536870912;
parameter    ap_ST_fsm_state37 = 43'd1073741824;
parameter    ap_ST_fsm_state38 = 43'd2147483648;
parameter    ap_ST_fsm_state39 = 43'd4294967296;
parameter    ap_ST_fsm_state40 = 43'd8589934592;
parameter    ap_ST_fsm_pp4_stage0 = 43'd17179869184;
parameter    ap_ST_fsm_state47 = 43'd34359738368;
parameter    ap_ST_fsm_pp5_stage0 = 43'd68719476736;
parameter    ap_ST_fsm_state56 = 43'd137438953472;
parameter    ap_ST_fsm_state57 = 43'd274877906944;
parameter    ap_ST_fsm_state58 = 43'd549755813888;
parameter    ap_ST_fsm_state59 = 43'd1099511627776;
parameter    ap_ST_fsm_pp6_stage0 = 43'd2199023255552;
parameter    ap_ST_fsm_state65 = 43'd4398046511104;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [63:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [63:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [63:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    weight_in_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp6_iter4;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln287_reg_6216;
reg   [0:0] icmp_ln287_reg_6216_pp6_iter3_reg;
reg   [7:0] k_reg_1281;
reg   [31:0] k_1_reg_1292;
reg   [23:0] k_2_reg_1303;
reg   [15:0] indvar_flatten_reg_1358;
reg   [7:0] hi_reg_1369;
reg   [7:0] wi_reg_1380;
reg   [17:0] indvar_flatten47_reg_1424;
reg   [2:0] ci_reg_1435;
reg   [15:0] indvar_flatten15_reg_1446;
reg   [7:0] wi_1_reg_1457;
reg   [7:0] hi_1_reg_1468;
reg   [15:0] i_reg_1479;
reg   [23:0] indvar_flatten160_reg_1490;
reg   [5:0] k_3_reg_1501;
reg   [18:0] indvar_flatten143_reg_1512;
reg   [2:0] ki_reg_1523;
reg   [15:0] wh_reg_1534;
reg   [63:0] bias_in_V_read_reg_4363;
reg    ap_block_state1;
wire   [7:0] K_fu_1545_p1;
reg   [7:0] K_reg_4368;
reg   [63:0] bias_in_V_read_1_reg_4374;
wire   [7:0] C_fu_1549_p1;
reg   [7:0] C_reg_4379;
wire   [7:0] WH_fu_1553_p1;
reg   [7:0] WH_reg_4386;
wire   [7:0] WH_in_fu_1557_p1;
reg   [7:0] WH_in_reg_4395;
wire   [15:0] zext_ln54_fu_1561_p1;
reg   [15:0] zext_ln54_reg_4402;
wire   [8:0] zext_ln56_fu_1564_p1;
reg   [8:0] zext_ln56_reg_4407;
wire   [15:0] zext_ln56_1_fu_1567_p1;
reg   [15:0] zext_ln56_1_reg_4412;
wire   [15:0] zext_ln58_fu_1570_p1;
reg   [15:0] zext_ln58_reg_4418;
wire   [23:0] zext_ln65_fu_1573_p1;
reg   [23:0] zext_ln65_reg_4424;
wire   [15:0] zext_ln65_1_fu_1576_p1;
reg   [15:0] zext_ln65_1_reg_4429;
wire   [7:0] RS_fu_1579_p1;
reg   [7:0] RS_reg_4434;
wire   [15:0] zext_ln69_fu_1583_p1;
reg   [15:0] zext_ln69_reg_4440;
wire   [0:0] icmp_ln72_fu_1587_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln72_fu_1592_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln74_fu_1598_p1;
reg   [1:0] trunc_ln74_reg_4455;
reg   [5:0] lshr_ln_reg_4459;
wire    ap_CS_fsm_state8;
wire   [15:0] tmp1_fu_1635_p2;
reg   [15:0] tmp1_reg_4469;
wire   [31:0] grp_fu_4091_p2;
reg   [31:0] mul42_reg_4480;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln76_fu_1643_p2;
wire    ap_block_state12_pp1_stage0_iter0;
reg    ap_block_state13_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [31:0] add_ln76_fu_1648_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln78_fu_1654_p1;
reg   [1:0] trunc_ln78_reg_4494;
reg   [8:0] lshr_ln1_reg_4498;
wire    ap_CS_fsm_state14;
wire   [23:0] grp_fu_4097_p2;
reg   [23:0] mul55_reg_4508;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln80_fu_1691_p2;
wire    ap_block_state18_pp2_stage0_iter0;
reg    ap_block_state19_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [23:0] add_ln80_fu_1696_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] trunc_ln82_fu_1702_p1;
reg   [1:0] trunc_ln82_reg_4522;
reg   [8:0] lshr_ln2_reg_4526;
wire   [15:0] mul151_fu_1731_p2;
reg   [15:0] mul151_reg_4675;
wire    ap_CS_fsm_state20;
wire   [16:0] mul151_cast51_fu_1735_p1;
reg   [16:0] mul151_cast51_reg_4683;
wire   [15:0] input_rows_fu_1748_p2;
reg   [15:0] input_rows_reg_4691;
wire   [10:0] trunc_ln3_cast54_fu_1754_p1;
reg   [10:0] trunc_ln3_cast54_reg_4696;
wire   [10:0] trunc_ln4_cast18_fu_1757_p1;
reg   [10:0] trunc_ln4_cast18_reg_4703;
wire   [5:0] div68_cast_fu_1760_p4;
reg   [5:0] div68_cast_reg_4708;
wire   [5:0] div66_cast_fu_1769_p4;
reg   [5:0] div66_cast_reg_4713;
wire   [10:0] C_cast_fu_1778_p1;
reg   [10:0] C_cast_reg_4718;
wire   [8:0] WH_cast_fu_1781_p1;
reg   [8:0] WH_cast_reg_4726;
wire  signed [10:0] empty_41_fu_1784_p1;
reg  signed [10:0] empty_41_reg_4733;
wire  signed [10:0] tmp5_cast_fu_1787_p2;
reg  signed [10:0] tmp5_cast_reg_4753;
wire   [17:0] tmp_2_fu_1793_p3;
reg   [17:0] tmp_2_reg_4759;
wire   [18:0] bound20_fu_1801_p1;
reg   [18:0] bound20_reg_4765;
wire   [11:0] bound110_fu_1813_p2;
reg   [11:0] bound110_reg_4770;
wire  signed [8:0] empty_42_fu_1819_p1;
reg  signed [8:0] empty_42_reg_4775;
wire   [0:0] icmp_ln129_fu_1823_p2;
reg   [0:0] icmp_ln129_reg_4781;
wire   [11:0] add_ln85_fu_1833_p2;
reg   [11:0] add_ln85_reg_4789;
wire    ap_CS_fsm_state21;
wire   [5:0] select_ln85_fu_1844_p3;
reg   [5:0] select_ln85_reg_4794;
wire   [0:0] icmp_ln85_fu_1828_p2;
wire   [5:0] select_ln85_1_fu_1858_p3;
reg   [5:0] select_ln85_1_reg_4801;
wire   [7:0] p_mid_fu_1866_p3;
reg   [7:0] p_mid_reg_4806;
wire   [8:0] mul_ln85_fu_1878_p2;
reg   [8:0] mul_ln85_reg_4811;
wire   [10:0] mul_ln85_1_fu_1887_p2;
reg   [10:0] mul_ln85_1_reg_4823;
wire   [10:0] mul_ln85_2_fu_1902_p2;
reg   [10:0] mul_ln85_2_reg_4831;
wire   [10:0] mul_ln85_3_fu_1917_p2;
reg   [10:0] mul_ln85_3_reg_4839;
wire   [10:0] mul_ln85_4_fu_1932_p2;
reg   [10:0] mul_ln85_4_reg_4847;
wire   [7:0] tmp_20_fu_1937_p3;
reg   [7:0] tmp_20_reg_4855;
wire   [10:0] p_cast13_fu_1945_p1;
reg   [10:0] p_cast13_reg_4861;
wire   [10:0] zext_ln92_fu_1955_p1;
reg   [10:0] zext_ln92_reg_4869;
wire   [2:0] add_ln92_fu_1971_p2;
reg   [2:0] add_ln92_reg_4890;
wire    ap_CS_fsm_state22;
wire   [1:0] empty_44_fu_1981_p1;
reg   [1:0] empty_44_reg_4895;
wire   [0:0] icmp_ln92_fu_1965_p2;
wire  signed [31:0] conv79_fu_2115_p1;
reg  signed [31:0] conv79_reg_5000;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln93_fu_2119_p2;
reg   [0:0] icmp_ln93_reg_5008;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state24_pp3_stage0_iter0;
wire    ap_block_state25_pp3_stage0_iter1;
wire    ap_block_state26_pp3_stage0_iter2;
wire    ap_block_state27_pp3_stage0_iter3;
wire    ap_block_pp3_stage0_11001;
wire   [15:0] add_ln93_fu_2124_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [7:0] select_ln93_fu_2135_p3;
reg   [7:0] select_ln93_reg_5017;
reg   [7:0] select_ln93_reg_5017_pp3_iter1_reg;
wire   [7:0] select_ln93_1_fu_2149_p3;
reg   [7:0] select_ln93_1_reg_5022;
wire   [7:0] add_ln94_fu_2161_p2;
wire  signed [10:0] grp_fu_4108_p2;
reg  signed [10:0] add107_2_cast_reg_5042;
wire    ap_CS_fsm_state31;
wire  signed [10:0] grp_fu_4113_p2;
reg  signed [10:0] add107_1_cast_reg_5047;
wire  signed [10:0] grp_fu_4118_p2;
reg  signed [10:0] add107_3_cast_reg_5052;
wire  signed [10:0] grp_fu_4123_p2;
reg  signed [10:0] add107_1_2_cast_reg_5057;
wire  signed [10:0] grp_fu_4128_p2;
reg  signed [10:0] add107_2_2_cast_reg_5062;
wire  signed [10:0] grp_fu_4133_p2;
reg  signed [10:0] add107_3_2_cast_reg_5067;
wire  signed [10:0] grp_fu_4138_p2;
reg  signed [10:0] add107_cast_reg_5072;
wire  signed [10:0] grp_fu_4143_p2;
reg  signed [10:0] add107_1333_cast_reg_5077;
wire  signed [10:0] grp_fu_4148_p2;
reg  signed [10:0] add107_2341_cast_reg_5082;
wire  signed [10:0] grp_fu_4153_p2;
reg  signed [10:0] add107_3349_cast_reg_5087;
wire  signed [10:0] grp_fu_4158_p2;
reg  signed [10:0] add107_1_1_cast_reg_5092;
wire  signed [10:0] grp_fu_4163_p2;
reg  signed [10:0] add107_1_3_cast_reg_5097;
wire  signed [10:0] grp_fu_4168_p2;
reg  signed [10:0] add107_2_1_cast_reg_5102;
wire  signed [10:0] grp_fu_4173_p2;
reg  signed [10:0] add107_2_3_cast_reg_5107;
wire  signed [10:0] grp_fu_4178_p2;
reg  signed [10:0] add107_3_1_cast_reg_5112;
wire  signed [10:0] grp_fu_4183_p2;
reg  signed [10:0] add107_3_3_cast_reg_5117;
wire   [15:0] add_ln104_fu_2187_p2;
reg   [15:0] add_ln104_reg_5125;
wire    ap_CS_fsm_state32;
wire   [7:0] select_ln104_fu_2198_p3;
reg   [7:0] select_ln104_reg_5130;
wire   [0:0] icmp_ln104_fu_2182_p2;
wire   [7:0] select_ln104_1_fu_2212_p3;
reg   [7:0] select_ln104_1_reg_5135;
wire   [10:0] zext_ln104_1_fu_2220_p1;
reg   [10:0] zext_ln104_1_reg_5141;
wire   [1:0] trunc_ln104_fu_2234_p1;
reg   [1:0] trunc_ln104_reg_5146;
wire   [1:0] trunc_ln104_1_fu_2243_p1;
reg   [1:0] trunc_ln104_1_reg_5151;
wire   [1:0] trunc_ln104_2_fu_2252_p1;
reg   [1:0] trunc_ln104_2_reg_5156;
wire   [1:0] trunc_ln104_3_fu_2261_p1;
reg   [1:0] trunc_ln104_3_reg_5161;
wire   [1:0] trunc_ln104_4_fu_2270_p1;
reg   [1:0] trunc_ln104_4_reg_5166;
wire   [1:0] trunc_ln104_5_fu_2279_p1;
reg   [1:0] trunc_ln104_5_reg_5171;
wire   [1:0] trunc_ln104_6_fu_2288_p1;
reg   [1:0] trunc_ln104_6_reg_5176;
wire   [1:0] trunc_ln104_7_fu_2297_p1;
reg   [1:0] trunc_ln104_7_reg_5181;
wire   [1:0] trunc_ln104_8_fu_2306_p1;
reg   [1:0] trunc_ln104_8_reg_5186;
wire   [1:0] trunc_ln104_9_fu_2315_p1;
reg   [1:0] trunc_ln104_9_reg_5191;
wire   [1:0] trunc_ln104_10_fu_2324_p1;
reg   [1:0] trunc_ln104_10_reg_5196;
wire   [1:0] trunc_ln104_11_fu_2333_p1;
reg   [1:0] trunc_ln104_11_reg_5201;
wire   [1:0] trunc_ln104_12_fu_2342_p1;
reg   [1:0] trunc_ln104_12_reg_5206;
wire   [1:0] trunc_ln104_13_fu_2351_p1;
reg   [1:0] trunc_ln104_13_reg_5211;
wire   [1:0] trunc_ln104_14_fu_2360_p1;
reg   [1:0] trunc_ln104_14_reg_5216;
wire   [1:0] trunc_ln104_15_fu_2369_p1;
reg   [1:0] trunc_ln104_15_reg_5221;
wire   [10:0] zext_ln106_fu_2373_p1;
reg   [10:0] zext_ln106_reg_5226;
wire   [1:0] trunc_ln121_fu_2377_p1;
reg   [1:0] trunc_ln121_reg_5231;
reg   [8:0] lshr_ln120_2_reg_5292;
reg   [8:0] lshr_ln120_3_reg_5297;
reg   [8:0] lshr_ln120_4_reg_5302;
reg   [8:0] lshr_ln120_5_reg_5307;
reg   [8:0] lshr_ln120_6_reg_5312;
reg   [8:0] lshr_ln120_7_reg_5317;
reg   [8:0] lshr_ln120_8_reg_5322;
reg   [8:0] lshr_ln120_9_reg_5327;
reg   [8:0] lshr_ln120_s_reg_5332;
reg   [8:0] lshr_ln120_10_reg_5337;
reg   [8:0] lshr_ln120_11_reg_5342;
reg   [8:0] lshr_ln120_12_reg_5347;
reg   [8:0] lshr_ln120_13_reg_5352;
reg   [8:0] lshr_ln120_14_reg_5357;
wire   [5:0] add_ln86_fu_2653_p2;
wire   [7:0] tmp_3_fu_2666_p6;
reg   [7:0] tmp_3_reg_5367;
wire    ap_CS_fsm_state33;
wire   [7:0] tmp_4_fu_2688_p6;
reg   [7:0] tmp_4_reg_5372;
wire   [7:0] tmp_5_fu_2724_p6;
reg   [7:0] tmp_5_reg_5417;
wire    ap_CS_fsm_state34;
wire   [7:0] tmp_6_fu_2746_p6;
reg   [7:0] tmp_6_reg_5422;
wire   [7:0] tmp_7_fu_2782_p6;
reg   [7:0] tmp_7_reg_5467;
wire    ap_CS_fsm_state35;
wire   [7:0] tmp_8_fu_2804_p6;
reg   [7:0] tmp_8_reg_5472;
wire   [7:0] tmp_9_fu_2840_p6;
reg   [7:0] tmp_9_reg_5517;
wire    ap_CS_fsm_state36;
wire   [7:0] tmp_s_fu_2862_p6;
reg   [7:0] tmp_s_reg_5522;
wire   [7:0] tmp_10_fu_2898_p6;
reg   [7:0] tmp_10_reg_5567;
wire    ap_CS_fsm_state37;
wire   [7:0] tmp_11_fu_2920_p6;
reg   [7:0] tmp_11_reg_5572;
wire   [7:0] tmp_12_fu_2956_p6;
reg   [7:0] tmp_12_reg_5617;
wire    ap_CS_fsm_state38;
wire   [7:0] tmp_13_fu_2978_p6;
reg   [7:0] tmp_13_reg_5622;
wire   [7:0] tmp_14_fu_3014_p6;
reg   [7:0] tmp_14_reg_5667;
wire    ap_CS_fsm_state39;
wire   [7:0] tmp_15_fu_3036_p6;
reg   [7:0] tmp_15_reg_5672;
wire   [8:0] zext_ln104_fu_3064_p1;
reg   [8:0] zext_ln104_reg_5717;
wire    ap_CS_fsm_state40;
wire   [7:0] tmp_16_fu_3075_p6;
reg   [7:0] tmp_16_reg_5723;
wire   [7:0] tmp_17_fu_3097_p6;
reg   [7:0] tmp_17_reg_5728;
wire   [10:0] p_mid131_fu_3111_p2;
reg   [10:0] p_mid131_reg_5733;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state41_pp4_stage0_iter0;
wire    ap_block_state42_pp4_stage0_iter1;
wire    ap_block_state43_pp4_stage0_iter2;
wire    ap_block_state44_pp4_stage0_iter3;
wire    ap_block_state45_pp4_stage0_iter4;
wire    ap_block_state46_pp4_stage0_iter5;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln125_fu_3130_p2;
reg   [0:0] icmp_ln125_reg_5743;
reg   [0:0] icmp_ln125_reg_5743_pp4_iter1_reg;
reg   [0:0] icmp_ln125_reg_5743_pp4_iter2_reg;
reg   [0:0] icmp_ln125_reg_5743_pp4_iter3_reg;
wire   [17:0] add_ln125_fu_3135_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln129_1_fu_3141_p2;
reg   [0:0] icmp_ln129_1_reg_5752;
reg   [0:0] icmp_ln129_1_reg_5752_pp4_iter1_reg;
reg   [0:0] icmp_ln129_1_reg_5752_pp4_iter2_reg;
reg   [0:0] icmp_ln129_1_reg_5752_pp4_iter3_reg;
wire   [1:0] select_ln125_1_fu_3156_p3;
reg   [1:0] select_ln125_1_reg_5760;
reg   [1:0] select_ln125_1_reg_5760_pp4_iter1_reg;
reg   [1:0] select_ln125_1_reg_5760_pp4_iter2_reg;
reg   [1:0] select_ln125_1_reg_5760_pp4_iter3_reg;
reg   [1:0] select_ln125_1_reg_5760_pp4_iter4_reg;
wire   [0:0] select_ln125_5_fu_3180_p3;
reg   [0:0] select_ln125_5_reg_5769;
reg   [0:0] select_ln125_5_reg_5769_pp4_iter1_reg;
reg   [0:0] select_ln125_5_reg_5769_pp4_iter2_reg;
reg   [0:0] select_ln125_5_reg_5769_pp4_iter3_reg;
wire   [2:0] select_ln125_6_fu_3187_p3;
wire   [7:0] select_ln129_fu_3201_p3;
reg   [7:0] select_ln129_reg_5781;
reg   [7:0] select_ln129_reg_5781_pp4_iter1_reg;
reg   [7:0] select_ln129_reg_5781_pp4_iter2_reg;
reg   [7:0] select_ln129_reg_5781_pp4_iter3_reg;
wire   [1:0] trunc_ln136_fu_3209_p1;
reg   [1:0] trunc_ln136_reg_5787;
reg   [1:0] trunc_ln136_reg_5787_pp4_iter1_reg;
reg   [1:0] trunc_ln136_reg_5787_pp4_iter2_reg;
reg   [1:0] trunc_ln136_reg_5787_pp4_iter3_reg;
wire   [7:0] add_ln130_fu_3213_p2;
wire   [15:0] select_ln129_4_fu_3225_p3;
wire   [7:0] select_ln129_3_fu_3278_p3;
reg    ap_enable_reg_pp4_iter1;
wire   [8:0] add_ln134_fu_3288_p2;
reg   [8:0] add_ln134_reg_5807;
reg   [8:0] add_ln134_reg_5807_pp4_iter2_reg;
reg   [8:0] add_ln134_reg_5807_pp4_iter3_reg;
reg   [8:0] add_ln134_reg_5807_pp4_iter4_reg;
wire  signed [10:0] grp_fu_4196_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln133_1_fu_3299_p2;
reg   [10:0] add_ln133_1_reg_5822;
wire   [1:0] add_ln135_fu_3337_p2;
reg   [1:0] add_ln135_reg_5827;
wire  signed [15:0] p_cast44_fu_3388_p1;
reg  signed [15:0] p_cast44_reg_5852;
wire    ap_CS_fsm_state47;
wire  signed [15:0] p_cast60_fu_3391_p1;
reg  signed [15:0] p_cast60_reg_5857;
wire  signed [15:0] p_cast62_fu_3394_p1;
reg  signed [15:0] p_cast62_reg_5862;
wire  signed [15:0] p_cast64_fu_3397_p1;
reg  signed [15:0] p_cast64_reg_5867;
wire  signed [15:0] p_cast46_fu_3400_p1;
reg  signed [15:0] p_cast46_reg_5872;
wire  signed [15:0] p_cast66_fu_3403_p1;
reg  signed [15:0] p_cast66_reg_5877;
wire  signed [15:0] p_cast68_fu_3406_p1;
reg  signed [15:0] p_cast68_reg_5882;
wire  signed [15:0] p_cast70_fu_3409_p1;
reg  signed [15:0] p_cast70_reg_5887;
wire  signed [15:0] p_cast48_fu_3412_p1;
reg  signed [15:0] p_cast48_reg_5892;
wire  signed [15:0] p_cast72_fu_3415_p1;
reg  signed [15:0] p_cast72_reg_5897;
wire  signed [15:0] p_cast74_fu_3418_p1;
reg  signed [15:0] p_cast74_reg_5902;
wire  signed [15:0] p_cast76_fu_3421_p1;
reg  signed [15:0] p_cast76_reg_5907;
wire  signed [15:0] p_cast50_fu_3424_p1;
reg  signed [15:0] p_cast50_reg_5912;
wire  signed [15:0] p_cast78_fu_3427_p1;
reg  signed [15:0] p_cast78_reg_5917;
wire  signed [15:0] p_cast80_fu_3430_p1;
reg  signed [15:0] p_cast80_reg_5922;
wire  signed [15:0] sext_ln145_fu_3433_p1;
reg  signed [15:0] sext_ln145_reg_5927;
wire   [0:0] icmp_ln145_fu_3436_p2;
reg   [0:0] icmp_ln145_reg_5932;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state48_pp5_stage0_iter0;
wire    ap_block_state49_pp5_stage0_iter1;
wire    ap_block_state50_pp5_stage0_iter2;
wire    ap_block_state51_pp5_stage0_iter3;
wire    ap_block_state52_pp5_stage0_iter4;
wire    ap_block_state53_pp5_stage0_iter5;
wire    ap_block_state54_pp5_stage0_iter6;
wire    ap_block_state55_pp5_stage0_iter7;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln145_reg_5932_pp5_iter1_reg;
reg   [0:0] icmp_ln145_reg_5932_pp5_iter2_reg;
reg   [0:0] icmp_ln145_reg_5932_pp5_iter3_reg;
reg   [0:0] icmp_ln145_reg_5932_pp5_iter4_reg;
reg   [0:0] icmp_ln145_reg_5932_pp5_iter5_reg;
wire   [15:0] add_ln145_fu_3441_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [8:0] trunc_ln154_fu_3451_p1;
reg   [8:0] trunc_ln154_reg_5941;
reg   [8:0] trunc_ln154_reg_5941_pp5_iter1_reg;
reg   [8:0] trunc_ln154_reg_5941_pp5_iter2_reg;
reg   [8:0] trunc_ln154_reg_5941_pp5_iter3_reg;
reg   [8:0] trunc_ln154_reg_5941_pp5_iter4_reg;
reg   [8:0] trunc_ln154_reg_5941_pp5_iter5_reg;
reg   [8:0] trunc_ln154_reg_5941_pp5_iter6_reg;
wire   [0:0] icmp_ln153_fu_3460_p2;
reg   [0:0] icmp_ln153_reg_5957;
reg   [0:0] icmp_ln153_reg_5957_pp5_iter1_reg;
reg   [0:0] icmp_ln153_reg_5957_pp5_iter2_reg;
reg   [0:0] tmp_21_reg_5963;
reg   [0:0] tmp_21_reg_5963_pp5_iter1_reg;
reg   [0:0] tmp_21_reg_5963_pp5_iter2_reg;
reg   [0:0] tmp_22_reg_5969;
reg   [0:0] tmp_22_reg_5969_pp5_iter1_reg;
reg   [0:0] tmp_22_reg_5969_pp5_iter2_reg;
reg   [0:0] tmp_22_reg_5969_pp5_iter3_reg;
wire   [0:0] icmp_ln265_fu_3500_p2;
reg   [0:0] icmp_ln265_reg_5975;
reg   [0:0] icmp_ln265_reg_5975_pp5_iter1_reg;
reg   [0:0] icmp_ln265_reg_5975_pp5_iter2_reg;
reg   [0:0] icmp_ln265_reg_5975_pp5_iter3_reg;
reg   [0:0] icmp_ln265_reg_5975_pp5_iter4_reg;
reg   [0:0] icmp_ln265_reg_5975_pp5_iter5_reg;
reg   [0:0] icmp_ln265_reg_5975_pp5_iter6_reg;
wire   [0:0] icmp_ln265_1_fu_3511_p2;
reg   [0:0] icmp_ln265_1_reg_5979;
reg   [0:0] icmp_ln265_1_reg_5979_pp5_iter1_reg;
reg   [0:0] icmp_ln265_1_reg_5979_pp5_iter2_reg;
reg   [0:0] icmp_ln265_1_reg_5979_pp5_iter3_reg;
reg   [0:0] icmp_ln265_1_reg_5979_pp5_iter4_reg;
reg   [0:0] icmp_ln265_1_reg_5979_pp5_iter5_reg;
reg   [0:0] icmp_ln265_1_reg_5979_pp5_iter6_reg;
wire   [0:0] icmp_ln265_2_fu_3522_p2;
reg   [0:0] icmp_ln265_2_reg_5983;
reg   [0:0] icmp_ln265_2_reg_5983_pp5_iter1_reg;
reg   [0:0] icmp_ln265_2_reg_5983_pp5_iter2_reg;
reg   [0:0] icmp_ln265_2_reg_5983_pp5_iter3_reg;
reg   [0:0] icmp_ln265_2_reg_5983_pp5_iter4_reg;
reg   [0:0] icmp_ln265_2_reg_5983_pp5_iter5_reg;
reg   [0:0] icmp_ln265_2_reg_5983_pp5_iter6_reg;
wire   [0:0] icmp_ln265_3_fu_3527_p2;
reg   [0:0] icmp_ln265_3_reg_5987;
reg   [0:0] icmp_ln265_3_reg_5987_pp5_iter1_reg;
reg   [0:0] icmp_ln265_3_reg_5987_pp5_iter2_reg;
reg   [0:0] icmp_ln265_3_reg_5987_pp5_iter3_reg;
reg   [0:0] icmp_ln265_3_reg_5987_pp5_iter4_reg;
reg   [0:0] icmp_ln265_3_reg_5987_pp5_iter5_reg;
reg   [0:0] icmp_ln265_3_reg_5987_pp5_iter6_reg;
wire   [8:0] add_ln151_fu_3538_p2;
reg   [8:0] add_ln151_reg_5991;
wire   [8:0] add_ln153_fu_3605_p2;
reg   [8:0] add_ln153_reg_6026;
wire   [63:0] zext_ln163_fu_3615_p1;
reg   [63:0] zext_ln163_reg_6031;
reg   [63:0] zext_ln163_reg_6031_pp5_iter3_reg;
reg   [63:0] zext_ln163_reg_6031_pp5_iter4_reg;
reg   [63:0] zext_ln163_reg_6031_pp5_iter5_reg;
reg   [63:0] zext_ln163_reg_6031_pp5_iter6_reg;
wire   [31:0] output_l1_0_q1;
reg    ap_enable_reg_pp5_iter3;
wire   [7:0] add_ln106_fu_3930_p2;
wire    ap_CS_fsm_state56;
wire   [23:0] grp_fu_4102_p2;
reg   [23:0] bound148_reg_6206;
wire    ap_CS_fsm_state59;
wire   [0:0] icmp_ln289_fu_3935_p2;
reg   [0:0] icmp_ln289_reg_6211;
wire   [0:0] icmp_ln287_fu_3940_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state60_pp6_stage0_iter0;
wire    ap_block_state61_pp6_stage0_iter1;
wire    ap_block_state62_pp6_stage0_iter2;
wire    ap_block_state63_pp6_stage0_iter3;
reg    ap_block_state64_pp6_stage0_iter4;
reg    ap_block_pp6_stage0_11001;
reg   [0:0] icmp_ln287_reg_6216_pp6_iter1_reg;
reg   [0:0] icmp_ln287_reg_6216_pp6_iter2_reg;
wire   [23:0] add_ln287_fu_3945_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln288_fu_3951_p2;
reg   [0:0] icmp_ln288_reg_6225;
reg   [0:0] icmp_ln288_reg_6225_pp6_iter1_reg;
wire   [5:0] select_ln287_1_fu_3962_p3;
reg   [5:0] select_ln287_1_reg_6233;
wire   [18:0] select_ln288_3_fu_3980_p3;
wire   [1:0] select_ln288_1_fu_4040_p3;
reg   [1:0] select_ln288_1_reg_6248;
reg   [1:0] select_ln288_1_reg_6248_pp6_iter3_reg;
wire   [2:0] select_ln288_2_fu_4048_p3;
reg    ap_enable_reg_pp6_iter2;
wire   [15:0] add_ln289_fu_4060_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state24;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_flush_enable;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_condition_pp4_exit_iter4_state45;
reg    ap_enable_reg_pp4_iter5;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_flush_enable;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter5;
reg    ap_condition_pp5_exit_iter4_state52;
reg    ap_enable_reg_pp5_iter6;
reg    ap_enable_reg_pp5_iter7;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_flush_enable;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter3;
reg    ap_condition_pp6_exit_iter2_state62;
reg   [8:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_q0;
reg   [8:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_q0;
reg   [8:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_q0;
reg   [8:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_q0;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_0_address1;
reg    weight_l2_0_ce1;
wire   [7:0] weight_l2_0_q1;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_1_address1;
reg    weight_l2_1_ce1;
wire   [7:0] weight_l2_1_q1;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_2_address1;
reg    weight_l2_2_ce1;
wire   [7:0] weight_l2_2_q1;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_q0;
reg   [8:0] weight_l2_3_address1;
reg    weight_l2_3_ce1;
wire   [7:0] weight_l2_3_q1;
reg   [8:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_q0;
reg   [8:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_q0;
reg   [8:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_q0;
reg   [8:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] data_l1_0_0_address0;
reg    data_l1_0_0_ce0;
reg    data_l1_0_0_we0;
wire  signed [7:0] data_l1_0_0_q0;
reg   [8:0] data_l1_1_0_address0;
reg    data_l1_1_0_ce0;
reg    data_l1_1_0_we0;
wire   [7:0] data_l1_1_0_q0;
reg   [8:0] data_l1_2_0_address0;
reg    data_l1_2_0_ce0;
reg    data_l1_2_0_we0;
wire   [7:0] data_l1_2_0_q0;
reg   [8:0] data_l1_3_0_address0;
reg    data_l1_3_0_ce0;
reg    data_l1_3_0_we0;
wire   [7:0] data_l1_3_0_q0;
reg   [8:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
reg   [31:0] output_l1_0_d0;
reg   [8:0] output_l1_0_address1;
reg    output_l1_0_ce1;
reg   [8:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
reg   [31:0] output_l1_1_d0;
reg   [8:0] output_l1_1_address1;
reg    output_l1_1_ce1;
wire   [31:0] output_l1_1_q1;
reg   [8:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
reg   [31:0] output_l1_2_d0;
reg   [8:0] output_l1_2_address1;
reg    output_l1_2_ce1;
wire   [31:0] output_l1_2_q1;
reg   [8:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
reg   [31:0] output_l1_3_d0;
reg   [8:0] output_l1_3_address1;
reg    output_l1_3_ce1;
wire   [31:0] output_l1_3_q1;
reg   [11:0] indvar_flatten136_reg_1314;
reg   [5:0] ko_reg_1325;
reg   [5:0] co_reg_1336;
reg   [2:0] ki_1_reg_1347;
wire    ap_CS_fsm_state28;
reg   [7:0] ap_phi_mux_hi_phi_fu_1373_p4;
wire    ap_block_pp3_stage0;
reg   [15:0] indvar_flatten105_reg_1391;
reg   [7:0] r_reg_1402;
reg   [7:0] s_reg_1413;
reg   [5:0] ap_phi_mux_k_3_phi_fu_1505_p4;
wire   [63:0] zext_ln74_fu_1620_p1;
wire   [63:0] zext_ln78_fu_1676_p1;
wire   [63:0] zext_ln82_fu_1724_p1;
wire   [63:0] newIndex66_cast_fu_2000_p1;
wire   [63:0] zext_ln97_fu_2175_p1;
wire   [63:0] zext_ln120_16_fu_2397_p1;
wire   [63:0] zext_ln120_17_fu_2421_p1;
wire   [63:0] zext_ln120_18_fu_2702_p1;
wire   [63:0] zext_ln120_19_fu_2709_p1;
wire   [63:0] zext_ln120_20_fu_2760_p1;
wire   [63:0] zext_ln120_21_fu_2767_p1;
wire   [63:0] zext_ln120_22_fu_2818_p1;
wire   [63:0] zext_ln120_23_fu_2825_p1;
wire   [63:0] zext_ln120_24_fu_2876_p1;
wire   [63:0] zext_ln120_25_fu_2883_p1;
wire   [63:0] zext_ln120_26_fu_2934_p1;
wire   [63:0] zext_ln120_27_fu_2941_p1;
wire   [63:0] zext_ln120_28_fu_2992_p1;
wire   [63:0] zext_ln120_29_fu_2999_p1;
wire   [63:0] zext_ln120_30_fu_3050_p1;
wire   [63:0] zext_ln120_31_fu_3057_p1;
wire   [63:0] zext_ln135_1_fu_3352_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln134_fu_3381_p1;
wire   [63:0] zext_ln154_fu_3455_p1;
wire    ap_block_pp5_stage0;
wire   [63:0] zext_ln154_1_fu_3543_p1;
wire   [63:0] zext_ln154_2_fu_3600_p1;
wire   [63:0] zext_ln163_1_fu_3625_p1;
wire   [63:0] zext_ln163_2_fu_3634_p1;
wire   [63:0] zext_ln163_3_fu_3643_p1;
wire   [63:0] zext_ln154_3_fu_3695_p1;
wire   [63:0] zext_ln272_fu_3895_p1;
wire   [63:0] zext_ln272_1_fu_3910_p1;
wire   [63:0] zext_ln272_2_fu_3925_p1;
wire   [63:0] zext_ln290_fu_4066_p1;
reg   [31:0] psum3_fu_272;
wire  signed [31:0] grp_fu_4291_p3;
reg   [31:0] psum2_fu_276;
wire  signed [31:0] grp_fu_4259_p3;
reg   [31:0] psum1_fu_280;
wire  signed [31:0] grp_fu_4227_p3;
reg   [31:0] psum3_1_fu_284;
wire  signed [31:0] grp_fu_4299_p3;
reg   [31:0] psum2_1_fu_288;
wire  signed [31:0] grp_fu_4267_p3;
reg   [31:0] psum1_1_fu_292;
wire  signed [31:0] grp_fu_4235_p3;
reg   [31:0] psum3_2_fu_296;
wire  signed [31:0] grp_fu_4307_p3;
reg   [31:0] psum2_2_fu_300;
wire  signed [31:0] grp_fu_4275_p3;
reg   [31:0] psum1_2_fu_304;
wire  signed [31:0] grp_fu_4243_p3;
reg   [31:0] psum3_3_fu_308;
wire  signed [31:0] grp_fu_4315_p3;
reg   [31:0] psum2_3_fu_312;
wire  signed [31:0] grp_fu_4283_p3;
reg   [31:0] psum1_3_fu_316;
wire  signed [31:0] grp_fu_4251_p3;
reg  signed [7:0] arrayidx2187_promoted627_fu_320;
reg  signed [7:0] arrayidx24011_promoted634_fu_324;
reg  signed [7:0] arrayidx26315_promoted641_fu_328;
reg  signed [7:0] arrayidx28619_promoted648_fu_332;
reg  signed [7:0] arrayidx2187_1_promoted655_fu_336;
reg  signed [7:0] arrayidx24011_1_promoted662_fu_340;
reg  signed [7:0] arrayidx26315_1_promoted669_fu_344;
reg  signed [7:0] arrayidx28619_1_promoted676_fu_348;
reg  signed [7:0] arrayidx2187_2_promoted683_fu_352;
wire  signed [7:0] select_ln153_2_fu_3763_p3;
reg  signed [7:0] arrayidx24011_2_promoted690_fu_356;
wire  signed [7:0] select_ln153_1_fu_3688_p3;
reg  signed [7:0] arrayidx26315_2_promoted697_fu_360;
wire  signed [7:0] select_ln153_fu_3588_p3;
reg  signed [7:0] arrayidx28619_2_promoted704_fu_364;
reg    ap_block_pp6_stage0_01001;
wire   [7:0] trunc_ln708_fu_1612_p1;
wire   [7:0] trunc_ln708_1_fu_1668_p1;
wire   [7:0] trunc_ln708_2_fu_1716_p1;
wire  signed [31:0] grp_fu_4331_p3;
wire  signed [31:0] grp_fu_4339_p3;
wire  signed [31:0] grp_fu_4347_p3;
wire  signed [31:0] grp_fu_4323_p3;
wire   [7:0] tmp_19_fu_3363_p6;
wire   [7:0] tmp_fu_1627_p0;
wire   [7:0] tmp_fu_1627_p1;
wire   [15:0] tmp_fu_1627_p2;
wire   [7:0] tmp1_fu_1635_p0;
wire   [7:0] tmp1_fu_1635_p1;
wire   [7:0] tmp2_fu_1683_p0;
wire   [7:0] tmp2_fu_1683_p1;
wire   [15:0] tmp2_fu_1683_p2;
wire   [7:0] mul151_fu_1731_p0;
wire   [7:0] mul151_fu_1731_p1;
wire   [8:0] tmp3_fu_1739_p2;
wire   [15:0] tmp3_cast_fu_1744_p1;
wire   [7:0] tmp5_cast_fu_1787_p0;
wire   [7:0] tmp5_cast_fu_1787_p1;
wire   [5:0] bound110_fu_1813_p0;
wire   [5:0] bound110_fu_1813_p1;
wire   [0:0] icmp_ln86_fu_1839_p2;
wire   [5:0] add_ln85_1_fu_1852_p2;
wire   [5:0] mul_ln85_fu_1878_p1;
wire   [7:0] mul_ln85_1_fu_1887_p0;
wire   [7:0] mul_ln85_1_fu_1887_p1;
wire   [7:0] or_ln85_fu_1892_p2;
wire   [7:0] mul_ln85_2_fu_1902_p0;
wire   [7:0] mul_ln85_2_fu_1902_p1;
wire   [7:0] or_ln85_1_fu_1907_p2;
wire   [7:0] mul_ln85_3_fu_1917_p0;
wire   [7:0] mul_ln85_3_fu_1917_p1;
wire   [7:0] or_ln85_2_fu_1922_p2;
wire   [7:0] mul_ln85_4_fu_1932_p0;
wire   [7:0] mul_ln85_4_fu_1932_p1;
wire   [7:0] empty_57_fu_1949_p2;
wire   [7:0] zext_ln92_1_fu_1977_p1;
wire   [7:0] empty_45_fu_1985_p2;
wire   [5:0] newIndex_fu_1990_p4;
wire   [7:0] empty_47_fu_2008_p2;
wire   [7:0] empty_48_fu_2017_p2;
wire   [10:0] p_cast14_fu_2022_p1;
wire   [10:0] p_cast15_fu_2013_p1;
wire   [63:0] tmp_1_fu_2101_p5;
wire   [7:0] tmp_1_fu_2101_p6;
wire   [0:0] icmp_ln94_fu_2130_p2;
wire   [7:0] add_ln93_1_fu_2143_p2;
wire   [8:0] wi_cast_fu_2167_p1;
wire   [8:0] grp_fu_4188_p3;
wire   [0:0] icmp_ln106_fu_2193_p2;
wire   [7:0] add_ln104_17_fu_2206_p2;
wire   [7:0] mul_ln104_fu_2224_p0;
wire   [7:0] mul_ln104_fu_2224_p1;
wire   [10:0] mul_ln104_fu_2224_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_1_fu_2229_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_2_fu_2238_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_3_fu_2247_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_4_fu_2256_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_5_fu_2265_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_6_fu_2274_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_7_fu_2283_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_8_fu_2292_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_9_fu_2301_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_10_fu_2310_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_11_fu_2319_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_12_fu_2328_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_13_fu_2337_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_14_fu_2346_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_15_fu_2355_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln104_16_fu_2364_p2;
wire   [10:0] add_ln121_fu_2381_p2;
wire   [8:0] lshr_ln3_fu_2387_p4;
wire   [10:0] add_ln121_1_fu_2405_p2;
wire   [8:0] lshr_ln120_1_fu_2411_p4;
wire   [10:0] add_ln121_2_fu_2429_p2;
wire   [10:0] add_ln121_3_fu_2445_p2;
wire   [10:0] add_ln121_4_fu_2461_p2;
wire   [10:0] add_ln121_5_fu_2477_p2;
wire   [10:0] add_ln121_6_fu_2493_p2;
wire   [10:0] add_ln121_7_fu_2509_p2;
wire   [10:0] add_ln121_8_fu_2525_p2;
wire   [10:0] add_ln121_9_fu_2541_p2;
wire   [10:0] add_ln121_10_fu_2557_p2;
wire   [10:0] add_ln121_11_fu_2573_p2;
wire   [10:0] add_ln121_12_fu_2589_p2;
wire   [10:0] add_ln121_13_fu_2605_p2;
wire   [10:0] add_ln121_14_fu_2621_p2;
wire   [10:0] add_ln121_15_fu_2637_p2;
wire   [1:0] add_ln120_fu_2658_p2;
wire   [63:0] tmp_3_fu_2666_p5;
wire   [1:0] add_ln120_1_fu_2680_p2;
wire   [63:0] tmp_4_fu_2688_p5;
wire   [1:0] add_ln120_2_fu_2716_p2;
wire   [63:0] tmp_5_fu_2724_p5;
wire   [1:0] add_ln120_3_fu_2738_p2;
wire   [63:0] tmp_6_fu_2746_p5;
wire   [1:0] add_ln120_4_fu_2774_p2;
wire   [63:0] tmp_7_fu_2782_p5;
wire   [1:0] add_ln120_5_fu_2796_p2;
wire   [63:0] tmp_8_fu_2804_p5;
wire   [1:0] add_ln120_6_fu_2832_p2;
wire   [63:0] tmp_9_fu_2840_p5;
wire   [1:0] add_ln120_7_fu_2854_p2;
wire   [63:0] tmp_s_fu_2862_p5;
wire   [1:0] add_ln120_8_fu_2890_p2;
wire   [63:0] tmp_10_fu_2898_p5;
wire   [1:0] add_ln120_9_fu_2912_p2;
wire   [63:0] tmp_11_fu_2920_p5;
wire   [1:0] add_ln120_10_fu_2948_p2;
wire   [63:0] tmp_12_fu_2956_p5;
wire   [1:0] add_ln120_11_fu_2970_p2;
wire   [63:0] tmp_13_fu_2978_p5;
wire   [1:0] add_ln120_12_fu_3006_p2;
wire   [63:0] tmp_14_fu_3014_p5;
wire   [1:0] add_ln120_13_fu_3028_p2;
wire   [63:0] tmp_15_fu_3036_p5;
wire   [1:0] add_ln120_14_fu_3067_p2;
wire   [63:0] tmp_16_fu_3075_p5;
wire   [1:0] add_ln120_15_fu_3089_p2;
wire   [63:0] tmp_17_fu_3097_p5;
wire   [7:0] p_mid131_fu_3111_p0;
wire   [7:0] p_mid131_fu_3111_p1;
wire   [1:0] empty_49_fu_3115_p1;
wire   [7:0] tmp_18_fu_3119_p3;
wire   [2:0] add_ln125_1_fu_3146_p2;
wire   [1:0] empty_53_fu_3152_p1;
wire   [7:0] tmp_19_mid1_fu_3164_p3;
wire   [0:0] icmp_ln130_fu_3175_p2;
wire   [0:0] or_ln129_fu_3195_p2;
wire   [15:0] add_ln129_3_fu_3219_p2;
wire   [7:0] mul_ln133_fu_3237_p0;
wire   [7:0] mul_ln133_fu_3237_p1;
wire   [8:0] zext_ln129_fu_3233_p1;
wire   [8:0] mul_ln133_fu_3237_p2;
wire   [7:0] select_ln125_fu_3242_p3;
wire   [7:0] add_ln129_fu_3256_p2;
wire   [7:0] mul_ln133_1_fu_3266_p0;
wire   [7:0] mul_ln133_1_fu_3266_p1;
wire   [8:0] zext_ln129_1_fu_3262_p1;
wire   [8:0] mul_ln133_1_fu_3266_p2;
wire   [8:0] select_ln125_3_fu_3249_p3;
wire   [8:0] select_ln129_1_fu_3271_p3;
wire   [8:0] wi_1_cast58_fu_3285_p1;
wire  signed [10:0] grp_fu_4202_p2;
wire  signed [10:0] grp_fu_4209_p4;
wire   [10:0] grp_fu_4218_p4;
wire   [10:0] select_ln125_4_fu_3303_p3;
wire   [10:0] select_ln129_2_fu_3308_p3;
wire   [1:0] trunc_ln129_fu_3319_p1;
wire   [10:0] wi_1_cast_fu_3328_p1;
wire   [10:0] add_ln129_1_fu_3314_p2;
wire   [1:0] add_ln129_2_fu_3323_p2;
wire   [10:0] add_ln136_fu_3331_p2;
wire   [8:0] lshr_ln4_fu_3342_p4;
wire   [63:0] tmp_19_fu_3363_p5;
wire   [16:0] zext_ln145_fu_3447_p1;
wire   [16:0] add_ln151_1_fu_3466_p2;
wire   [16:0] add_ln151_2_fu_3480_p2;
wire   [16:0] add_ln265_fu_3494_p2;
wire   [16:0] add_ln265_1_fu_3505_p2;
wire   [16:0] add_ln265_2_fu_3516_p2;
wire   [8:0] add_ln151_3_fu_3595_p2;
wire   [8:0] add_ln163_fu_3610_p2;
wire   [8:0] add_ln163_1_fu_3620_p2;
wire   [8:0] add_ln163_2_fu_3630_p2;
wire   [8:0] add_ln163_3_fu_3639_p2;
wire   [8:0] add_ln265_3_fu_3885_p2;
wire   [8:0] add_ln273_fu_3890_p2;
wire   [8:0] add_ln265_4_fu_3900_p2;
wire   [8:0] add_ln273_1_fu_3905_p2;
wire   [8:0] add_ln265_5_fu_3915_p2;
wire   [8:0] add_ln273_2_fu_3920_p2;
wire   [5:0] add_ln287_1_fu_3956_p2;
wire   [18:0] add_ln288_1_fu_3974_p2;
wire   [1:0] trunc_ln290_fu_3995_p1;
wire   [0:0] icmp_ln289_1_fu_4006_p2;
wire   [2:0] select_ln287_fu_3988_p3;
wire   [0:0] select_ln287_3_fu_4011_p3;
wire   [0:0] or_ln288_fu_4023_p2;
wire   [2:0] add_ln288_fu_4017_p2;
wire   [1:0] trunc_ln290_1_fu_4036_p1;
wire   [1:0] select_ln287_2_fu_3999_p3;
wire   [15:0] select_ln288_fu_4028_p3;
wire  signed [8:0] grp_fu_4355_p3;
wire   [31:0] p_Repl2_s_fu_4073_p6;
wire   [15:0] grp_fu_4091_p0;
wire   [15:0] grp_fu_4091_p1;
wire   [15:0] grp_fu_4097_p0;
wire   [7:0] grp_fu_4097_p1;
wire   [5:0] grp_fu_4102_p0;
wire   [17:0] grp_fu_4102_p1;
wire  signed [10:0] grp_fu_4108_p0;
wire  signed [10:0] grp_fu_4113_p0;
wire  signed [10:0] grp_fu_4118_p0;
wire  signed [10:0] grp_fu_4123_p0;
wire  signed [10:0] grp_fu_4128_p0;
wire  signed [10:0] grp_fu_4133_p0;
wire  signed [10:0] grp_fu_4138_p0;
wire  signed [10:0] grp_fu_4143_p0;
wire  signed [10:0] grp_fu_4148_p0;
wire  signed [10:0] grp_fu_4153_p0;
wire  signed [10:0] grp_fu_4158_p0;
wire  signed [10:0] grp_fu_4163_p0;
wire  signed [10:0] grp_fu_4168_p0;
wire  signed [10:0] grp_fu_4173_p0;
wire  signed [10:0] grp_fu_4178_p0;
wire  signed [10:0] grp_fu_4183_p0;
wire   [7:0] grp_fu_4188_p0;
wire   [7:0] grp_fu_4188_p1;
wire   [8:0] grp_fu_4188_p2;
wire   [7:0] grp_fu_4196_p1;
wire   [7:0] grp_fu_4202_p1;
wire   [7:0] grp_fu_4209_p0;
wire   [7:0] grp_fu_4209_p1;
wire   [7:0] grp_fu_4209_p2;
wire   [7:0] grp_fu_4218_p0;
wire   [7:0] grp_fu_4218_p1;
wire   [7:0] grp_fu_4218_p2;
wire   [10:0] grp_fu_4218_p3;
wire  signed [7:0] grp_fu_4227_p1;
wire   [31:0] grp_fu_4227_p2;
wire  signed [7:0] grp_fu_4235_p1;
wire   [31:0] grp_fu_4235_p2;
wire  signed [7:0] grp_fu_4243_p1;
wire   [31:0] grp_fu_4243_p2;
wire  signed [7:0] grp_fu_4251_p1;
wire  signed [7:0] grp_fu_4259_p1;
wire  signed [7:0] grp_fu_4267_p1;
wire  signed [7:0] grp_fu_4275_p1;
wire  signed [7:0] grp_fu_4283_p1;
wire  signed [7:0] grp_fu_4291_p1;
wire  signed [7:0] grp_fu_4299_p1;
wire  signed [7:0] grp_fu_4307_p1;
wire  signed [7:0] grp_fu_4315_p1;
wire  signed [7:0] grp_fu_4323_p0;
wire  signed [7:0] grp_fu_4331_p0;
wire  signed [7:0] grp_fu_4339_p0;
wire  signed [7:0] grp_fu_4347_p0;
wire   [5:0] grp_fu_4355_p0;
wire   [8:0] grp_fu_4355_p2;
reg    grp_fu_4355_ce;
wire    ap_CS_fsm_state65;
reg   [42:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_block_pp4;
reg    ap_block_pp5;
reg    ap_block_pp6;
reg    ap_predicate_op960_load_state50;
reg    ap_enable_operation_960;
reg    ap_enable_state50_pp5_iter2_stage0;
reg    ap_predicate_op996_load_state51;
reg    ap_enable_operation_996;
reg    ap_enable_state51_pp5_iter3_stage0;
reg    ap_enable_operation_1139;
reg    ap_enable_state55_pp5_iter7_stage0;
reg    ap_predicate_op964_load_state50;
reg    ap_enable_operation_964;
reg    ap_predicate_op998_load_state51;
reg    ap_enable_operation_998;
reg    ap_enable_operation_1145;
reg    ap_predicate_op968_load_state50;
reg    ap_enable_operation_968;
reg    ap_predicate_op1000_load_state51;
reg    ap_enable_operation_1000;
reg    ap_enable_operation_1151;
reg    ap_enable_operation_972;
reg    ap_enable_operation_1002;
reg    ap_enable_operation_1154;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire   [11:0] bound110_fu_1813_p00;
wire   [11:0] bound110_fu_1813_p10;
wire   [31:0] grp_fu_4091_p00;
wire   [31:0] grp_fu_4091_p10;
wire   [23:0] grp_fu_4097_p00;
wire   [23:0] grp_fu_4102_p00;
wire   [23:0] grp_fu_4102_p10;
wire   [8:0] grp_fu_4188_p00;
wire   [10:0] grp_fu_4196_p10;
wire   [10:0] grp_fu_4202_p10;
wire   [8:0] grp_fu_4355_p00;
wire   [10:0] mul_ln104_fu_2224_p00;
wire   [10:0] mul_ln85_1_fu_1887_p10;
wire   [10:0] mul_ln85_2_fu_1902_p10;
wire   [10:0] mul_ln85_3_fu_1917_p10;
wire   [10:0] mul_ln85_4_fu_1932_p10;
wire   [8:0] mul_ln85_fu_1878_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
end

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(trunc_ln708_fu_1612_p1),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(trunc_ln708_fu_1612_p1),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(trunc_ln708_fu_1612_p1),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(trunc_ln708_fu_1612_p1),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(trunc_ln708_1_fu_1668_p1),
    .q0(weight_l2_0_q0),
    .address1(weight_l2_0_address1),
    .ce1(weight_l2_0_ce1),
    .q1(weight_l2_0_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(trunc_ln708_1_fu_1668_p1),
    .q0(weight_l2_1_q0),
    .address1(weight_l2_1_address1),
    .ce1(weight_l2_1_ce1),
    .q1(weight_l2_1_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(trunc_ln708_1_fu_1668_p1),
    .q0(weight_l2_2_q0),
    .address1(weight_l2_2_address1),
    .ce1(weight_l2_2_ce1),
    .q1(weight_l2_2_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(trunc_ln708_1_fu_1668_p1),
    .q0(weight_l2_3_q0),
    .address1(weight_l2_3_address1),
    .ce1(weight_l2_3_ce1),
    .q1(weight_l2_3_q1)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(trunc_ln708_2_fu_1716_p1),
    .q0(data_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(trunc_ln708_2_fu_1716_p1),
    .q0(data_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(trunc_ln708_2_fu_1716_p1),
    .q0(data_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(trunc_ln708_2_fu_1716_p1),
    .q0(data_l2_3_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_0_0_address0),
    .ce0(data_l1_0_0_ce0),
    .we0(data_l1_0_0_we0),
    .d0(tmp_19_fu_3363_p6),
    .q0(data_l1_0_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_1_0_address0),
    .ce0(data_l1_1_0_ce0),
    .we0(data_l1_1_0_we0),
    .d0(tmp_19_fu_3363_p6),
    .q0(data_l1_1_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_2_0_address0),
    .ce0(data_l1_2_0_ce0),
    .we0(data_l1_2_0_we0),
    .d0(tmp_19_fu_3363_p6),
    .q0(data_l1_2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_3_0_address0),
    .ce0(data_l1_3_0_ce0),
    .we0(data_l1_3_0_we0),
    .d0(tmp_19_fu_3363_p6),
    .q0(data_l1_3_0_q0)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(output_l1_0_d0),
    .address1(output_l1_0_address1),
    .ce1(output_l1_0_ce1),
    .q1(output_l1_0_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(output_l1_1_d0),
    .address1(output_l1_1_address1),
    .ce1(output_l1_1_ce1),
    .q1(output_l1_1_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(output_l1_2_d0),
    .address1(output_l1_2_address1),
    .ce1(output_l1_2_ce1),
    .q1(output_l1_2_q1)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(output_l1_3_d0),
    .address1(output_l1_3_address1),
    .ce1(output_l1_3_ce1),
    .q1(output_l1_3_q1)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(tmp_fu_1627_p0),
    .din1(tmp_fu_1627_p1),
    .dout(tmp_fu_1627_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U2(
    .din0(tmp1_fu_1635_p0),
    .din1(tmp1_fu_1635_p1),
    .dout(tmp1_fu_1635_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U3(
    .din0(tmp2_fu_1683_p0),
    .din1(tmp2_fu_1683_p1),
    .dout(tmp2_fu_1683_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U4(
    .din0(mul151_fu_1731_p0),
    .din1(mul151_fu_1731_p1),
    .dout(mul151_fu_1731_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U5(
    .din0(tmp5_cast_fu_1787_p0),
    .din1(tmp5_cast_fu_1787_p1),
    .dout(tmp5_cast_fu_1787_p2)
);

Conv_sysarr_dbbuf_mul_6ns_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6ns_6ns_12_1_1_U6(
    .din0(bound110_fu_1813_p0),
    .din1(bound110_fu_1813_p1),
    .dout(bound110_fu_1813_p2)
);

Conv_sysarr_dbbuf_mul_9s_6ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_9s_6ns_9_1_1_U7(
    .din0(empty_42_reg_4775),
    .din1(mul_ln85_fu_1878_p1),
    .dout(mul_ln85_fu_1878_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U8(
    .din0(mul_ln85_1_fu_1887_p0),
    .din1(mul_ln85_1_fu_1887_p1),
    .dout(mul_ln85_1_fu_1887_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U9(
    .din0(mul_ln85_2_fu_1902_p0),
    .din1(mul_ln85_2_fu_1902_p1),
    .dout(mul_ln85_2_fu_1902_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U10(
    .din0(mul_ln85_3_fu_1917_p0),
    .din1(mul_ln85_3_fu_1917_p1),
    .dout(mul_ln85_3_fu_1917_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U11(
    .din0(mul_ln85_4_fu_1932_p0),
    .din1(mul_ln85_4_fu_1932_p1),
    .dout(mul_ln85_4_fu_1932_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U12(
    .din0(bias_l2_0_q0),
    .din1(bias_l2_1_q0),
    .din2(bias_l2_2_q0),
    .din3(bias_l2_3_q0),
    .din4(tmp_1_fu_2101_p5),
    .dout(tmp_1_fu_2101_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U13(
    .din0(mul_ln104_fu_2224_p0),
    .din1(mul_ln104_fu_2224_p1),
    .dout(mul_ln104_fu_2224_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U14(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_3_fu_2666_p5),
    .dout(tmp_3_fu_2666_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U15(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_4_fu_2688_p5),
    .dout(tmp_4_fu_2688_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U16(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_5_fu_2724_p5),
    .dout(tmp_5_fu_2724_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U17(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_6_fu_2746_p5),
    .dout(tmp_6_fu_2746_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U18(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_7_fu_2782_p5),
    .dout(tmp_7_fu_2782_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U19(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_8_fu_2804_p5),
    .dout(tmp_8_fu_2804_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U20(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_9_fu_2840_p5),
    .dout(tmp_9_fu_2840_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U21(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_s_fu_2862_p5),
    .dout(tmp_s_fu_2862_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U22(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_10_fu_2898_p5),
    .dout(tmp_10_fu_2898_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U23(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_11_fu_2920_p5),
    .dout(tmp_11_fu_2920_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U24(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_12_fu_2956_p5),
    .dout(tmp_12_fu_2956_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U25(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_13_fu_2978_p5),
    .dout(tmp_13_fu_2978_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U26(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_14_fu_3014_p5),
    .dout(tmp_14_fu_3014_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U27(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_15_fu_3036_p5),
    .dout(tmp_15_fu_3036_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U28(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_16_fu_3075_p5),
    .dout(tmp_16_fu_3075_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U29(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_17_fu_3097_p5),
    .dout(tmp_17_fu_3097_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U30(
    .din0(p_mid131_fu_3111_p0),
    .din1(p_mid131_fu_3111_p1),
    .dout(p_mid131_fu_3111_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U31(
    .din0(mul_ln133_fu_3237_p0),
    .din1(mul_ln133_fu_3237_p1),
    .dout(mul_ln133_fu_3237_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U32(
    .din0(mul_ln133_1_fu_3266_p0),
    .din1(mul_ln133_1_fu_3266_p1),
    .dout(mul_ln133_1_fu_3266_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U33(
    .din0(data_l2_0_q0),
    .din1(data_l2_1_q0),
    .din2(data_l2_2_q0),
    .din3(data_l2_3_q0),
    .din4(tmp_19_fu_3363_p5),
    .dout(tmp_19_fu_3363_p6)
);

Conv_sysarr_dbbuf_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U34(
    .din0(output_l1_0_q1),
    .din1(output_l1_1_q1),
    .din2(output_l1_2_q1),
    .din3(output_l1_3_q1),
    .din4(select_ln288_1_reg_6248_pp6_iter3_reg),
    .dout(p_Repl2_s_fu_4073_p6)
);

Conv_sysarr_dbbuf_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4091_p0),
    .din1(grp_fu_4091_p1),
    .ce(1'b1),
    .dout(grp_fu_4091_p2)
);

Conv_sysarr_dbbuf_mul_mul_16ns_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16ns_8ns_24_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4097_p0),
    .din1(grp_fu_4097_p1),
    .ce(1'b1),
    .dout(grp_fu_4097_p2)
);

Conv_sysarr_dbbuf_mul_mul_6ns_18ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 24 ))
mul_mul_6ns_18ns_24_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4102_p0),
    .din1(grp_fu_4102_p1),
    .ce(1'b1),
    .dout(grp_fu_4102_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4108_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4108_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4113_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4113_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4118_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4118_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4123_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4123_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4128_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4128_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4133_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4133_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4138_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4138_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4143_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4143_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4148_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4148_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4153_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4153_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4158_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4158_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4163_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4163_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4168_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4168_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4173_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4173_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4178_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4178_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4183_p0),
    .din1(empty_41_reg_4733),
    .ce(1'b1),
    .dout(grp_fu_4183_p2)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_8ns_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_8ns_9ns_9_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4188_p0),
    .din1(grp_fu_4188_p1),
    .din2(grp_fu_4188_p2),
    .ce(1'b1),
    .dout(grp_fu_4188_p3)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp5_cast_reg_4753),
    .din1(grp_fu_4196_p1),
    .ce(1'b1),
    .dout(grp_fu_4196_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp5_cast_reg_4753),
    .din1(grp_fu_4202_p1),
    .ce(1'b1),
    .dout(grp_fu_4202_p2)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11s_11_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4209_p0),
    .din1(grp_fu_4209_p1),
    .din2(grp_fu_4209_p2),
    .din3(grp_fu_4196_p2),
    .ce(1'b1),
    .dout(grp_fu_4209_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4218_p0),
    .din1(grp_fu_4218_p1),
    .din2(grp_fu_4218_p2),
    .din3(grp_fu_4218_p3),
    .ce(1'b1),
    .dout(grp_fu_4218_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx28619_promoted648_fu_332),
    .din1(grp_fu_4227_p1),
    .din2(grp_fu_4227_p2),
    .ce(1'b1),
    .dout(grp_fu_4227_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx28619_1_promoted676_fu_348),
    .din1(grp_fu_4235_p1),
    .din2(grp_fu_4235_p2),
    .ce(1'b1),
    .dout(grp_fu_4235_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx28619_2_promoted704_fu_364),
    .din1(grp_fu_4243_p1),
    .din2(grp_fu_4243_p2),
    .ce(1'b1),
    .dout(grp_fu_4243_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1_0_0_q0),
    .din1(grp_fu_4251_p1),
    .din2(output_l1_0_q1),
    .ce(1'b1),
    .dout(grp_fu_4251_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx26315_promoted641_fu_328),
    .din1(grp_fu_4259_p1),
    .din2(psum1_fu_280),
    .ce(1'b1),
    .dout(grp_fu_4259_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx26315_1_promoted669_fu_344),
    .din1(grp_fu_4267_p1),
    .din2(psum1_1_fu_292),
    .ce(1'b1),
    .dout(grp_fu_4267_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx26315_2_promoted697_fu_360),
    .din1(grp_fu_4275_p1),
    .din2(psum1_2_fu_304),
    .ce(1'b1),
    .dout(grp_fu_4275_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln153_fu_3588_p3),
    .din1(grp_fu_4283_p1),
    .din2(psum1_3_fu_316),
    .ce(1'b1),
    .dout(grp_fu_4283_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx24011_promoted634_fu_324),
    .din1(grp_fu_4291_p1),
    .din2(psum2_fu_276),
    .ce(1'b1),
    .dout(grp_fu_4291_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx24011_1_promoted662_fu_340),
    .din1(grp_fu_4299_p1),
    .din2(psum2_1_fu_288),
    .ce(1'b1),
    .dout(grp_fu_4299_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx24011_2_promoted690_fu_356),
    .din1(grp_fu_4307_p1),
    .din2(psum2_2_fu_300),
    .ce(1'b1),
    .dout(grp_fu_4307_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln153_1_fu_3688_p3),
    .din1(grp_fu_4315_p1),
    .din2(psum2_3_fu_312),
    .ce(1'b1),
    .dout(grp_fu_4315_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4323_p0),
    .din1(arrayidx2187_promoted627_fu_320),
    .din2(psum3_fu_272),
    .ce(1'b1),
    .dout(grp_fu_4323_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4331_p0),
    .din1(arrayidx2187_1_promoted655_fu_336),
    .din2(psum3_1_fu_284),
    .ce(1'b1),
    .dout(grp_fu_4331_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4339_p0),
    .din1(arrayidx2187_2_promoted683_fu_352),
    .din2(psum3_2_fu_296),
    .ce(1'b1),
    .dout(grp_fu_4339_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4347_p0),
    .din1(select_ln153_2_fu_3763_p3),
    .din2(psum3_3_fu_308),
    .ce(1'b1),
    .dout(grp_fu_4347_p3)
);

Conv_sysarr_dbbuf_mac_muladd_6ns_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_6ns_9s_9ns_9_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4355_p0),
    .din1(empty_42_reg_4775),
    .din2(grp_fu_4355_p2),
    .ce(grp_fu_4355_ce),
    .dout(grp_fu_4355_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state18);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state24) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state24)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state24);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end else if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_condition_pp4_exit_iter4_state45) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
            ap_enable_reg_pp4_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter4_state45) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter3;
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp5_flush_enable)) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter4_state52)) begin
                ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp6_flush_enable)) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state59)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter2_state62)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end else if ((1'b1 == ap_CS_fsm_state59)) begin
            ap_enable_reg_pp6_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln125_fu_3130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        ci_reg_1435 <= select_ln125_6_fu_3187_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        ci_reg_1435 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_2182_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        co_reg_1336 <= add_ln86_fu_2653_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        co_reg_1336 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln125_reg_5743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        hi_1_reg_1468 <= select_ln129_3_fu_3278_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        hi_1_reg_1468 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_reg_5008 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        hi_reg_1369 <= select_ln93_1_reg_5022;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        hi_reg_1369 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_3436_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        i_reg_1479 <= add_ln145_fu_3441_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        i_reg_1479 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        indvar_flatten105_reg_1391 <= add_ln104_reg_5125;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten105_reg_1391 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_2182_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        indvar_flatten136_reg_1314 <= add_ln85_reg_4789;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        indvar_flatten136_reg_1314 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln287_fu_3940_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten143_reg_1512 <= select_ln288_3_fu_3980_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        indvar_flatten143_reg_1512 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln125_fu_3130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten15_reg_1446 <= select_ln129_4_fu_3225_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten15_reg_1446 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln287_fu_3940_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten160_reg_1490 <= add_ln287_fu_3945_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        indvar_flatten160_reg_1490 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln125_fu_3130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten47_reg_1424 <= add_ln125_fu_3135_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten47_reg_1424 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln93_fu_2119_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten_reg_1358 <= add_ln93_fu_2124_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten_reg_1358 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_1_reg_1292 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln76_fu_1643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_1_reg_1292 <= add_ln76_fu_1648_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_2_reg_1303 <= 24'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln80_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        k_2_reg_1303 <= add_ln80_fu_1696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln287_reg_6216 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        k_3_reg_1501 <= select_ln287_1_reg_6233;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        k_3_reg_1501 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        k_reg_1281 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln72_fu_1587_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_1281 <= add_ln72_fu_1592_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_1828_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ki_1_reg_1347 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        ki_1_reg_1347 <= add_ln92_reg_4890;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln287_reg_6216_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        ki_reg_1523 <= select_ln288_2_fu_4048_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ki_reg_1523 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_2182_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ko_reg_1325 <= select_ln85_1_reg_4801;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ko_reg_1325 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        r_reg_1402 <= select_ln104_1_reg_5135;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_reg_1402 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        s_reg_1413 <= add_ln106_fu_3930_p2;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        s_reg_1413 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln287_reg_6216_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        wh_reg_1534 <= add_ln289_fu_4060_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        wh_reg_1534 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln125_fu_3130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        wi_1_reg_1457 <= add_ln130_fu_3213_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        wi_1_reg_1457 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln93_fu_2119_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        wi_reg_1380 <= add_ln94_fu_2161_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        wi_reg_1380 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        C_cast_reg_4718[7 : 0] <= C_cast_fu_1778_p1[7 : 0];
        WH_cast_reg_4726[7 : 0] <= WH_cast_fu_1781_p1[7 : 0];
        bound110_reg_4770 <= bound110_fu_1813_p2;
        bound20_reg_4765[17 : 2] <= bound20_fu_1801_p1[17 : 2];
        div66_cast_reg_4713 <= {{bias_in_V_read_reg_4363[7:2]}};
        div68_cast_reg_4708 <= {{bias_in_V_read_1_reg_4374[7:2]}};
        empty_41_reg_4733 <= empty_41_fu_1784_p1;
        empty_42_reg_4775 <= empty_42_fu_1819_p1;
        icmp_ln129_reg_4781 <= icmp_ln129_fu_1823_p2;
        input_rows_reg_4691 <= input_rows_fu_1748_p2;
        mul151_cast51_reg_4683[15 : 0] <= mul151_cast51_fu_1735_p1[15 : 0];
        mul151_reg_4675 <= mul151_fu_1731_p2;
        tmp5_cast_reg_4753 <= tmp5_cast_fu_1787_p2;
        tmp_2_reg_4759[17 : 2] <= tmp_2_fu_1793_p3[17 : 2];
        trunc_ln3_cast54_reg_4696[7 : 0] <= trunc_ln3_cast54_fu_1754_p1[7 : 0];
        trunc_ln4_cast18_reg_4703[7 : 0] <= trunc_ln4_cast18_fu_1757_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        C_reg_4379 <= C_fu_1549_p1;
        bias_in_V_read_1_reg_4374 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        K_reg_4368 <= K_fu_1545_p1;
        bias_in_V_read_reg_4363 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        RS_reg_4434 <= RS_fu_1579_p1;
        zext_ln54_reg_4402[7 : 0] <= zext_ln54_fu_1561_p1[7 : 0];
        zext_ln56_1_reg_4412[7 : 0] <= zext_ln56_1_fu_1567_p1[7 : 0];
        zext_ln56_reg_4407[7 : 0] <= zext_ln56_fu_1564_p1[7 : 0];
        zext_ln58_reg_4418[7 : 0] <= zext_ln58_fu_1570_p1[7 : 0];
        zext_ln65_1_reg_4429[7 : 0] <= zext_ln65_1_fu_1576_p1[7 : 0];
        zext_ln65_reg_4424[7 : 0] <= zext_ln65_fu_1573_p1[7 : 0];
        zext_ln69_reg_4440[7 : 0] <= zext_ln69_fu_1583_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        WH_in_reg_4395 <= WH_in_fu_1557_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        WH_reg_4386 <= WH_fu_1553_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add107_1333_cast_reg_5077 <= grp_fu_4143_p2;
        add107_1_1_cast_reg_5092 <= grp_fu_4158_p2;
        add107_1_2_cast_reg_5057 <= grp_fu_4123_p2;
        add107_1_3_cast_reg_5097 <= grp_fu_4163_p2;
        add107_1_cast_reg_5047 <= grp_fu_4113_p2;
        add107_2341_cast_reg_5082 <= grp_fu_4148_p2;
        add107_2_1_cast_reg_5102 <= grp_fu_4168_p2;
        add107_2_2_cast_reg_5062 <= grp_fu_4128_p2;
        add107_2_3_cast_reg_5107 <= grp_fu_4173_p2;
        add107_2_cast_reg_5042 <= grp_fu_4108_p2;
        add107_3349_cast_reg_5087 <= grp_fu_4153_p2;
        add107_3_1_cast_reg_5112 <= grp_fu_4178_p2;
        add107_3_2_cast_reg_5067 <= grp_fu_4133_p2;
        add107_3_3_cast_reg_5117 <= grp_fu_4183_p2;
        add107_3_cast_reg_5052 <= grp_fu_4118_p2;
        add107_cast_reg_5072 <= grp_fu_4138_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln104_reg_5125 <= add_ln104_fu_2187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln125_5_reg_5769_pp4_iter2_reg == 1'd0) & (icmp_ln129_1_reg_5752_pp4_iter2_reg == 1'd1) & (icmp_ln125_reg_5743_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln133_1_reg_5822 <= add_ln133_1_fu_3299_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_5743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln134_reg_5807 <= add_ln134_fu_3288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        add_ln134_reg_5807_pp4_iter2_reg <= add_ln134_reg_5807;
        add_ln134_reg_5807_pp4_iter3_reg <= add_ln134_reg_5807_pp4_iter2_reg;
        add_ln134_reg_5807_pp4_iter4_reg <= add_ln134_reg_5807_pp4_iter3_reg;
        icmp_ln125_reg_5743_pp4_iter2_reg <= icmp_ln125_reg_5743_pp4_iter1_reg;
        icmp_ln125_reg_5743_pp4_iter3_reg <= icmp_ln125_reg_5743_pp4_iter2_reg;
        icmp_ln129_1_reg_5752_pp4_iter2_reg <= icmp_ln129_1_reg_5752_pp4_iter1_reg;
        icmp_ln129_1_reg_5752_pp4_iter3_reg <= icmp_ln129_1_reg_5752_pp4_iter2_reg;
        select_ln125_1_reg_5760_pp4_iter2_reg <= select_ln125_1_reg_5760_pp4_iter1_reg;
        select_ln125_1_reg_5760_pp4_iter3_reg <= select_ln125_1_reg_5760_pp4_iter2_reg;
        select_ln125_1_reg_5760_pp4_iter4_reg <= select_ln125_1_reg_5760_pp4_iter3_reg;
        select_ln125_5_reg_5769_pp4_iter2_reg <= select_ln125_5_reg_5769_pp4_iter1_reg;
        select_ln125_5_reg_5769_pp4_iter3_reg <= select_ln125_5_reg_5769_pp4_iter2_reg;
        select_ln129_reg_5781_pp4_iter2_reg <= select_ln129_reg_5781_pp4_iter1_reg;
        select_ln129_reg_5781_pp4_iter3_reg <= select_ln129_reg_5781_pp4_iter2_reg;
        trunc_ln136_reg_5787_pp4_iter2_reg <= trunc_ln136_reg_5787_pp4_iter1_reg;
        trunc_ln136_reg_5787_pp4_iter3_reg <= trunc_ln136_reg_5787_pp4_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_5743_pp4_iter3_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln135_reg_5827 <= add_ln135_fu_3337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_reg_5932 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln151_reg_5991 <= add_ln151_fu_3538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln145_reg_5932_pp5_iter1_reg == 1'd0))) begin
        add_ln153_reg_6026 <= add_ln153_fu_3605_p2;
        zext_ln163_reg_6031[8 : 0] <= zext_ln163_fu_3615_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln85_reg_4789 <= add_ln85_fu_1833_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln92_reg_4890 <= add_ln92_fu_1971_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter4 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln145_reg_5932_pp5_iter3_reg == 1'd0))) begin
        arrayidx2187_1_promoted655_fu_336 <= arrayidx2187_2_promoted683_fu_352;
        arrayidx2187_2_promoted683_fu_352 <= select_ln153_2_fu_3763_p3;
        arrayidx2187_promoted627_fu_320 <= arrayidx2187_1_promoted655_fu_336;
        psum1_1_fu_292 <= grp_fu_4235_p3;
        psum1_2_fu_304 <= grp_fu_4243_p3;
        psum1_3_fu_316 <= grp_fu_4251_p3;
        psum1_fu_280 <= grp_fu_4227_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1) & (icmp_ln145_reg_5932_pp5_iter2_reg == 1'd0))) begin
        arrayidx24011_1_promoted662_fu_340 <= arrayidx24011_2_promoted690_fu_356;
        arrayidx24011_2_promoted690_fu_356 <= select_ln153_1_fu_3688_p3;
        arrayidx24011_promoted634_fu_324 <= arrayidx24011_1_promoted662_fu_340;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln145_reg_5932_pp5_iter1_reg == 1'd0))) begin
        arrayidx26315_1_promoted669_fu_344 <= arrayidx26315_2_promoted697_fu_360;
        arrayidx26315_2_promoted697_fu_360 <= select_ln153_fu_3588_p3;
        arrayidx26315_promoted641_fu_328 <= arrayidx26315_1_promoted669_fu_344;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_reg_5932 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        arrayidx28619_1_promoted676_fu_348 <= arrayidx28619_2_promoted704_fu_364;
        arrayidx28619_2_promoted704_fu_364 <= data_l1_0_0_q0;
        arrayidx28619_promoted648_fu_332 <= arrayidx28619_1_promoted676_fu_348;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        bound148_reg_6206 <= grp_fu_4102_p2;
        icmp_ln289_reg_6211 <= icmp_ln289_fu_3935_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv79_reg_5000 <= conv79_fu_2115_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_fu_1965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        empty_44_reg_4895 <= empty_44_fu_1981_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln125_reg_5743 <= icmp_ln125_fu_3130_p2;
        icmp_ln125_reg_5743_pp4_iter1_reg <= icmp_ln125_reg_5743;
        icmp_ln129_1_reg_5752_pp4_iter1_reg <= icmp_ln129_1_reg_5752;
        select_ln125_1_reg_5760_pp4_iter1_reg <= select_ln125_1_reg_5760;
        select_ln125_5_reg_5769_pp4_iter1_reg <= select_ln125_5_reg_5769;
        select_ln129_reg_5781_pp4_iter1_reg <= select_ln129_reg_5781;
        trunc_ln136_reg_5787_pp4_iter1_reg <= trunc_ln136_reg_5787;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_3130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln129_1_reg_5752 <= icmp_ln129_1_fu_3141_p2;
        select_ln125_1_reg_5760 <= select_ln125_1_fu_3156_p3;
        select_ln125_5_reg_5769 <= select_ln125_5_fu_3180_p3;
        select_ln129_reg_5781 <= select_ln129_fu_3201_p3;
        trunc_ln136_reg_5787 <= trunc_ln136_fu_3209_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln145_reg_5932 <= icmp_ln145_fu_3436_p2;
        icmp_ln145_reg_5932_pp5_iter1_reg <= icmp_ln145_reg_5932;
        icmp_ln153_reg_5957_pp5_iter1_reg <= icmp_ln153_reg_5957;
        icmp_ln265_1_reg_5979_pp5_iter1_reg <= icmp_ln265_1_reg_5979;
        icmp_ln265_2_reg_5983_pp5_iter1_reg <= icmp_ln265_2_reg_5983;
        icmp_ln265_3_reg_5987_pp5_iter1_reg <= icmp_ln265_3_reg_5987;
        icmp_ln265_reg_5975_pp5_iter1_reg <= icmp_ln265_reg_5975;
        tmp_21_reg_5963_pp5_iter1_reg <= tmp_21_reg_5963;
        tmp_22_reg_5969_pp5_iter1_reg <= tmp_22_reg_5969;
        trunc_ln154_reg_5941_pp5_iter1_reg <= trunc_ln154_reg_5941;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        icmp_ln145_reg_5932_pp5_iter2_reg <= icmp_ln145_reg_5932_pp5_iter1_reg;
        icmp_ln145_reg_5932_pp5_iter3_reg <= icmp_ln145_reg_5932_pp5_iter2_reg;
        icmp_ln145_reg_5932_pp5_iter4_reg <= icmp_ln145_reg_5932_pp5_iter3_reg;
        icmp_ln145_reg_5932_pp5_iter5_reg <= icmp_ln145_reg_5932_pp5_iter4_reg;
        icmp_ln153_reg_5957_pp5_iter2_reg <= icmp_ln153_reg_5957_pp5_iter1_reg;
        icmp_ln265_1_reg_5979_pp5_iter2_reg <= icmp_ln265_1_reg_5979_pp5_iter1_reg;
        icmp_ln265_1_reg_5979_pp5_iter3_reg <= icmp_ln265_1_reg_5979_pp5_iter2_reg;
        icmp_ln265_1_reg_5979_pp5_iter4_reg <= icmp_ln265_1_reg_5979_pp5_iter3_reg;
        icmp_ln265_1_reg_5979_pp5_iter5_reg <= icmp_ln265_1_reg_5979_pp5_iter4_reg;
        icmp_ln265_1_reg_5979_pp5_iter6_reg <= icmp_ln265_1_reg_5979_pp5_iter5_reg;
        icmp_ln265_2_reg_5983_pp5_iter2_reg <= icmp_ln265_2_reg_5983_pp5_iter1_reg;
        icmp_ln265_2_reg_5983_pp5_iter3_reg <= icmp_ln265_2_reg_5983_pp5_iter2_reg;
        icmp_ln265_2_reg_5983_pp5_iter4_reg <= icmp_ln265_2_reg_5983_pp5_iter3_reg;
        icmp_ln265_2_reg_5983_pp5_iter5_reg <= icmp_ln265_2_reg_5983_pp5_iter4_reg;
        icmp_ln265_2_reg_5983_pp5_iter6_reg <= icmp_ln265_2_reg_5983_pp5_iter5_reg;
        icmp_ln265_3_reg_5987_pp5_iter2_reg <= icmp_ln265_3_reg_5987_pp5_iter1_reg;
        icmp_ln265_3_reg_5987_pp5_iter3_reg <= icmp_ln265_3_reg_5987_pp5_iter2_reg;
        icmp_ln265_3_reg_5987_pp5_iter4_reg <= icmp_ln265_3_reg_5987_pp5_iter3_reg;
        icmp_ln265_3_reg_5987_pp5_iter5_reg <= icmp_ln265_3_reg_5987_pp5_iter4_reg;
        icmp_ln265_3_reg_5987_pp5_iter6_reg <= icmp_ln265_3_reg_5987_pp5_iter5_reg;
        icmp_ln265_reg_5975_pp5_iter2_reg <= icmp_ln265_reg_5975_pp5_iter1_reg;
        icmp_ln265_reg_5975_pp5_iter3_reg <= icmp_ln265_reg_5975_pp5_iter2_reg;
        icmp_ln265_reg_5975_pp5_iter4_reg <= icmp_ln265_reg_5975_pp5_iter3_reg;
        icmp_ln265_reg_5975_pp5_iter5_reg <= icmp_ln265_reg_5975_pp5_iter4_reg;
        icmp_ln265_reg_5975_pp5_iter6_reg <= icmp_ln265_reg_5975_pp5_iter5_reg;
        tmp_21_reg_5963_pp5_iter2_reg <= tmp_21_reg_5963_pp5_iter1_reg;
        tmp_22_reg_5969_pp5_iter2_reg <= tmp_22_reg_5969_pp5_iter1_reg;
        tmp_22_reg_5969_pp5_iter3_reg <= tmp_22_reg_5969_pp5_iter2_reg;
        trunc_ln154_reg_5941_pp5_iter2_reg <= trunc_ln154_reg_5941_pp5_iter1_reg;
        trunc_ln154_reg_5941_pp5_iter3_reg <= trunc_ln154_reg_5941_pp5_iter2_reg;
        trunc_ln154_reg_5941_pp5_iter4_reg <= trunc_ln154_reg_5941_pp5_iter3_reg;
        trunc_ln154_reg_5941_pp5_iter5_reg <= trunc_ln154_reg_5941_pp5_iter4_reg;
        trunc_ln154_reg_5941_pp5_iter6_reg <= trunc_ln154_reg_5941_pp5_iter5_reg;
        zext_ln163_reg_6031_pp5_iter3_reg[8 : 0] <= zext_ln163_reg_6031[8 : 0];
        zext_ln163_reg_6031_pp5_iter4_reg[8 : 0] <= zext_ln163_reg_6031_pp5_iter3_reg[8 : 0];
        zext_ln163_reg_6031_pp5_iter5_reg[8 : 0] <= zext_ln163_reg_6031_pp5_iter4_reg[8 : 0];
        zext_ln163_reg_6031_pp5_iter6_reg[8 : 0] <= zext_ln163_reg_6031_pp5_iter5_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_3436_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln153_reg_5957 <= icmp_ln153_fu_3460_p2;
        icmp_ln265_1_reg_5979 <= icmp_ln265_1_fu_3511_p2;
        icmp_ln265_2_reg_5983 <= icmp_ln265_2_fu_3522_p2;
        icmp_ln265_3_reg_5987 <= icmp_ln265_3_fu_3527_p2;
        icmp_ln265_reg_5975 <= icmp_ln265_fu_3500_p2;
        tmp_21_reg_5963 <= add_ln151_1_fu_3466_p2[32'd16];
        tmp_22_reg_5969 <= add_ln151_2_fu_3480_p2[32'd16];
        trunc_ln154_reg_5941 <= trunc_ln154_fu_3451_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln287_reg_6216 <= icmp_ln287_fu_3940_p2;
        icmp_ln287_reg_6216_pp6_iter1_reg <= icmp_ln287_reg_6216;
        icmp_ln288_reg_6225_pp6_iter1_reg <= icmp_ln288_reg_6225;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln287_reg_6216_pp6_iter2_reg <= icmp_ln287_reg_6216_pp6_iter1_reg;
        icmp_ln287_reg_6216_pp6_iter3_reg <= icmp_ln287_reg_6216_pp6_iter2_reg;
        select_ln288_1_reg_6248_pp6_iter3_reg <= select_ln288_1_reg_6248;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln287_fu_3940_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln288_reg_6225 <= icmp_ln288_fu_3951_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln93_reg_5008 <= icmp_ln93_fu_2119_p2;
        select_ln93_reg_5017_pp3_iter1_reg <= select_ln93_reg_5017;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_2182_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        lshr_ln120_10_reg_5337 <= {{add_ln121_11_fu_2573_p2[10:2]}};
        lshr_ln120_11_reg_5342 <= {{add_ln121_12_fu_2589_p2[10:2]}};
        lshr_ln120_12_reg_5347 <= {{add_ln121_13_fu_2605_p2[10:2]}};
        lshr_ln120_13_reg_5352 <= {{add_ln121_14_fu_2621_p2[10:2]}};
        lshr_ln120_14_reg_5357 <= {{add_ln121_15_fu_2637_p2[10:2]}};
        lshr_ln120_2_reg_5292 <= {{add_ln121_2_fu_2429_p2[10:2]}};
        lshr_ln120_3_reg_5297 <= {{add_ln121_3_fu_2445_p2[10:2]}};
        lshr_ln120_4_reg_5302 <= {{add_ln121_4_fu_2461_p2[10:2]}};
        lshr_ln120_5_reg_5307 <= {{add_ln121_5_fu_2477_p2[10:2]}};
        lshr_ln120_6_reg_5312 <= {{add_ln121_6_fu_2493_p2[10:2]}};
        lshr_ln120_7_reg_5317 <= {{add_ln121_7_fu_2509_p2[10:2]}};
        lshr_ln120_8_reg_5322 <= {{add_ln121_8_fu_2525_p2[10:2]}};
        lshr_ln120_9_reg_5327 <= {{add_ln121_9_fu_2541_p2[10:2]}};
        lshr_ln120_s_reg_5332 <= {{add_ln121_10_fu_2557_p2[10:2]}};
        select_ln104_1_reg_5135 <= select_ln104_1_fu_2212_p3;
        select_ln104_reg_5130 <= select_ln104_fu_2198_p3;
        trunc_ln104_10_reg_5196 <= trunc_ln104_10_fu_2324_p1;
        trunc_ln104_11_reg_5201 <= trunc_ln104_11_fu_2333_p1;
        trunc_ln104_12_reg_5206 <= trunc_ln104_12_fu_2342_p1;
        trunc_ln104_13_reg_5211 <= trunc_ln104_13_fu_2351_p1;
        trunc_ln104_14_reg_5216 <= trunc_ln104_14_fu_2360_p1;
        trunc_ln104_15_reg_5221 <= trunc_ln104_15_fu_2369_p1;
        trunc_ln104_1_reg_5151 <= trunc_ln104_1_fu_2243_p1;
        trunc_ln104_2_reg_5156 <= trunc_ln104_2_fu_2252_p1;
        trunc_ln104_3_reg_5161 <= trunc_ln104_3_fu_2261_p1;
        trunc_ln104_4_reg_5166 <= trunc_ln104_4_fu_2270_p1;
        trunc_ln104_5_reg_5171 <= trunc_ln104_5_fu_2279_p1;
        trunc_ln104_6_reg_5176 <= trunc_ln104_6_fu_2288_p1;
        trunc_ln104_7_reg_5181 <= trunc_ln104_7_fu_2297_p1;
        trunc_ln104_8_reg_5186 <= trunc_ln104_8_fu_2306_p1;
        trunc_ln104_9_reg_5191 <= trunc_ln104_9_fu_2315_p1;
        trunc_ln104_reg_5146 <= trunc_ln104_fu_2234_p1;
        trunc_ln121_reg_5231 <= trunc_ln121_fu_2377_p1;
        zext_ln104_1_reg_5141[7 : 0] <= zext_ln104_1_fu_2220_p1[7 : 0];
        zext_ln106_reg_5226[7 : 0] <= zext_ln106_fu_2373_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln76_fu_1643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln1_reg_4498 <= {{k_1_reg_1292[10:2]}};
        trunc_ln78_reg_4494 <= trunc_ln78_fu_1654_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lshr_ln2_reg_4526 <= {{k_2_reg_1303[10:2]}};
        trunc_ln82_reg_4522 <= trunc_ln82_fu_1702_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_1587_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln_reg_4459 <= {{k_reg_1281[7:2]}};
        trunc_ln74_reg_4455 <= trunc_ln74_fu_1598_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul42_reg_4480 <= grp_fu_4091_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul55_reg_4508 <= grp_fu_4097_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_1828_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        mul_ln85_1_reg_4823 <= mul_ln85_1_fu_1887_p2;
        mul_ln85_2_reg_4831 <= mul_ln85_2_fu_1902_p2;
        mul_ln85_3_reg_4839 <= mul_ln85_3_fu_1917_p2;
        mul_ln85_4_reg_4847 <= mul_ln85_4_fu_1932_p2;
        mul_ln85_reg_4811 <= mul_ln85_fu_1878_p2;
        p_cast13_reg_4861[7 : 2] <= p_cast13_fu_1945_p1[7 : 2];
        p_mid_reg_4806[7 : 2] <= p_mid_fu_1866_p3[7 : 2];
        select_ln85_1_reg_4801 <= select_ln85_1_fu_1858_p3;
        select_ln85_reg_4794 <= select_ln85_fu_1844_p3;
        tmp_20_reg_4855[7 : 2] <= tmp_20_fu_1937_p3[7 : 2];
        zext_ln92_reg_4869[7 : 2] <= zext_ln92_fu_1955_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        p_cast44_reg_5852 <= p_cast44_fu_3388_p1;
        p_cast46_reg_5872 <= p_cast46_fu_3400_p1;
        p_cast48_reg_5892 <= p_cast48_fu_3412_p1;
        p_cast50_reg_5912 <= p_cast50_fu_3424_p1;
        p_cast60_reg_5857 <= p_cast60_fu_3391_p1;
        p_cast62_reg_5862 <= p_cast62_fu_3394_p1;
        p_cast64_reg_5867 <= p_cast64_fu_3397_p1;
        p_cast66_reg_5877 <= p_cast66_fu_3403_p1;
        p_cast68_reg_5882 <= p_cast68_fu_3406_p1;
        p_cast70_reg_5887 <= p_cast70_fu_3409_p1;
        p_cast72_reg_5897 <= p_cast72_fu_3415_p1;
        p_cast74_reg_5902 <= p_cast74_fu_3418_p1;
        p_cast76_reg_5907 <= p_cast76_fu_3421_p1;
        p_cast78_reg_5917 <= p_cast78_fu_3427_p1;
        p_cast80_reg_5922 <= p_cast80_fu_3430_p1;
        sext_ln145_reg_5927 <= sext_ln145_fu_3433_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        p_mid131_reg_5733 <= p_mid131_fu_3111_p2;
        tmp_16_reg_5723 <= tmp_16_fu_3075_p6;
        tmp_17_reg_5728 <= tmp_17_fu_3097_p6;
        zext_ln104_reg_5717[7 : 0] <= zext_ln104_fu_3064_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln145_reg_5932_pp5_iter4_reg == 1'd0))) begin
        psum2_1_fu_288 <= grp_fu_4267_p3;
        psum2_2_fu_300 <= grp_fu_4275_p3;
        psum2_3_fu_312 <= grp_fu_4283_p3;
        psum2_fu_276 <= grp_fu_4259_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter6 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln145_reg_5932_pp5_iter5_reg == 1'd0))) begin
        psum3_1_fu_284 <= grp_fu_4299_p3;
        psum3_2_fu_296 <= grp_fu_4307_p3;
        psum3_3_fu_308 <= grp_fu_4315_p3;
        psum3_fu_272 <= grp_fu_4291_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln287_fu_3940_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln287_1_reg_6233 <= select_ln287_1_fu_3962_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln287_reg_6216_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln288_1_reg_6248 <= select_ln288_1_fu_4040_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln93_fu_2119_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln93_1_reg_5022 <= select_ln93_1_fu_2149_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_fu_2119_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln93_reg_5017 <= select_ln93_fu_2135_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp1_reg_4469 <= tmp1_fu_1635_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_10_reg_5567 <= tmp_10_fu_2898_p6;
        tmp_11_reg_5572 <= tmp_11_fu_2920_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_12_reg_5617 <= tmp_12_fu_2956_p6;
        tmp_13_reg_5622 <= tmp_13_fu_2978_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_14_reg_5667 <= tmp_14_fu_3014_p6;
        tmp_15_reg_5672 <= tmp_15_fu_3036_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_3_reg_5367 <= tmp_3_fu_2666_p6;
        tmp_4_reg_5372 <= tmp_4_fu_2688_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_5_reg_5417 <= tmp_5_fu_2724_p6;
        tmp_6_reg_5422 <= tmp_6_fu_2746_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_7_reg_5467 <= tmp_7_fu_2782_p6;
        tmp_8_reg_5472 <= tmp_8_fu_2804_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_9_reg_5517 <= tmp_9_fu_2840_p6;
        tmp_s_reg_5522 <= tmp_s_fu_2862_p6;
    end
end

always @ (*) begin
    if ((icmp_ln72_fu_1587_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln76_fu_1643_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln80_fu_1691_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln93_fu_2119_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0))) begin
        ap_condition_pp4_exit_iter4_state45 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter4_state45 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln125_fu_3130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter4 == 1'b1) & (ap_enable_reg_pp5_iter3 == 1'b0))) begin
        ap_condition_pp5_exit_iter4_state52 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter4_state52 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln145_fu_3436_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
        ap_condition_pp5_flush_enable = 1'b1;
    end else begin
        ap_condition_pp5_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        ap_condition_pp6_exit_iter2_state62 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter2_state62 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln287_fu_3940_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
        ap_condition_pp6_flush_enable = 1'b1;
    end else begin
        ap_condition_pp6_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln93_reg_5008 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_hi_phi_fu_1373_p4 = select_ln93_1_reg_5022;
    end else begin
        ap_phi_mux_hi_phi_fu_1373_p4 = hi_reg_1369;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln287_reg_6216 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_k_3_phi_fu_1505_p4 = select_ln287_1_reg_6233;
    end else begin
        ap_phi_mux_k_3_phi_fu_1505_p4 = k_3_reg_1501;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | (~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_0_address0 = newIndex66_cast_fu_2000_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_address0 = zext_ln74_fu_1620_p1;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4455 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_1_address0 = newIndex66_cast_fu_2000_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_address0 = zext_ln74_fu_1620_p1;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4455 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_2_address0 = newIndex66_cast_fu_2000_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_address0 = zext_ln74_fu_1620_p1;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4455 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_3_address0 = newIndex66_cast_fu_2000_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_address0 = zext_ln74_fu_1620_p1;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4455 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln287_reg_6216_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln287_reg_6216_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        data_l1_0_0_address0 = zext_ln154_fu_3455_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_0_0_address0 = zext_ln134_fu_3381_p1;
    end else begin
        data_l1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l1_0_0_ce0 = 1'b1;
    end else begin
        data_l1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln125_1_reg_5760_pp4_iter4_reg == 2'd0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_0_0_we0 = 1'b1;
    end else begin
        data_l1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l1_1_0_address0 = zext_ln154_1_fu_3543_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_1_0_address0 = zext_ln134_fu_3381_p1;
    end else begin
        data_l1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l1_1_0_ce0 = 1'b1;
    end else begin
        data_l1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln125_1_reg_5760_pp4_iter4_reg == 2'd1) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_1_0_we0 = 1'b1;
    end else begin
        data_l1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l1_2_0_address0 = zext_ln154_2_fu_3600_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_2_0_address0 = zext_ln134_fu_3381_p1;
    end else begin
        data_l1_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l1_2_0_ce0 = 1'b1;
    end else begin
        data_l1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln125_1_reg_5760_pp4_iter4_reg == 2'd2) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_2_0_we0 = 1'b1;
    end else begin
        data_l1_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter3 == 1'b1))) begin
        data_l1_3_0_address0 = zext_ln154_3_fu_3695_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_3_0_address0 = zext_ln134_fu_3381_p1;
    end else begin
        data_l1_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1)) | ((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l1_3_0_ce0 = 1'b1;
    end else begin
        data_l1_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln125_1_reg_5760_pp4_iter4_reg == 2'd3) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_3_0_we0 = 1'b1;
    end else begin
        data_l1_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_0_address0 = zext_ln135_1_fu_3352_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_0_address0 = zext_ln82_fu_1724_p1;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_0_ce0 = 1'b1;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln82_reg_4522 == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_1_address0 = zext_ln135_1_fu_3352_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_1_address0 = zext_ln82_fu_1724_p1;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_1_ce0 = 1'b1;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln82_reg_4522 == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_2_address0 = zext_ln135_1_fu_3352_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_2_address0 = zext_ln82_fu_1724_p1;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_2_ce0 = 1'b1;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln82_reg_4522 == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_3_address0 = zext_ln135_1_fu_3352_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_3_address0 = zext_ln82_fu_1724_p1;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        data_l2_3_ce0 = 1'b1;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln82_reg_4522 == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        grp_fu_4355_ce = 1'b1;
    end else begin
        grp_fu_4355_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_0_address0 = zext_ln163_reg_6031_pp5_iter6_reg;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_0_address0 = zext_ln97_fu_2175_p1;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_address1 = zext_ln290_fu_4066_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_0_address1 = zext_ln163_3_fu_3643_p1;
    end else begin
        output_l1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        output_l1_0_ce0 = 1'b1;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_0_ce1 = 1'b1;
    end else begin
        output_l1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_0_d0 = grp_fu_4347_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_0_d0 = conv79_reg_5000;
    end else begin
        output_l1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4895 == 2'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln265_3_reg_5987_pp5_iter6_reg == 1'd1)))) begin
        output_l1_0_we0 = 1'b1;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_1_address0 = zext_ln272_2_fu_3925_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_1_address0 = zext_ln97_fu_2175_p1;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_address1 = zext_ln290_fu_4066_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_1_address1 = zext_ln163_2_fu_3634_p1;
    end else begin
        output_l1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        output_l1_1_ce0 = 1'b1;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_1_ce1 = 1'b1;
    end else begin
        output_l1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_1_d0 = grp_fu_4339_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_1_d0 = conv79_reg_5000;
    end else begin
        output_l1_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4895 == 2'd1) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln265_2_reg_5983_pp5_iter6_reg == 1'd1)))) begin
        output_l1_1_we0 = 1'b1;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_address0 = zext_ln272_1_fu_3910_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_2_address0 = zext_ln97_fu_2175_p1;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_address1 = zext_ln290_fu_4066_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_address1 = zext_ln163_1_fu_3625_p1;
    end else begin
        output_l1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        output_l1_2_ce0 = 1'b1;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_2_ce1 = 1'b1;
    end else begin
        output_l1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_d0 = grp_fu_4331_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_2_d0 = conv79_reg_5000;
    end else begin
        output_l1_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4895 == 2'd2) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln265_1_reg_5979_pp5_iter6_reg == 1'd1)))) begin
        output_l1_2_we0 = 1'b1;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_address0 = zext_ln272_fu_3895_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_3_address0 = zext_ln97_fu_2175_p1;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_address1 = zext_ln290_fu_4066_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_address1 = zext_ln163_fu_3615_p1;
    end else begin
        output_l1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        output_l1_3_ce0 = 1'b1;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_3_ce1 = 1'b1;
    end else begin
        output_l1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_d0 = grp_fu_4323_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_3_d0 = conv79_reg_5000;
    end else begin
        output_l1_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4895 == 2'd3) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln265_reg_5975_pp5_iter6_reg == 1'd1)))) begin
        output_l1_3_we0 = 1'b1;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address0 = zext_ln120_30_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address0 = zext_ln120_28_fu_2992_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address0 = zext_ln120_26_fu_2934_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address0 = zext_ln120_24_fu_2876_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address0 = zext_ln120_22_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address0 = zext_ln120_20_fu_2760_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address0 = zext_ln120_18_fu_2702_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address0 = zext_ln120_17_fu_2421_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = zext_ln78_fu_1676_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address1 = zext_ln120_31_fu_3057_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address1 = zext_ln120_29_fu_2999_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address1 = zext_ln120_27_fu_2941_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address1 = zext_ln120_25_fu_2883_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address1 = zext_ln120_23_fu_2825_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address1 = zext_ln120_21_fu_2767_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address1 = zext_ln120_19_fu_2709_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address1 = zext_ln120_16_fu_2397_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4494 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address0 = zext_ln120_30_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address0 = zext_ln120_28_fu_2992_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address0 = zext_ln120_26_fu_2934_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address0 = zext_ln120_24_fu_2876_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address0 = zext_ln120_22_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address0 = zext_ln120_20_fu_2760_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address0 = zext_ln120_18_fu_2702_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address0 = zext_ln120_17_fu_2421_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = zext_ln78_fu_1676_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address1 = zext_ln120_31_fu_3057_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address1 = zext_ln120_29_fu_2999_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address1 = zext_ln120_27_fu_2941_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address1 = zext_ln120_25_fu_2883_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address1 = zext_ln120_23_fu_2825_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address1 = zext_ln120_21_fu_2767_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address1 = zext_ln120_19_fu_2709_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address1 = zext_ln120_16_fu_2397_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4494 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address0 = zext_ln120_30_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address0 = zext_ln120_28_fu_2992_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address0 = zext_ln120_26_fu_2934_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address0 = zext_ln120_24_fu_2876_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address0 = zext_ln120_22_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address0 = zext_ln120_20_fu_2760_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address0 = zext_ln120_18_fu_2702_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address0 = zext_ln120_17_fu_2421_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = zext_ln78_fu_1676_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address1 = zext_ln120_31_fu_3057_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address1 = zext_ln120_29_fu_2999_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address1 = zext_ln120_27_fu_2941_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address1 = zext_ln120_25_fu_2883_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address1 = zext_ln120_23_fu_2825_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address1 = zext_ln120_21_fu_2767_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address1 = zext_ln120_19_fu_2709_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address1 = zext_ln120_16_fu_2397_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4494 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address0 = zext_ln120_30_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address0 = zext_ln120_28_fu_2992_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address0 = zext_ln120_26_fu_2934_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address0 = zext_ln120_24_fu_2876_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address0 = zext_ln120_22_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address0 = zext_ln120_20_fu_2760_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address0 = zext_ln120_18_fu_2702_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address0 = zext_ln120_17_fu_2421_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = zext_ln78_fu_1676_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address1 = zext_ln120_31_fu_3057_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address1 = zext_ln120_29_fu_2999_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address1 = zext_ln120_27_fu_2941_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address1 = zext_ln120_25_fu_2883_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address1 = zext_ln120_23_fu_2825_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address1 = zext_ln120_21_fu_2767_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address1 = zext_ln120_19_fu_2709_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address1 = zext_ln120_16_fu_2397_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4494 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln72_fu_1587_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln72_fu_1587_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln76_fu_1643_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln76_fu_1643_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln80_fu_1691_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln80_fu_1691_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln85_fu_1828_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln92_fu_1965_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln93_fu_2119_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln93_fu_2119_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln104_fu_2182_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter3 == 1'b0)) & ~((ap_enable_reg_pp5_iter7 == 1'b1) & (ap_enable_reg_pp5_iter6 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (ap_enable_reg_pp5_iter6 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter4 == 1'b1) & (ap_enable_reg_pp6_iter3 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter4 == 1'b1) & (ap_enable_reg_pp6_iter3 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_cast_fu_1778_p1 = C_reg_4379;

assign C_fu_1549_p1 = bias_in_V_dout[7:0];

assign K_fu_1545_p1 = bias_in_V_dout[7:0];

assign RS_fu_1579_p1 = bias_in_V_dout[7:0];

assign WH_cast_fu_1781_p1 = WH_reg_4386;

assign WH_fu_1553_p1 = bias_in_V_dout[7:0];

assign WH_in_fu_1557_p1 = bias_in_V_dout[7:0];

assign add_ln104_10_fu_2310_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_2_1_cast_reg_5102));

assign add_ln104_11_fu_2319_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_2_2_cast_reg_5062));

assign add_ln104_12_fu_2328_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_2_3_cast_reg_5107));

assign add_ln104_13_fu_2337_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_3_cast_reg_5052));

assign add_ln104_14_fu_2346_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_3_1_cast_reg_5112));

assign add_ln104_15_fu_2355_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_3_2_cast_reg_5067));

assign add_ln104_16_fu_2364_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_3_3_cast_reg_5117));

assign add_ln104_17_fu_2206_p2 = (8'd1 + r_reg_1402);

assign add_ln104_1_fu_2229_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_cast_reg_5072));

assign add_ln104_2_fu_2238_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_1333_cast_reg_5077));

assign add_ln104_3_fu_2247_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_2341_cast_reg_5082));

assign add_ln104_4_fu_2256_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_3349_cast_reg_5087));

assign add_ln104_5_fu_2265_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_1_cast_reg_5047));

assign add_ln104_6_fu_2274_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_1_1_cast_reg_5092));

assign add_ln104_7_fu_2283_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_1_2_cast_reg_5057));

assign add_ln104_8_fu_2292_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_1_3_cast_reg_5097));

assign add_ln104_9_fu_2301_p2 = ($signed(mul_ln104_fu_2224_p2) + $signed(add107_2_cast_reg_5042));

assign add_ln104_fu_2187_p2 = (indvar_flatten105_reg_1391 + 16'd1);

assign add_ln106_fu_3930_p2 = (select_ln104_reg_5130 + 8'd1);

assign add_ln120_10_fu_2948_p2 = (trunc_ln104_10_reg_5196 + trunc_ln121_reg_5231);

assign add_ln120_11_fu_2970_p2 = (trunc_ln104_11_reg_5201 + trunc_ln121_reg_5231);

assign add_ln120_12_fu_3006_p2 = (trunc_ln104_12_reg_5206 + trunc_ln121_reg_5231);

assign add_ln120_13_fu_3028_p2 = (trunc_ln104_13_reg_5211 + trunc_ln121_reg_5231);

assign add_ln120_14_fu_3067_p2 = (trunc_ln104_14_reg_5216 + trunc_ln121_reg_5231);

assign add_ln120_15_fu_3089_p2 = (trunc_ln104_15_reg_5221 + trunc_ln121_reg_5231);

assign add_ln120_1_fu_2680_p2 = (trunc_ln104_1_reg_5151 + trunc_ln121_reg_5231);

assign add_ln120_2_fu_2716_p2 = (trunc_ln104_2_reg_5156 + trunc_ln121_reg_5231);

assign add_ln120_3_fu_2738_p2 = (trunc_ln104_3_reg_5161 + trunc_ln121_reg_5231);

assign add_ln120_4_fu_2774_p2 = (trunc_ln104_4_reg_5166 + trunc_ln121_reg_5231);

assign add_ln120_5_fu_2796_p2 = (trunc_ln104_5_reg_5171 + trunc_ln121_reg_5231);

assign add_ln120_6_fu_2832_p2 = (trunc_ln104_6_reg_5176 + trunc_ln121_reg_5231);

assign add_ln120_7_fu_2854_p2 = (trunc_ln104_7_reg_5181 + trunc_ln121_reg_5231);

assign add_ln120_8_fu_2890_p2 = (trunc_ln104_8_reg_5186 + trunc_ln121_reg_5231);

assign add_ln120_9_fu_2912_p2 = (trunc_ln104_9_reg_5191 + trunc_ln121_reg_5231);

assign add_ln120_fu_2658_p2 = (trunc_ln104_reg_5146 + trunc_ln121_reg_5231);

assign add_ln121_10_fu_2557_p2 = (zext_ln106_fu_2373_p1 + add_ln104_11_fu_2319_p2);

assign add_ln121_11_fu_2573_p2 = (zext_ln106_fu_2373_p1 + add_ln104_12_fu_2328_p2);

assign add_ln121_12_fu_2589_p2 = (zext_ln106_fu_2373_p1 + add_ln104_13_fu_2337_p2);

assign add_ln121_13_fu_2605_p2 = (zext_ln106_fu_2373_p1 + add_ln104_14_fu_2346_p2);

assign add_ln121_14_fu_2621_p2 = (zext_ln106_fu_2373_p1 + add_ln104_15_fu_2355_p2);

assign add_ln121_15_fu_2637_p2 = (zext_ln106_fu_2373_p1 + add_ln104_16_fu_2364_p2);

assign add_ln121_1_fu_2405_p2 = (zext_ln106_fu_2373_p1 + add_ln104_2_fu_2238_p2);

assign add_ln121_2_fu_2429_p2 = (zext_ln106_fu_2373_p1 + add_ln104_3_fu_2247_p2);

assign add_ln121_3_fu_2445_p2 = (zext_ln106_fu_2373_p1 + add_ln104_4_fu_2256_p2);

assign add_ln121_4_fu_2461_p2 = (zext_ln106_fu_2373_p1 + add_ln104_5_fu_2265_p2);

assign add_ln121_5_fu_2477_p2 = (zext_ln106_fu_2373_p1 + add_ln104_6_fu_2274_p2);

assign add_ln121_6_fu_2493_p2 = (zext_ln106_fu_2373_p1 + add_ln104_7_fu_2283_p2);

assign add_ln121_7_fu_2509_p2 = (zext_ln106_fu_2373_p1 + add_ln104_8_fu_2292_p2);

assign add_ln121_8_fu_2525_p2 = (zext_ln106_fu_2373_p1 + add_ln104_9_fu_2301_p2);

assign add_ln121_9_fu_2541_p2 = (zext_ln106_fu_2373_p1 + add_ln104_10_fu_2310_p2);

assign add_ln121_fu_2381_p2 = (zext_ln106_fu_2373_p1 + add_ln104_1_fu_2229_p2);

assign add_ln125_1_fu_3146_p2 = (3'd1 + ci_reg_1435);

assign add_ln125_fu_3135_p2 = (18'd1 + indvar_flatten47_reg_1424);

assign add_ln129_1_fu_3314_p2 = (zext_ln106_reg_5226 + select_ln129_2_fu_3308_p3);

assign add_ln129_2_fu_3323_p2 = (trunc_ln129_fu_3319_p1 + trunc_ln121_reg_5231);

assign add_ln129_3_fu_3219_p2 = (indvar_flatten15_reg_1446 + 16'd1);

assign add_ln129_fu_3256_p2 = (8'd1 + select_ln125_fu_3242_p3);

assign add_ln130_fu_3213_p2 = (select_ln129_fu_3201_p3 + 8'd1);

assign add_ln133_1_fu_3299_p2 = ($signed(grp_fu_4202_p2) + $signed(p_mid131_reg_5733));

assign add_ln134_fu_3288_p2 = (select_ln129_1_fu_3271_p3 + wi_1_cast58_fu_3285_p1);

assign add_ln135_fu_3337_p2 = (add_ln129_2_fu_3323_p2 + trunc_ln136_reg_5787_pp4_iter3_reg);

assign add_ln136_fu_3331_p2 = (wi_1_cast_fu_3328_p1 + add_ln129_1_fu_3314_p2);

assign add_ln145_fu_3441_p2 = (i_reg_1479 + 16'd1);

assign add_ln151_1_fu_3466_p2 = ($signed(17'd131070) + $signed(zext_ln145_fu_3447_p1));

assign add_ln151_2_fu_3480_p2 = ($signed(17'd131069) + $signed(zext_ln145_fu_3447_p1));

assign add_ln151_3_fu_3595_p2 = ($signed(9'd510) + $signed(trunc_ln154_reg_5941_pp5_iter1_reg));

assign add_ln151_fu_3538_p2 = ($signed(9'd511) + $signed(trunc_ln154_reg_5941));

assign add_ln153_fu_3605_p2 = ($signed(9'd509) + $signed(trunc_ln154_reg_5941_pp5_iter1_reg));

assign add_ln163_1_fu_3620_p2 = (mul_ln85_reg_4811 + add_ln151_3_fu_3595_p2);

assign add_ln163_2_fu_3630_p2 = (mul_ln85_reg_4811 + add_ln151_reg_5991);

assign add_ln163_3_fu_3639_p2 = (mul_ln85_reg_4811 + trunc_ln154_reg_5941_pp5_iter1_reg);

assign add_ln163_fu_3610_p2 = (mul_ln85_reg_4811 + add_ln153_fu_3605_p2);

assign add_ln265_1_fu_3505_p2 = ($signed(zext_ln145_fu_3447_p1) + $signed(17'd131067));

assign add_ln265_2_fu_3516_p2 = ($signed(zext_ln145_fu_3447_p1) + $signed(17'd131068));

assign add_ln265_3_fu_3885_p2 = ($signed(9'd506) + $signed(trunc_ln154_reg_5941_pp5_iter6_reg));

assign add_ln265_4_fu_3900_p2 = ($signed(trunc_ln154_reg_5941_pp5_iter6_reg) + $signed(9'd507));

assign add_ln265_5_fu_3915_p2 = ($signed(trunc_ln154_reg_5941_pp5_iter6_reg) + $signed(9'd508));

assign add_ln265_fu_3494_p2 = ($signed(17'd131066) + $signed(zext_ln145_fu_3447_p1));

assign add_ln273_1_fu_3905_p2 = (add_ln265_4_fu_3900_p2 + mul_ln85_reg_4811);

assign add_ln273_2_fu_3920_p2 = (add_ln265_5_fu_3915_p2 + mul_ln85_reg_4811);

assign add_ln273_fu_3890_p2 = (add_ln265_3_fu_3885_p2 + mul_ln85_reg_4811);

assign add_ln287_1_fu_3956_p2 = (6'd1 + ap_phi_mux_k_3_phi_fu_1505_p4);

assign add_ln287_fu_3945_p2 = (indvar_flatten160_reg_1490 + 24'd1);

assign add_ln288_1_fu_3974_p2 = (19'd1 + indvar_flatten143_reg_1512);

assign add_ln288_fu_4017_p2 = (3'd1 + select_ln287_fu_3988_p3);

assign add_ln289_fu_4060_p2 = (16'd1 + select_ln288_fu_4028_p3);

assign add_ln72_fu_1592_p2 = (k_reg_1281 + 8'd1);

assign add_ln76_fu_1648_p2 = (k_1_reg_1292 + 32'd1);

assign add_ln80_fu_1696_p2 = (k_2_reg_1303 + 24'd1);

assign add_ln85_1_fu_1852_p2 = (ko_reg_1325 + 6'd1);

assign add_ln85_fu_1833_p2 = (indvar_flatten136_reg_1314 + 12'd1);

assign add_ln86_fu_2653_p2 = (select_ln85_reg_4794 + 6'd1);

assign add_ln92_fu_1971_p2 = (ki_1_reg_1347 + 3'd1);

assign add_ln93_1_fu_2143_p2 = (ap_phi_mux_hi_phi_fu_1373_p4 + 8'd1);

assign add_ln93_fu_2124_p2 = (indvar_flatten_reg_1358 + 16'd1);

assign add_ln94_fu_2161_p2 = (select_ln93_fu_2135_p3 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1 = ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4 = ((1'b1 == ap_block_pp4_stage0_subdone) & (ap_ST_fsm_pp4_stage0 == ap_CS_fsm));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5 = ((1'b1 == ap_block_pp5_stage0_subdone) & (ap_ST_fsm_pp5_stage0 == ap_CS_fsm));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6 = ((1'b1 == ap_block_pp6_stage0_subdone) & (ap_ST_fsm_pp6_stage0 == ap_CS_fsm));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln287_reg_6216_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln287_reg_6216_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln287_reg_6216_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp1_stage0_iter1 = (weight_in_V_empty_n == 1'b0);
end

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp2_stage0_iter1 = (data_in_V_empty_n == 1'b0);
end

assign ap_block_state24_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state64_pp6_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln287_reg_6216_pp6_iter3_reg == 1'd0));
end

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (bias_in_V_empty_n == 1'b0);
end

always @ (*) begin
    ap_enable_operation_1000 = (ap_predicate_op1000_load_state51 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_1002 = (icmp_ln145_reg_5932_pp5_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_1139 = (icmp_ln265_reg_5975_pp5_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1145 = (icmp_ln265_1_reg_5979_pp5_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1151 = (icmp_ln265_2_reg_5983_pp5_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1154 = (icmp_ln265_3_reg_5987_pp5_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_960 = (ap_predicate_op960_load_state50 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_964 = (ap_predicate_op964_load_state50 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_968 = (ap_predicate_op968_load_state50 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_972 = (icmp_ln145_reg_5932_pp5_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_996 = (ap_predicate_op996_load_state51 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_998 = (ap_predicate_op998_load_state51 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

always @ (*) begin
    ap_enable_state50_pp5_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state51_pp5_iter3_stage0 = ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter3 == 1'b1));
end

always @ (*) begin
    ap_enable_state55_pp5_iter7_stage0 = ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1));
end

always @ (*) begin
    ap_predicate_op1000_load_state51 = ((icmp_ln153_reg_5957_pp5_iter2_reg == 1'd1) & (icmp_ln145_reg_5932_pp5_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op960_load_state50 = ((tmp_22_reg_5969_pp5_iter1_reg == 1'd0) & (icmp_ln145_reg_5932_pp5_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op964_load_state50 = ((tmp_21_reg_5963_pp5_iter1_reg == 1'd0) & (icmp_ln145_reg_5932_pp5_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op968_load_state50 = ((icmp_ln153_reg_5957_pp5_iter1_reg == 1'd1) & (icmp_ln145_reg_5932_pp5_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op996_load_state51 = ((tmp_22_reg_5969_pp5_iter2_reg == 1'd0) & (icmp_ln145_reg_5932_pp5_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op998_load_state51 = ((tmp_21_reg_5963_pp5_iter2_reg == 1'd0) & (icmp_ln145_reg_5932_pp5_iter2_reg == 1'd0));
end

assign bound110_fu_1813_p0 = bound110_fu_1813_p00;

assign bound110_fu_1813_p00 = div68_cast_fu_1760_p4;

assign bound110_fu_1813_p1 = bound110_fu_1813_p10;

assign bound110_fu_1813_p10 = div66_cast_fu_1769_p4;

assign bound20_fu_1801_p1 = tmp_2_fu_1793_p3;

assign conv79_fu_2115_p1 = $signed(tmp_1_fu_2101_p6);

assign conv_out_V_din = p_Repl2_s_fu_4073_p6;

assign div66_cast_fu_1769_p4 = {{bias_in_V_read_reg_4363[7:2]}};

assign div68_cast_fu_1760_p4 = {{bias_in_V_read_1_reg_4374[7:2]}};

assign empty_41_fu_1784_p1 = tmp1_reg_4469[10:0];

assign empty_42_fu_1819_p1 = mul151_fu_1731_p2[8:0];

assign empty_44_fu_1981_p1 = ki_1_reg_1347[1:0];

assign empty_45_fu_1985_p2 = (p_mid_reg_4806 + zext_ln92_1_fu_1977_p1);

assign empty_47_fu_2008_p2 = (tmp_20_reg_4855 | 8'd1);

assign empty_48_fu_2017_p2 = (tmp_20_reg_4855 | 8'd2);

assign empty_49_fu_3115_p1 = ci_reg_1435[1:0];

assign empty_53_fu_3152_p1 = add_ln125_1_fu_3146_p2[1:0];

assign empty_57_fu_1949_p2 = (tmp_20_fu_1937_p3 | 8'd3);

assign grp_fu_4091_p0 = grp_fu_4091_p00;

assign grp_fu_4091_p00 = tmp1_fu_1635_p2;

assign grp_fu_4091_p1 = grp_fu_4091_p10;

assign grp_fu_4091_p10 = tmp_fu_1627_p2;

assign grp_fu_4097_p0 = grp_fu_4097_p00;

assign grp_fu_4097_p00 = tmp2_fu_1683_p2;

assign grp_fu_4097_p1 = zext_ln65_reg_4424;

assign grp_fu_4102_p0 = grp_fu_4102_p00;

assign grp_fu_4102_p00 = div66_cast_reg_4713;

assign grp_fu_4102_p1 = grp_fu_4102_p10;

assign grp_fu_4102_p10 = tmp_2_reg_4759;

assign grp_fu_4108_p0 = (p_cast13_reg_4861 + mul_ln85_3_reg_4839);

assign grp_fu_4113_p0 = (p_cast13_reg_4861 + mul_ln85_2_reg_4831);

assign grp_fu_4118_p0 = (p_cast13_reg_4861 + mul_ln85_4_reg_4847);

assign grp_fu_4123_p0 = (p_cast14_fu_2022_p1 + mul_ln85_2_reg_4831);

assign grp_fu_4128_p0 = (p_cast14_fu_2022_p1 + mul_ln85_3_reg_4839);

assign grp_fu_4133_p0 = (p_cast14_fu_2022_p1 + mul_ln85_4_reg_4847);

assign grp_fu_4138_p0 = (p_cast13_reg_4861 + mul_ln85_1_reg_4823);

assign grp_fu_4143_p0 = (p_cast15_fu_2013_p1 + mul_ln85_1_reg_4823);

assign grp_fu_4148_p0 = (p_cast14_fu_2022_p1 + mul_ln85_1_reg_4823);

assign grp_fu_4153_p0 = (zext_ln92_reg_4869 + mul_ln85_1_reg_4823);

assign grp_fu_4158_p0 = (p_cast15_fu_2013_p1 + mul_ln85_2_reg_4831);

assign grp_fu_4163_p0 = (zext_ln92_reg_4869 + mul_ln85_2_reg_4831);

assign grp_fu_4168_p0 = (p_cast15_fu_2013_p1 + mul_ln85_3_reg_4839);

assign grp_fu_4173_p0 = (zext_ln92_reg_4869 + mul_ln85_3_reg_4839);

assign grp_fu_4178_p0 = (p_cast15_fu_2013_p1 + mul_ln85_4_reg_4847);

assign grp_fu_4183_p0 = (zext_ln92_reg_4869 + mul_ln85_4_reg_4847);

assign grp_fu_4188_p0 = grp_fu_4188_p00;

assign grp_fu_4188_p00 = select_ln93_1_fu_2149_p3;

assign grp_fu_4188_p1 = WH_cast_reg_4726;

assign grp_fu_4188_p2 = (wi_cast_fu_2167_p1 + mul_ln85_reg_4811);

assign grp_fu_4196_p1 = grp_fu_4196_p10;

assign grp_fu_4196_p10 = tmp_18_fu_3119_p3;

assign grp_fu_4202_p1 = grp_fu_4202_p10;

assign grp_fu_4202_p10 = tmp_19_mid1_fu_3164_p3;

assign grp_fu_4209_p0 = zext_ln104_reg_5717;

assign grp_fu_4209_p1 = zext_ln129_fu_3233_p1;

assign grp_fu_4209_p2 = trunc_ln3_cast54_reg_4696;

assign grp_fu_4218_p0 = zext_ln104_reg_5717;

assign grp_fu_4218_p1 = zext_ln129_1_fu_3262_p1;

assign grp_fu_4218_p2 = trunc_ln3_cast54_reg_4696;

assign grp_fu_4218_p3 = ((icmp_ln129_1_reg_5752_pp4_iter2_reg[0:0] === 1'b1) ? grp_fu_4202_p2 : grp_fu_4196_p2);

assign grp_fu_4227_p1 = p_cast64_reg_5867;

assign grp_fu_4227_p2 = ((tmp_22_reg_5969_pp5_iter2_reg[0:0] === 1'b1) ? 32'd0 : output_l1_3_q1);

assign grp_fu_4235_p1 = p_cast70_reg_5887;

assign grp_fu_4235_p2 = ((tmp_21_reg_5963_pp5_iter2_reg[0:0] === 1'b1) ? 32'd0 : output_l1_2_q1);

assign grp_fu_4243_p1 = p_cast76_reg_5907;

assign grp_fu_4243_p2 = ((icmp_ln153_reg_5957_pp5_iter2_reg[0:0] === 1'b1) ? output_l1_1_q1 : 32'd0);

assign grp_fu_4251_p1 = sext_ln145_reg_5927;

assign grp_fu_4259_p1 = p_cast62_reg_5862;

assign grp_fu_4267_p1 = p_cast68_reg_5882;

assign grp_fu_4275_p1 = p_cast74_reg_5902;

assign grp_fu_4283_p1 = p_cast80_reg_5922;

assign grp_fu_4291_p1 = p_cast60_reg_5857;

assign grp_fu_4299_p1 = p_cast66_reg_5877;

assign grp_fu_4307_p1 = p_cast72_reg_5897;

assign grp_fu_4315_p1 = p_cast78_reg_5917;

assign grp_fu_4323_p0 = p_cast44_reg_5852;

assign grp_fu_4331_p0 = p_cast46_reg_5872;

assign grp_fu_4339_p0 = p_cast48_reg_5892;

assign grp_fu_4347_p0 = p_cast50_reg_5912;

assign grp_fu_4355_p0 = grp_fu_4355_p00;

assign grp_fu_4355_p00 = select_ln287_1_fu_3962_p3;

assign grp_fu_4355_p2 = select_ln288_fu_4028_p3[8:0];

assign icmp_ln104_fu_2182_p2 = ((indvar_flatten105_reg_1391 == tmp1_reg_4469) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_2193_p2 = ((s_reg_1413 == RS_reg_4434) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_3130_p2 = ((indvar_flatten47_reg_1424 == tmp_2_reg_4759) ? 1'b1 : 1'b0);

assign icmp_ln129_1_fu_3141_p2 = ((indvar_flatten15_reg_1446 == mul151_reg_4675) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_1823_p2 = ((WH_reg_4386 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_3175_p2 = ((wi_1_reg_1457 == WH_reg_4386) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_3436_p2 = ((i_reg_1479 == input_rows_reg_4691) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_3460_p2 = ((i_reg_1479 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln265_1_fu_3511_p2 = ((add_ln265_1_fu_3505_p2 < mul151_cast51_reg_4683) ? 1'b1 : 1'b0);

assign icmp_ln265_2_fu_3522_p2 = ((add_ln265_2_fu_3516_p2 < mul151_cast51_reg_4683) ? 1'b1 : 1'b0);

assign icmp_ln265_3_fu_3527_p2 = ((add_ln151_2_fu_3480_p2 < mul151_cast51_reg_4683) ? 1'b1 : 1'b0);

assign icmp_ln265_fu_3500_p2 = ((add_ln265_fu_3494_p2 < mul151_cast51_reg_4683) ? 1'b1 : 1'b0);

assign icmp_ln287_fu_3940_p2 = ((indvar_flatten160_reg_1490 == bound148_reg_6206) ? 1'b1 : 1'b0);

assign icmp_ln288_fu_3951_p2 = ((indvar_flatten143_reg_1512 == bound20_reg_4765) ? 1'b1 : 1'b0);

assign icmp_ln289_1_fu_4006_p2 = ((wh_reg_1534 == mul151_reg_4675) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_3935_p2 = ((mul151_reg_4675 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_1587_p2 = ((k_reg_1281 == K_reg_4368) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_1643_p2 = ((k_1_reg_1292 == mul42_reg_4480) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_1691_p2 = ((k_2_reg_1303 == mul55_reg_4508) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_1828_p2 = ((indvar_flatten136_reg_1314 == bound110_reg_4770) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_1839_p2 = ((co_reg_1336 == div68_cast_reg_4708) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_1965_p2 = ((ki_1_reg_1347 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_2119_p2 = ((indvar_flatten_reg_1358 == mul151_reg_4675) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_2130_p2 = ((wi_reg_1380 == WH_reg_4386) ? 1'b1 : 1'b0);

assign input_rows_fu_1748_p2 = (tmp3_cast_fu_1744_p1 + mul151_fu_1731_p2);

assign lshr_ln120_1_fu_2411_p4 = {{add_ln121_1_fu_2405_p2[10:2]}};

assign lshr_ln3_fu_2387_p4 = {{add_ln121_fu_2381_p2[10:2]}};

assign lshr_ln4_fu_3342_p4 = {{add_ln136_fu_3331_p2[10:2]}};

assign mul151_cast51_fu_1735_p1 = mul151_fu_1731_p2;

assign mul151_fu_1731_p0 = zext_ln58_reg_4418;

assign mul151_fu_1731_p1 = zext_ln58_reg_4418;

assign mul_ln104_fu_2224_p0 = mul_ln104_fu_2224_p00;

assign mul_ln104_fu_2224_p00 = select_ln104_1_fu_2212_p3;

assign mul_ln104_fu_2224_p1 = trunc_ln4_cast18_reg_4703;

assign mul_ln133_1_fu_3266_p0 = WH_cast_reg_4726;

assign mul_ln133_1_fu_3266_p1 = zext_ln129_1_fu_3262_p1;

assign mul_ln133_fu_3237_p0 = WH_cast_reg_4726;

assign mul_ln133_fu_3237_p1 = zext_ln129_fu_3233_p1;

assign mul_ln85_1_fu_1887_p0 = C_cast_reg_4718;

assign mul_ln85_1_fu_1887_p1 = mul_ln85_1_fu_1887_p10;

assign mul_ln85_1_fu_1887_p10 = p_mid_fu_1866_p3;

assign mul_ln85_2_fu_1902_p0 = C_cast_reg_4718;

assign mul_ln85_2_fu_1902_p1 = mul_ln85_2_fu_1902_p10;

assign mul_ln85_2_fu_1902_p10 = or_ln85_fu_1892_p2;

assign mul_ln85_3_fu_1917_p0 = C_cast_reg_4718;

assign mul_ln85_3_fu_1917_p1 = mul_ln85_3_fu_1917_p10;

assign mul_ln85_3_fu_1917_p10 = or_ln85_1_fu_1907_p2;

assign mul_ln85_4_fu_1932_p0 = C_cast_reg_4718;

assign mul_ln85_4_fu_1932_p1 = mul_ln85_4_fu_1932_p10;

assign mul_ln85_4_fu_1932_p10 = or_ln85_2_fu_1922_p2;

assign mul_ln85_fu_1878_p1 = mul_ln85_fu_1878_p10;

assign mul_ln85_fu_1878_p10 = select_ln85_1_fu_1858_p3;

assign newIndex66_cast_fu_2000_p1 = newIndex_fu_1990_p4;

assign newIndex_fu_1990_p4 = {{empty_45_fu_1985_p2[7:2]}};

assign or_ln129_fu_3195_p2 = (select_ln125_5_fu_3180_p3 | icmp_ln129_1_fu_3141_p2);

assign or_ln288_fu_4023_p2 = (select_ln287_3_fu_4011_p3 | icmp_ln288_reg_6225_pp6_iter1_reg);

assign or_ln85_1_fu_1907_p2 = (p_mid_fu_1866_p3 | 8'd2);

assign or_ln85_2_fu_1922_p2 = (p_mid_fu_1866_p3 | 8'd3);

assign or_ln85_fu_1892_p2 = (p_mid_fu_1866_p3 | 8'd1);

assign p_cast13_fu_1945_p1 = tmp_20_fu_1937_p3;

assign p_cast14_fu_2022_p1 = empty_48_fu_2017_p2;

assign p_cast15_fu_2013_p1 = empty_47_fu_2008_p2;

assign p_cast44_fu_3388_p1 = $signed(tmp_17_reg_5728);

assign p_cast46_fu_3400_p1 = $signed(tmp_13_reg_5622);

assign p_cast48_fu_3412_p1 = $signed(tmp_s_reg_5522);

assign p_cast50_fu_3424_p1 = $signed(tmp_6_reg_5422);

assign p_cast60_fu_3391_p1 = $signed(tmp_16_reg_5723);

assign p_cast62_fu_3394_p1 = $signed(tmp_15_reg_5672);

assign p_cast64_fu_3397_p1 = $signed(tmp_14_reg_5667);

assign p_cast66_fu_3403_p1 = $signed(tmp_12_reg_5617);

assign p_cast68_fu_3406_p1 = $signed(tmp_11_reg_5572);

assign p_cast70_fu_3409_p1 = $signed(tmp_10_reg_5567);

assign p_cast72_fu_3415_p1 = $signed(tmp_9_reg_5517);

assign p_cast74_fu_3418_p1 = $signed(tmp_8_reg_5472);

assign p_cast76_fu_3421_p1 = $signed(tmp_7_reg_5467);

assign p_cast78_fu_3427_p1 = $signed(tmp_5_reg_5417);

assign p_cast80_fu_3430_p1 = $signed(tmp_4_reg_5372);

assign p_mid131_fu_3111_p0 = trunc_ln3_cast54_reg_4696;

assign p_mid131_fu_3111_p1 = zext_ln104_1_reg_5141;

assign p_mid_fu_1866_p3 = {{select_ln85_1_fu_1858_p3}, {2'd0}};

assign select_ln104_1_fu_2212_p3 = ((icmp_ln106_fu_2193_p2[0:0] === 1'b1) ? add_ln104_17_fu_2206_p2 : r_reg_1402);

assign select_ln104_fu_2198_p3 = ((icmp_ln106_fu_2193_p2[0:0] === 1'b1) ? 8'd0 : s_reg_1413);

assign select_ln125_1_fu_3156_p3 = ((icmp_ln129_1_fu_3141_p2[0:0] === 1'b1) ? empty_53_fu_3152_p1 : empty_49_fu_3115_p1);

assign select_ln125_3_fu_3249_p3 = ((icmp_ln129_1_reg_5752[0:0] === 1'b1) ? 9'd0 : mul_ln133_fu_3237_p2);

assign select_ln125_4_fu_3303_p3 = ((icmp_ln129_1_reg_5752_pp4_iter3_reg[0:0] === 1'b1) ? add_ln133_1_reg_5822 : grp_fu_4209_p4);

assign select_ln125_5_fu_3180_p3 = ((icmp_ln129_1_fu_3141_p2[0:0] === 1'b1) ? icmp_ln129_reg_4781 : icmp_ln130_fu_3175_p2);

assign select_ln125_6_fu_3187_p3 = ((icmp_ln129_1_fu_3141_p2[0:0] === 1'b1) ? add_ln125_1_fu_3146_p2 : ci_reg_1435);

assign select_ln125_fu_3242_p3 = ((icmp_ln129_1_reg_5752[0:0] === 1'b1) ? 8'd0 : hi_1_reg_1468);

assign select_ln129_1_fu_3271_p3 = ((select_ln125_5_reg_5769[0:0] === 1'b1) ? mul_ln133_1_fu_3266_p2 : select_ln125_3_fu_3249_p3);

assign select_ln129_2_fu_3308_p3 = ((select_ln125_5_reg_5769_pp4_iter3_reg[0:0] === 1'b1) ? grp_fu_4218_p4 : select_ln125_4_fu_3303_p3);

assign select_ln129_3_fu_3278_p3 = ((select_ln125_5_reg_5769[0:0] === 1'b1) ? add_ln129_fu_3256_p2 : select_ln125_fu_3242_p3);

assign select_ln129_4_fu_3225_p3 = ((icmp_ln129_1_fu_3141_p2[0:0] === 1'b1) ? 16'd1 : add_ln129_3_fu_3219_p2);

assign select_ln129_fu_3201_p3 = ((or_ln129_fu_3195_p2[0:0] === 1'b1) ? 8'd0 : wi_1_reg_1457);

assign select_ln153_1_fu_3688_p3 = ((tmp_21_reg_5963_pp5_iter2_reg[0:0] === 1'b1) ? 8'd0 : data_l1_2_0_q0);

assign select_ln153_2_fu_3763_p3 = ((tmp_22_reg_5969_pp5_iter3_reg[0:0] === 1'b1) ? 8'd0 : data_l1_3_0_q0);

assign select_ln153_fu_3588_p3 = ((icmp_ln153_reg_5957_pp5_iter1_reg[0:0] === 1'b1) ? data_l1_1_0_q0 : 8'd0);

assign select_ln287_1_fu_3962_p3 = ((icmp_ln288_fu_3951_p2[0:0] === 1'b1) ? add_ln287_1_fu_3956_p2 : ap_phi_mux_k_3_phi_fu_1505_p4);

assign select_ln287_2_fu_3999_p3 = ((icmp_ln288_reg_6225_pp6_iter1_reg[0:0] === 1'b1) ? 2'd0 : trunc_ln290_fu_3995_p1);

assign select_ln287_3_fu_4011_p3 = ((icmp_ln288_reg_6225_pp6_iter1_reg[0:0] === 1'b1) ? icmp_ln289_reg_6211 : icmp_ln289_1_fu_4006_p2);

assign select_ln287_fu_3988_p3 = ((icmp_ln288_reg_6225_pp6_iter1_reg[0:0] === 1'b1) ? 3'd0 : ki_reg_1523);

assign select_ln288_1_fu_4040_p3 = ((select_ln287_3_fu_4011_p3[0:0] === 1'b1) ? trunc_ln290_1_fu_4036_p1 : select_ln287_2_fu_3999_p3);

assign select_ln288_2_fu_4048_p3 = ((select_ln287_3_fu_4011_p3[0:0] === 1'b1) ? add_ln288_fu_4017_p2 : select_ln287_fu_3988_p3);

assign select_ln288_3_fu_3980_p3 = ((icmp_ln288_fu_3951_p2[0:0] === 1'b1) ? 19'd1 : add_ln288_1_fu_3974_p2);

assign select_ln288_fu_4028_p3 = ((or_ln288_fu_4023_p2[0:0] === 1'b1) ? 16'd0 : wh_reg_1534);

assign select_ln85_1_fu_1858_p3 = ((icmp_ln86_fu_1839_p2[0:0] === 1'b1) ? add_ln85_1_fu_1852_p2 : ko_reg_1325);

assign select_ln85_fu_1844_p3 = ((icmp_ln86_fu_1839_p2[0:0] === 1'b1) ? 6'd0 : co_reg_1336);

assign select_ln93_1_fu_2149_p3 = ((icmp_ln94_fu_2130_p2[0:0] === 1'b1) ? add_ln93_1_fu_2143_p2 : ap_phi_mux_hi_phi_fu_1373_p4);

assign select_ln93_fu_2135_p3 = ((icmp_ln94_fu_2130_p2[0:0] === 1'b1) ? 8'd0 : wi_reg_1380);

assign sext_ln145_fu_3433_p1 = $signed(tmp_3_reg_5367);

assign tmp1_fu_1635_p0 = zext_ln69_reg_4440;

assign tmp1_fu_1635_p1 = zext_ln69_reg_4440;

assign tmp2_fu_1683_p0 = zext_ln56_1_reg_4412;

assign tmp2_fu_1683_p1 = zext_ln65_1_reg_4429;

assign tmp3_cast_fu_1744_p1 = tmp3_fu_1739_p2;

assign tmp3_fu_1739_p2 = (9'd6 + zext_ln56_reg_4407);

assign tmp5_cast_fu_1787_p0 = trunc_ln3_cast54_fu_1754_p1;

assign tmp5_cast_fu_1787_p1 = trunc_ln3_cast54_fu_1754_p1;

assign tmp_10_fu_2898_p5 = add_ln120_8_fu_2890_p2;

assign tmp_11_fu_2920_p5 = add_ln120_9_fu_2912_p2;

assign tmp_12_fu_2956_p5 = add_ln120_10_fu_2948_p2;

assign tmp_13_fu_2978_p5 = add_ln120_11_fu_2970_p2;

assign tmp_14_fu_3014_p5 = add_ln120_12_fu_3006_p2;

assign tmp_15_fu_3036_p5 = add_ln120_13_fu_3028_p2;

assign tmp_16_fu_3075_p5 = add_ln120_14_fu_3067_p2;

assign tmp_17_fu_3097_p5 = add_ln120_15_fu_3089_p2;

assign tmp_18_fu_3119_p3 = {{select_ln85_reg_4794}, {empty_49_fu_3115_p1}};

assign tmp_19_fu_3363_p5 = add_ln135_reg_5827;

assign tmp_19_mid1_fu_3164_p3 = {{select_ln85_reg_4794}, {empty_53_fu_3152_p1}};

assign tmp_1_fu_2101_p5 = empty_44_reg_4895;

assign tmp_20_fu_1937_p3 = {{select_ln85_fu_1844_p3}, {2'd0}};

assign tmp_2_fu_1793_p3 = {{mul151_fu_1731_p2}, {2'd0}};

assign tmp_3_fu_2666_p5 = add_ln120_fu_2658_p2;

assign tmp_4_fu_2688_p5 = add_ln120_1_fu_2680_p2;

assign tmp_5_fu_2724_p5 = add_ln120_2_fu_2716_p2;

assign tmp_6_fu_2746_p5 = add_ln120_3_fu_2738_p2;

assign tmp_7_fu_2782_p5 = add_ln120_4_fu_2774_p2;

assign tmp_8_fu_2804_p5 = add_ln120_5_fu_2796_p2;

assign tmp_9_fu_2840_p5 = add_ln120_6_fu_2832_p2;

assign tmp_fu_1627_p0 = zext_ln56_1_reg_4412;

assign tmp_fu_1627_p1 = zext_ln54_reg_4402;

assign tmp_s_fu_2862_p5 = add_ln120_7_fu_2854_p2;

assign trunc_ln104_10_fu_2324_p1 = add_ln104_11_fu_2319_p2[1:0];

assign trunc_ln104_11_fu_2333_p1 = add_ln104_12_fu_2328_p2[1:0];

assign trunc_ln104_12_fu_2342_p1 = add_ln104_13_fu_2337_p2[1:0];

assign trunc_ln104_13_fu_2351_p1 = add_ln104_14_fu_2346_p2[1:0];

assign trunc_ln104_14_fu_2360_p1 = add_ln104_15_fu_2355_p2[1:0];

assign trunc_ln104_15_fu_2369_p1 = add_ln104_16_fu_2364_p2[1:0];

assign trunc_ln104_1_fu_2243_p1 = add_ln104_2_fu_2238_p2[1:0];

assign trunc_ln104_2_fu_2252_p1 = add_ln104_3_fu_2247_p2[1:0];

assign trunc_ln104_3_fu_2261_p1 = add_ln104_4_fu_2256_p2[1:0];

assign trunc_ln104_4_fu_2270_p1 = add_ln104_5_fu_2265_p2[1:0];

assign trunc_ln104_5_fu_2279_p1 = add_ln104_6_fu_2274_p2[1:0];

assign trunc_ln104_6_fu_2288_p1 = add_ln104_7_fu_2283_p2[1:0];

assign trunc_ln104_7_fu_2297_p1 = add_ln104_8_fu_2292_p2[1:0];

assign trunc_ln104_8_fu_2306_p1 = add_ln104_9_fu_2301_p2[1:0];

assign trunc_ln104_9_fu_2315_p1 = add_ln104_10_fu_2310_p2[1:0];

assign trunc_ln104_fu_2234_p1 = add_ln104_1_fu_2229_p2[1:0];

assign trunc_ln121_fu_2377_p1 = select_ln104_fu_2198_p3[1:0];

assign trunc_ln129_fu_3319_p1 = select_ln129_2_fu_3308_p3[1:0];

assign trunc_ln136_fu_3209_p1 = select_ln129_fu_3201_p3[1:0];

assign trunc_ln154_fu_3451_p1 = i_reg_1479[8:0];

assign trunc_ln290_1_fu_4036_p1 = add_ln288_fu_4017_p2[1:0];

assign trunc_ln290_fu_3995_p1 = ki_reg_1523[1:0];

assign trunc_ln3_cast54_fu_1754_p1 = WH_in_reg_4395;

assign trunc_ln4_cast18_fu_1757_p1 = RS_reg_4434;

assign trunc_ln708_1_fu_1668_p1 = weight_in_V_dout[7:0];

assign trunc_ln708_2_fu_1716_p1 = data_in_V_dout[7:0];

assign trunc_ln708_fu_1612_p1 = bias_in_V_dout[7:0];

assign trunc_ln74_fu_1598_p1 = k_reg_1281[1:0];

assign trunc_ln78_fu_1654_p1 = k_1_reg_1292[1:0];

assign trunc_ln82_fu_1702_p1 = k_2_reg_1303[1:0];

assign wi_1_cast58_fu_3285_p1 = select_ln129_reg_5781;

assign wi_1_cast_fu_3328_p1 = select_ln129_reg_5781_pp4_iter3_reg;

assign wi_cast_fu_2167_p1 = select_ln93_reg_5017_pp3_iter1_reg;

assign zext_ln104_1_fu_2220_p1 = select_ln104_1_fu_2212_p3;

assign zext_ln104_fu_3064_p1 = select_ln104_1_reg_5135;

assign zext_ln106_fu_2373_p1 = select_ln104_fu_2198_p3;

assign zext_ln120_16_fu_2397_p1 = lshr_ln3_fu_2387_p4;

assign zext_ln120_17_fu_2421_p1 = lshr_ln120_1_fu_2411_p4;

assign zext_ln120_18_fu_2702_p1 = lshr_ln120_2_reg_5292;

assign zext_ln120_19_fu_2709_p1 = lshr_ln120_3_reg_5297;

assign zext_ln120_20_fu_2760_p1 = lshr_ln120_4_reg_5302;

assign zext_ln120_21_fu_2767_p1 = lshr_ln120_5_reg_5307;

assign zext_ln120_22_fu_2818_p1 = lshr_ln120_6_reg_5312;

assign zext_ln120_23_fu_2825_p1 = lshr_ln120_7_reg_5317;

assign zext_ln120_24_fu_2876_p1 = lshr_ln120_8_reg_5322;

assign zext_ln120_25_fu_2883_p1 = lshr_ln120_9_reg_5327;

assign zext_ln120_26_fu_2934_p1 = lshr_ln120_s_reg_5332;

assign zext_ln120_27_fu_2941_p1 = lshr_ln120_10_reg_5337;

assign zext_ln120_28_fu_2992_p1 = lshr_ln120_11_reg_5342;

assign zext_ln120_29_fu_2999_p1 = lshr_ln120_12_reg_5347;

assign zext_ln120_30_fu_3050_p1 = lshr_ln120_13_reg_5352;

assign zext_ln120_31_fu_3057_p1 = lshr_ln120_14_reg_5357;

assign zext_ln129_1_fu_3262_p1 = add_ln129_fu_3256_p2;

assign zext_ln129_fu_3233_p1 = hi_1_reg_1468;

assign zext_ln134_fu_3381_p1 = add_ln134_reg_5807_pp4_iter4_reg;

assign zext_ln135_1_fu_3352_p1 = lshr_ln4_fu_3342_p4;

assign zext_ln145_fu_3447_p1 = i_reg_1479;

assign zext_ln154_1_fu_3543_p1 = add_ln151_fu_3538_p2;

assign zext_ln154_2_fu_3600_p1 = add_ln151_3_fu_3595_p2;

assign zext_ln154_3_fu_3695_p1 = add_ln153_reg_6026;

assign zext_ln154_fu_3455_p1 = i_reg_1479;

assign zext_ln163_1_fu_3625_p1 = add_ln163_1_fu_3620_p2;

assign zext_ln163_2_fu_3634_p1 = add_ln163_2_fu_3630_p2;

assign zext_ln163_3_fu_3643_p1 = add_ln163_3_fu_3639_p2;

assign zext_ln163_fu_3615_p1 = add_ln163_fu_3610_p2;

assign zext_ln272_1_fu_3910_p1 = add_ln273_1_fu_3905_p2;

assign zext_ln272_2_fu_3925_p1 = add_ln273_2_fu_3920_p2;

assign zext_ln272_fu_3895_p1 = add_ln273_fu_3890_p2;

assign zext_ln290_fu_4066_p1 = $unsigned(grp_fu_4355_p3);

assign zext_ln54_fu_1561_p1 = K_reg_4368;

assign zext_ln56_1_fu_1567_p1 = C_reg_4379;

assign zext_ln56_fu_1564_p1 = C_reg_4379;

assign zext_ln58_fu_1570_p1 = WH_reg_4386;

assign zext_ln65_1_fu_1576_p1 = WH_in_reg_4395;

assign zext_ln65_fu_1573_p1 = WH_in_reg_4395;

assign zext_ln69_fu_1583_p1 = RS_fu_1579_p1;

assign zext_ln74_fu_1620_p1 = lshr_ln_reg_4459;

assign zext_ln78_fu_1676_p1 = lshr_ln1_reg_4498;

assign zext_ln82_fu_1724_p1 = lshr_ln2_reg_4526;

assign zext_ln92_1_fu_1977_p1 = ki_1_reg_1347;

assign zext_ln92_fu_1955_p1 = empty_57_fu_1949_p2;

assign zext_ln97_fu_2175_p1 = grp_fu_4188_p3;

always @ (posedge ap_clk) begin
    zext_ln54_reg_4402[15:8] <= 8'b00000000;
    zext_ln56_reg_4407[8] <= 1'b0;
    zext_ln56_1_reg_4412[15:8] <= 8'b00000000;
    zext_ln58_reg_4418[15:8] <= 8'b00000000;
    zext_ln65_reg_4424[23:8] <= 16'b0000000000000000;
    zext_ln65_1_reg_4429[15:8] <= 8'b00000000;
    zext_ln69_reg_4440[15:8] <= 8'b00000000;
    mul151_cast51_reg_4683[16] <= 1'b0;
    trunc_ln3_cast54_reg_4696[10:8] <= 3'b000;
    trunc_ln4_cast18_reg_4703[10:8] <= 3'b000;
    C_cast_reg_4718[10:8] <= 3'b000;
    WH_cast_reg_4726[8] <= 1'b0;
    tmp_2_reg_4759[1:0] <= 2'b00;
    bound20_reg_4765[1:0] <= 2'b00;
    bound20_reg_4765[18] <= 1'b0;
    p_mid_reg_4806[1:0] <= 2'b00;
    tmp_20_reg_4855[1:0] <= 2'b00;
    p_cast13_reg_4861[1:0] <= 2'b00;
    p_cast13_reg_4861[10:8] <= 3'b000;
    zext_ln92_reg_4869[1:0] <= 2'b11;
    zext_ln92_reg_4869[10:8] <= 3'b000;
    zext_ln104_1_reg_5141[10:8] <= 3'b000;
    zext_ln106_reg_5226[10:8] <= 3'b000;
    zext_ln104_reg_5717[8] <= 1'b0;
    zext_ln163_reg_6031[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln163_reg_6031_pp5_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln163_reg_6031_pp5_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln163_reg_6031_pp5_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln163_reg_6031_pp5_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //Conv_sysarr_dbbuf
