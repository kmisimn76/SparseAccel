// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_dbbuf_Conv_sysarr_dbbuf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.186000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=4327,HLS_SYN_LUT=5726,HLS_VERSION=2020_1}" *)

module Conv_sysarr_dbbuf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 43'd1;
parameter    ap_ST_fsm_state2 = 43'd2;
parameter    ap_ST_fsm_state3 = 43'd4;
parameter    ap_ST_fsm_state4 = 43'd8;
parameter    ap_ST_fsm_state5 = 43'd16;
parameter    ap_ST_fsm_pp0_stage0 = 43'd32;
parameter    ap_ST_fsm_state8 = 43'd64;
parameter    ap_ST_fsm_state9 = 43'd128;
parameter    ap_ST_fsm_state10 = 43'd256;
parameter    ap_ST_fsm_state11 = 43'd512;
parameter    ap_ST_fsm_pp1_stage0 = 43'd1024;
parameter    ap_ST_fsm_state14 = 43'd2048;
parameter    ap_ST_fsm_state15 = 43'd4096;
parameter    ap_ST_fsm_state16 = 43'd8192;
parameter    ap_ST_fsm_state17 = 43'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 43'd32768;
parameter    ap_ST_fsm_state20 = 43'd65536;
parameter    ap_ST_fsm_state21 = 43'd131072;
parameter    ap_ST_fsm_state22 = 43'd262144;
parameter    ap_ST_fsm_state23 = 43'd524288;
parameter    ap_ST_fsm_pp3_stage0 = 43'd1048576;
parameter    ap_ST_fsm_state28 = 43'd2097152;
parameter    ap_ST_fsm_state29 = 43'd4194304;
parameter    ap_ST_fsm_state30 = 43'd8388608;
parameter    ap_ST_fsm_state31 = 43'd16777216;
parameter    ap_ST_fsm_state32 = 43'd33554432;
parameter    ap_ST_fsm_state33 = 43'd67108864;
parameter    ap_ST_fsm_state34 = 43'd134217728;
parameter    ap_ST_fsm_state35 = 43'd268435456;
parameter    ap_ST_fsm_state36 = 43'd536870912;
parameter    ap_ST_fsm_state37 = 43'd1073741824;
parameter    ap_ST_fsm_state38 = 43'd2147483648;
parameter    ap_ST_fsm_state39 = 43'd4294967296;
parameter    ap_ST_fsm_state40 = 43'd8589934592;
parameter    ap_ST_fsm_pp4_stage0 = 43'd17179869184;
parameter    ap_ST_fsm_state47 = 43'd34359738368;
parameter    ap_ST_fsm_pp5_stage0 = 43'd68719476736;
parameter    ap_ST_fsm_state56 = 43'd137438953472;
parameter    ap_ST_fsm_state57 = 43'd274877906944;
parameter    ap_ST_fsm_state58 = 43'd549755813888;
parameter    ap_ST_fsm_state59 = 43'd1099511627776;
parameter    ap_ST_fsm_pp6_stage0 = 43'd2199023255552;
parameter    ap_ST_fsm_state65 = 43'd4398046511104;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [63:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [63:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [63:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] output_reg_3_2;
reg   [31:0] output_reg_3_1;
reg   [31:0] output_reg_3_0;
reg   [31:0] output_reg_2_2;
reg   [31:0] output_reg_2_1;
reg   [31:0] output_reg_2_0;
reg   [31:0] output_reg_1_2;
reg   [31:0] output_reg_1_1;
reg   [31:0] output_reg_1_0;
reg   [31:0] output_reg_0_2;
reg   [31:0] output_reg_0_1;
reg   [31:0] output_reg_0_0;
reg   [8:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
reg   [31:0] output_l1_3_d0;
reg   [8:0] output_l1_3_address1;
reg    output_l1_3_ce1;
wire   [31:0] output_l1_3_q1;
reg   [8:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
reg   [31:0] output_l1_2_d0;
reg   [8:0] output_l1_2_address1;
reg    output_l1_2_ce1;
wire   [31:0] output_l1_2_q1;
reg   [8:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
reg   [31:0] output_l1_1_d0;
reg   [8:0] output_l1_1_address1;
reg    output_l1_1_ce1;
wire   [31:0] output_l1_1_q1;
reg   [8:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
reg   [31:0] output_l1_0_d0;
reg   [8:0] output_l1_0_address1;
reg    output_l1_0_ce1;
wire   [31:0] output_l1_0_q1;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    weight_in_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp6_iter4;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln283_reg_6332;
reg   [0:0] icmp_ln283_reg_6332_pp6_iter3_reg;
reg   [7:0] k_reg_1265;
reg   [31:0] k_1_reg_1276;
reg   [23:0] k_2_reg_1287;
reg   [15:0] indvar_flatten_reg_1342;
reg   [7:0] hi_reg_1353;
reg   [7:0] wi_reg_1364;
reg   [17:0] indvar_flatten47_reg_1408;
reg   [2:0] ci_reg_1419;
reg   [15:0] indvar_flatten15_reg_1430;
reg   [7:0] wi_1_reg_1441;
reg   [7:0] hi_1_reg_1452;
reg   [15:0] i_reg_1463;
reg   [31:0] psum1_3_reg_1474;
reg   [31:0] psum2_3_reg_1484;
reg   [31:0] psum3_3_reg_1494;
reg   [31:0] psum1_2_reg_1504;
reg   [31:0] psum2_2_reg_1514;
reg   [31:0] psum3_2_reg_1524;
reg   [31:0] psum1_1_reg_1534;
reg   [31:0] psum2_1_reg_1544;
reg   [31:0] psum3_1_reg_1554;
reg   [31:0] psum1_reg_1564;
reg   [31:0] psum2_reg_1574;
reg   [31:0] psum3_reg_1584;
reg   [23:0] indvar_flatten160_reg_1594;
reg   [5:0] k_3_reg_1605;
reg   [18:0] indvar_flatten143_reg_1616;
reg   [2:0] ki_reg_1627;
reg   [15:0] wh_reg_1638;
reg   [63:0] bias_in_V_read_reg_4491;
reg    ap_block_state1;
wire   [7:0] K_fu_1649_p1;
reg   [7:0] K_reg_4496;
reg   [63:0] bias_in_V_read_1_reg_4502;
wire   [7:0] C_fu_1653_p1;
reg   [7:0] C_reg_4507;
wire   [7:0] WH_fu_1657_p1;
reg   [7:0] WH_reg_4514;
wire   [7:0] WH_in_fu_1661_p1;
reg   [7:0] WH_in_reg_4523;
wire   [15:0] zext_ln54_fu_1665_p1;
reg   [15:0] zext_ln54_reg_4530;
wire   [8:0] zext_ln56_fu_1668_p1;
reg   [8:0] zext_ln56_reg_4535;
wire   [15:0] zext_ln56_1_fu_1671_p1;
reg   [15:0] zext_ln56_1_reg_4540;
wire   [15:0] zext_ln58_fu_1674_p1;
reg   [15:0] zext_ln58_reg_4546;
wire   [23:0] zext_ln62_fu_1677_p1;
reg   [23:0] zext_ln62_reg_4552;
wire   [15:0] zext_ln62_1_fu_1680_p1;
reg   [15:0] zext_ln62_1_reg_4557;
wire   [7:0] RS_fu_1683_p1;
reg   [7:0] RS_reg_4562;
wire   [15:0] zext_ln66_fu_1687_p1;
reg   [15:0] zext_ln66_reg_4568;
wire   [0:0] icmp_ln69_fu_1691_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln69_fu_1696_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln71_fu_1702_p1;
reg   [1:0] trunc_ln71_reg_4583;
reg   [5:0] lshr_ln_reg_4587;
wire    ap_CS_fsm_state8;
wire   [15:0] tmp1_fu_1739_p2;
reg   [15:0] tmp1_reg_4597;
wire   [31:0] grp_fu_4231_p2;
reg   [31:0] mul42_reg_4608;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln73_fu_1747_p2;
wire    ap_block_state12_pp1_stage0_iter0;
reg    ap_block_state13_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [31:0] add_ln73_fu_1752_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln75_fu_1758_p1;
reg   [1:0] trunc_ln75_reg_4622;
reg   [8:0] lshr_ln1_reg_4626;
wire    ap_CS_fsm_state14;
wire   [23:0] grp_fu_4237_p2;
reg   [23:0] mul55_reg_4636;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln77_fu_1795_p2;
wire    ap_block_state18_pp2_stage0_iter0;
reg    ap_block_state19_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [23:0] add_ln77_fu_1800_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] trunc_ln79_fu_1806_p1;
reg   [1:0] trunc_ln79_reg_4650;
reg   [8:0] lshr_ln2_reg_4654;
wire   [15:0] mul151_fu_1835_p2;
reg   [15:0] mul151_reg_4731;
wire    ap_CS_fsm_state20;
wire   [16:0] mul151_cast51_fu_1839_p1;
reg   [16:0] mul151_cast51_reg_4739;
wire   [15:0] input_rows_fu_1852_p2;
reg   [15:0] input_rows_reg_4747;
wire   [10:0] trunc_ln3_cast54_fu_1858_p1;
reg   [10:0] trunc_ln3_cast54_reg_4752;
wire   [10:0] trunc_ln4_cast18_fu_1861_p1;
reg   [10:0] trunc_ln4_cast18_reg_4759;
wire   [5:0] div68_cast_fu_1864_p4;
reg   [5:0] div68_cast_reg_4764;
wire   [5:0] div66_cast_fu_1873_p4;
reg   [5:0] div66_cast_reg_4769;
wire   [10:0] C_cast_fu_1882_p1;
reg   [10:0] C_cast_reg_4774;
wire   [8:0] WH_cast_fu_1885_p1;
reg   [8:0] WH_cast_reg_4782;
wire  signed [10:0] empty_41_fu_1888_p1;
reg  signed [10:0] empty_41_reg_4789;
wire  signed [10:0] tmp5_cast_fu_1891_p2;
reg  signed [10:0] tmp5_cast_reg_4809;
wire   [17:0] tmp_2_fu_1897_p3;
reg   [17:0] tmp_2_reg_4815;
wire   [18:0] bound20_fu_1905_p1;
reg   [18:0] bound20_reg_4821;
wire   [11:0] bound110_fu_1917_p2;
reg   [11:0] bound110_reg_4826;
wire  signed [8:0] empty_42_fu_1923_p1;
reg  signed [8:0] empty_42_reg_4831;
wire   [0:0] icmp_ln124_fu_1927_p2;
reg   [0:0] icmp_ln124_reg_4837;
wire   [11:0] add_ln82_fu_1937_p2;
reg   [11:0] add_ln82_reg_4845;
wire    ap_CS_fsm_state21;
wire   [5:0] select_ln82_fu_1948_p3;
reg   [5:0] select_ln82_reg_4850;
wire   [0:0] icmp_ln82_fu_1932_p2;
wire   [5:0] select_ln82_1_fu_1962_p3;
reg   [5:0] select_ln82_1_reg_4857;
wire   [7:0] p_mid_fu_1970_p3;
reg   [7:0] p_mid_reg_4862;
wire   [8:0] mul_ln82_fu_1982_p2;
reg   [8:0] mul_ln82_reg_4867;
wire   [10:0] mul_ln82_1_fu_1991_p2;
reg   [10:0] mul_ln82_1_reg_4879;
wire   [10:0] mul_ln82_2_fu_2006_p2;
reg   [10:0] mul_ln82_2_reg_4887;
wire   [10:0] mul_ln82_3_fu_2021_p2;
reg   [10:0] mul_ln82_3_reg_4895;
wire   [10:0] mul_ln82_4_fu_2036_p2;
reg   [10:0] mul_ln82_4_reg_4903;
wire   [7:0] tmp_20_fu_2041_p3;
reg   [7:0] tmp_20_reg_4911;
wire   [10:0] p_cast13_fu_2049_p1;
reg   [10:0] p_cast13_reg_4917;
wire   [10:0] zext_ln89_fu_2059_p1;
reg   [10:0] zext_ln89_reg_4925;
wire   [2:0] add_ln89_fu_2075_p2;
reg   [2:0] add_ln89_reg_4946;
wire    ap_CS_fsm_state22;
wire   [1:0] empty_44_fu_2085_p1;
reg   [1:0] empty_44_reg_4951;
wire   [0:0] icmp_ln89_fu_2069_p2;
wire  signed [31:0] conv79_fu_2219_p1;
reg  signed [31:0] conv79_reg_5056;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln90_fu_2223_p2;
reg   [0:0] icmp_ln90_reg_5064;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state24_pp3_stage0_iter0;
wire    ap_block_state25_pp3_stage0_iter1;
wire    ap_block_state26_pp3_stage0_iter2;
wire    ap_block_state27_pp3_stage0_iter3;
wire    ap_block_pp3_stage0_11001;
wire   [15:0] add_ln90_fu_2228_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [7:0] select_ln90_fu_2239_p3;
reg   [7:0] select_ln90_reg_5073;
reg   [7:0] select_ln90_reg_5073_pp3_iter1_reg;
wire   [7:0] select_ln90_1_fu_2253_p3;
reg   [7:0] select_ln90_1_reg_5078;
wire   [7:0] add_ln91_fu_2265_p2;
wire  signed [10:0] grp_fu_4248_p2;
reg  signed [10:0] add107_2_cast_reg_5098;
wire    ap_CS_fsm_state31;
wire  signed [10:0] grp_fu_4253_p2;
reg  signed [10:0] add107_1_cast_reg_5103;
wire  signed [10:0] grp_fu_4258_p2;
reg  signed [10:0] add107_3_cast_reg_5108;
wire  signed [10:0] grp_fu_4263_p2;
reg  signed [10:0] add107_1_2_cast_reg_5113;
wire  signed [10:0] grp_fu_4268_p2;
reg  signed [10:0] add107_2_2_cast_reg_5118;
wire  signed [10:0] grp_fu_4273_p2;
reg  signed [10:0] add107_3_2_cast_reg_5123;
wire  signed [10:0] grp_fu_4278_p2;
reg  signed [10:0] add107_cast_reg_5128;
wire  signed [10:0] grp_fu_4283_p2;
reg  signed [10:0] add107_1333_cast_reg_5133;
wire  signed [10:0] grp_fu_4288_p2;
reg  signed [10:0] add107_2341_cast_reg_5138;
wire  signed [10:0] grp_fu_4293_p2;
reg  signed [10:0] add107_3349_cast_reg_5143;
wire  signed [10:0] grp_fu_4298_p2;
reg  signed [10:0] add107_1_1_cast_reg_5148;
wire  signed [10:0] grp_fu_4303_p2;
reg  signed [10:0] add107_1_3_cast_reg_5153;
wire  signed [10:0] grp_fu_4308_p2;
reg  signed [10:0] add107_2_1_cast_reg_5158;
wire  signed [10:0] grp_fu_4313_p2;
reg  signed [10:0] add107_2_3_cast_reg_5163;
wire  signed [10:0] grp_fu_4318_p2;
reg  signed [10:0] add107_3_1_cast_reg_5168;
wire  signed [10:0] grp_fu_4323_p2;
reg  signed [10:0] add107_3_3_cast_reg_5173;
wire   [15:0] add_ln101_fu_2291_p2;
reg   [15:0] add_ln101_reg_5181;
wire    ap_CS_fsm_state32;
wire   [7:0] select_ln101_fu_2302_p3;
reg   [7:0] select_ln101_reg_5186;
wire   [0:0] icmp_ln101_fu_2286_p2;
wire   [7:0] select_ln101_1_fu_2316_p3;
reg   [7:0] select_ln101_1_reg_5191;
wire   [10:0] zext_ln101_1_fu_2324_p1;
reg   [10:0] zext_ln101_1_reg_5197;
wire   [1:0] trunc_ln101_fu_2338_p1;
reg   [1:0] trunc_ln101_reg_5202;
wire   [1:0] trunc_ln101_1_fu_2347_p1;
reg   [1:0] trunc_ln101_1_reg_5207;
wire   [1:0] trunc_ln101_2_fu_2356_p1;
reg   [1:0] trunc_ln101_2_reg_5212;
wire   [1:0] trunc_ln101_3_fu_2365_p1;
reg   [1:0] trunc_ln101_3_reg_5217;
wire   [1:0] trunc_ln101_4_fu_2374_p1;
reg   [1:0] trunc_ln101_4_reg_5222;
wire   [1:0] trunc_ln101_5_fu_2383_p1;
reg   [1:0] trunc_ln101_5_reg_5227;
wire   [1:0] trunc_ln101_6_fu_2392_p1;
reg   [1:0] trunc_ln101_6_reg_5232;
wire   [1:0] trunc_ln101_7_fu_2401_p1;
reg   [1:0] trunc_ln101_7_reg_5237;
wire   [1:0] trunc_ln101_8_fu_2410_p1;
reg   [1:0] trunc_ln101_8_reg_5242;
wire   [1:0] trunc_ln101_9_fu_2419_p1;
reg   [1:0] trunc_ln101_9_reg_5247;
wire   [1:0] trunc_ln101_10_fu_2428_p1;
reg   [1:0] trunc_ln101_10_reg_5252;
wire   [1:0] trunc_ln101_11_fu_2437_p1;
reg   [1:0] trunc_ln101_11_reg_5257;
wire   [1:0] trunc_ln101_12_fu_2446_p1;
reg   [1:0] trunc_ln101_12_reg_5262;
wire   [1:0] trunc_ln101_13_fu_2455_p1;
reg   [1:0] trunc_ln101_13_reg_5267;
wire   [1:0] trunc_ln101_14_fu_2464_p1;
reg   [1:0] trunc_ln101_14_reg_5272;
wire   [1:0] trunc_ln101_15_fu_2473_p1;
reg   [1:0] trunc_ln101_15_reg_5277;
wire   [10:0] zext_ln103_fu_2477_p1;
reg   [10:0] zext_ln103_reg_5282;
wire   [1:0] trunc_ln118_fu_2481_p1;
reg   [1:0] trunc_ln118_reg_5287;
reg   [8:0] lshr_ln117_2_reg_5348;
reg   [8:0] lshr_ln117_3_reg_5353;
reg   [8:0] lshr_ln117_4_reg_5358;
reg   [8:0] lshr_ln117_5_reg_5363;
reg   [8:0] lshr_ln117_6_reg_5368;
reg   [8:0] lshr_ln117_7_reg_5373;
reg   [8:0] lshr_ln117_8_reg_5378;
reg   [8:0] lshr_ln117_9_reg_5383;
reg   [8:0] lshr_ln117_s_reg_5388;
reg   [8:0] lshr_ln117_10_reg_5393;
reg   [8:0] lshr_ln117_11_reg_5398;
reg   [8:0] lshr_ln117_12_reg_5403;
reg   [8:0] lshr_ln117_13_reg_5408;
reg   [8:0] lshr_ln117_14_reg_5413;
wire   [5:0] add_ln83_fu_2757_p2;
wire   [7:0] tmp_3_fu_2770_p6;
reg   [7:0] tmp_3_reg_5423;
wire    ap_CS_fsm_state33;
wire   [7:0] tmp_4_fu_2792_p6;
reg   [7:0] tmp_4_reg_5428;
wire   [7:0] tmp_5_fu_2828_p6;
reg   [7:0] tmp_5_reg_5473;
wire    ap_CS_fsm_state34;
wire   [7:0] tmp_6_fu_2850_p6;
reg   [7:0] tmp_6_reg_5478;
wire   [7:0] tmp_7_fu_2886_p6;
reg   [7:0] tmp_7_reg_5523;
wire    ap_CS_fsm_state35;
wire   [7:0] tmp_8_fu_2908_p6;
reg   [7:0] tmp_8_reg_5528;
wire   [7:0] tmp_9_fu_2944_p6;
reg   [7:0] tmp_9_reg_5573;
wire    ap_CS_fsm_state36;
wire   [7:0] tmp_s_fu_2966_p6;
reg   [7:0] tmp_s_reg_5578;
wire   [7:0] tmp_10_fu_3002_p6;
reg   [7:0] tmp_10_reg_5623;
wire    ap_CS_fsm_state37;
wire   [7:0] tmp_11_fu_3024_p6;
reg   [7:0] tmp_11_reg_5628;
wire   [7:0] tmp_12_fu_3060_p6;
reg   [7:0] tmp_12_reg_5673;
wire    ap_CS_fsm_state38;
wire   [7:0] tmp_13_fu_3082_p6;
reg   [7:0] tmp_13_reg_5678;
wire   [7:0] tmp_14_fu_3118_p6;
reg   [7:0] tmp_14_reg_5723;
wire    ap_CS_fsm_state39;
wire   [7:0] tmp_15_fu_3140_p6;
reg   [7:0] tmp_15_reg_5728;
wire   [8:0] zext_ln101_fu_3168_p1;
reg   [8:0] zext_ln101_reg_5773;
wire    ap_CS_fsm_state40;
wire   [7:0] tmp_16_fu_3179_p6;
reg   [7:0] tmp_16_reg_5779;
wire   [7:0] tmp_17_fu_3201_p6;
reg   [7:0] tmp_17_reg_5784;
wire   [10:0] p_mid131_fu_3215_p2;
reg   [10:0] p_mid131_reg_5789;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state41_pp4_stage0_iter0;
wire    ap_block_state42_pp4_stage0_iter1;
wire    ap_block_state43_pp4_stage0_iter2;
wire    ap_block_state44_pp4_stage0_iter3;
wire    ap_block_state45_pp4_stage0_iter4;
wire    ap_block_state46_pp4_stage0_iter5;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln122_fu_3234_p2;
reg   [0:0] icmp_ln122_reg_5799;
reg   [0:0] icmp_ln122_reg_5799_pp4_iter1_reg;
reg   [0:0] icmp_ln122_reg_5799_pp4_iter2_reg;
reg   [0:0] icmp_ln122_reg_5799_pp4_iter3_reg;
wire   [17:0] add_ln122_fu_3239_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln124_1_fu_3245_p2;
reg   [0:0] icmp_ln124_1_reg_5808;
reg   [0:0] icmp_ln124_1_reg_5808_pp4_iter1_reg;
reg   [0:0] icmp_ln124_1_reg_5808_pp4_iter2_reg;
reg   [0:0] icmp_ln124_1_reg_5808_pp4_iter3_reg;
wire   [1:0] select_ln122_1_fu_3260_p3;
reg   [1:0] select_ln122_1_reg_5816;
reg   [1:0] select_ln122_1_reg_5816_pp4_iter1_reg;
reg   [1:0] select_ln122_1_reg_5816_pp4_iter2_reg;
reg   [1:0] select_ln122_1_reg_5816_pp4_iter3_reg;
reg   [1:0] select_ln122_1_reg_5816_pp4_iter4_reg;
wire   [0:0] select_ln122_5_fu_3284_p3;
reg   [0:0] select_ln122_5_reg_5825;
reg   [0:0] select_ln122_5_reg_5825_pp4_iter1_reg;
reg   [0:0] select_ln122_5_reg_5825_pp4_iter2_reg;
reg   [0:0] select_ln122_5_reg_5825_pp4_iter3_reg;
wire   [2:0] select_ln122_6_fu_3291_p3;
wire   [7:0] select_ln124_fu_3305_p3;
reg   [7:0] select_ln124_reg_5837;
reg   [7:0] select_ln124_reg_5837_pp4_iter1_reg;
reg   [7:0] select_ln124_reg_5837_pp4_iter2_reg;
reg   [7:0] select_ln124_reg_5837_pp4_iter3_reg;
wire   [1:0] trunc_ln131_fu_3313_p1;
reg   [1:0] trunc_ln131_reg_5843;
reg   [1:0] trunc_ln131_reg_5843_pp4_iter1_reg;
reg   [1:0] trunc_ln131_reg_5843_pp4_iter2_reg;
reg   [1:0] trunc_ln131_reg_5843_pp4_iter3_reg;
wire   [7:0] add_ln125_fu_3317_p2;
wire   [15:0] select_ln124_4_fu_3329_p3;
wire   [7:0] select_ln124_3_fu_3382_p3;
reg    ap_enable_reg_pp4_iter1;
wire   [8:0] add_ln129_fu_3392_p2;
reg   [8:0] add_ln129_reg_5863;
reg   [8:0] add_ln129_reg_5863_pp4_iter2_reg;
reg   [8:0] add_ln129_reg_5863_pp4_iter3_reg;
reg   [8:0] add_ln129_reg_5863_pp4_iter4_reg;
wire  signed [10:0] grp_fu_4336_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln128_1_fu_3403_p2;
reg   [10:0] add_ln128_1_reg_5878;
wire   [1:0] add_ln130_fu_3441_p2;
reg   [1:0] add_ln130_reg_5883;
wire  signed [15:0] p_cast44_fu_3492_p1;
reg  signed [15:0] p_cast44_reg_5908;
wire    ap_CS_fsm_state47;
wire  signed [15:0] p_cast60_fu_3495_p1;
reg  signed [15:0] p_cast60_reg_5913;
wire  signed [15:0] p_cast62_fu_3498_p1;
reg  signed [15:0] p_cast62_reg_5918;
wire  signed [15:0] p_cast64_fu_3501_p1;
reg  signed [15:0] p_cast64_reg_5923;
wire  signed [15:0] p_cast46_fu_3504_p1;
reg  signed [15:0] p_cast46_reg_5928;
wire  signed [15:0] p_cast66_fu_3507_p1;
reg  signed [15:0] p_cast66_reg_5933;
wire  signed [15:0] p_cast68_fu_3510_p1;
reg  signed [15:0] p_cast68_reg_5938;
wire  signed [15:0] p_cast70_fu_3513_p1;
reg  signed [15:0] p_cast70_reg_5943;
wire  signed [15:0] p_cast48_fu_3516_p1;
reg  signed [15:0] p_cast48_reg_5948;
wire  signed [15:0] p_cast72_fu_3519_p1;
reg  signed [15:0] p_cast72_reg_5953;
wire  signed [15:0] p_cast74_fu_3522_p1;
reg  signed [15:0] p_cast74_reg_5958;
wire  signed [15:0] p_cast76_fu_3525_p1;
reg  signed [15:0] p_cast76_reg_5963;
wire  signed [15:0] p_cast50_fu_3528_p1;
reg  signed [15:0] p_cast50_reg_5968;
wire  signed [15:0] p_cast78_fu_3531_p1;
reg  signed [15:0] p_cast78_reg_5973;
wire  signed [15:0] p_cast80_fu_3534_p1;
reg  signed [15:0] p_cast80_reg_5978;
wire  signed [15:0] sext_ln182_fu_3537_p1;
reg  signed [15:0] sext_ln182_reg_5983;
wire   [0:0] icmp_ln140_fu_3588_p2;
reg   [0:0] icmp_ln140_reg_6048;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state48_pp5_stage0_iter0;
wire    ap_block_state49_pp5_stage0_iter1;
wire    ap_block_state50_pp5_stage0_iter2;
wire    ap_block_state51_pp5_stage0_iter3;
wire    ap_block_state52_pp5_stage0_iter4;
wire    ap_block_state53_pp5_stage0_iter5;
wire    ap_block_state54_pp5_stage0_iter6;
wire    ap_block_state55_pp5_stage0_iter7;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln140_reg_6048_pp5_iter1_reg;
reg   [0:0] icmp_ln140_reg_6048_pp5_iter2_reg;
reg   [0:0] icmp_ln140_reg_6048_pp5_iter3_reg;
reg   [0:0] icmp_ln140_reg_6048_pp5_iter4_reg;
reg   [0:0] icmp_ln140_reg_6048_pp5_iter5_reg;
reg   [0:0] icmp_ln140_reg_6048_pp5_iter6_reg;
wire   [15:0] add_ln140_fu_3593_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [8:0] trunc_ln149_fu_3603_p1;
reg   [8:0] trunc_ln149_reg_6057;
reg   [8:0] trunc_ln149_reg_6057_pp5_iter1_reg;
reg   [8:0] trunc_ln149_reg_6057_pp5_iter2_reg;
reg   [8:0] trunc_ln149_reg_6057_pp5_iter3_reg;
reg   [8:0] trunc_ln149_reg_6057_pp5_iter4_reg;
reg   [8:0] trunc_ln149_reg_6057_pp5_iter5_reg;
reg   [8:0] trunc_ln149_reg_6057_pp5_iter6_reg;
wire   [0:0] icmp_ln148_fu_3612_p2;
reg   [0:0] icmp_ln148_reg_6073;
reg   [0:0] icmp_ln148_reg_6073_pp5_iter1_reg;
reg   [0:0] icmp_ln148_reg_6073_pp5_iter2_reg;
reg   [0:0] tmp_21_reg_6079;
reg   [0:0] tmp_21_reg_6079_pp5_iter1_reg;
reg   [0:0] tmp_21_reg_6079_pp5_iter2_reg;
reg   [0:0] tmp_22_reg_6085;
reg   [0:0] tmp_22_reg_6085_pp5_iter1_reg;
reg   [0:0] tmp_22_reg_6085_pp5_iter2_reg;
reg   [0:0] tmp_22_reg_6085_pp5_iter3_reg;
wire   [0:0] icmp_ln261_fu_3652_p2;
reg   [0:0] icmp_ln261_reg_6091;
reg   [0:0] icmp_ln261_reg_6091_pp5_iter1_reg;
reg   [0:0] icmp_ln261_reg_6091_pp5_iter2_reg;
reg   [0:0] icmp_ln261_reg_6091_pp5_iter3_reg;
reg   [0:0] icmp_ln261_reg_6091_pp5_iter4_reg;
reg   [0:0] icmp_ln261_reg_6091_pp5_iter5_reg;
reg   [0:0] icmp_ln261_reg_6091_pp5_iter6_reg;
wire   [0:0] icmp_ln261_1_fu_3663_p2;
reg   [0:0] icmp_ln261_1_reg_6095;
reg   [0:0] icmp_ln261_1_reg_6095_pp5_iter1_reg;
reg   [0:0] icmp_ln261_1_reg_6095_pp5_iter2_reg;
reg   [0:0] icmp_ln261_1_reg_6095_pp5_iter3_reg;
reg   [0:0] icmp_ln261_1_reg_6095_pp5_iter4_reg;
reg   [0:0] icmp_ln261_1_reg_6095_pp5_iter5_reg;
reg   [0:0] icmp_ln261_1_reg_6095_pp5_iter6_reg;
wire   [0:0] icmp_ln261_2_fu_3674_p2;
reg   [0:0] icmp_ln261_2_reg_6099;
reg   [0:0] icmp_ln261_2_reg_6099_pp5_iter1_reg;
reg   [0:0] icmp_ln261_2_reg_6099_pp5_iter2_reg;
reg   [0:0] icmp_ln261_2_reg_6099_pp5_iter3_reg;
reg   [0:0] icmp_ln261_2_reg_6099_pp5_iter4_reg;
reg   [0:0] icmp_ln261_2_reg_6099_pp5_iter5_reg;
reg   [0:0] icmp_ln261_2_reg_6099_pp5_iter6_reg;
wire   [0:0] icmp_ln261_3_fu_3679_p2;
reg   [0:0] icmp_ln261_3_reg_6103;
reg   [0:0] icmp_ln261_3_reg_6103_pp5_iter1_reg;
reg   [0:0] icmp_ln261_3_reg_6103_pp5_iter2_reg;
reg   [0:0] icmp_ln261_3_reg_6103_pp5_iter3_reg;
reg   [0:0] icmp_ln261_3_reg_6103_pp5_iter4_reg;
reg   [0:0] icmp_ln261_3_reg_6103_pp5_iter5_reg;
reg   [0:0] icmp_ln261_3_reg_6103_pp5_iter6_reg;
wire   [8:0] add_ln146_fu_3690_p2;
reg   [8:0] add_ln146_reg_6107;
wire   [8:0] add_ln148_fu_3757_p2;
reg   [8:0] add_ln148_reg_6142;
wire   [63:0] zext_ln158_fu_3767_p1;
reg   [63:0] zext_ln158_reg_6147;
reg   [63:0] zext_ln158_reg_6147_pp5_iter3_reg;
reg   [63:0] zext_ln158_reg_6147_pp5_iter4_reg;
reg   [63:0] zext_ln158_reg_6147_pp5_iter5_reg;
reg   [63:0] zext_ln158_reg_6147_pp5_iter6_reg;
reg    ap_enable_reg_pp5_iter3;
wire  signed [31:0] grp_fu_4367_p3;
reg  signed [31:0] add_ln194_reg_6257;
reg    ap_enable_reg_pp5_iter4;
wire  signed [31:0] grp_fu_4374_p3;
reg  signed [31:0] add_ln194_1_reg_6262;
wire  signed [31:0] grp_fu_4381_p3;
reg  signed [31:0] add_ln194_2_reg_6267;
wire  signed [31:0] grp_fu_4388_p3;
reg  signed [31:0] add_ln194_3_reg_6272;
wire  signed [31:0] grp_fu_4395_p3;
reg  signed [31:0] add_ln188_reg_6277;
reg    ap_enable_reg_pp5_iter5;
wire  signed [31:0] grp_fu_4402_p3;
reg  signed [31:0] add_ln188_1_reg_6282;
wire  signed [31:0] grp_fu_4409_p3;
reg  signed [31:0] add_ln188_2_reg_6287;
wire  signed [31:0] grp_fu_4416_p3;
reg  signed [31:0] add_ln188_3_reg_6292;
wire  signed [31:0] grp_fu_4423_p3;
reg  signed [31:0] add_ln182_reg_6297;
reg    ap_enable_reg_pp5_iter6;
wire  signed [31:0] grp_fu_4430_p3;
reg  signed [31:0] add_ln182_1_reg_6302;
wire  signed [31:0] grp_fu_4437_p3;
reg  signed [31:0] add_ln182_2_reg_6307;
wire  signed [31:0] grp_fu_4444_p3;
reg  signed [31:0] add_ln182_3_reg_6312;
wire   [7:0] add_ln103_fu_4070_p2;
wire    ap_CS_fsm_state56;
wire   [23:0] grp_fu_4242_p2;
reg   [23:0] bound148_reg_6322;
wire    ap_CS_fsm_state59;
wire   [0:0] icmp_ln285_fu_4075_p2;
reg   [0:0] icmp_ln285_reg_6327;
wire   [0:0] icmp_ln283_fu_4080_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state60_pp6_stage0_iter0;
wire    ap_block_state61_pp6_stage0_iter1;
wire    ap_block_state62_pp6_stage0_iter2;
wire    ap_block_state63_pp6_stage0_iter3;
reg    ap_block_state64_pp6_stage0_iter4;
reg    ap_block_pp6_stage0_11001;
reg   [0:0] icmp_ln283_reg_6332_pp6_iter1_reg;
reg   [0:0] icmp_ln283_reg_6332_pp6_iter2_reg;
wire   [23:0] add_ln283_fu_4085_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln284_fu_4091_p2;
reg   [0:0] icmp_ln284_reg_6341;
reg   [0:0] icmp_ln284_reg_6341_pp6_iter1_reg;
wire   [5:0] select_ln283_1_fu_4102_p3;
reg   [5:0] select_ln283_1_reg_6349;
wire   [18:0] select_ln284_3_fu_4120_p3;
wire   [1:0] select_ln284_1_fu_4180_p3;
reg   [1:0] select_ln284_1_reg_6364;
reg   [1:0] select_ln284_1_reg_6364_pp6_iter3_reg;
wire   [2:0] select_ln284_2_fu_4188_p3;
reg    ap_enable_reg_pp6_iter2;
wire   [15:0] add_ln285_fu_4200_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state24;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_flush_enable;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_condition_pp4_exit_iter4_state45;
reg    ap_enable_reg_pp4_iter5;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_flush_enable;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_condition_pp5_exit_iter4_state52;
reg    ap_enable_reg_pp5_iter7;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_flush_enable;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter3;
reg    ap_condition_pp6_exit_iter2_state62;
reg   [8:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_q0;
reg   [8:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_q0;
reg   [8:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_q0;
reg   [8:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_q0;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_0_address1;
reg    weight_l2_0_ce1;
wire   [7:0] weight_l2_0_q1;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_1_address1;
reg    weight_l2_1_ce1;
wire   [7:0] weight_l2_1_q1;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_2_address1;
reg    weight_l2_2_ce1;
wire   [7:0] weight_l2_2_q1;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_q0;
reg   [8:0] weight_l2_3_address1;
reg    weight_l2_3_ce1;
wire   [7:0] weight_l2_3_q1;
reg   [8:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_q0;
reg   [8:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_q0;
reg   [8:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_q0;
reg   [8:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] data_l1_0_0_address0;
reg    data_l1_0_0_ce0;
reg    data_l1_0_0_we0;
wire  signed [7:0] data_l1_0_0_q0;
reg   [8:0] data_l1_1_0_address0;
reg    data_l1_1_0_ce0;
reg    data_l1_1_0_we0;
wire   [7:0] data_l1_1_0_q0;
reg   [8:0] data_l1_2_0_address0;
reg    data_l1_2_0_ce0;
reg    data_l1_2_0_we0;
wire   [7:0] data_l1_2_0_q0;
reg   [8:0] data_l1_3_0_address0;
reg    data_l1_3_0_ce0;
reg    data_l1_3_0_we0;
wire   [7:0] data_l1_3_0_q0;
reg   [11:0] indvar_flatten136_reg_1298;
reg   [5:0] ko_reg_1309;
reg   [5:0] co_reg_1320;
reg   [2:0] ki_1_reg_1331;
wire    ap_CS_fsm_state28;
reg   [7:0] ap_phi_mux_hi_phi_fu_1357_p4;
wire    ap_block_pp3_stage0;
reg   [15:0] indvar_flatten105_reg_1375;
reg   [7:0] r_reg_1386;
reg   [7:0] s_reg_1397;
reg   [31:0] ap_phi_mux_psum1_3_phi_fu_1477_p4;
wire    ap_block_pp5_stage0;
reg   [31:0] ap_phi_mux_psum2_3_phi_fu_1487_p4;
reg   [31:0] ap_phi_mux_psum3_3_phi_fu_1497_p4;
reg   [31:0] ap_phi_mux_psum1_2_phi_fu_1507_p4;
reg   [31:0] ap_phi_mux_psum2_2_phi_fu_1517_p4;
reg   [31:0] ap_phi_mux_psum3_2_phi_fu_1527_p4;
reg   [31:0] ap_phi_mux_psum1_1_phi_fu_1537_p4;
reg   [31:0] ap_phi_mux_psum2_1_phi_fu_1547_p4;
reg   [31:0] ap_phi_mux_psum3_1_phi_fu_1557_p4;
reg   [31:0] ap_phi_mux_psum1_phi_fu_1567_p4;
reg   [31:0] ap_phi_mux_psum2_phi_fu_1577_p4;
reg   [31:0] ap_phi_mux_psum3_phi_fu_1587_p4;
reg   [5:0] ap_phi_mux_k_3_phi_fu_1609_p4;
wire   [63:0] zext_ln71_fu_1724_p1;
wire   [63:0] zext_ln75_fu_1780_p1;
wire   [63:0] zext_ln79_fu_1828_p1;
wire   [63:0] newIndex66_cast_fu_2104_p1;
wire   [63:0] zext_ln94_fu_2279_p1;
wire   [63:0] zext_ln117_16_fu_2501_p1;
wire   [63:0] zext_ln117_17_fu_2525_p1;
wire   [63:0] zext_ln117_18_fu_2806_p1;
wire   [63:0] zext_ln117_19_fu_2813_p1;
wire   [63:0] zext_ln117_20_fu_2864_p1;
wire   [63:0] zext_ln117_21_fu_2871_p1;
wire   [63:0] zext_ln117_22_fu_2922_p1;
wire   [63:0] zext_ln117_23_fu_2929_p1;
wire   [63:0] zext_ln117_24_fu_2980_p1;
wire   [63:0] zext_ln117_25_fu_2987_p1;
wire   [63:0] zext_ln117_26_fu_3038_p1;
wire   [63:0] zext_ln117_27_fu_3045_p1;
wire   [63:0] zext_ln117_28_fu_3096_p1;
wire   [63:0] zext_ln117_29_fu_3103_p1;
wire   [63:0] zext_ln117_30_fu_3154_p1;
wire   [63:0] zext_ln117_31_fu_3161_p1;
wire   [63:0] zext_ln130_1_fu_3456_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln129_fu_3485_p1;
wire   [63:0] zext_ln149_fu_3607_p1;
wire   [63:0] zext_ln149_1_fu_3695_p1;
wire   [63:0] zext_ln149_2_fu_3752_p1;
wire   [63:0] zext_ln158_1_fu_3777_p1;
wire   [63:0] zext_ln158_2_fu_3786_p1;
wire   [63:0] zext_ln158_3_fu_3795_p1;
wire   [63:0] zext_ln149_3_fu_3847_p1;
wire   [63:0] zext_ln268_fu_3963_p1;
wire   [63:0] zext_ln268_1_fu_3978_p1;
wire   [63:0] zext_ln268_2_fu_3993_p1;
wire   [63:0] zext_ln286_fu_4206_p1;
reg  signed [7:0] arrayidx2187_promoted517_fu_288;
reg  signed [7:0] arrayidx24011_promoted524_fu_292;
reg  signed [7:0] arrayidx26315_promoted531_fu_296;
reg  signed [7:0] arrayidx28619_promoted538_fu_300;
reg  signed [7:0] arrayidx2187_1_promoted545_fu_304;
reg  signed [7:0] arrayidx24011_1_promoted552_fu_308;
reg  signed [7:0] arrayidx26315_1_promoted559_fu_312;
reg  signed [7:0] arrayidx28619_1_promoted566_fu_316;
reg  signed [7:0] arrayidx2187_2_promoted573_fu_320;
wire  signed [7:0] select_ln148_2_fu_3915_p3;
reg  signed [7:0] arrayidx24011_2_promoted580_fu_324;
wire  signed [7:0] select_ln148_1_fu_3840_p3;
reg  signed [7:0] arrayidx26315_2_promoted587_fu_328;
wire  signed [7:0] select_ln148_fu_3740_p3;
reg  signed [7:0] arrayidx28619_2_promoted594_fu_332;
reg    ap_block_pp6_stage0_01001;
wire   [7:0] trunc_ln708_fu_1716_p1;
wire   [7:0] trunc_ln708_1_fu_1772_p1;
wire   [7:0] trunc_ln708_2_fu_1820_p1;
wire  signed [31:0] grp_fu_4459_p3;
wire  signed [31:0] grp_fu_4467_p3;
wire  signed [31:0] grp_fu_4475_p3;
wire  signed [31:0] grp_fu_4451_p3;
wire   [7:0] tmp_19_fu_3467_p6;
wire   [7:0] tmp_fu_1731_p0;
wire   [7:0] tmp_fu_1731_p1;
wire   [15:0] tmp_fu_1731_p2;
wire   [7:0] tmp1_fu_1739_p0;
wire   [7:0] tmp1_fu_1739_p1;
wire   [7:0] tmp2_fu_1787_p0;
wire   [7:0] tmp2_fu_1787_p1;
wire   [15:0] tmp2_fu_1787_p2;
wire   [7:0] mul151_fu_1835_p0;
wire   [7:0] mul151_fu_1835_p1;
wire   [8:0] tmp3_fu_1843_p2;
wire   [15:0] tmp3_cast_fu_1848_p1;
wire   [7:0] tmp5_cast_fu_1891_p0;
wire   [7:0] tmp5_cast_fu_1891_p1;
wire   [5:0] bound110_fu_1917_p0;
wire   [5:0] bound110_fu_1917_p1;
wire   [0:0] icmp_ln83_fu_1943_p2;
wire   [5:0] add_ln82_1_fu_1956_p2;
wire   [5:0] mul_ln82_fu_1982_p1;
wire   [7:0] mul_ln82_1_fu_1991_p0;
wire   [7:0] mul_ln82_1_fu_1991_p1;
wire   [7:0] or_ln82_fu_1996_p2;
wire   [7:0] mul_ln82_2_fu_2006_p0;
wire   [7:0] mul_ln82_2_fu_2006_p1;
wire   [7:0] or_ln82_1_fu_2011_p2;
wire   [7:0] mul_ln82_3_fu_2021_p0;
wire   [7:0] mul_ln82_3_fu_2021_p1;
wire   [7:0] or_ln82_2_fu_2026_p2;
wire   [7:0] mul_ln82_4_fu_2036_p0;
wire   [7:0] mul_ln82_4_fu_2036_p1;
wire   [7:0] empty_57_fu_2053_p2;
wire   [7:0] zext_ln89_1_fu_2081_p1;
wire   [7:0] empty_45_fu_2089_p2;
wire   [5:0] newIndex_fu_2094_p4;
wire   [7:0] empty_47_fu_2112_p2;
wire   [7:0] empty_48_fu_2121_p2;
wire   [10:0] p_cast14_fu_2126_p1;
wire   [10:0] p_cast15_fu_2117_p1;
wire   [63:0] tmp_1_fu_2205_p5;
wire   [7:0] tmp_1_fu_2205_p6;
wire   [0:0] icmp_ln91_fu_2234_p2;
wire   [7:0] add_ln90_1_fu_2247_p2;
wire   [8:0] wi_cast_fu_2271_p1;
wire   [8:0] grp_fu_4328_p3;
wire   [0:0] icmp_ln103_fu_2297_p2;
wire   [7:0] add_ln101_17_fu_2310_p2;
wire   [7:0] mul_ln101_fu_2328_p0;
wire   [7:0] mul_ln101_fu_2328_p1;
wire   [10:0] mul_ln101_fu_2328_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_1_fu_2333_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_2_fu_2342_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_3_fu_2351_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_4_fu_2360_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_5_fu_2369_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_6_fu_2378_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_7_fu_2387_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_8_fu_2396_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_9_fu_2405_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_10_fu_2414_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_11_fu_2423_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_12_fu_2432_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_13_fu_2441_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_14_fu_2450_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_15_fu_2459_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln101_16_fu_2468_p2;
wire   [10:0] add_ln118_fu_2485_p2;
wire   [8:0] lshr_ln3_fu_2491_p4;
wire   [10:0] add_ln118_1_fu_2509_p2;
wire   [8:0] lshr_ln117_1_fu_2515_p4;
wire   [10:0] add_ln118_2_fu_2533_p2;
wire   [10:0] add_ln118_3_fu_2549_p2;
wire   [10:0] add_ln118_4_fu_2565_p2;
wire   [10:0] add_ln118_5_fu_2581_p2;
wire   [10:0] add_ln118_6_fu_2597_p2;
wire   [10:0] add_ln118_7_fu_2613_p2;
wire   [10:0] add_ln118_8_fu_2629_p2;
wire   [10:0] add_ln118_9_fu_2645_p2;
wire   [10:0] add_ln118_10_fu_2661_p2;
wire   [10:0] add_ln118_11_fu_2677_p2;
wire   [10:0] add_ln118_12_fu_2693_p2;
wire   [10:0] add_ln118_13_fu_2709_p2;
wire   [10:0] add_ln118_14_fu_2725_p2;
wire   [10:0] add_ln118_15_fu_2741_p2;
wire   [1:0] add_ln117_fu_2762_p2;
wire   [63:0] tmp_3_fu_2770_p5;
wire   [1:0] add_ln117_1_fu_2784_p2;
wire   [63:0] tmp_4_fu_2792_p5;
wire   [1:0] add_ln117_2_fu_2820_p2;
wire   [63:0] tmp_5_fu_2828_p5;
wire   [1:0] add_ln117_3_fu_2842_p2;
wire   [63:0] tmp_6_fu_2850_p5;
wire   [1:0] add_ln117_4_fu_2878_p2;
wire   [63:0] tmp_7_fu_2886_p5;
wire   [1:0] add_ln117_5_fu_2900_p2;
wire   [63:0] tmp_8_fu_2908_p5;
wire   [1:0] add_ln117_6_fu_2936_p2;
wire   [63:0] tmp_9_fu_2944_p5;
wire   [1:0] add_ln117_7_fu_2958_p2;
wire   [63:0] tmp_s_fu_2966_p5;
wire   [1:0] add_ln117_8_fu_2994_p2;
wire   [63:0] tmp_10_fu_3002_p5;
wire   [1:0] add_ln117_9_fu_3016_p2;
wire   [63:0] tmp_11_fu_3024_p5;
wire   [1:0] add_ln117_10_fu_3052_p2;
wire   [63:0] tmp_12_fu_3060_p5;
wire   [1:0] add_ln117_11_fu_3074_p2;
wire   [63:0] tmp_13_fu_3082_p5;
wire   [1:0] add_ln117_12_fu_3110_p2;
wire   [63:0] tmp_14_fu_3118_p5;
wire   [1:0] add_ln117_13_fu_3132_p2;
wire   [63:0] tmp_15_fu_3140_p5;
wire   [1:0] add_ln117_14_fu_3171_p2;
wire   [63:0] tmp_16_fu_3179_p5;
wire   [1:0] add_ln117_15_fu_3193_p2;
wire   [63:0] tmp_17_fu_3201_p5;
wire   [7:0] p_mid131_fu_3215_p0;
wire   [7:0] p_mid131_fu_3215_p1;
wire   [1:0] empty_49_fu_3219_p1;
wire   [7:0] tmp_18_fu_3223_p3;
wire   [2:0] add_ln122_1_fu_3250_p2;
wire   [1:0] empty_53_fu_3256_p1;
wire   [7:0] tmp_19_mid1_fu_3268_p3;
wire   [0:0] icmp_ln125_fu_3279_p2;
wire   [0:0] or_ln124_fu_3299_p2;
wire   [15:0] add_ln124_3_fu_3323_p2;
wire   [7:0] mul_ln128_fu_3341_p0;
wire   [7:0] mul_ln128_fu_3341_p1;
wire   [8:0] zext_ln124_fu_3337_p1;
wire   [8:0] mul_ln128_fu_3341_p2;
wire   [7:0] select_ln122_fu_3346_p3;
wire   [7:0] add_ln124_fu_3360_p2;
wire   [7:0] mul_ln128_1_fu_3370_p0;
wire   [7:0] mul_ln128_1_fu_3370_p1;
wire   [8:0] zext_ln124_1_fu_3366_p1;
wire   [8:0] mul_ln128_1_fu_3370_p2;
wire   [8:0] select_ln122_3_fu_3353_p3;
wire   [8:0] select_ln124_1_fu_3375_p3;
wire   [8:0] wi_1_cast58_fu_3389_p1;
wire  signed [10:0] grp_fu_4342_p2;
wire  signed [10:0] grp_fu_4349_p4;
wire   [10:0] grp_fu_4358_p4;
wire   [10:0] select_ln122_4_fu_3407_p3;
wire   [10:0] select_ln124_2_fu_3412_p3;
wire   [1:0] trunc_ln124_fu_3423_p1;
wire   [10:0] wi_1_cast_fu_3432_p1;
wire   [10:0] add_ln124_1_fu_3418_p2;
wire   [1:0] add_ln124_2_fu_3427_p2;
wire   [10:0] add_ln131_fu_3435_p2;
wire   [8:0] lshr_ln4_fu_3446_p4;
wire   [63:0] tmp_19_fu_3467_p5;
wire   [16:0] zext_ln140_fu_3599_p1;
wire   [16:0] add_ln146_1_fu_3618_p2;
wire   [16:0] add_ln146_2_fu_3632_p2;
wire   [16:0] add_ln261_fu_3646_p2;
wire   [16:0] add_ln261_1_fu_3657_p2;
wire   [16:0] add_ln261_2_fu_3668_p2;
wire   [8:0] add_ln146_3_fu_3747_p2;
wire   [8:0] add_ln158_fu_3762_p2;
wire   [8:0] add_ln158_1_fu_3772_p2;
wire   [8:0] add_ln158_2_fu_3782_p2;
wire   [8:0] add_ln158_3_fu_3791_p2;
wire   [8:0] add_ln261_3_fu_3953_p2;
wire   [8:0] add_ln269_fu_3958_p2;
wire   [8:0] add_ln261_4_fu_3968_p2;
wire   [8:0] add_ln269_1_fu_3973_p2;
wire   [8:0] add_ln261_5_fu_3983_p2;
wire   [8:0] add_ln269_2_fu_3988_p2;
wire   [5:0] add_ln283_1_fu_4096_p2;
wire   [18:0] add_ln284_1_fu_4114_p2;
wire   [1:0] trunc_ln286_fu_4135_p1;
wire   [0:0] icmp_ln285_1_fu_4146_p2;
wire   [2:0] select_ln283_fu_4128_p3;
wire   [0:0] select_ln283_3_fu_4151_p3;
wire   [0:0] or_ln284_fu_4163_p2;
wire   [2:0] add_ln284_fu_4157_p2;
wire   [1:0] trunc_ln286_1_fu_4176_p1;
wire   [1:0] select_ln283_2_fu_4139_p3;
wire   [15:0] select_ln284_fu_4168_p3;
wire  signed [8:0] grp_fu_4483_p3;
wire   [31:0] p_Repl2_s_fu_4213_p6;
wire   [15:0] grp_fu_4231_p0;
wire   [15:0] grp_fu_4231_p1;
wire   [15:0] grp_fu_4237_p0;
wire   [7:0] grp_fu_4237_p1;
wire   [5:0] grp_fu_4242_p0;
wire   [17:0] grp_fu_4242_p1;
wire  signed [10:0] grp_fu_4248_p0;
wire  signed [10:0] grp_fu_4253_p0;
wire  signed [10:0] grp_fu_4258_p0;
wire  signed [10:0] grp_fu_4263_p0;
wire  signed [10:0] grp_fu_4268_p0;
wire  signed [10:0] grp_fu_4273_p0;
wire  signed [10:0] grp_fu_4278_p0;
wire  signed [10:0] grp_fu_4283_p0;
wire  signed [10:0] grp_fu_4288_p0;
wire  signed [10:0] grp_fu_4293_p0;
wire  signed [10:0] grp_fu_4298_p0;
wire  signed [10:0] grp_fu_4303_p0;
wire  signed [10:0] grp_fu_4308_p0;
wire  signed [10:0] grp_fu_4313_p0;
wire  signed [10:0] grp_fu_4318_p0;
wire  signed [10:0] grp_fu_4323_p0;
wire   [7:0] grp_fu_4328_p0;
wire   [7:0] grp_fu_4328_p1;
wire   [8:0] grp_fu_4328_p2;
wire   [7:0] grp_fu_4336_p1;
wire   [7:0] grp_fu_4342_p1;
wire   [7:0] grp_fu_4349_p0;
wire   [7:0] grp_fu_4349_p1;
wire   [7:0] grp_fu_4349_p2;
wire   [7:0] grp_fu_4358_p0;
wire   [7:0] grp_fu_4358_p1;
wire   [7:0] grp_fu_4358_p2;
wire   [10:0] grp_fu_4358_p3;
wire  signed [7:0] grp_fu_4367_p1;
wire   [31:0] grp_fu_4367_p2;
wire  signed [7:0] grp_fu_4374_p1;
wire   [31:0] grp_fu_4374_p2;
wire  signed [7:0] grp_fu_4381_p1;
wire   [31:0] grp_fu_4381_p2;
wire  signed [7:0] grp_fu_4388_p1;
wire  signed [7:0] grp_fu_4395_p1;
wire  signed [7:0] grp_fu_4402_p1;
wire  signed [7:0] grp_fu_4409_p1;
wire  signed [7:0] grp_fu_4416_p1;
wire  signed [7:0] grp_fu_4423_p1;
wire  signed [7:0] grp_fu_4430_p1;
wire  signed [7:0] grp_fu_4437_p1;
wire  signed [7:0] grp_fu_4444_p1;
wire  signed [7:0] grp_fu_4451_p0;
wire  signed [7:0] grp_fu_4459_p0;
wire  signed [7:0] grp_fu_4467_p0;
wire  signed [7:0] grp_fu_4475_p0;
wire   [5:0] grp_fu_4483_p0;
wire   [8:0] grp_fu_4483_p2;
reg    grp_fu_4483_ce;
wire    ap_CS_fsm_state65;
reg   [42:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_block_pp4;
reg    ap_block_pp5;
reg    ap_block_pp6;
reg    ap_predicate_op956_load_state50;
reg    ap_enable_operation_956;
reg    ap_enable_state50_pp5_iter2_stage0;
reg    ap_predicate_op992_load_state51;
reg    ap_enable_operation_992;
reg    ap_enable_state51_pp5_iter3_stage0;
reg    ap_enable_operation_1123;
reg    ap_enable_state55_pp5_iter7_stage0;
reg    ap_predicate_op960_load_state50;
reg    ap_enable_operation_960;
reg    ap_predicate_op994_load_state51;
reg    ap_enable_operation_994;
reg    ap_enable_operation_1129;
reg    ap_predicate_op964_load_state50;
reg    ap_enable_operation_964;
reg    ap_predicate_op996_load_state51;
reg    ap_enable_operation_996;
reg    ap_enable_operation_1135;
reg    ap_enable_operation_968;
reg    ap_enable_operation_998;
reg    ap_enable_operation_1138;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire   [11:0] bound110_fu_1917_p00;
wire   [11:0] bound110_fu_1917_p10;
wire   [31:0] grp_fu_4231_p00;
wire   [31:0] grp_fu_4231_p10;
wire   [23:0] grp_fu_4237_p00;
wire   [23:0] grp_fu_4242_p00;
wire   [23:0] grp_fu_4242_p10;
wire   [8:0] grp_fu_4328_p00;
wire   [10:0] grp_fu_4336_p10;
wire   [10:0] grp_fu_4342_p10;
wire   [8:0] grp_fu_4483_p00;
wire   [10:0] mul_ln101_fu_2328_p00;
wire   [10:0] mul_ln82_1_fu_1991_p10;
wire   [10:0] mul_ln82_2_fu_2006_p10;
wire   [10:0] mul_ln82_3_fu_2021_p10;
wire   [10:0] mul_ln82_4_fu_2036_p10;
wire   [8:0] mul_ln82_fu_1982_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 output_reg_3_2 = 32'd0;
#0 output_reg_3_1 = 32'd0;
#0 output_reg_3_0 = 32'd0;
#0 output_reg_2_2 = 32'd0;
#0 output_reg_2_1 = 32'd0;
#0 output_reg_2_0 = 32'd0;
#0 output_reg_1_2 = 32'd0;
#0 output_reg_1_1 = 32'd0;
#0 output_reg_1_0 = 32'd0;
#0 output_reg_0_2 = 32'd0;
#0 output_reg_0_1 = 32'd0;
#0 output_reg_0_0 = 32'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
end

Conv_sysarr_dbbuf_output_l1_3 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(output_l1_3_d0),
    .address1(output_l1_3_address1),
    .ce1(output_l1_3_ce1),
    .q1(output_l1_3_q1)
);

Conv_sysarr_dbbuf_output_l1_3 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(output_l1_2_d0),
    .address1(output_l1_2_address1),
    .ce1(output_l1_2_ce1),
    .q1(output_l1_2_q1)
);

Conv_sysarr_dbbuf_output_l1_3 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(output_l1_1_d0),
    .address1(output_l1_1_address1),
    .ce1(output_l1_1_ce1),
    .q1(output_l1_1_q1)
);

Conv_sysarr_dbbuf_output_l1_3 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(output_l1_0_d0),
    .address1(output_l1_0_address1),
    .ce1(output_l1_0_ce1),
    .q1(output_l1_0_q1)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(trunc_ln708_fu_1716_p1),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(trunc_ln708_fu_1716_p1),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(trunc_ln708_fu_1716_p1),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(trunc_ln708_fu_1716_p1),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(trunc_ln708_1_fu_1772_p1),
    .q0(weight_l2_0_q0),
    .address1(weight_l2_0_address1),
    .ce1(weight_l2_0_ce1),
    .q1(weight_l2_0_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(trunc_ln708_1_fu_1772_p1),
    .q0(weight_l2_1_q0),
    .address1(weight_l2_1_address1),
    .ce1(weight_l2_1_ce1),
    .q1(weight_l2_1_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(trunc_ln708_1_fu_1772_p1),
    .q0(weight_l2_2_q0),
    .address1(weight_l2_2_address1),
    .ce1(weight_l2_2_ce1),
    .q1(weight_l2_2_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(trunc_ln708_1_fu_1772_p1),
    .q0(weight_l2_3_q0),
    .address1(weight_l2_3_address1),
    .ce1(weight_l2_3_ce1),
    .q1(weight_l2_3_q1)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(trunc_ln708_2_fu_1820_p1),
    .q0(data_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(trunc_ln708_2_fu_1820_p1),
    .q0(data_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(trunc_ln708_2_fu_1820_p1),
    .q0(data_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(trunc_ln708_2_fu_1820_p1),
    .q0(data_l2_3_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_0_0_address0),
    .ce0(data_l1_0_0_ce0),
    .we0(data_l1_0_0_we0),
    .d0(tmp_19_fu_3467_p6),
    .q0(data_l1_0_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_1_0_address0),
    .ce0(data_l1_1_0_ce0),
    .we0(data_l1_1_0_we0),
    .d0(tmp_19_fu_3467_p6),
    .q0(data_l1_1_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_2_0_address0),
    .ce0(data_l1_2_0_ce0),
    .we0(data_l1_2_0_we0),
    .d0(tmp_19_fu_3467_p6),
    .q0(data_l1_2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_3_0_address0),
    .ce0(data_l1_3_0_ce0),
    .we0(data_l1_3_0_we0),
    .d0(tmp_19_fu_3467_p6),
    .q0(data_l1_3_0_q0)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(tmp_fu_1731_p0),
    .din1(tmp_fu_1731_p1),
    .dout(tmp_fu_1731_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U2(
    .din0(tmp1_fu_1739_p0),
    .din1(tmp1_fu_1739_p1),
    .dout(tmp1_fu_1739_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U3(
    .din0(tmp2_fu_1787_p0),
    .din1(tmp2_fu_1787_p1),
    .dout(tmp2_fu_1787_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U4(
    .din0(mul151_fu_1835_p0),
    .din1(mul151_fu_1835_p1),
    .dout(mul151_fu_1835_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U5(
    .din0(tmp5_cast_fu_1891_p0),
    .din1(tmp5_cast_fu_1891_p1),
    .dout(tmp5_cast_fu_1891_p2)
);

Conv_sysarr_dbbuf_mul_6ns_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6ns_6ns_12_1_1_U6(
    .din0(bound110_fu_1917_p0),
    .din1(bound110_fu_1917_p1),
    .dout(bound110_fu_1917_p2)
);

Conv_sysarr_dbbuf_mul_9s_6ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_9s_6ns_9_1_1_U7(
    .din0(empty_42_reg_4831),
    .din1(mul_ln82_fu_1982_p1),
    .dout(mul_ln82_fu_1982_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U8(
    .din0(mul_ln82_1_fu_1991_p0),
    .din1(mul_ln82_1_fu_1991_p1),
    .dout(mul_ln82_1_fu_1991_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U9(
    .din0(mul_ln82_2_fu_2006_p0),
    .din1(mul_ln82_2_fu_2006_p1),
    .dout(mul_ln82_2_fu_2006_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U10(
    .din0(mul_ln82_3_fu_2021_p0),
    .din1(mul_ln82_3_fu_2021_p1),
    .dout(mul_ln82_3_fu_2021_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U11(
    .din0(mul_ln82_4_fu_2036_p0),
    .din1(mul_ln82_4_fu_2036_p1),
    .dout(mul_ln82_4_fu_2036_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U12(
    .din0(bias_l2_0_q0),
    .din1(bias_l2_1_q0),
    .din2(bias_l2_2_q0),
    .din3(bias_l2_3_q0),
    .din4(tmp_1_fu_2205_p5),
    .dout(tmp_1_fu_2205_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U13(
    .din0(mul_ln101_fu_2328_p0),
    .din1(mul_ln101_fu_2328_p1),
    .dout(mul_ln101_fu_2328_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U14(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_3_fu_2770_p5),
    .dout(tmp_3_fu_2770_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U15(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_4_fu_2792_p5),
    .dout(tmp_4_fu_2792_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U16(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_5_fu_2828_p5),
    .dout(tmp_5_fu_2828_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U17(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_6_fu_2850_p5),
    .dout(tmp_6_fu_2850_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U18(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_7_fu_2886_p5),
    .dout(tmp_7_fu_2886_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U19(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_8_fu_2908_p5),
    .dout(tmp_8_fu_2908_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U20(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_9_fu_2944_p5),
    .dout(tmp_9_fu_2944_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U21(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_s_fu_2966_p5),
    .dout(tmp_s_fu_2966_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U22(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_10_fu_3002_p5),
    .dout(tmp_10_fu_3002_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U23(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_11_fu_3024_p5),
    .dout(tmp_11_fu_3024_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U24(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_12_fu_3060_p5),
    .dout(tmp_12_fu_3060_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U25(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_13_fu_3082_p5),
    .dout(tmp_13_fu_3082_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U26(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_14_fu_3118_p5),
    .dout(tmp_14_fu_3118_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U27(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_15_fu_3140_p5),
    .dout(tmp_15_fu_3140_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U28(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_16_fu_3179_p5),
    .dout(tmp_16_fu_3179_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U29(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_17_fu_3201_p5),
    .dout(tmp_17_fu_3201_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U30(
    .din0(p_mid131_fu_3215_p0),
    .din1(p_mid131_fu_3215_p1),
    .dout(p_mid131_fu_3215_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U31(
    .din0(mul_ln128_fu_3341_p0),
    .din1(mul_ln128_fu_3341_p1),
    .dout(mul_ln128_fu_3341_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U32(
    .din0(mul_ln128_1_fu_3370_p0),
    .din1(mul_ln128_1_fu_3370_p1),
    .dout(mul_ln128_1_fu_3370_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U33(
    .din0(data_l2_0_q0),
    .din1(data_l2_1_q0),
    .din2(data_l2_2_q0),
    .din3(data_l2_3_q0),
    .din4(tmp_19_fu_3467_p5),
    .dout(tmp_19_fu_3467_p6)
);

Conv_sysarr_dbbuf_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U34(
    .din0(output_l1_0_q1),
    .din1(output_l1_1_q1),
    .din2(output_l1_2_q1),
    .din3(output_l1_3_q1),
    .din4(select_ln284_1_reg_6364_pp6_iter3_reg),
    .dout(p_Repl2_s_fu_4213_p6)
);

Conv_sysarr_dbbuf_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4231_p0),
    .din1(grp_fu_4231_p1),
    .ce(1'b1),
    .dout(grp_fu_4231_p2)
);

Conv_sysarr_dbbuf_mul_mul_16ns_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16ns_8ns_24_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4237_p0),
    .din1(grp_fu_4237_p1),
    .ce(1'b1),
    .dout(grp_fu_4237_p2)
);

Conv_sysarr_dbbuf_mul_mul_6ns_18ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 24 ))
mul_mul_6ns_18ns_24_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4242_p0),
    .din1(grp_fu_4242_p1),
    .ce(1'b1),
    .dout(grp_fu_4242_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4248_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4248_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4253_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4253_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4258_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4258_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4263_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4263_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4268_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4268_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4273_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4273_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4278_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4278_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4283_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4283_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4288_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4288_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4293_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4293_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4298_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4298_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4303_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4303_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4308_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4308_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4313_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4313_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4318_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4318_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4323_p0),
    .din1(empty_41_reg_4789),
    .ce(1'b1),
    .dout(grp_fu_4323_p2)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_8ns_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_8ns_9ns_9_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4328_p0),
    .din1(grp_fu_4328_p1),
    .din2(grp_fu_4328_p2),
    .ce(1'b1),
    .dout(grp_fu_4328_p3)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp5_cast_reg_4809),
    .din1(grp_fu_4336_p1),
    .ce(1'b1),
    .dout(grp_fu_4336_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp5_cast_reg_4809),
    .din1(grp_fu_4342_p1),
    .ce(1'b1),
    .dout(grp_fu_4342_p2)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11s_11_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4349_p0),
    .din1(grp_fu_4349_p1),
    .din2(grp_fu_4349_p2),
    .din3(grp_fu_4336_p2),
    .ce(1'b1),
    .dout(grp_fu_4349_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4358_p0),
    .din1(grp_fu_4358_p1),
    .din2(grp_fu_4358_p2),
    .din3(grp_fu_4358_p3),
    .ce(1'b1),
    .dout(grp_fu_4358_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx28619_promoted538_fu_300),
    .din1(grp_fu_4367_p1),
    .din2(grp_fu_4367_p2),
    .ce(1'b1),
    .dout(grp_fu_4367_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx28619_1_promoted566_fu_316),
    .din1(grp_fu_4374_p1),
    .din2(grp_fu_4374_p2),
    .ce(1'b1),
    .dout(grp_fu_4374_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx28619_2_promoted594_fu_332),
    .din1(grp_fu_4381_p1),
    .din2(grp_fu_4381_p2),
    .ce(1'b1),
    .dout(grp_fu_4381_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1_0_0_q0),
    .din1(grp_fu_4388_p1),
    .din2(output_l1_0_q1),
    .ce(1'b1),
    .dout(grp_fu_4388_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx26315_promoted531_fu_296),
    .din1(grp_fu_4395_p1),
    .din2(ap_phi_mux_psum1_phi_fu_1567_p4),
    .ce(1'b1),
    .dout(grp_fu_4395_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx26315_1_promoted559_fu_312),
    .din1(grp_fu_4402_p1),
    .din2(ap_phi_mux_psum1_1_phi_fu_1537_p4),
    .ce(1'b1),
    .dout(grp_fu_4402_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx26315_2_promoted587_fu_328),
    .din1(grp_fu_4409_p1),
    .din2(ap_phi_mux_psum1_2_phi_fu_1507_p4),
    .ce(1'b1),
    .dout(grp_fu_4409_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln148_fu_3740_p3),
    .din1(grp_fu_4416_p1),
    .din2(ap_phi_mux_psum1_3_phi_fu_1477_p4),
    .ce(1'b1),
    .dout(grp_fu_4416_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx24011_promoted524_fu_292),
    .din1(grp_fu_4423_p1),
    .din2(ap_phi_mux_psum2_phi_fu_1577_p4),
    .ce(1'b1),
    .dout(grp_fu_4423_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx24011_1_promoted552_fu_308),
    .din1(grp_fu_4430_p1),
    .din2(ap_phi_mux_psum2_1_phi_fu_1547_p4),
    .ce(1'b1),
    .dout(grp_fu_4430_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx24011_2_promoted580_fu_324),
    .din1(grp_fu_4437_p1),
    .din2(ap_phi_mux_psum2_2_phi_fu_1517_p4),
    .ce(1'b1),
    .dout(grp_fu_4437_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln148_1_fu_3840_p3),
    .din1(grp_fu_4444_p1),
    .din2(ap_phi_mux_psum2_3_phi_fu_1487_p4),
    .ce(1'b1),
    .dout(grp_fu_4444_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4451_p0),
    .din1(arrayidx2187_promoted517_fu_288),
    .din2(ap_phi_mux_psum3_phi_fu_1587_p4),
    .ce(1'b1),
    .dout(grp_fu_4451_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4459_p0),
    .din1(arrayidx2187_1_promoted545_fu_304),
    .din2(ap_phi_mux_psum3_1_phi_fu_1557_p4),
    .ce(1'b1),
    .dout(grp_fu_4459_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4467_p0),
    .din1(arrayidx2187_2_promoted573_fu_320),
    .din2(ap_phi_mux_psum3_2_phi_fu_1527_p4),
    .ce(1'b1),
    .dout(grp_fu_4467_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4475_p0),
    .din1(select_ln148_2_fu_3915_p3),
    .din2(ap_phi_mux_psum3_3_phi_fu_1497_p4),
    .ce(1'b1),
    .dout(grp_fu_4475_p3)
);

Conv_sysarr_dbbuf_mac_muladd_6ns_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_6ns_9s_9ns_9_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4483_p0),
    .din1(empty_42_reg_4831),
    .din2(grp_fu_4483_p2),
    .ce(grp_fu_4483_ce),
    .dout(grp_fu_4483_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state18);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state24) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state24)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state24);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end else if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_condition_pp4_exit_iter4_state45) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter3 == 1'b0)))) begin
            ap_enable_reg_pp4_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter4_state45) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter3;
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp5_flush_enable)) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter4_state52)) begin
                ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp6_flush_enable)) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state59)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter2_state62)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end else if ((1'b1 == ap_CS_fsm_state59)) begin
            ap_enable_reg_pp6_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln122_fu_3234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        ci_reg_1419 <= select_ln122_6_fu_3291_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        ci_reg_1419 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_fu_2286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        co_reg_1320 <= add_ln83_fu_2757_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        co_reg_1320 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln122_reg_5799 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        hi_1_reg_1452 <= select_ln124_3_fu_3382_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        hi_1_reg_1452 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_reg_5064 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        hi_reg_1353 <= select_ln90_1_reg_5078;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        hi_reg_1353 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln140_fu_3588_p2 == 1'd0))) begin
        i_reg_1463 <= add_ln140_fu_3593_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        i_reg_1463 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        indvar_flatten105_reg_1375 <= add_ln101_reg_5181;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten105_reg_1375 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_fu_2286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        indvar_flatten136_reg_1298 <= add_ln82_reg_4845;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        indvar_flatten136_reg_1298 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln283_fu_4080_p2 == 1'd0))) begin
        indvar_flatten143_reg_1616 <= select_ln284_3_fu_4120_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        indvar_flatten143_reg_1616 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln122_fu_3234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten15_reg_1430 <= select_ln124_4_fu_3329_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten15_reg_1430 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln283_fu_4080_p2 == 1'd0))) begin
        indvar_flatten160_reg_1594 <= add_ln283_fu_4085_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        indvar_flatten160_reg_1594 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln122_fu_3234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten47_reg_1408 <= add_ln122_fu_3239_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten47_reg_1408 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln90_fu_2223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten_reg_1342 <= add_ln90_fu_2228_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten_reg_1342 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_1_reg_1276 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln73_fu_1747_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_1_reg_1276 <= add_ln73_fu_1752_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_2_reg_1287 <= 24'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln77_fu_1795_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        k_2_reg_1287 <= add_ln77_fu_1800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln283_reg_6332 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        k_3_reg_1605 <= select_ln283_1_reg_6349;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        k_3_reg_1605 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        k_reg_1265 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_1265 <= add_ln69_fu_1696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_1932_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ki_1_reg_1331 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        ki_1_reg_1331 <= add_ln89_reg_4946;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln283_reg_6332_pp6_iter1_reg == 1'd0))) begin
        ki_reg_1627 <= select_ln284_2_fu_4188_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ki_reg_1627 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_fu_2286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ko_reg_1309 <= select_ln82_1_reg_4857;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ko_reg_1309 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter5 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter4_reg == 1'd0))) begin
        psum1_1_reg_1534 <= add_ln194_1_reg_6262;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum1_1_reg_1534 <= output_reg_2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter5 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter4_reg == 1'd0))) begin
        psum1_2_reg_1504 <= add_ln194_2_reg_6267;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum1_2_reg_1504 <= output_reg_1_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter5 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter4_reg == 1'd0))) begin
        psum1_3_reg_1474 <= add_ln194_3_reg_6272;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum1_3_reg_1474 <= output_reg_0_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter5 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter4_reg == 1'd0))) begin
        psum1_reg_1564 <= add_ln194_reg_6257;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum1_reg_1564 <= output_reg_3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter5_reg == 1'd0))) begin
        psum2_1_reg_1544 <= add_ln188_1_reg_6282;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum2_1_reg_1544 <= output_reg_2_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter5_reg == 1'd0))) begin
        psum2_2_reg_1514 <= add_ln188_2_reg_6287;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum2_2_reg_1514 <= output_reg_1_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter5_reg == 1'd0))) begin
        psum2_3_reg_1484 <= add_ln188_3_reg_6292;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum2_3_reg_1484 <= output_reg_0_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter5_reg == 1'd0))) begin
        psum2_reg_1574 <= add_ln188_reg_6277;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum2_reg_1574 <= output_reg_3_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter6_reg == 1'd0))) begin
        psum3_1_reg_1554 <= add_ln182_1_reg_6302;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum3_1_reg_1554 <= output_reg_2_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter6_reg == 1'd0))) begin
        psum3_2_reg_1524 <= add_ln182_2_reg_6307;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum3_2_reg_1524 <= output_reg_1_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter6_reg == 1'd0))) begin
        psum3_3_reg_1494 <= add_ln182_3_reg_6312;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum3_3_reg_1494 <= output_reg_0_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter6_reg == 1'd0))) begin
        psum3_reg_1584 <= add_ln182_reg_6297;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        psum3_reg_1584 <= output_reg_3_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        r_reg_1386 <= select_ln101_1_reg_5191;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_reg_1386 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        s_reg_1397 <= add_ln103_fu_4070_p2;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        s_reg_1397 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln283_reg_6332_pp6_iter1_reg == 1'd0))) begin
        wh_reg_1638 <= add_ln285_fu_4200_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        wh_reg_1638 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln122_fu_3234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        wi_1_reg_1441 <= add_ln125_fu_3317_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        wi_1_reg_1441 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln90_fu_2223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        wi_reg_1364 <= add_ln91_fu_2265_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        wi_reg_1364 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        C_cast_reg_4774[7 : 0] <= C_cast_fu_1882_p1[7 : 0];
        WH_cast_reg_4782[7 : 0] <= WH_cast_fu_1885_p1[7 : 0];
        bound110_reg_4826 <= bound110_fu_1917_p2;
        bound20_reg_4821[17 : 2] <= bound20_fu_1905_p1[17 : 2];
        div66_cast_reg_4769 <= {{bias_in_V_read_reg_4491[7:2]}};
        div68_cast_reg_4764 <= {{bias_in_V_read_1_reg_4502[7:2]}};
        empty_41_reg_4789 <= empty_41_fu_1888_p1;
        empty_42_reg_4831 <= empty_42_fu_1923_p1;
        icmp_ln124_reg_4837 <= icmp_ln124_fu_1927_p2;
        input_rows_reg_4747 <= input_rows_fu_1852_p2;
        mul151_cast51_reg_4739[15 : 0] <= mul151_cast51_fu_1839_p1[15 : 0];
        mul151_reg_4731 <= mul151_fu_1835_p2;
        tmp5_cast_reg_4809 <= tmp5_cast_fu_1891_p2;
        tmp_2_reg_4815[17 : 2] <= tmp_2_fu_1897_p3[17 : 2];
        trunc_ln3_cast54_reg_4752[7 : 0] <= trunc_ln3_cast54_fu_1858_p1[7 : 0];
        trunc_ln4_cast18_reg_4759[7 : 0] <= trunc_ln4_cast18_fu_1861_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        C_reg_4507 <= C_fu_1653_p1;
        bias_in_V_read_1_reg_4502 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        K_reg_4496 <= K_fu_1649_p1;
        bias_in_V_read_reg_4491 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        RS_reg_4562 <= RS_fu_1683_p1;
        zext_ln54_reg_4530[7 : 0] <= zext_ln54_fu_1665_p1[7 : 0];
        zext_ln56_1_reg_4540[7 : 0] <= zext_ln56_1_fu_1671_p1[7 : 0];
        zext_ln56_reg_4535[7 : 0] <= zext_ln56_fu_1668_p1[7 : 0];
        zext_ln58_reg_4546[7 : 0] <= zext_ln58_fu_1674_p1[7 : 0];
        zext_ln62_1_reg_4557[7 : 0] <= zext_ln62_1_fu_1680_p1[7 : 0];
        zext_ln62_reg_4552[7 : 0] <= zext_ln62_fu_1677_p1[7 : 0];
        zext_ln66_reg_4568[7 : 0] <= zext_ln66_fu_1687_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        WH_in_reg_4523 <= WH_in_fu_1661_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        WH_reg_4514 <= WH_fu_1657_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add107_1333_cast_reg_5133 <= grp_fu_4283_p2;
        add107_1_1_cast_reg_5148 <= grp_fu_4298_p2;
        add107_1_2_cast_reg_5113 <= grp_fu_4263_p2;
        add107_1_3_cast_reg_5153 <= grp_fu_4303_p2;
        add107_1_cast_reg_5103 <= grp_fu_4253_p2;
        add107_2341_cast_reg_5138 <= grp_fu_4288_p2;
        add107_2_1_cast_reg_5158 <= grp_fu_4308_p2;
        add107_2_2_cast_reg_5118 <= grp_fu_4268_p2;
        add107_2_3_cast_reg_5163 <= grp_fu_4313_p2;
        add107_2_cast_reg_5098 <= grp_fu_4248_p2;
        add107_3349_cast_reg_5143 <= grp_fu_4293_p2;
        add107_3_1_cast_reg_5168 <= grp_fu_4318_p2;
        add107_3_2_cast_reg_5123 <= grp_fu_4273_p2;
        add107_3_3_cast_reg_5173 <= grp_fu_4323_p2;
        add107_3_cast_reg_5108 <= grp_fu_4258_p2;
        add107_cast_reg_5128 <= grp_fu_4278_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln101_reg_5181 <= add_ln101_fu_2291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln122_5_reg_5825_pp4_iter2_reg == 1'd0) & (icmp_ln124_1_reg_5808_pp4_iter2_reg == 1'd1) & (icmp_ln122_reg_5799_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln128_1_reg_5878 <= add_ln128_1_fu_3403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_reg_5799 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln129_reg_5863 <= add_ln129_fu_3392_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        add_ln129_reg_5863_pp4_iter2_reg <= add_ln129_reg_5863;
        add_ln129_reg_5863_pp4_iter3_reg <= add_ln129_reg_5863_pp4_iter2_reg;
        add_ln129_reg_5863_pp4_iter4_reg <= add_ln129_reg_5863_pp4_iter3_reg;
        icmp_ln122_reg_5799_pp4_iter2_reg <= icmp_ln122_reg_5799_pp4_iter1_reg;
        icmp_ln122_reg_5799_pp4_iter3_reg <= icmp_ln122_reg_5799_pp4_iter2_reg;
        icmp_ln124_1_reg_5808_pp4_iter2_reg <= icmp_ln124_1_reg_5808_pp4_iter1_reg;
        icmp_ln124_1_reg_5808_pp4_iter3_reg <= icmp_ln124_1_reg_5808_pp4_iter2_reg;
        select_ln122_1_reg_5816_pp4_iter2_reg <= select_ln122_1_reg_5816_pp4_iter1_reg;
        select_ln122_1_reg_5816_pp4_iter3_reg <= select_ln122_1_reg_5816_pp4_iter2_reg;
        select_ln122_1_reg_5816_pp4_iter4_reg <= select_ln122_1_reg_5816_pp4_iter3_reg;
        select_ln122_5_reg_5825_pp4_iter2_reg <= select_ln122_5_reg_5825_pp4_iter1_reg;
        select_ln122_5_reg_5825_pp4_iter3_reg <= select_ln122_5_reg_5825_pp4_iter2_reg;
        select_ln124_reg_5837_pp4_iter2_reg <= select_ln124_reg_5837_pp4_iter1_reg;
        select_ln124_reg_5837_pp4_iter3_reg <= select_ln124_reg_5837_pp4_iter2_reg;
        trunc_ln131_reg_5843_pp4_iter2_reg <= trunc_ln131_reg_5843_pp4_iter1_reg;
        trunc_ln131_reg_5843_pp4_iter3_reg <= trunc_ln131_reg_5843_pp4_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_reg_5799_pp4_iter3_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln130_reg_5883 <= add_ln130_fu_3441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln140_reg_6048 == 1'd0))) begin
        add_ln146_reg_6107 <= add_ln146_fu_3690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln140_reg_6048_pp5_iter1_reg == 1'd0))) begin
        add_ln148_reg_6142 <= add_ln148_fu_3757_p2;
        zext_ln158_reg_6147[8 : 0] <= zext_ln158_fu_3767_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter5_reg == 1'd0))) begin
        add_ln182_1_reg_6302 <= grp_fu_4430_p3;
        add_ln182_2_reg_6307 <= grp_fu_4437_p3;
        add_ln182_3_reg_6312 <= grp_fu_4444_p3;
        add_ln182_reg_6297 <= grp_fu_4423_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter5 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter4_reg == 1'd0))) begin
        add_ln188_1_reg_6282 <= grp_fu_4402_p3;
        add_ln188_2_reg_6287 <= grp_fu_4409_p3;
        add_ln188_3_reg_6292 <= grp_fu_4416_p3;
        add_ln188_reg_6277 <= grp_fu_4395_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter4 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter3_reg == 1'd0))) begin
        add_ln194_1_reg_6262 <= grp_fu_4374_p3;
        add_ln194_2_reg_6267 <= grp_fu_4381_p3;
        add_ln194_3_reg_6272 <= grp_fu_4388_p3;
        add_ln194_reg_6257 <= grp_fu_4367_p3;
        arrayidx2187_1_promoted545_fu_304 <= arrayidx2187_2_promoted573_fu_320;
        arrayidx2187_2_promoted573_fu_320 <= select_ln148_2_fu_3915_p3;
        arrayidx2187_promoted517_fu_288 <= arrayidx2187_1_promoted545_fu_304;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln82_reg_4845 <= add_ln82_fu_1937_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln89_reg_4946 <= add_ln89_fu_2075_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter2_reg == 1'd0))) begin
        arrayidx24011_1_promoted552_fu_308 <= arrayidx24011_2_promoted580_fu_324;
        arrayidx24011_2_promoted580_fu_324 <= select_ln148_1_fu_3840_p3;
        arrayidx24011_promoted524_fu_292 <= arrayidx24011_1_promoted552_fu_308;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter1_reg == 1'd0))) begin
        arrayidx26315_1_promoted559_fu_312 <= arrayidx26315_2_promoted587_fu_328;
        arrayidx26315_2_promoted587_fu_328 <= select_ln148_fu_3740_p3;
        arrayidx26315_promoted531_fu_296 <= arrayidx26315_1_promoted559_fu_312;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln140_reg_6048 == 1'd0))) begin
        arrayidx28619_1_promoted566_fu_316 <= arrayidx28619_2_promoted594_fu_332;
        arrayidx28619_2_promoted594_fu_332 <= data_l1_0_0_q0;
        arrayidx28619_promoted538_fu_300 <= arrayidx28619_1_promoted566_fu_316;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        bound148_reg_6322 <= grp_fu_4242_p2;
        icmp_ln285_reg_6327 <= icmp_ln285_fu_4075_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv79_reg_5056 <= conv79_fu_2219_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_2069_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        empty_44_reg_4951 <= empty_44_fu_2085_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln122_reg_5799 <= icmp_ln122_fu_3234_p2;
        icmp_ln122_reg_5799_pp4_iter1_reg <= icmp_ln122_reg_5799;
        icmp_ln124_1_reg_5808_pp4_iter1_reg <= icmp_ln124_1_reg_5808;
        select_ln122_1_reg_5816_pp4_iter1_reg <= select_ln122_1_reg_5816;
        select_ln122_5_reg_5825_pp4_iter1_reg <= select_ln122_5_reg_5825;
        select_ln124_reg_5837_pp4_iter1_reg <= select_ln124_reg_5837;
        trunc_ln131_reg_5843_pp4_iter1_reg <= trunc_ln131_reg_5843;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_3234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln124_1_reg_5808 <= icmp_ln124_1_fu_3245_p2;
        select_ln122_1_reg_5816 <= select_ln122_1_fu_3260_p3;
        select_ln122_5_reg_5825 <= select_ln122_5_fu_3284_p3;
        select_ln124_reg_5837 <= select_ln124_fu_3305_p3;
        trunc_ln131_reg_5843 <= trunc_ln131_fu_3313_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln140_reg_6048 <= icmp_ln140_fu_3588_p2;
        icmp_ln140_reg_6048_pp5_iter1_reg <= icmp_ln140_reg_6048;
        icmp_ln148_reg_6073_pp5_iter1_reg <= icmp_ln148_reg_6073;
        icmp_ln261_1_reg_6095_pp5_iter1_reg <= icmp_ln261_1_reg_6095;
        icmp_ln261_2_reg_6099_pp5_iter1_reg <= icmp_ln261_2_reg_6099;
        icmp_ln261_3_reg_6103_pp5_iter1_reg <= icmp_ln261_3_reg_6103;
        icmp_ln261_reg_6091_pp5_iter1_reg <= icmp_ln261_reg_6091;
        tmp_21_reg_6079_pp5_iter1_reg <= tmp_21_reg_6079;
        tmp_22_reg_6085_pp5_iter1_reg <= tmp_22_reg_6085;
        trunc_ln149_reg_6057_pp5_iter1_reg <= trunc_ln149_reg_6057;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        icmp_ln140_reg_6048_pp5_iter2_reg <= icmp_ln140_reg_6048_pp5_iter1_reg;
        icmp_ln140_reg_6048_pp5_iter3_reg <= icmp_ln140_reg_6048_pp5_iter2_reg;
        icmp_ln140_reg_6048_pp5_iter4_reg <= icmp_ln140_reg_6048_pp5_iter3_reg;
        icmp_ln140_reg_6048_pp5_iter5_reg <= icmp_ln140_reg_6048_pp5_iter4_reg;
        icmp_ln140_reg_6048_pp5_iter6_reg <= icmp_ln140_reg_6048_pp5_iter5_reg;
        icmp_ln148_reg_6073_pp5_iter2_reg <= icmp_ln148_reg_6073_pp5_iter1_reg;
        icmp_ln261_1_reg_6095_pp5_iter2_reg <= icmp_ln261_1_reg_6095_pp5_iter1_reg;
        icmp_ln261_1_reg_6095_pp5_iter3_reg <= icmp_ln261_1_reg_6095_pp5_iter2_reg;
        icmp_ln261_1_reg_6095_pp5_iter4_reg <= icmp_ln261_1_reg_6095_pp5_iter3_reg;
        icmp_ln261_1_reg_6095_pp5_iter5_reg <= icmp_ln261_1_reg_6095_pp5_iter4_reg;
        icmp_ln261_1_reg_6095_pp5_iter6_reg <= icmp_ln261_1_reg_6095_pp5_iter5_reg;
        icmp_ln261_2_reg_6099_pp5_iter2_reg <= icmp_ln261_2_reg_6099_pp5_iter1_reg;
        icmp_ln261_2_reg_6099_pp5_iter3_reg <= icmp_ln261_2_reg_6099_pp5_iter2_reg;
        icmp_ln261_2_reg_6099_pp5_iter4_reg <= icmp_ln261_2_reg_6099_pp5_iter3_reg;
        icmp_ln261_2_reg_6099_pp5_iter5_reg <= icmp_ln261_2_reg_6099_pp5_iter4_reg;
        icmp_ln261_2_reg_6099_pp5_iter6_reg <= icmp_ln261_2_reg_6099_pp5_iter5_reg;
        icmp_ln261_3_reg_6103_pp5_iter2_reg <= icmp_ln261_3_reg_6103_pp5_iter1_reg;
        icmp_ln261_3_reg_6103_pp5_iter3_reg <= icmp_ln261_3_reg_6103_pp5_iter2_reg;
        icmp_ln261_3_reg_6103_pp5_iter4_reg <= icmp_ln261_3_reg_6103_pp5_iter3_reg;
        icmp_ln261_3_reg_6103_pp5_iter5_reg <= icmp_ln261_3_reg_6103_pp5_iter4_reg;
        icmp_ln261_3_reg_6103_pp5_iter6_reg <= icmp_ln261_3_reg_6103_pp5_iter5_reg;
        icmp_ln261_reg_6091_pp5_iter2_reg <= icmp_ln261_reg_6091_pp5_iter1_reg;
        icmp_ln261_reg_6091_pp5_iter3_reg <= icmp_ln261_reg_6091_pp5_iter2_reg;
        icmp_ln261_reg_6091_pp5_iter4_reg <= icmp_ln261_reg_6091_pp5_iter3_reg;
        icmp_ln261_reg_6091_pp5_iter5_reg <= icmp_ln261_reg_6091_pp5_iter4_reg;
        icmp_ln261_reg_6091_pp5_iter6_reg <= icmp_ln261_reg_6091_pp5_iter5_reg;
        tmp_21_reg_6079_pp5_iter2_reg <= tmp_21_reg_6079_pp5_iter1_reg;
        tmp_22_reg_6085_pp5_iter2_reg <= tmp_22_reg_6085_pp5_iter1_reg;
        tmp_22_reg_6085_pp5_iter3_reg <= tmp_22_reg_6085_pp5_iter2_reg;
        trunc_ln149_reg_6057_pp5_iter2_reg <= trunc_ln149_reg_6057_pp5_iter1_reg;
        trunc_ln149_reg_6057_pp5_iter3_reg <= trunc_ln149_reg_6057_pp5_iter2_reg;
        trunc_ln149_reg_6057_pp5_iter4_reg <= trunc_ln149_reg_6057_pp5_iter3_reg;
        trunc_ln149_reg_6057_pp5_iter5_reg <= trunc_ln149_reg_6057_pp5_iter4_reg;
        trunc_ln149_reg_6057_pp5_iter6_reg <= trunc_ln149_reg_6057_pp5_iter5_reg;
        zext_ln158_reg_6147_pp5_iter3_reg[8 : 0] <= zext_ln158_reg_6147[8 : 0];
        zext_ln158_reg_6147_pp5_iter4_reg[8 : 0] <= zext_ln158_reg_6147_pp5_iter3_reg[8 : 0];
        zext_ln158_reg_6147_pp5_iter5_reg[8 : 0] <= zext_ln158_reg_6147_pp5_iter4_reg[8 : 0];
        zext_ln158_reg_6147_pp5_iter6_reg[8 : 0] <= zext_ln158_reg_6147_pp5_iter5_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln140_fu_3588_p2 == 1'd0))) begin
        icmp_ln148_reg_6073 <= icmp_ln148_fu_3612_p2;
        icmp_ln261_1_reg_6095 <= icmp_ln261_1_fu_3663_p2;
        icmp_ln261_2_reg_6099 <= icmp_ln261_2_fu_3674_p2;
        icmp_ln261_3_reg_6103 <= icmp_ln261_3_fu_3679_p2;
        icmp_ln261_reg_6091 <= icmp_ln261_fu_3652_p2;
        tmp_21_reg_6079 <= add_ln146_1_fu_3618_p2[32'd16];
        tmp_22_reg_6085 <= add_ln146_2_fu_3632_p2[32'd16];
        trunc_ln149_reg_6057 <= trunc_ln149_fu_3603_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln283_reg_6332 <= icmp_ln283_fu_4080_p2;
        icmp_ln283_reg_6332_pp6_iter1_reg <= icmp_ln283_reg_6332;
        icmp_ln284_reg_6341_pp6_iter1_reg <= icmp_ln284_reg_6341;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln283_reg_6332_pp6_iter2_reg <= icmp_ln283_reg_6332_pp6_iter1_reg;
        icmp_ln283_reg_6332_pp6_iter3_reg <= icmp_ln283_reg_6332_pp6_iter2_reg;
        select_ln284_1_reg_6364_pp6_iter3_reg <= select_ln284_1_reg_6364;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln283_fu_4080_p2 == 1'd0))) begin
        icmp_ln284_reg_6341 <= icmp_ln284_fu_4091_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln90_reg_5064 <= icmp_ln90_fu_2223_p2;
        select_ln90_reg_5073_pp3_iter1_reg <= select_ln90_reg_5073;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_fu_2286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        lshr_ln117_10_reg_5393 <= {{add_ln118_11_fu_2677_p2[10:2]}};
        lshr_ln117_11_reg_5398 <= {{add_ln118_12_fu_2693_p2[10:2]}};
        lshr_ln117_12_reg_5403 <= {{add_ln118_13_fu_2709_p2[10:2]}};
        lshr_ln117_13_reg_5408 <= {{add_ln118_14_fu_2725_p2[10:2]}};
        lshr_ln117_14_reg_5413 <= {{add_ln118_15_fu_2741_p2[10:2]}};
        lshr_ln117_2_reg_5348 <= {{add_ln118_2_fu_2533_p2[10:2]}};
        lshr_ln117_3_reg_5353 <= {{add_ln118_3_fu_2549_p2[10:2]}};
        lshr_ln117_4_reg_5358 <= {{add_ln118_4_fu_2565_p2[10:2]}};
        lshr_ln117_5_reg_5363 <= {{add_ln118_5_fu_2581_p2[10:2]}};
        lshr_ln117_6_reg_5368 <= {{add_ln118_6_fu_2597_p2[10:2]}};
        lshr_ln117_7_reg_5373 <= {{add_ln118_7_fu_2613_p2[10:2]}};
        lshr_ln117_8_reg_5378 <= {{add_ln118_8_fu_2629_p2[10:2]}};
        lshr_ln117_9_reg_5383 <= {{add_ln118_9_fu_2645_p2[10:2]}};
        lshr_ln117_s_reg_5388 <= {{add_ln118_10_fu_2661_p2[10:2]}};
        select_ln101_1_reg_5191 <= select_ln101_1_fu_2316_p3;
        select_ln101_reg_5186 <= select_ln101_fu_2302_p3;
        trunc_ln101_10_reg_5252 <= trunc_ln101_10_fu_2428_p1;
        trunc_ln101_11_reg_5257 <= trunc_ln101_11_fu_2437_p1;
        trunc_ln101_12_reg_5262 <= trunc_ln101_12_fu_2446_p1;
        trunc_ln101_13_reg_5267 <= trunc_ln101_13_fu_2455_p1;
        trunc_ln101_14_reg_5272 <= trunc_ln101_14_fu_2464_p1;
        trunc_ln101_15_reg_5277 <= trunc_ln101_15_fu_2473_p1;
        trunc_ln101_1_reg_5207 <= trunc_ln101_1_fu_2347_p1;
        trunc_ln101_2_reg_5212 <= trunc_ln101_2_fu_2356_p1;
        trunc_ln101_3_reg_5217 <= trunc_ln101_3_fu_2365_p1;
        trunc_ln101_4_reg_5222 <= trunc_ln101_4_fu_2374_p1;
        trunc_ln101_5_reg_5227 <= trunc_ln101_5_fu_2383_p1;
        trunc_ln101_6_reg_5232 <= trunc_ln101_6_fu_2392_p1;
        trunc_ln101_7_reg_5237 <= trunc_ln101_7_fu_2401_p1;
        trunc_ln101_8_reg_5242 <= trunc_ln101_8_fu_2410_p1;
        trunc_ln101_9_reg_5247 <= trunc_ln101_9_fu_2419_p1;
        trunc_ln101_reg_5202 <= trunc_ln101_fu_2338_p1;
        trunc_ln118_reg_5287 <= trunc_ln118_fu_2481_p1;
        zext_ln101_1_reg_5197[7 : 0] <= zext_ln101_1_fu_2324_p1[7 : 0];
        zext_ln103_reg_5282[7 : 0] <= zext_ln103_fu_2477_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_fu_1747_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln1_reg_4626 <= {{k_1_reg_1276[10:2]}};
        trunc_ln75_reg_4622 <= trunc_ln75_fu_1758_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_fu_1795_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lshr_ln2_reg_4654 <= {{k_2_reg_1287[10:2]}};
        trunc_ln79_reg_4650 <= trunc_ln79_fu_1806_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln_reg_4587 <= {{k_reg_1265[7:2]}};
        trunc_ln71_reg_4583 <= trunc_ln71_fu_1702_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul42_reg_4608 <= grp_fu_4231_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul55_reg_4636 <= grp_fu_4237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_1932_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        mul_ln82_1_reg_4879 <= mul_ln82_1_fu_1991_p2;
        mul_ln82_2_reg_4887 <= mul_ln82_2_fu_2006_p2;
        mul_ln82_3_reg_4895 <= mul_ln82_3_fu_2021_p2;
        mul_ln82_4_reg_4903 <= mul_ln82_4_fu_2036_p2;
        mul_ln82_reg_4867 <= mul_ln82_fu_1982_p2;
        p_cast13_reg_4917[7 : 2] <= p_cast13_fu_2049_p1[7 : 2];
        p_mid_reg_4862[7 : 2] <= p_mid_fu_1970_p3[7 : 2];
        select_ln82_1_reg_4857 <= select_ln82_1_fu_1962_p3;
        select_ln82_reg_4850 <= select_ln82_fu_1948_p3;
        tmp_20_reg_4911[7 : 2] <= tmp_20_fu_2041_p3[7 : 2];
        zext_ln89_reg_4925[7 : 2] <= zext_ln89_fu_2059_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        output_reg_0_0 <= psum1_3_reg_1474;
        output_reg_0_1 <= psum2_3_reg_1484;
        output_reg_0_2 <= psum3_3_reg_1494;
        output_reg_1_0 <= psum1_2_reg_1504;
        output_reg_1_1 <= psum2_2_reg_1514;
        output_reg_1_2 <= psum3_2_reg_1524;
        output_reg_2_0 <= psum1_1_reg_1534;
        output_reg_2_1 <= psum2_1_reg_1544;
        output_reg_2_2 <= psum3_1_reg_1554;
        output_reg_3_0 <= psum1_reg_1564;
        output_reg_3_1 <= psum2_reg_1574;
        output_reg_3_2 <= psum3_reg_1584;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        p_cast44_reg_5908 <= p_cast44_fu_3492_p1;
        p_cast46_reg_5928 <= p_cast46_fu_3504_p1;
        p_cast48_reg_5948 <= p_cast48_fu_3516_p1;
        p_cast50_reg_5968 <= p_cast50_fu_3528_p1;
        p_cast60_reg_5913 <= p_cast60_fu_3495_p1;
        p_cast62_reg_5918 <= p_cast62_fu_3498_p1;
        p_cast64_reg_5923 <= p_cast64_fu_3501_p1;
        p_cast66_reg_5933 <= p_cast66_fu_3507_p1;
        p_cast68_reg_5938 <= p_cast68_fu_3510_p1;
        p_cast70_reg_5943 <= p_cast70_fu_3513_p1;
        p_cast72_reg_5953 <= p_cast72_fu_3519_p1;
        p_cast74_reg_5958 <= p_cast74_fu_3522_p1;
        p_cast76_reg_5963 <= p_cast76_fu_3525_p1;
        p_cast78_reg_5973 <= p_cast78_fu_3531_p1;
        p_cast80_reg_5978 <= p_cast80_fu_3534_p1;
        sext_ln182_reg_5983 <= sext_ln182_fu_3537_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        p_mid131_reg_5789 <= p_mid131_fu_3215_p2;
        tmp_16_reg_5779 <= tmp_16_fu_3179_p6;
        tmp_17_reg_5784 <= tmp_17_fu_3201_p6;
        zext_ln101_reg_5773[7 : 0] <= zext_ln101_fu_3168_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln283_fu_4080_p2 == 1'd0))) begin
        select_ln283_1_reg_6349 <= select_ln283_1_fu_4102_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln283_reg_6332_pp6_iter1_reg == 1'd0))) begin
        select_ln284_1_reg_6364 <= select_ln284_1_fu_4180_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln90_fu_2223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln90_1_reg_5078 <= select_ln90_1_fu_2253_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_fu_2223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln90_reg_5073 <= select_ln90_fu_2239_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp1_reg_4597 <= tmp1_fu_1739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_10_reg_5623 <= tmp_10_fu_3002_p6;
        tmp_11_reg_5628 <= tmp_11_fu_3024_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_12_reg_5673 <= tmp_12_fu_3060_p6;
        tmp_13_reg_5678 <= tmp_13_fu_3082_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_14_reg_5723 <= tmp_14_fu_3118_p6;
        tmp_15_reg_5728 <= tmp_15_fu_3140_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_3_reg_5423 <= tmp_3_fu_2770_p6;
        tmp_4_reg_5428 <= tmp_4_fu_2792_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_5_reg_5473 <= tmp_5_fu_2828_p6;
        tmp_6_reg_5478 <= tmp_6_fu_2850_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_7_reg_5523 <= tmp_7_fu_2886_p6;
        tmp_8_reg_5528 <= tmp_8_fu_2908_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_9_reg_5573 <= tmp_9_fu_2944_p6;
        tmp_s_reg_5578 <= tmp_s_fu_2966_p6;
    end
end

always @ (*) begin
    if ((icmp_ln69_fu_1691_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln73_fu_1747_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln77_fu_1795_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln90_fu_2223_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0))) begin
        ap_condition_pp4_exit_iter4_state45 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter4_state45 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_fu_3234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter4 == 1'b1) & (ap_enable_reg_pp5_iter3 == 1'b0))) begin
        ap_condition_pp5_exit_iter4_state52 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter4_state52 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln140_fu_3588_p2 == 1'd1))) begin
        ap_condition_pp5_flush_enable = 1'b1;
    end else begin
        ap_condition_pp5_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        ap_condition_pp6_exit_iter2_state62 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter2_state62 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln283_fu_4080_p2 == 1'd1))) begin
        ap_condition_pp6_flush_enable = 1'b1;
    end else begin
        ap_condition_pp6_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln90_reg_5064 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        ap_phi_mux_hi_phi_fu_1357_p4 = select_ln90_1_reg_5078;
    end else begin
        ap_phi_mux_hi_phi_fu_1357_p4 = hi_reg_1353;
    end
end

always @ (*) begin
    if (((icmp_ln283_reg_6332 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        ap_phi_mux_k_3_phi_fu_1609_p4 = select_ln283_1_reg_6349;
    end else begin
        ap_phi_mux_k_3_phi_fu_1609_p4 = k_3_reg_1605;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter5 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter4_reg == 1'd0))) begin
        ap_phi_mux_psum1_1_phi_fu_1537_p4 = add_ln194_1_reg_6262;
    end else begin
        ap_phi_mux_psum1_1_phi_fu_1537_p4 = psum1_1_reg_1534;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter5 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter4_reg == 1'd0))) begin
        ap_phi_mux_psum1_2_phi_fu_1507_p4 = add_ln194_2_reg_6267;
    end else begin
        ap_phi_mux_psum1_2_phi_fu_1507_p4 = psum1_2_reg_1504;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter5 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter4_reg == 1'd0))) begin
        ap_phi_mux_psum1_3_phi_fu_1477_p4 = add_ln194_3_reg_6272;
    end else begin
        ap_phi_mux_psum1_3_phi_fu_1477_p4 = psum1_3_reg_1474;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter5 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter4_reg == 1'd0))) begin
        ap_phi_mux_psum1_phi_fu_1567_p4 = add_ln194_reg_6257;
    end else begin
        ap_phi_mux_psum1_phi_fu_1567_p4 = psum1_reg_1564;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter5_reg == 1'd0))) begin
        ap_phi_mux_psum2_1_phi_fu_1547_p4 = add_ln188_1_reg_6282;
    end else begin
        ap_phi_mux_psum2_1_phi_fu_1547_p4 = psum2_1_reg_1544;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter5_reg == 1'd0))) begin
        ap_phi_mux_psum2_2_phi_fu_1517_p4 = add_ln188_2_reg_6287;
    end else begin
        ap_phi_mux_psum2_2_phi_fu_1517_p4 = psum2_2_reg_1514;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter5_reg == 1'd0))) begin
        ap_phi_mux_psum2_3_phi_fu_1487_p4 = add_ln188_3_reg_6292;
    end else begin
        ap_phi_mux_psum2_3_phi_fu_1487_p4 = psum2_3_reg_1484;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter5_reg == 1'd0))) begin
        ap_phi_mux_psum2_phi_fu_1577_p4 = add_ln188_reg_6277;
    end else begin
        ap_phi_mux_psum2_phi_fu_1577_p4 = psum2_reg_1574;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter6_reg == 1'd0))) begin
        ap_phi_mux_psum3_1_phi_fu_1557_p4 = add_ln182_1_reg_6302;
    end else begin
        ap_phi_mux_psum3_1_phi_fu_1557_p4 = psum3_1_reg_1554;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter6_reg == 1'd0))) begin
        ap_phi_mux_psum3_2_phi_fu_1527_p4 = add_ln182_2_reg_6307;
    end else begin
        ap_phi_mux_psum3_2_phi_fu_1527_p4 = psum3_2_reg_1524;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter6_reg == 1'd0))) begin
        ap_phi_mux_psum3_3_phi_fu_1497_p4 = add_ln182_3_reg_6312;
    end else begin
        ap_phi_mux_psum3_3_phi_fu_1497_p4 = psum3_3_reg_1494;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln140_reg_6048_pp5_iter6_reg == 1'd0))) begin
        ap_phi_mux_psum3_phi_fu_1587_p4 = add_ln182_reg_6297;
    end else begin
        ap_phi_mux_psum3_phi_fu_1587_p4 = psum3_reg_1584;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | (~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_0_address0 = newIndex66_cast_fu_2104_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_address0 = zext_ln71_fu_1724_p1;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln71_reg_4583 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_1_address0 = newIndex66_cast_fu_2104_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_address0 = zext_ln71_fu_1724_p1;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln71_reg_4583 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_2_address0 = newIndex66_cast_fu_2104_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_address0 = zext_ln71_fu_1724_p1;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln71_reg_4583 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_3_address0 = newIndex66_cast_fu_2104_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_address0 = zext_ln71_fu_1724_p1;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln71_reg_4583 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln283_reg_6332_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln283_reg_6332_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        data_l1_0_0_address0 = zext_ln149_fu_3607_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        data_l1_0_0_address0 = zext_ln129_fu_3485_p1;
    end else begin
        data_l1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
        data_l1_0_0_ce0 = 1'b1;
    end else begin
        data_l1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln122_1_reg_5816_pp4_iter4_reg == 2'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        data_l1_0_0_we0 = 1'b1;
    end else begin
        data_l1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        data_l1_1_0_address0 = zext_ln149_1_fu_3695_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        data_l1_1_0_address0 = zext_ln129_fu_3485_p1;
    end else begin
        data_l1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1)))) begin
        data_l1_1_0_ce0 = 1'b1;
    end else begin
        data_l1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln122_1_reg_5816_pp4_iter4_reg == 2'd1) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        data_l1_1_0_we0 = 1'b1;
    end else begin
        data_l1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        data_l1_2_0_address0 = zext_ln149_2_fu_3752_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        data_l1_2_0_address0 = zext_ln129_fu_3485_p1;
    end else begin
        data_l1_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
        data_l1_2_0_ce0 = 1'b1;
    end else begin
        data_l1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln122_1_reg_5816_pp4_iter4_reg == 2'd2) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        data_l1_2_0_we0 = 1'b1;
    end else begin
        data_l1_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter3 == 1'b1))) begin
        data_l1_3_0_address0 = zext_ln149_3_fu_3847_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        data_l1_3_0_address0 = zext_ln129_fu_3485_p1;
    end else begin
        data_l1_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1)))) begin
        data_l1_3_0_ce0 = 1'b1;
    end else begin
        data_l1_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln122_1_reg_5816_pp4_iter4_reg == 2'd3) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        data_l1_3_0_we0 = 1'b1;
    end else begin
        data_l1_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        data_l2_0_address0 = zext_ln130_1_fu_3456_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_0_address0 = zext_ln79_fu_1828_p1;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_0_ce0 = 1'b1;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln79_reg_4650 == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        data_l2_1_address0 = zext_ln130_1_fu_3456_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_1_address0 = zext_ln79_fu_1828_p1;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_1_ce0 = 1'b1;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln79_reg_4650 == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        data_l2_2_address0 = zext_ln130_1_fu_3456_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_2_address0 = zext_ln79_fu_1828_p1;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_2_ce0 = 1'b1;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln79_reg_4650 == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        data_l2_3_address0 = zext_ln130_1_fu_3456_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_3_address0 = zext_ln79_fu_1828_p1;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_3_ce0 = 1'b1;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln79_reg_4650 == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        grp_fu_4483_ce = 1'b1;
    end else begin
        grp_fu_4483_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        output_l1_0_address0 = zext_ln158_reg_6147_pp5_iter6_reg;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_0_address0 = zext_ln94_fu_2279_p1;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter3 == 1'b1))) begin
        output_l1_0_address1 = zext_ln286_fu_4206_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        output_l1_0_address1 = zext_ln158_3_fu_3795_p1;
    end else begin
        output_l1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1)))) begin
        output_l1_0_ce0 = 1'b1;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
        output_l1_0_ce1 = 1'b1;
    end else begin
        output_l1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        output_l1_0_d0 = grp_fu_4475_p3;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_0_d0 = conv79_reg_5056;
    end else begin
        output_l1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4951 == 2'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln261_3_reg_6103_pp5_iter6_reg == 1'd1)))) begin
        output_l1_0_we0 = 1'b1;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        output_l1_1_address0 = zext_ln268_2_fu_3993_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_1_address0 = zext_ln94_fu_2279_p1;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter3 == 1'b1))) begin
        output_l1_1_address1 = zext_ln286_fu_4206_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        output_l1_1_address1 = zext_ln158_2_fu_3786_p1;
    end else begin
        output_l1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1)))) begin
        output_l1_1_ce0 = 1'b1;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
        output_l1_1_ce1 = 1'b1;
    end else begin
        output_l1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        output_l1_1_d0 = grp_fu_4467_p3;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_1_d0 = conv79_reg_5056;
    end else begin
        output_l1_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4951 == 2'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln261_2_reg_6099_pp5_iter6_reg == 1'd1)))) begin
        output_l1_1_we0 = 1'b1;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        output_l1_2_address0 = zext_ln268_1_fu_3978_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_2_address0 = zext_ln94_fu_2279_p1;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter3 == 1'b1))) begin
        output_l1_2_address1 = zext_ln286_fu_4206_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        output_l1_2_address1 = zext_ln158_1_fu_3777_p1;
    end else begin
        output_l1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1)))) begin
        output_l1_2_ce0 = 1'b1;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
        output_l1_2_ce1 = 1'b1;
    end else begin
        output_l1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        output_l1_2_d0 = grp_fu_4459_p3;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_2_d0 = conv79_reg_5056;
    end else begin
        output_l1_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4951 == 2'd2) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln261_1_reg_6095_pp5_iter6_reg == 1'd1)))) begin
        output_l1_2_we0 = 1'b1;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        output_l1_3_address0 = zext_ln268_fu_3963_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_3_address0 = zext_ln94_fu_2279_p1;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter3 == 1'b1))) begin
        output_l1_3_address1 = zext_ln286_fu_4206_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        output_l1_3_address1 = zext_ln158_fu_3767_p1;
    end else begin
        output_l1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1)))) begin
        output_l1_3_ce0 = 1'b1;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
        output_l1_3_ce1 = 1'b1;
    end else begin
        output_l1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        output_l1_3_d0 = grp_fu_4451_p3;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_3_d0 = conv79_reg_5056;
    end else begin
        output_l1_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_44_reg_4951 == 2'd3) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln261_reg_6091_pp5_iter6_reg == 1'd1)))) begin
        output_l1_3_we0 = 1'b1;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address0 = zext_ln117_30_fu_3154_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address0 = zext_ln117_28_fu_3096_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address0 = zext_ln117_26_fu_3038_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address0 = zext_ln117_24_fu_2980_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address0 = zext_ln117_22_fu_2922_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address0 = zext_ln117_20_fu_2864_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address0 = zext_ln117_18_fu_2806_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address0 = zext_ln117_17_fu_2525_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = zext_ln75_fu_1780_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address1 = zext_ln117_31_fu_3161_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address1 = zext_ln117_29_fu_3103_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address1 = zext_ln117_27_fu_3045_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address1 = zext_ln117_25_fu_2987_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address1 = zext_ln117_23_fu_2929_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address1 = zext_ln117_21_fu_2871_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address1 = zext_ln117_19_fu_2813_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address1 = zext_ln117_16_fu_2501_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln75_reg_4622 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address0 = zext_ln117_30_fu_3154_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address0 = zext_ln117_28_fu_3096_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address0 = zext_ln117_26_fu_3038_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address0 = zext_ln117_24_fu_2980_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address0 = zext_ln117_22_fu_2922_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address0 = zext_ln117_20_fu_2864_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address0 = zext_ln117_18_fu_2806_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address0 = zext_ln117_17_fu_2525_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = zext_ln75_fu_1780_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address1 = zext_ln117_31_fu_3161_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address1 = zext_ln117_29_fu_3103_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address1 = zext_ln117_27_fu_3045_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address1 = zext_ln117_25_fu_2987_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address1 = zext_ln117_23_fu_2929_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address1 = zext_ln117_21_fu_2871_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address1 = zext_ln117_19_fu_2813_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address1 = zext_ln117_16_fu_2501_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln75_reg_4622 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address0 = zext_ln117_30_fu_3154_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address0 = zext_ln117_28_fu_3096_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address0 = zext_ln117_26_fu_3038_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address0 = zext_ln117_24_fu_2980_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address0 = zext_ln117_22_fu_2922_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address0 = zext_ln117_20_fu_2864_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address0 = zext_ln117_18_fu_2806_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address0 = zext_ln117_17_fu_2525_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = zext_ln75_fu_1780_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address1 = zext_ln117_31_fu_3161_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address1 = zext_ln117_29_fu_3103_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address1 = zext_ln117_27_fu_3045_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address1 = zext_ln117_25_fu_2987_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address1 = zext_ln117_23_fu_2929_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address1 = zext_ln117_21_fu_2871_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address1 = zext_ln117_19_fu_2813_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address1 = zext_ln117_16_fu_2501_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln75_reg_4622 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address0 = zext_ln117_30_fu_3154_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address0 = zext_ln117_28_fu_3096_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address0 = zext_ln117_26_fu_3038_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address0 = zext_ln117_24_fu_2980_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address0 = zext_ln117_22_fu_2922_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address0 = zext_ln117_20_fu_2864_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address0 = zext_ln117_18_fu_2806_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address0 = zext_ln117_17_fu_2525_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = zext_ln75_fu_1780_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address1 = zext_ln117_31_fu_3161_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address1 = zext_ln117_29_fu_3103_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address1 = zext_ln117_27_fu_3045_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address1 = zext_ln117_25_fu_2987_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address1 = zext_ln117_23_fu_2929_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address1 = zext_ln117_21_fu_2871_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address1 = zext_ln117_19_fu_2813_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address1 = zext_ln117_16_fu_2501_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln75_reg_4622 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_fu_1691_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_fu_1691_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln73_fu_1747_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln73_fu_1747_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln77_fu_1795_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln77_fu_1795_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln82_fu_1932_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln89_fu_2069_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln90_fu_2223_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln90_fu_2223_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln101_fu_2286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b1) & (ap_enable_reg_pp5_iter3 == 1'b0)) & ~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter7 == 1'b1) & (ap_enable_reg_pp5_iter6 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter7 == 1'b1) & (ap_enable_reg_pp5_iter6 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b1) & (ap_enable_reg_pp5_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1)) & ~((ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter3 == 1'b0)) | ((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_cast_fu_1882_p1 = C_reg_4507;

assign C_fu_1653_p1 = bias_in_V_dout[7:0];

assign K_fu_1649_p1 = bias_in_V_dout[7:0];

assign RS_fu_1683_p1 = bias_in_V_dout[7:0];

assign WH_cast_fu_1885_p1 = WH_reg_4514;

assign WH_fu_1657_p1 = bias_in_V_dout[7:0];

assign WH_in_fu_1661_p1 = bias_in_V_dout[7:0];

assign add_ln101_10_fu_2414_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_2_1_cast_reg_5158));

assign add_ln101_11_fu_2423_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_2_2_cast_reg_5118));

assign add_ln101_12_fu_2432_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_2_3_cast_reg_5163));

assign add_ln101_13_fu_2441_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_3_cast_reg_5108));

assign add_ln101_14_fu_2450_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_3_1_cast_reg_5168));

assign add_ln101_15_fu_2459_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_3_2_cast_reg_5123));

assign add_ln101_16_fu_2468_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_3_3_cast_reg_5173));

assign add_ln101_17_fu_2310_p2 = (8'd1 + r_reg_1386);

assign add_ln101_1_fu_2333_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_cast_reg_5128));

assign add_ln101_2_fu_2342_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_1333_cast_reg_5133));

assign add_ln101_3_fu_2351_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_2341_cast_reg_5138));

assign add_ln101_4_fu_2360_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_3349_cast_reg_5143));

assign add_ln101_5_fu_2369_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_1_cast_reg_5103));

assign add_ln101_6_fu_2378_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_1_1_cast_reg_5148));

assign add_ln101_7_fu_2387_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_1_2_cast_reg_5113));

assign add_ln101_8_fu_2396_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_1_3_cast_reg_5153));

assign add_ln101_9_fu_2405_p2 = ($signed(mul_ln101_fu_2328_p2) + $signed(add107_2_cast_reg_5098));

assign add_ln101_fu_2291_p2 = (indvar_flatten105_reg_1375 + 16'd1);

assign add_ln103_fu_4070_p2 = (select_ln101_reg_5186 + 8'd1);

assign add_ln117_10_fu_3052_p2 = (trunc_ln101_10_reg_5252 + trunc_ln118_reg_5287);

assign add_ln117_11_fu_3074_p2 = (trunc_ln101_11_reg_5257 + trunc_ln118_reg_5287);

assign add_ln117_12_fu_3110_p2 = (trunc_ln101_12_reg_5262 + trunc_ln118_reg_5287);

assign add_ln117_13_fu_3132_p2 = (trunc_ln101_13_reg_5267 + trunc_ln118_reg_5287);

assign add_ln117_14_fu_3171_p2 = (trunc_ln101_14_reg_5272 + trunc_ln118_reg_5287);

assign add_ln117_15_fu_3193_p2 = (trunc_ln101_15_reg_5277 + trunc_ln118_reg_5287);

assign add_ln117_1_fu_2784_p2 = (trunc_ln101_1_reg_5207 + trunc_ln118_reg_5287);

assign add_ln117_2_fu_2820_p2 = (trunc_ln101_2_reg_5212 + trunc_ln118_reg_5287);

assign add_ln117_3_fu_2842_p2 = (trunc_ln101_3_reg_5217 + trunc_ln118_reg_5287);

assign add_ln117_4_fu_2878_p2 = (trunc_ln101_4_reg_5222 + trunc_ln118_reg_5287);

assign add_ln117_5_fu_2900_p2 = (trunc_ln101_5_reg_5227 + trunc_ln118_reg_5287);

assign add_ln117_6_fu_2936_p2 = (trunc_ln101_6_reg_5232 + trunc_ln118_reg_5287);

assign add_ln117_7_fu_2958_p2 = (trunc_ln101_7_reg_5237 + trunc_ln118_reg_5287);

assign add_ln117_8_fu_2994_p2 = (trunc_ln101_8_reg_5242 + trunc_ln118_reg_5287);

assign add_ln117_9_fu_3016_p2 = (trunc_ln101_9_reg_5247 + trunc_ln118_reg_5287);

assign add_ln117_fu_2762_p2 = (trunc_ln101_reg_5202 + trunc_ln118_reg_5287);

assign add_ln118_10_fu_2661_p2 = (zext_ln103_fu_2477_p1 + add_ln101_11_fu_2423_p2);

assign add_ln118_11_fu_2677_p2 = (zext_ln103_fu_2477_p1 + add_ln101_12_fu_2432_p2);

assign add_ln118_12_fu_2693_p2 = (zext_ln103_fu_2477_p1 + add_ln101_13_fu_2441_p2);

assign add_ln118_13_fu_2709_p2 = (zext_ln103_fu_2477_p1 + add_ln101_14_fu_2450_p2);

assign add_ln118_14_fu_2725_p2 = (zext_ln103_fu_2477_p1 + add_ln101_15_fu_2459_p2);

assign add_ln118_15_fu_2741_p2 = (zext_ln103_fu_2477_p1 + add_ln101_16_fu_2468_p2);

assign add_ln118_1_fu_2509_p2 = (zext_ln103_fu_2477_p1 + add_ln101_2_fu_2342_p2);

assign add_ln118_2_fu_2533_p2 = (zext_ln103_fu_2477_p1 + add_ln101_3_fu_2351_p2);

assign add_ln118_3_fu_2549_p2 = (zext_ln103_fu_2477_p1 + add_ln101_4_fu_2360_p2);

assign add_ln118_4_fu_2565_p2 = (zext_ln103_fu_2477_p1 + add_ln101_5_fu_2369_p2);

assign add_ln118_5_fu_2581_p2 = (zext_ln103_fu_2477_p1 + add_ln101_6_fu_2378_p2);

assign add_ln118_6_fu_2597_p2 = (zext_ln103_fu_2477_p1 + add_ln101_7_fu_2387_p2);

assign add_ln118_7_fu_2613_p2 = (zext_ln103_fu_2477_p1 + add_ln101_8_fu_2396_p2);

assign add_ln118_8_fu_2629_p2 = (zext_ln103_fu_2477_p1 + add_ln101_9_fu_2405_p2);

assign add_ln118_9_fu_2645_p2 = (zext_ln103_fu_2477_p1 + add_ln101_10_fu_2414_p2);

assign add_ln118_fu_2485_p2 = (zext_ln103_fu_2477_p1 + add_ln101_1_fu_2333_p2);

assign add_ln122_1_fu_3250_p2 = (3'd1 + ci_reg_1419);

assign add_ln122_fu_3239_p2 = (18'd1 + indvar_flatten47_reg_1408);

assign add_ln124_1_fu_3418_p2 = (zext_ln103_reg_5282 + select_ln124_2_fu_3412_p3);

assign add_ln124_2_fu_3427_p2 = (trunc_ln124_fu_3423_p1 + trunc_ln118_reg_5287);

assign add_ln124_3_fu_3323_p2 = (indvar_flatten15_reg_1430 + 16'd1);

assign add_ln124_fu_3360_p2 = (8'd1 + select_ln122_fu_3346_p3);

assign add_ln125_fu_3317_p2 = (select_ln124_fu_3305_p3 + 8'd1);

assign add_ln128_1_fu_3403_p2 = ($signed(grp_fu_4342_p2) + $signed(p_mid131_reg_5789));

assign add_ln129_fu_3392_p2 = (select_ln124_1_fu_3375_p3 + wi_1_cast58_fu_3389_p1);

assign add_ln130_fu_3441_p2 = (add_ln124_2_fu_3427_p2 + trunc_ln131_reg_5843_pp4_iter3_reg);

assign add_ln131_fu_3435_p2 = (wi_1_cast_fu_3432_p1 + add_ln124_1_fu_3418_p2);

assign add_ln140_fu_3593_p2 = (i_reg_1463 + 16'd1);

assign add_ln146_1_fu_3618_p2 = ($signed(17'd131070) + $signed(zext_ln140_fu_3599_p1));

assign add_ln146_2_fu_3632_p2 = ($signed(17'd131069) + $signed(zext_ln140_fu_3599_p1));

assign add_ln146_3_fu_3747_p2 = ($signed(9'd510) + $signed(trunc_ln149_reg_6057_pp5_iter1_reg));

assign add_ln146_fu_3690_p2 = ($signed(9'd511) + $signed(trunc_ln149_reg_6057));

assign add_ln148_fu_3757_p2 = ($signed(9'd509) + $signed(trunc_ln149_reg_6057_pp5_iter1_reg));

assign add_ln158_1_fu_3772_p2 = (mul_ln82_reg_4867 + add_ln146_3_fu_3747_p2);

assign add_ln158_2_fu_3782_p2 = (mul_ln82_reg_4867 + add_ln146_reg_6107);

assign add_ln158_3_fu_3791_p2 = (mul_ln82_reg_4867 + trunc_ln149_reg_6057_pp5_iter1_reg);

assign add_ln158_fu_3762_p2 = (mul_ln82_reg_4867 + add_ln148_fu_3757_p2);

assign add_ln261_1_fu_3657_p2 = ($signed(zext_ln140_fu_3599_p1) + $signed(17'd131067));

assign add_ln261_2_fu_3668_p2 = ($signed(zext_ln140_fu_3599_p1) + $signed(17'd131068));

assign add_ln261_3_fu_3953_p2 = ($signed(9'd506) + $signed(trunc_ln149_reg_6057_pp5_iter6_reg));

assign add_ln261_4_fu_3968_p2 = ($signed(trunc_ln149_reg_6057_pp5_iter6_reg) + $signed(9'd507));

assign add_ln261_5_fu_3983_p2 = ($signed(trunc_ln149_reg_6057_pp5_iter6_reg) + $signed(9'd508));

assign add_ln261_fu_3646_p2 = ($signed(17'd131066) + $signed(zext_ln140_fu_3599_p1));

assign add_ln269_1_fu_3973_p2 = (add_ln261_4_fu_3968_p2 + mul_ln82_reg_4867);

assign add_ln269_2_fu_3988_p2 = (add_ln261_5_fu_3983_p2 + mul_ln82_reg_4867);

assign add_ln269_fu_3958_p2 = (add_ln261_3_fu_3953_p2 + mul_ln82_reg_4867);

assign add_ln283_1_fu_4096_p2 = (6'd1 + ap_phi_mux_k_3_phi_fu_1609_p4);

assign add_ln283_fu_4085_p2 = (indvar_flatten160_reg_1594 + 24'd1);

assign add_ln284_1_fu_4114_p2 = (19'd1 + indvar_flatten143_reg_1616);

assign add_ln284_fu_4157_p2 = (3'd1 + select_ln283_fu_4128_p3);

assign add_ln285_fu_4200_p2 = (16'd1 + select_ln284_fu_4168_p3);

assign add_ln69_fu_1696_p2 = (k_reg_1265 + 8'd1);

assign add_ln73_fu_1752_p2 = (k_1_reg_1276 + 32'd1);

assign add_ln77_fu_1800_p2 = (k_2_reg_1287 + 24'd1);

assign add_ln82_1_fu_1956_p2 = (ko_reg_1309 + 6'd1);

assign add_ln82_fu_1937_p2 = (indvar_flatten136_reg_1298 + 12'd1);

assign add_ln83_fu_2757_p2 = (select_ln82_reg_4850 + 6'd1);

assign add_ln89_fu_2075_p2 = (ki_1_reg_1331 + 3'd1);

assign add_ln90_1_fu_2247_p2 = (ap_phi_mux_hi_phi_fu_1357_p4 + 8'd1);

assign add_ln90_fu_2228_p2 = (indvar_flatten_reg_1342 + 16'd1);

assign add_ln91_fu_2265_p2 = (select_ln90_fu_2239_p3 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1 = ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4 = ((1'b1 == ap_block_pp4_stage0_subdone) & (ap_ST_fsm_pp4_stage0 == ap_CS_fsm));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5 = ((1'b1 == ap_block_pp5_stage0_subdone) & (ap_ST_fsm_pp5_stage0 == ap_CS_fsm));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6 = ((1'b1 == ap_block_pp6_stage0_subdone) & (ap_ST_fsm_pp6_stage0 == ap_CS_fsm));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln283_reg_6332_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln283_reg_6332_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln283_reg_6332_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp1_stage0_iter1 = (weight_in_V_empty_n == 1'b0);
end

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp2_stage0_iter1 = (data_in_V_empty_n == 1'b0);
end

assign ap_block_state24_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state64_pp6_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln283_reg_6332_pp6_iter3_reg == 1'd0));
end

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (bias_in_V_empty_n == 1'b0);
end

always @ (*) begin
    ap_enable_operation_1123 = (icmp_ln261_reg_6091_pp5_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1129 = (icmp_ln261_1_reg_6095_pp5_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1135 = (icmp_ln261_2_reg_6099_pp5_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_1138 = (icmp_ln261_3_reg_6103_pp5_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_956 = (ap_predicate_op956_load_state50 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_960 = (ap_predicate_op960_load_state50 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_964 = (ap_predicate_op964_load_state50 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_968 = (icmp_ln140_reg_6048_pp5_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_992 = (ap_predicate_op992_load_state51 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_994 = (ap_predicate_op994_load_state51 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_996 = (ap_predicate_op996_load_state51 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_998 = (icmp_ln140_reg_6048_pp5_iter2_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

always @ (*) begin
    ap_enable_state50_pp5_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state51_pp5_iter3_stage0 = ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter3 == 1'b1));
end

always @ (*) begin
    ap_enable_state55_pp5_iter7_stage0 = ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter7 == 1'b1));
end

always @ (*) begin
    ap_predicate_op956_load_state50 = ((tmp_22_reg_6085_pp5_iter1_reg == 1'd0) & (icmp_ln140_reg_6048_pp5_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op960_load_state50 = ((tmp_21_reg_6079_pp5_iter1_reg == 1'd0) & (icmp_ln140_reg_6048_pp5_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op964_load_state50 = ((icmp_ln148_reg_6073_pp5_iter1_reg == 1'd1) & (icmp_ln140_reg_6048_pp5_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op992_load_state51 = ((tmp_22_reg_6085_pp5_iter2_reg == 1'd0) & (icmp_ln140_reg_6048_pp5_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op994_load_state51 = ((tmp_21_reg_6079_pp5_iter2_reg == 1'd0) & (icmp_ln140_reg_6048_pp5_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op996_load_state51 = ((icmp_ln148_reg_6073_pp5_iter2_reg == 1'd1) & (icmp_ln140_reg_6048_pp5_iter2_reg == 1'd0));
end

assign bound110_fu_1917_p0 = bound110_fu_1917_p00;

assign bound110_fu_1917_p00 = div68_cast_fu_1864_p4;

assign bound110_fu_1917_p1 = bound110_fu_1917_p10;

assign bound110_fu_1917_p10 = div66_cast_fu_1873_p4;

assign bound20_fu_1905_p1 = tmp_2_fu_1897_p3;

assign conv79_fu_2219_p1 = $signed(tmp_1_fu_2205_p6);

assign conv_out_V_din = p_Repl2_s_fu_4213_p6;

assign div66_cast_fu_1873_p4 = {{bias_in_V_read_reg_4491[7:2]}};

assign div68_cast_fu_1864_p4 = {{bias_in_V_read_1_reg_4502[7:2]}};

assign empty_41_fu_1888_p1 = tmp1_reg_4597[10:0];

assign empty_42_fu_1923_p1 = mul151_fu_1835_p2[8:0];

assign empty_44_fu_2085_p1 = ki_1_reg_1331[1:0];

assign empty_45_fu_2089_p2 = (p_mid_reg_4862 + zext_ln89_1_fu_2081_p1);

assign empty_47_fu_2112_p2 = (tmp_20_reg_4911 | 8'd1);

assign empty_48_fu_2121_p2 = (tmp_20_reg_4911 | 8'd2);

assign empty_49_fu_3219_p1 = ci_reg_1419[1:0];

assign empty_53_fu_3256_p1 = add_ln122_1_fu_3250_p2[1:0];

assign empty_57_fu_2053_p2 = (tmp_20_fu_2041_p3 | 8'd3);

assign grp_fu_4231_p0 = grp_fu_4231_p00;

assign grp_fu_4231_p00 = tmp1_fu_1739_p2;

assign grp_fu_4231_p1 = grp_fu_4231_p10;

assign grp_fu_4231_p10 = tmp_fu_1731_p2;

assign grp_fu_4237_p0 = grp_fu_4237_p00;

assign grp_fu_4237_p00 = tmp2_fu_1787_p2;

assign grp_fu_4237_p1 = zext_ln62_reg_4552;

assign grp_fu_4242_p0 = grp_fu_4242_p00;

assign grp_fu_4242_p00 = div66_cast_reg_4769;

assign grp_fu_4242_p1 = grp_fu_4242_p10;

assign grp_fu_4242_p10 = tmp_2_reg_4815;

assign grp_fu_4248_p0 = (p_cast13_reg_4917 + mul_ln82_3_reg_4895);

assign grp_fu_4253_p0 = (p_cast13_reg_4917 + mul_ln82_2_reg_4887);

assign grp_fu_4258_p0 = (p_cast13_reg_4917 + mul_ln82_4_reg_4903);

assign grp_fu_4263_p0 = (p_cast14_fu_2126_p1 + mul_ln82_2_reg_4887);

assign grp_fu_4268_p0 = (p_cast14_fu_2126_p1 + mul_ln82_3_reg_4895);

assign grp_fu_4273_p0 = (p_cast14_fu_2126_p1 + mul_ln82_4_reg_4903);

assign grp_fu_4278_p0 = (p_cast13_reg_4917 + mul_ln82_1_reg_4879);

assign grp_fu_4283_p0 = (p_cast15_fu_2117_p1 + mul_ln82_1_reg_4879);

assign grp_fu_4288_p0 = (p_cast14_fu_2126_p1 + mul_ln82_1_reg_4879);

assign grp_fu_4293_p0 = (zext_ln89_reg_4925 + mul_ln82_1_reg_4879);

assign grp_fu_4298_p0 = (p_cast15_fu_2117_p1 + mul_ln82_2_reg_4887);

assign grp_fu_4303_p0 = (zext_ln89_reg_4925 + mul_ln82_2_reg_4887);

assign grp_fu_4308_p0 = (p_cast15_fu_2117_p1 + mul_ln82_3_reg_4895);

assign grp_fu_4313_p0 = (zext_ln89_reg_4925 + mul_ln82_3_reg_4895);

assign grp_fu_4318_p0 = (p_cast15_fu_2117_p1 + mul_ln82_4_reg_4903);

assign grp_fu_4323_p0 = (zext_ln89_reg_4925 + mul_ln82_4_reg_4903);

assign grp_fu_4328_p0 = grp_fu_4328_p00;

assign grp_fu_4328_p00 = select_ln90_1_fu_2253_p3;

assign grp_fu_4328_p1 = WH_cast_reg_4782;

assign grp_fu_4328_p2 = (wi_cast_fu_2271_p1 + mul_ln82_reg_4867);

assign grp_fu_4336_p1 = grp_fu_4336_p10;

assign grp_fu_4336_p10 = tmp_18_fu_3223_p3;

assign grp_fu_4342_p1 = grp_fu_4342_p10;

assign grp_fu_4342_p10 = tmp_19_mid1_fu_3268_p3;

assign grp_fu_4349_p0 = zext_ln101_reg_5773;

assign grp_fu_4349_p1 = zext_ln124_fu_3337_p1;

assign grp_fu_4349_p2 = trunc_ln3_cast54_reg_4752;

assign grp_fu_4358_p0 = zext_ln101_reg_5773;

assign grp_fu_4358_p1 = zext_ln124_1_fu_3366_p1;

assign grp_fu_4358_p2 = trunc_ln3_cast54_reg_4752;

assign grp_fu_4358_p3 = ((icmp_ln124_1_reg_5808_pp4_iter2_reg[0:0] === 1'b1) ? grp_fu_4342_p2 : grp_fu_4336_p2);

assign grp_fu_4367_p1 = p_cast64_reg_5923;

assign grp_fu_4367_p2 = ((tmp_22_reg_6085_pp5_iter2_reg[0:0] === 1'b1) ? 32'd0 : output_l1_3_q1);

assign grp_fu_4374_p1 = p_cast70_reg_5943;

assign grp_fu_4374_p2 = ((tmp_21_reg_6079_pp5_iter2_reg[0:0] === 1'b1) ? 32'd0 : output_l1_2_q1);

assign grp_fu_4381_p1 = p_cast76_reg_5963;

assign grp_fu_4381_p2 = ((icmp_ln148_reg_6073_pp5_iter2_reg[0:0] === 1'b1) ? output_l1_1_q1 : 32'd0);

assign grp_fu_4388_p1 = sext_ln182_reg_5983;

assign grp_fu_4395_p1 = p_cast62_reg_5918;

assign grp_fu_4402_p1 = p_cast68_reg_5938;

assign grp_fu_4409_p1 = p_cast74_reg_5958;

assign grp_fu_4416_p1 = p_cast80_reg_5978;

assign grp_fu_4423_p1 = p_cast60_reg_5913;

assign grp_fu_4430_p1 = p_cast66_reg_5933;

assign grp_fu_4437_p1 = p_cast72_reg_5953;

assign grp_fu_4444_p1 = p_cast78_reg_5973;

assign grp_fu_4451_p0 = p_cast44_reg_5908;

assign grp_fu_4459_p0 = p_cast46_reg_5928;

assign grp_fu_4467_p0 = p_cast48_reg_5948;

assign grp_fu_4475_p0 = p_cast50_reg_5968;

assign grp_fu_4483_p0 = grp_fu_4483_p00;

assign grp_fu_4483_p00 = select_ln283_1_fu_4102_p3;

assign grp_fu_4483_p2 = select_ln284_fu_4168_p3[8:0];

assign icmp_ln101_fu_2286_p2 = ((indvar_flatten105_reg_1375 == tmp1_reg_4597) ? 1'b1 : 1'b0);

assign icmp_ln103_fu_2297_p2 = ((s_reg_1397 == RS_reg_4562) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_3234_p2 = ((indvar_flatten47_reg_1408 == tmp_2_reg_4815) ? 1'b1 : 1'b0);

assign icmp_ln124_1_fu_3245_p2 = ((indvar_flatten15_reg_1430 == mul151_reg_4731) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_1927_p2 = ((WH_reg_4514 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_3279_p2 = ((wi_1_reg_1441 == WH_reg_4514) ? 1'b1 : 1'b0);

assign icmp_ln140_fu_3588_p2 = ((i_reg_1463 == input_rows_reg_4747) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_3612_p2 = ((i_reg_1463 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln261_1_fu_3663_p2 = ((add_ln261_1_fu_3657_p2 < mul151_cast51_reg_4739) ? 1'b1 : 1'b0);

assign icmp_ln261_2_fu_3674_p2 = ((add_ln261_2_fu_3668_p2 < mul151_cast51_reg_4739) ? 1'b1 : 1'b0);

assign icmp_ln261_3_fu_3679_p2 = ((add_ln146_2_fu_3632_p2 < mul151_cast51_reg_4739) ? 1'b1 : 1'b0);

assign icmp_ln261_fu_3652_p2 = ((add_ln261_fu_3646_p2 < mul151_cast51_reg_4739) ? 1'b1 : 1'b0);

assign icmp_ln283_fu_4080_p2 = ((indvar_flatten160_reg_1594 == bound148_reg_6322) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_4091_p2 = ((indvar_flatten143_reg_1616 == bound20_reg_4821) ? 1'b1 : 1'b0);

assign icmp_ln285_1_fu_4146_p2 = ((wh_reg_1638 == mul151_reg_4731) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_4075_p2 = ((mul151_reg_4731 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1691_p2 = ((k_reg_1265 == K_reg_4496) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_1747_p2 = ((k_1_reg_1276 == mul42_reg_4608) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_1795_p2 = ((k_2_reg_1287 == mul55_reg_4636) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1932_p2 = ((indvar_flatten136_reg_1298 == bound110_reg_4826) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_1943_p2 = ((co_reg_1320 == div68_cast_reg_4764) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_2069_p2 = ((ki_1_reg_1331 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_2223_p2 = ((indvar_flatten_reg_1342 == mul151_reg_4731) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_2234_p2 = ((wi_reg_1364 == WH_reg_4514) ? 1'b1 : 1'b0);

assign input_rows_fu_1852_p2 = (tmp3_cast_fu_1848_p1 + mul151_fu_1835_p2);

assign lshr_ln117_1_fu_2515_p4 = {{add_ln118_1_fu_2509_p2[10:2]}};

assign lshr_ln3_fu_2491_p4 = {{add_ln118_fu_2485_p2[10:2]}};

assign lshr_ln4_fu_3446_p4 = {{add_ln131_fu_3435_p2[10:2]}};

assign mul151_cast51_fu_1839_p1 = mul151_fu_1835_p2;

assign mul151_fu_1835_p0 = zext_ln58_reg_4546;

assign mul151_fu_1835_p1 = zext_ln58_reg_4546;

assign mul_ln101_fu_2328_p0 = mul_ln101_fu_2328_p00;

assign mul_ln101_fu_2328_p00 = select_ln101_1_fu_2316_p3;

assign mul_ln101_fu_2328_p1 = trunc_ln4_cast18_reg_4759;

assign mul_ln128_1_fu_3370_p0 = WH_cast_reg_4782;

assign mul_ln128_1_fu_3370_p1 = zext_ln124_1_fu_3366_p1;

assign mul_ln128_fu_3341_p0 = WH_cast_reg_4782;

assign mul_ln128_fu_3341_p1 = zext_ln124_fu_3337_p1;

assign mul_ln82_1_fu_1991_p0 = C_cast_reg_4774;

assign mul_ln82_1_fu_1991_p1 = mul_ln82_1_fu_1991_p10;

assign mul_ln82_1_fu_1991_p10 = p_mid_fu_1970_p3;

assign mul_ln82_2_fu_2006_p0 = C_cast_reg_4774;

assign mul_ln82_2_fu_2006_p1 = mul_ln82_2_fu_2006_p10;

assign mul_ln82_2_fu_2006_p10 = or_ln82_fu_1996_p2;

assign mul_ln82_3_fu_2021_p0 = C_cast_reg_4774;

assign mul_ln82_3_fu_2021_p1 = mul_ln82_3_fu_2021_p10;

assign mul_ln82_3_fu_2021_p10 = or_ln82_1_fu_2011_p2;

assign mul_ln82_4_fu_2036_p0 = C_cast_reg_4774;

assign mul_ln82_4_fu_2036_p1 = mul_ln82_4_fu_2036_p10;

assign mul_ln82_4_fu_2036_p10 = or_ln82_2_fu_2026_p2;

assign mul_ln82_fu_1982_p1 = mul_ln82_fu_1982_p10;

assign mul_ln82_fu_1982_p10 = select_ln82_1_fu_1962_p3;

assign newIndex66_cast_fu_2104_p1 = newIndex_fu_2094_p4;

assign newIndex_fu_2094_p4 = {{empty_45_fu_2089_p2[7:2]}};

assign or_ln124_fu_3299_p2 = (select_ln122_5_fu_3284_p3 | icmp_ln124_1_fu_3245_p2);

assign or_ln284_fu_4163_p2 = (select_ln283_3_fu_4151_p3 | icmp_ln284_reg_6341_pp6_iter1_reg);

assign or_ln82_1_fu_2011_p2 = (p_mid_fu_1970_p3 | 8'd2);

assign or_ln82_2_fu_2026_p2 = (p_mid_fu_1970_p3 | 8'd3);

assign or_ln82_fu_1996_p2 = (p_mid_fu_1970_p3 | 8'd1);

assign p_cast13_fu_2049_p1 = tmp_20_fu_2041_p3;

assign p_cast14_fu_2126_p1 = empty_48_fu_2121_p2;

assign p_cast15_fu_2117_p1 = empty_47_fu_2112_p2;

assign p_cast44_fu_3492_p1 = $signed(tmp_17_reg_5784);

assign p_cast46_fu_3504_p1 = $signed(tmp_13_reg_5678);

assign p_cast48_fu_3516_p1 = $signed(tmp_s_reg_5578);

assign p_cast50_fu_3528_p1 = $signed(tmp_6_reg_5478);

assign p_cast60_fu_3495_p1 = $signed(tmp_16_reg_5779);

assign p_cast62_fu_3498_p1 = $signed(tmp_15_reg_5728);

assign p_cast64_fu_3501_p1 = $signed(tmp_14_reg_5723);

assign p_cast66_fu_3507_p1 = $signed(tmp_12_reg_5673);

assign p_cast68_fu_3510_p1 = $signed(tmp_11_reg_5628);

assign p_cast70_fu_3513_p1 = $signed(tmp_10_reg_5623);

assign p_cast72_fu_3519_p1 = $signed(tmp_9_reg_5573);

assign p_cast74_fu_3522_p1 = $signed(tmp_8_reg_5528);

assign p_cast76_fu_3525_p1 = $signed(tmp_7_reg_5523);

assign p_cast78_fu_3531_p1 = $signed(tmp_5_reg_5473);

assign p_cast80_fu_3534_p1 = $signed(tmp_4_reg_5428);

assign p_mid131_fu_3215_p0 = trunc_ln3_cast54_reg_4752;

assign p_mid131_fu_3215_p1 = zext_ln101_1_reg_5197;

assign p_mid_fu_1970_p3 = {{select_ln82_1_fu_1962_p3}, {2'd0}};

assign select_ln101_1_fu_2316_p3 = ((icmp_ln103_fu_2297_p2[0:0] === 1'b1) ? add_ln101_17_fu_2310_p2 : r_reg_1386);

assign select_ln101_fu_2302_p3 = ((icmp_ln103_fu_2297_p2[0:0] === 1'b1) ? 8'd0 : s_reg_1397);

assign select_ln122_1_fu_3260_p3 = ((icmp_ln124_1_fu_3245_p2[0:0] === 1'b1) ? empty_53_fu_3256_p1 : empty_49_fu_3219_p1);

assign select_ln122_3_fu_3353_p3 = ((icmp_ln124_1_reg_5808[0:0] === 1'b1) ? 9'd0 : mul_ln128_fu_3341_p2);

assign select_ln122_4_fu_3407_p3 = ((icmp_ln124_1_reg_5808_pp4_iter3_reg[0:0] === 1'b1) ? add_ln128_1_reg_5878 : grp_fu_4349_p4);

assign select_ln122_5_fu_3284_p3 = ((icmp_ln124_1_fu_3245_p2[0:0] === 1'b1) ? icmp_ln124_reg_4837 : icmp_ln125_fu_3279_p2);

assign select_ln122_6_fu_3291_p3 = ((icmp_ln124_1_fu_3245_p2[0:0] === 1'b1) ? add_ln122_1_fu_3250_p2 : ci_reg_1419);

assign select_ln122_fu_3346_p3 = ((icmp_ln124_1_reg_5808[0:0] === 1'b1) ? 8'd0 : hi_1_reg_1452);

assign select_ln124_1_fu_3375_p3 = ((select_ln122_5_reg_5825[0:0] === 1'b1) ? mul_ln128_1_fu_3370_p2 : select_ln122_3_fu_3353_p3);

assign select_ln124_2_fu_3412_p3 = ((select_ln122_5_reg_5825_pp4_iter3_reg[0:0] === 1'b1) ? grp_fu_4358_p4 : select_ln122_4_fu_3407_p3);

assign select_ln124_3_fu_3382_p3 = ((select_ln122_5_reg_5825[0:0] === 1'b1) ? add_ln124_fu_3360_p2 : select_ln122_fu_3346_p3);

assign select_ln124_4_fu_3329_p3 = ((icmp_ln124_1_fu_3245_p2[0:0] === 1'b1) ? 16'd1 : add_ln124_3_fu_3323_p2);

assign select_ln124_fu_3305_p3 = ((or_ln124_fu_3299_p2[0:0] === 1'b1) ? 8'd0 : wi_1_reg_1441);

assign select_ln148_1_fu_3840_p3 = ((tmp_21_reg_6079_pp5_iter2_reg[0:0] === 1'b1) ? 8'd0 : data_l1_2_0_q0);

assign select_ln148_2_fu_3915_p3 = ((tmp_22_reg_6085_pp5_iter3_reg[0:0] === 1'b1) ? 8'd0 : data_l1_3_0_q0);

assign select_ln148_fu_3740_p3 = ((icmp_ln148_reg_6073_pp5_iter1_reg[0:0] === 1'b1) ? data_l1_1_0_q0 : 8'd0);

assign select_ln283_1_fu_4102_p3 = ((icmp_ln284_fu_4091_p2[0:0] === 1'b1) ? add_ln283_1_fu_4096_p2 : ap_phi_mux_k_3_phi_fu_1609_p4);

assign select_ln283_2_fu_4139_p3 = ((icmp_ln284_reg_6341_pp6_iter1_reg[0:0] === 1'b1) ? 2'd0 : trunc_ln286_fu_4135_p1);

assign select_ln283_3_fu_4151_p3 = ((icmp_ln284_reg_6341_pp6_iter1_reg[0:0] === 1'b1) ? icmp_ln285_reg_6327 : icmp_ln285_1_fu_4146_p2);

assign select_ln283_fu_4128_p3 = ((icmp_ln284_reg_6341_pp6_iter1_reg[0:0] === 1'b1) ? 3'd0 : ki_reg_1627);

assign select_ln284_1_fu_4180_p3 = ((select_ln283_3_fu_4151_p3[0:0] === 1'b1) ? trunc_ln286_1_fu_4176_p1 : select_ln283_2_fu_4139_p3);

assign select_ln284_2_fu_4188_p3 = ((select_ln283_3_fu_4151_p3[0:0] === 1'b1) ? add_ln284_fu_4157_p2 : select_ln283_fu_4128_p3);

assign select_ln284_3_fu_4120_p3 = ((icmp_ln284_fu_4091_p2[0:0] === 1'b1) ? 19'd1 : add_ln284_1_fu_4114_p2);

assign select_ln284_fu_4168_p3 = ((or_ln284_fu_4163_p2[0:0] === 1'b1) ? 16'd0 : wh_reg_1638);

assign select_ln82_1_fu_1962_p3 = ((icmp_ln83_fu_1943_p2[0:0] === 1'b1) ? add_ln82_1_fu_1956_p2 : ko_reg_1309);

assign select_ln82_fu_1948_p3 = ((icmp_ln83_fu_1943_p2[0:0] === 1'b1) ? 6'd0 : co_reg_1320);

assign select_ln90_1_fu_2253_p3 = ((icmp_ln91_fu_2234_p2[0:0] === 1'b1) ? add_ln90_1_fu_2247_p2 : ap_phi_mux_hi_phi_fu_1357_p4);

assign select_ln90_fu_2239_p3 = ((icmp_ln91_fu_2234_p2[0:0] === 1'b1) ? 8'd0 : wi_reg_1364);

assign sext_ln182_fu_3537_p1 = $signed(tmp_3_reg_5423);

assign tmp1_fu_1739_p0 = zext_ln66_reg_4568;

assign tmp1_fu_1739_p1 = zext_ln66_reg_4568;

assign tmp2_fu_1787_p0 = zext_ln56_1_reg_4540;

assign tmp2_fu_1787_p1 = zext_ln62_1_reg_4557;

assign tmp3_cast_fu_1848_p1 = tmp3_fu_1843_p2;

assign tmp3_fu_1843_p2 = (9'd6 + zext_ln56_reg_4535);

assign tmp5_cast_fu_1891_p0 = trunc_ln3_cast54_fu_1858_p1;

assign tmp5_cast_fu_1891_p1 = trunc_ln3_cast54_fu_1858_p1;

assign tmp_10_fu_3002_p5 = add_ln117_8_fu_2994_p2;

assign tmp_11_fu_3024_p5 = add_ln117_9_fu_3016_p2;

assign tmp_12_fu_3060_p5 = add_ln117_10_fu_3052_p2;

assign tmp_13_fu_3082_p5 = add_ln117_11_fu_3074_p2;

assign tmp_14_fu_3118_p5 = add_ln117_12_fu_3110_p2;

assign tmp_15_fu_3140_p5 = add_ln117_13_fu_3132_p2;

assign tmp_16_fu_3179_p5 = add_ln117_14_fu_3171_p2;

assign tmp_17_fu_3201_p5 = add_ln117_15_fu_3193_p2;

assign tmp_18_fu_3223_p3 = {{select_ln82_reg_4850}, {empty_49_fu_3219_p1}};

assign tmp_19_fu_3467_p5 = add_ln130_reg_5883;

assign tmp_19_mid1_fu_3268_p3 = {{select_ln82_reg_4850}, {empty_53_fu_3256_p1}};

assign tmp_1_fu_2205_p5 = empty_44_reg_4951;

assign tmp_20_fu_2041_p3 = {{select_ln82_fu_1948_p3}, {2'd0}};

assign tmp_2_fu_1897_p3 = {{mul151_fu_1835_p2}, {2'd0}};

assign tmp_3_fu_2770_p5 = add_ln117_fu_2762_p2;

assign tmp_4_fu_2792_p5 = add_ln117_1_fu_2784_p2;

assign tmp_5_fu_2828_p5 = add_ln117_2_fu_2820_p2;

assign tmp_6_fu_2850_p5 = add_ln117_3_fu_2842_p2;

assign tmp_7_fu_2886_p5 = add_ln117_4_fu_2878_p2;

assign tmp_8_fu_2908_p5 = add_ln117_5_fu_2900_p2;

assign tmp_9_fu_2944_p5 = add_ln117_6_fu_2936_p2;

assign tmp_fu_1731_p0 = zext_ln56_1_reg_4540;

assign tmp_fu_1731_p1 = zext_ln54_reg_4530;

assign tmp_s_fu_2966_p5 = add_ln117_7_fu_2958_p2;

assign trunc_ln101_10_fu_2428_p1 = add_ln101_11_fu_2423_p2[1:0];

assign trunc_ln101_11_fu_2437_p1 = add_ln101_12_fu_2432_p2[1:0];

assign trunc_ln101_12_fu_2446_p1 = add_ln101_13_fu_2441_p2[1:0];

assign trunc_ln101_13_fu_2455_p1 = add_ln101_14_fu_2450_p2[1:0];

assign trunc_ln101_14_fu_2464_p1 = add_ln101_15_fu_2459_p2[1:0];

assign trunc_ln101_15_fu_2473_p1 = add_ln101_16_fu_2468_p2[1:0];

assign trunc_ln101_1_fu_2347_p1 = add_ln101_2_fu_2342_p2[1:0];

assign trunc_ln101_2_fu_2356_p1 = add_ln101_3_fu_2351_p2[1:0];

assign trunc_ln101_3_fu_2365_p1 = add_ln101_4_fu_2360_p2[1:0];

assign trunc_ln101_4_fu_2374_p1 = add_ln101_5_fu_2369_p2[1:0];

assign trunc_ln101_5_fu_2383_p1 = add_ln101_6_fu_2378_p2[1:0];

assign trunc_ln101_6_fu_2392_p1 = add_ln101_7_fu_2387_p2[1:0];

assign trunc_ln101_7_fu_2401_p1 = add_ln101_8_fu_2396_p2[1:0];

assign trunc_ln101_8_fu_2410_p1 = add_ln101_9_fu_2405_p2[1:0];

assign trunc_ln101_9_fu_2419_p1 = add_ln101_10_fu_2414_p2[1:0];

assign trunc_ln101_fu_2338_p1 = add_ln101_1_fu_2333_p2[1:0];

assign trunc_ln118_fu_2481_p1 = select_ln101_fu_2302_p3[1:0];

assign trunc_ln124_fu_3423_p1 = select_ln124_2_fu_3412_p3[1:0];

assign trunc_ln131_fu_3313_p1 = select_ln124_fu_3305_p3[1:0];

assign trunc_ln149_fu_3603_p1 = i_reg_1463[8:0];

assign trunc_ln286_1_fu_4176_p1 = add_ln284_fu_4157_p2[1:0];

assign trunc_ln286_fu_4135_p1 = ki_reg_1627[1:0];

assign trunc_ln3_cast54_fu_1858_p1 = WH_in_reg_4523;

assign trunc_ln4_cast18_fu_1861_p1 = RS_reg_4562;

assign trunc_ln708_1_fu_1772_p1 = weight_in_V_dout[7:0];

assign trunc_ln708_2_fu_1820_p1 = data_in_V_dout[7:0];

assign trunc_ln708_fu_1716_p1 = bias_in_V_dout[7:0];

assign trunc_ln71_fu_1702_p1 = k_reg_1265[1:0];

assign trunc_ln75_fu_1758_p1 = k_1_reg_1276[1:0];

assign trunc_ln79_fu_1806_p1 = k_2_reg_1287[1:0];

assign wi_1_cast58_fu_3389_p1 = select_ln124_reg_5837;

assign wi_1_cast_fu_3432_p1 = select_ln124_reg_5837_pp4_iter3_reg;

assign wi_cast_fu_2271_p1 = select_ln90_reg_5073_pp3_iter1_reg;

assign zext_ln101_1_fu_2324_p1 = select_ln101_1_fu_2316_p3;

assign zext_ln101_fu_3168_p1 = select_ln101_1_reg_5191;

assign zext_ln103_fu_2477_p1 = select_ln101_fu_2302_p3;

assign zext_ln117_16_fu_2501_p1 = lshr_ln3_fu_2491_p4;

assign zext_ln117_17_fu_2525_p1 = lshr_ln117_1_fu_2515_p4;

assign zext_ln117_18_fu_2806_p1 = lshr_ln117_2_reg_5348;

assign zext_ln117_19_fu_2813_p1 = lshr_ln117_3_reg_5353;

assign zext_ln117_20_fu_2864_p1 = lshr_ln117_4_reg_5358;

assign zext_ln117_21_fu_2871_p1 = lshr_ln117_5_reg_5363;

assign zext_ln117_22_fu_2922_p1 = lshr_ln117_6_reg_5368;

assign zext_ln117_23_fu_2929_p1 = lshr_ln117_7_reg_5373;

assign zext_ln117_24_fu_2980_p1 = lshr_ln117_8_reg_5378;

assign zext_ln117_25_fu_2987_p1 = lshr_ln117_9_reg_5383;

assign zext_ln117_26_fu_3038_p1 = lshr_ln117_s_reg_5388;

assign zext_ln117_27_fu_3045_p1 = lshr_ln117_10_reg_5393;

assign zext_ln117_28_fu_3096_p1 = lshr_ln117_11_reg_5398;

assign zext_ln117_29_fu_3103_p1 = lshr_ln117_12_reg_5403;

assign zext_ln117_30_fu_3154_p1 = lshr_ln117_13_reg_5408;

assign zext_ln117_31_fu_3161_p1 = lshr_ln117_14_reg_5413;

assign zext_ln124_1_fu_3366_p1 = add_ln124_fu_3360_p2;

assign zext_ln124_fu_3337_p1 = hi_1_reg_1452;

assign zext_ln129_fu_3485_p1 = add_ln129_reg_5863_pp4_iter4_reg;

assign zext_ln130_1_fu_3456_p1 = lshr_ln4_fu_3446_p4;

assign zext_ln140_fu_3599_p1 = i_reg_1463;

assign zext_ln149_1_fu_3695_p1 = add_ln146_fu_3690_p2;

assign zext_ln149_2_fu_3752_p1 = add_ln146_3_fu_3747_p2;

assign zext_ln149_3_fu_3847_p1 = add_ln148_reg_6142;

assign zext_ln149_fu_3607_p1 = i_reg_1463;

assign zext_ln158_1_fu_3777_p1 = add_ln158_1_fu_3772_p2;

assign zext_ln158_2_fu_3786_p1 = add_ln158_2_fu_3782_p2;

assign zext_ln158_3_fu_3795_p1 = add_ln158_3_fu_3791_p2;

assign zext_ln158_fu_3767_p1 = add_ln158_fu_3762_p2;

assign zext_ln268_1_fu_3978_p1 = add_ln269_1_fu_3973_p2;

assign zext_ln268_2_fu_3993_p1 = add_ln269_2_fu_3988_p2;

assign zext_ln268_fu_3963_p1 = add_ln269_fu_3958_p2;

assign zext_ln286_fu_4206_p1 = $unsigned(grp_fu_4483_p3);

assign zext_ln54_fu_1665_p1 = K_reg_4496;

assign zext_ln56_1_fu_1671_p1 = C_reg_4507;

assign zext_ln56_fu_1668_p1 = C_reg_4507;

assign zext_ln58_fu_1674_p1 = WH_reg_4514;

assign zext_ln62_1_fu_1680_p1 = WH_in_reg_4523;

assign zext_ln62_fu_1677_p1 = WH_in_reg_4523;

assign zext_ln66_fu_1687_p1 = RS_fu_1683_p1;

assign zext_ln71_fu_1724_p1 = lshr_ln_reg_4587;

assign zext_ln75_fu_1780_p1 = lshr_ln1_reg_4626;

assign zext_ln79_fu_1828_p1 = lshr_ln2_reg_4654;

assign zext_ln89_1_fu_2081_p1 = ki_1_reg_1331;

assign zext_ln89_fu_2059_p1 = empty_57_fu_2053_p2;

assign zext_ln94_fu_2279_p1 = grp_fu_4328_p3;

always @ (posedge ap_clk) begin
    zext_ln54_reg_4530[15:8] <= 8'b00000000;
    zext_ln56_reg_4535[8] <= 1'b0;
    zext_ln56_1_reg_4540[15:8] <= 8'b00000000;
    zext_ln58_reg_4546[15:8] <= 8'b00000000;
    zext_ln62_reg_4552[23:8] <= 16'b0000000000000000;
    zext_ln62_1_reg_4557[15:8] <= 8'b00000000;
    zext_ln66_reg_4568[15:8] <= 8'b00000000;
    mul151_cast51_reg_4739[16] <= 1'b0;
    trunc_ln3_cast54_reg_4752[10:8] <= 3'b000;
    trunc_ln4_cast18_reg_4759[10:8] <= 3'b000;
    C_cast_reg_4774[10:8] <= 3'b000;
    WH_cast_reg_4782[8] <= 1'b0;
    tmp_2_reg_4815[1:0] <= 2'b00;
    bound20_reg_4821[1:0] <= 2'b00;
    bound20_reg_4821[18] <= 1'b0;
    p_mid_reg_4862[1:0] <= 2'b00;
    tmp_20_reg_4911[1:0] <= 2'b00;
    p_cast13_reg_4917[1:0] <= 2'b00;
    p_cast13_reg_4917[10:8] <= 3'b000;
    zext_ln89_reg_4925[1:0] <= 2'b11;
    zext_ln89_reg_4925[10:8] <= 3'b000;
    zext_ln101_1_reg_5197[10:8] <= 3'b000;
    zext_ln103_reg_5282[10:8] <= 3'b000;
    zext_ln101_reg_5773[8] <= 1'b0;
    zext_ln158_reg_6147[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln158_reg_6147_pp5_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln158_reg_6147_pp5_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln158_reg_6147_pp5_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln158_reg_6147_pp5_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //Conv_sysarr_dbbuf
