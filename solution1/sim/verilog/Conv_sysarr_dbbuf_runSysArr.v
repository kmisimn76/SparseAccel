// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_sysarr_dbbuf_runSysArr (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        data_l1buf_018_address0,
        data_l1buf_018_ce0,
        data_l1buf_018_q0,
        data_l1buf_119_address0,
        data_l1buf_119_ce0,
        data_l1buf_119_q0,
        data_l1buf_220_address0,
        data_l1buf_220_ce0,
        data_l1buf_220_q0,
        data_l1buf_321_address0,
        data_l1buf_321_ce0,
        data_l1buf_321_q0,
        output_l1_pass_0_address0,
        output_l1_pass_0_ce0,
        output_l1_pass_0_we0,
        output_l1_pass_0_d0,
        output_l1_pass_1_address0,
        output_l1_pass_1_ce0,
        output_l1_pass_1_we0,
        output_l1_pass_1_d0,
        output_l1_pass_2_address0,
        output_l1_pass_2_ce0,
        output_l1_pass_2_we0,
        output_l1_pass_2_d0,
        output_l1_pass_3_address0,
        output_l1_pass_3_ce0,
        output_l1_pass_3_we0,
        output_l1_pass_3_d0,
        empty_dout,
        empty_empty_n,
        empty_read,
        s_dout,
        s_empty_n,
        s_read,
        r_dout,
        r_empty_n,
        r_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_state10 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state13 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
output  [8:0] data_l1buf_018_address0;
output   data_l1buf_018_ce0;
input  [7:0] data_l1buf_018_q0;
output  [8:0] data_l1buf_119_address0;
output   data_l1buf_119_ce0;
input  [7:0] data_l1buf_119_q0;
output  [8:0] data_l1buf_220_address0;
output   data_l1buf_220_ce0;
input  [7:0] data_l1buf_220_q0;
output  [8:0] data_l1buf_321_address0;
output   data_l1buf_321_ce0;
input  [7:0] data_l1buf_321_q0;
output  [9:0] output_l1_pass_0_address0;
output   output_l1_pass_0_ce0;
output   output_l1_pass_0_we0;
output  [31:0] output_l1_pass_0_d0;
output  [9:0] output_l1_pass_1_address0;
output   output_l1_pass_1_ce0;
output   output_l1_pass_1_we0;
output  [31:0] output_l1_pass_1_d0;
output  [9:0] output_l1_pass_2_address0;
output   output_l1_pass_2_ce0;
output   output_l1_pass_2_we0;
output  [31:0] output_l1_pass_2_d0;
output  [9:0] output_l1_pass_3_address0;
output   output_l1_pass_3_ce0;
output   output_l1_pass_3_we0;
output  [31:0] output_l1_pass_3_d0;
input  [31:0] empty_dout;
input   empty_empty_n;
output   empty_read;
input  [31:0] s_dout;
input   s_empty_n;
output   s_read;
input  [31:0] r_dout;
input   r_empty_n;
output   r_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_l1buf_018_ce0;
reg data_l1buf_119_ce0;
reg data_l1buf_220_ce0;
reg data_l1buf_321_ce0;
reg output_l1_pass_0_ce0;
reg output_l1_pass_0_we0;
reg output_l1_pass_1_ce0;
reg output_l1_pass_1_we0;
reg output_l1_pass_2_ce0;
reg output_l1_pass_2_we0;
reg output_l1_pass_3_ce0;
reg output_l1_pass_3_we0;
reg empty_read;
reg s_read;
reg r_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] output_l1_local_3_address0;
reg    output_l1_local_3_ce0;
reg    output_l1_local_3_we0;
wire   [31:0] output_l1_local_3_q0;
wire   [9:0] output_l1_local_3_address1;
reg    output_l1_local_3_ce1;
wire   [31:0] output_l1_local_3_q1;
reg   [9:0] output_l1_local_2_address0;
reg    output_l1_local_2_ce0;
reg    output_l1_local_2_we0;
wire   [31:0] output_l1_local_2_q0;
wire   [9:0] output_l1_local_2_address1;
reg    output_l1_local_2_ce1;
wire   [31:0] output_l1_local_2_q1;
reg   [9:0] output_l1_local_1_address0;
reg    output_l1_local_1_ce0;
reg    output_l1_local_1_we0;
wire   [31:0] output_l1_local_1_q0;
wire   [9:0] output_l1_local_1_address1;
reg    output_l1_local_1_ce1;
wire   [31:0] output_l1_local_1_q1;
reg   [9:0] output_l1_local_0_address0;
reg    output_l1_local_0_ce0;
reg    output_l1_local_0_we0;
wire   [31:0] output_l1_local_0_q0;
wire   [9:0] output_l1_local_0_address1;
reg    output_l1_local_0_ce1;
wire   [31:0] output_l1_local_0_q1;
reg    empty_blk_n;
reg    s_blk_n;
reg    r_blk_n;
reg   [31:0] i_reg_606;
reg   [31:0] i_reg_606_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] i_reg_606_pp0_iter2_reg;
reg   [31:0] psum_14_reg_618;
reg   [31:0] psum_13_reg_630;
reg   [31:0] psum_12_reg_642;
reg   [31:0] psum_10_reg_654;
reg   [31:0] psum_9_reg_666;
reg   [31:0] psum_8_reg_678;
reg   [31:0] psum_6_reg_690;
reg   [31:0] psum_5_reg_702;
reg   [31:0] psum_4_reg_714;
reg   [31:0] psum_2_reg_726;
reg   [31:0] psum_1_reg_738;
reg   [31:0] psum_reg_750;
reg   [31:0] wh_reg_762;
wire   [31:0] mul_ln286_fu_773_p2;
reg   [31:0] mul_ln286_reg_1663;
reg    ap_block_state1;
wire   [31:0] add_ln286_fu_779_p2;
reg   [31:0] add_ln286_reg_1672;
wire   [0:0] icmp_ln365_fu_791_p2;
reg   [0:0] icmp_ln365_reg_1677;
wire   [0:0] icmp_ln128_fu_797_p2;
wire  signed [15:0] weight_regfile315_load_cast_i_i_fu_803_p1;
reg  signed [15:0] weight_regfile315_load_cast_i_i_reg_1765;
wire  signed [15:0] weight_regfile314_load_cast_i_i_fu_807_p1;
reg  signed [15:0] weight_regfile314_load_cast_i_i_reg_1770;
wire  signed [15:0] weight_regfile313_load_cast_i_i_fu_811_p1;
reg  signed [15:0] weight_regfile313_load_cast_i_i_reg_1775;
wire  signed [15:0] weight_regfile312_load_cast_i_i_fu_815_p1;
reg  signed [15:0] weight_regfile312_load_cast_i_i_reg_1780;
wire  signed [15:0] weight_regfile211_load_cast_i_i_fu_819_p1;
reg  signed [15:0] weight_regfile211_load_cast_i_i_reg_1785;
wire  signed [15:0] weight_regfile210_load_cast_i_i_fu_823_p1;
reg  signed [15:0] weight_regfile210_load_cast_i_i_reg_1790;
wire  signed [15:0] weight_regfile29_load_cast_i_i_fu_827_p1;
reg  signed [15:0] weight_regfile29_load_cast_i_i_reg_1795;
wire  signed [15:0] weight_regfile28_load_cast_i_i_fu_831_p1;
reg  signed [15:0] weight_regfile28_load_cast_i_i_reg_1800;
wire  signed [15:0] weight_regfile17_load_cast_i_i_fu_835_p1;
reg  signed [15:0] weight_regfile17_load_cast_i_i_reg_1805;
wire  signed [15:0] weight_regfile16_load_cast_i_i_fu_839_p1;
reg  signed [15:0] weight_regfile16_load_cast_i_i_reg_1810;
wire  signed [15:0] weight_regfile15_load_cast_i_i_fu_843_p1;
reg  signed [15:0] weight_regfile15_load_cast_i_i_reg_1815;
wire  signed [15:0] weight_regfile14_load_cast_i_i_fu_847_p1;
reg  signed [15:0] weight_regfile14_load_cast_i_i_reg_1820;
wire  signed [15:0] weight_regfile3_load_cast_i_i_fu_851_p1;
reg  signed [15:0] weight_regfile3_load_cast_i_i_reg_1825;
wire  signed [15:0] weight_regfile2_load_cast_i_i_fu_855_p1;
reg  signed [15:0] weight_regfile2_load_cast_i_i_reg_1830;
wire  signed [15:0] weight_regfile1_load_cast_i_i_fu_859_p1;
reg  signed [15:0] weight_regfile1_load_cast_i_i_reg_1835;
wire  signed [15:0] weight_regfile_load_cast_i_i_fu_863_p1;
reg  signed [15:0] weight_regfile_load_cast_i_i_reg_1840;
wire   [0:0] icmp_ln128_1_fu_867_p2;
reg   [0:0] icmp_ln128_1_reg_1845;
reg   [0:0] icmp_ln128_1_reg_1845_pp0_iter1_reg;
reg   [0:0] icmp_ln128_1_reg_1845_pp0_iter2_reg;
reg   [0:0] icmp_ln128_1_reg_1845_pp0_iter3_reg;
reg   [0:0] icmp_ln128_1_reg_1845_pp0_iter4_reg;
reg   [0:0] icmp_ln128_1_reg_1845_pp0_iter5_reg;
reg   [0:0] icmp_ln128_1_reg_1845_pp0_iter6_reg;
wire   [31:0] add_ln128_fu_872_p2;
reg   [31:0] add_ln128_reg_1849;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln143_fu_878_p1;
reg   [63:0] zext_ln143_reg_1854;
reg   [63:0] zext_ln143_reg_1854_pp0_iter1_reg;
wire   [9:0] trunc_ln143_fu_905_p1;
reg   [9:0] trunc_ln143_reg_1864;
wire   [63:0] zext_ln143_1_fu_915_p1;
reg   [63:0] zext_ln143_1_reg_1869;
wire   [63:0] zext_ln143_3_fu_994_p1;
reg   [63:0] zext_ln143_3_reg_1904;
reg   [63:0] zext_ln143_3_reg_1904_pp0_iter3_reg;
reg   [63:0] zext_ln143_3_reg_1904_pp0_iter4_reg;
reg   [63:0] zext_ln143_3_reg_1904_pp0_iter5_reg;
reg   [63:0] zext_ln143_3_reg_1904_pp0_iter6_reg;
wire   [0:0] icmp_ln188_3_fu_1004_p2;
reg   [0:0] icmp_ln188_3_reg_1930;
wire   [0:0] tmp_4_fu_1079_p3;
reg   [0:0] tmp_4_reg_1955;
wire   [31:0] add_ln188_fu_1189_p2;
reg   [31:0] add_ln188_reg_1985;
reg   [31:0] add_ln188_reg_1985_pp0_iter4_reg;
reg   [31:0] add_ln188_reg_1985_pp0_iter5_reg;
reg   [31:0] add_ln188_reg_1985_pp0_iter6_reg;
wire   [0:0] and_ln188_fu_1200_p2;
reg   [0:0] and_ln188_reg_1990;
reg   [0:0] and_ln188_reg_1990_pp0_iter4_reg;
reg   [0:0] and_ln188_reg_1990_pp0_iter5_reg;
reg   [0:0] and_ln188_reg_1990_pp0_iter6_reg;
wire   [31:0] add_ln188_1_fu_1231_p2;
reg   [31:0] add_ln188_1_reg_1994;
reg   [31:0] add_ln188_1_reg_1994_pp0_iter4_reg;
reg   [31:0] add_ln188_1_reg_1994_pp0_iter5_reg;
reg   [31:0] add_ln188_1_reg_1994_pp0_iter6_reg;
wire   [0:0] and_ln188_1_fu_1242_p2;
reg   [0:0] and_ln188_1_reg_1999;
reg   [0:0] and_ln188_1_reg_1999_pp0_iter4_reg;
reg   [0:0] and_ln188_1_reg_1999_pp0_iter5_reg;
reg   [0:0] and_ln188_1_reg_1999_pp0_iter6_reg;
wire   [31:0] add_ln188_2_fu_1268_p2;
reg   [31:0] add_ln188_2_reg_2003;
reg   [31:0] add_ln188_2_reg_2003_pp0_iter4_reg;
reg   [31:0] add_ln188_2_reg_2003_pp0_iter5_reg;
reg   [31:0] add_ln188_2_reg_2003_pp0_iter6_reg;
wire   [0:0] and_ln188_2_fu_1279_p2;
reg   [0:0] and_ln188_2_reg_2008;
reg   [0:0] and_ln188_2_reg_2008_pp0_iter4_reg;
reg   [0:0] and_ln188_2_reg_2008_pp0_iter5_reg;
reg   [0:0] and_ln188_2_reg_2008_pp0_iter6_reg;
wire   [0:0] and_ln188_3_fu_1285_p2;
reg   [0:0] and_ln188_3_reg_2012;
reg   [0:0] and_ln188_3_reg_2012_pp0_iter4_reg;
reg   [0:0] and_ln188_3_reg_2012_pp0_iter5_reg;
reg   [0:0] and_ln188_3_reg_2012_pp0_iter6_reg;
wire  signed [31:0] grp_fu_1463_p3;
reg  signed [31:0] add_ln180_2_reg_2056;
reg    ap_enable_reg_pp0_iter4;
wire  signed [31:0] grp_fu_1470_p3;
reg  signed [31:0] add_ln180_5_reg_2061;
wire  signed [31:0] grp_fu_1477_p3;
reg  signed [31:0] add_ln180_8_reg_2066;
wire  signed [31:0] grp_fu_1484_p3;
reg  signed [31:0] add_ln180_11_reg_2071;
wire  signed [31:0] grp_fu_1491_p3;
reg  signed [31:0] add_ln180_1_reg_2076;
reg    ap_enable_reg_pp0_iter5;
wire  signed [31:0] grp_fu_1498_p3;
reg  signed [31:0] add_ln180_4_reg_2081;
wire  signed [31:0] grp_fu_1505_p3;
reg  signed [31:0] add_ln180_7_reg_2086;
wire  signed [31:0] grp_fu_1512_p3;
reg  signed [31:0] add_ln180_10_reg_2091;
wire  signed [31:0] grp_fu_1519_p3;
reg  signed [31:0] add_ln180_reg_2096;
reg    ap_enable_reg_pp0_iter6;
wire  signed [31:0] grp_fu_1526_p3;
reg  signed [31:0] add_ln180_3_reg_2101;
wire  signed [31:0] grp_fu_1533_p3;
reg  signed [31:0] add_ln180_6_reg_2106;
wire  signed [31:0] grp_fu_1540_p3;
reg  signed [31:0] add_ln180_9_reg_2111;
wire   [0:0] icmp_ln200_fu_1444_p2;
reg   [0:0] icmp_ln200_reg_2116;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [31:0] add_ln200_fu_1449_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] wh_cast_i_i_fu_1455_p1;
reg   [63:0] wh_cast_i_i_reg_2125;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter4_state6;
reg    ap_enable_reg_pp0_iter7;
wire    ap_CS_fsm_state10;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state11;
reg    ap_enable_reg_pp1_iter1;
reg   [31:0] ap_phi_mux_i_phi_fu_610_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_psum_14_phi_fu_622_p4;
reg   [31:0] ap_phi_mux_psum_13_phi_fu_634_p4;
reg   [31:0] ap_phi_mux_psum_12_phi_fu_646_p4;
reg   [31:0] ap_phi_mux_psum_10_phi_fu_658_p4;
reg   [31:0] ap_phi_mux_psum_9_phi_fu_670_p4;
reg   [31:0] ap_phi_mux_psum_8_phi_fu_682_p4;
reg   [31:0] ap_phi_mux_psum_6_phi_fu_694_p4;
reg   [31:0] ap_phi_mux_psum_5_phi_fu_706_p4;
reg   [31:0] ap_phi_mux_psum_4_phi_fu_718_p4;
reg   [31:0] ap_phi_mux_psum_2_phi_fu_730_p4;
reg   [31:0] ap_phi_mux_psum_1_phi_fu_742_p4;
reg   [31:0] ap_phi_mux_psum_phi_fu_754_p4;
wire   [63:0] zext_ln143_2_fu_982_p1;
wire   [63:0] zext_ln193_fu_1372_p1;
wire   [63:0] zext_ln193_1_fu_1376_p1;
wire   [63:0] zext_ln193_2_fu_1380_p1;
wire    ap_block_pp1_stage0;
wire   [31:0] grp_fu_1574_p3;
wire   [31:0] grp_fu_1565_p3;
wire   [31:0] grp_fu_1556_p3;
wire   [31:0] grp_fu_1547_p3;
reg  signed [7:0] empty_28_fu_204;
reg  signed [7:0] empty_29_fu_208;
reg  signed [7:0] empty_30_fu_212;
reg  signed [7:0] empty_31_fu_216;
reg  signed [7:0] empty_32_fu_220;
reg  signed [7:0] empty_33_fu_224;
reg  signed [7:0] empty_34_fu_228;
reg  signed [7:0] empty_35_fu_232;
reg  signed [7:0] empty_36_fu_236;
wire  signed [7:0] select_ln142_2_fu_1328_p3;
reg  signed [7:0] empty_37_fu_240;
wire  signed [7:0] select_ln142_1_fu_1065_p3;
reg  signed [7:0] empty_38_fu_244;
wire  signed [7:0] select_ln142_fu_969_p3;
reg  signed [7:0] empty_39_fu_248;
wire   [31:0] or_ln365_fu_785_p2;
wire   [9:0] add_ln140_fu_909_p2;
wire   [0:0] icmp_ln142_fu_963_p2;
wire   [9:0] add_ln140_2_fu_977_p2;
wire   [31:0] add_ln140_4_fu_988_p2;
wire   [32:0] zext_ln128_fu_1047_p1;
wire   [32:0] add_ln140_1_fu_1051_p2;
wire   [0:0] tmp_3_fu_1057_p3;
wire   [32:0] add_ln140_3_fu_1073_p2;
wire   [0:0] tmp_5_fu_1093_p3;
wire   [0:0] or_ln152_fu_1101_p2;
wire   [0:0] tmp_6_fu_1114_p3;
wire   [0:0] or_ln152_1_fu_1122_p2;
wire   [32:0] add_ln150_fu_1135_p2;
wire   [0:0] tmp_7_fu_1141_p3;
wire   [0:0] or_ln152_2_fu_1149_p2;
wire   [32:0] add_ln187_fu_1169_p2;
wire   [0:0] tmp_8_fu_1175_p3;
wire   [0:0] icmp_ln188_fu_1195_p2;
wire   [0:0] xor_ln187_fu_1183_p2;
wire   [32:0] add_ln187_1_fu_1211_p2;
wire   [0:0] tmp_9_fu_1217_p3;
wire   [0:0] icmp_ln188_1_fu_1237_p2;
wire   [0:0] xor_ln187_1_fu_1225_p2;
wire   [32:0] add_ln187_2_fu_1248_p2;
wire   [0:0] tmp_10_fu_1254_p3;
wire   [0:0] icmp_ln188_2_fu_1274_p2;
wire   [0:0] xor_ln187_2_fu_1262_p2;
wire   [0:0] xor_ln142_fu_1087_p2;
wire  signed [7:0] grp_fu_1463_p1;
wire   [31:0] grp_fu_1463_p2;
wire  signed [7:0] grp_fu_1470_p1;
wire   [31:0] grp_fu_1470_p2;
wire  signed [7:0] grp_fu_1477_p1;
wire   [31:0] grp_fu_1477_p2;
wire  signed [7:0] grp_fu_1484_p1;
wire   [31:0] grp_fu_1484_p2;
wire  signed [7:0] grp_fu_1491_p1;
wire  signed [7:0] grp_fu_1498_p1;
wire  signed [7:0] grp_fu_1505_p1;
wire  signed [7:0] grp_fu_1512_p1;
wire  signed [7:0] grp_fu_1519_p1;
wire  signed [7:0] grp_fu_1526_p1;
wire  signed [7:0] grp_fu_1533_p1;
wire  signed [7:0] grp_fu_1540_p1;
wire  signed [7:0] grp_fu_1547_p0;
wire  signed [7:0] grp_fu_1556_p0;
wire  signed [7:0] grp_fu_1565_p0;
wire  signed [7:0] grp_fu_1574_p0;
wire    ap_CS_fsm_state13;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_enable_operation_131;
reg    ap_enable_state4_pp0_iter2_stage0;
reg    ap_enable_operation_170;
reg    ap_enable_state5_pp0_iter3_stage0;
reg    ap_enable_operation_330;
reg    ap_enable_state9_pp0_iter7_stage0;
reg    ap_enable_operation_133;
reg    ap_enable_operation_174;
reg    ap_enable_operation_334;
reg    ap_enable_operation_135;
reg    ap_enable_operation_179;
reg    ap_enable_operation_338;
reg    ap_predicate_op137_load_state4;
reg    ap_enable_operation_137;
reg    ap_predicate_op181_load_state5;
reg    ap_enable_operation_181;
reg    ap_enable_operation_341;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

Conv_sysarr_dbbuf_runSysArr_output_l1_local_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_l1_local_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_local_3_address0),
    .ce0(output_l1_local_3_ce0),
    .we0(output_l1_local_3_we0),
    .d0(grp_fu_1547_p3),
    .q0(output_l1_local_3_q0),
    .address1(output_l1_local_3_address1),
    .ce1(output_l1_local_3_ce1),
    .q1(output_l1_local_3_q1)
);

Conv_sysarr_dbbuf_runSysArr_output_l1_local_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_l1_local_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_local_2_address0),
    .ce0(output_l1_local_2_ce0),
    .we0(output_l1_local_2_we0),
    .d0(grp_fu_1556_p3),
    .q0(output_l1_local_2_q0),
    .address1(output_l1_local_2_address1),
    .ce1(output_l1_local_2_ce1),
    .q1(output_l1_local_2_q1)
);

Conv_sysarr_dbbuf_runSysArr_output_l1_local_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_l1_local_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_local_1_address0),
    .ce0(output_l1_local_1_ce0),
    .we0(output_l1_local_1_we0),
    .d0(grp_fu_1565_p3),
    .q0(output_l1_local_1_q0),
    .address1(output_l1_local_1_address1),
    .ce1(output_l1_local_1_ce1),
    .q1(output_l1_local_1_q1)
);

Conv_sysarr_dbbuf_runSysArr_output_l1_local_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_l1_local_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_local_0_address0),
    .ce0(output_l1_local_0_ce0),
    .we0(output_l1_local_0_we0),
    .d0(grp_fu_1574_p3),
    .q0(output_l1_local_0_q0),
    .address1(output_l1_local_0_address1),
    .ce1(output_l1_local_0_ce1),
    .q1(output_l1_local_0_q1)
);

Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U97(
    .din0(empty_dout),
    .din1(empty_dout),
    .dout(mul_ln286_fu_773_p2)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_31_fu_216),
    .din1(grp_fu_1463_p1),
    .din2(grp_fu_1463_p2),
    .ce(1'b1),
    .dout(grp_fu_1463_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_35_fu_232),
    .din1(grp_fu_1470_p1),
    .din2(grp_fu_1470_p2),
    .ce(1'b1),
    .dout(grp_fu_1470_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_39_fu_248),
    .din1(grp_fu_1477_p1),
    .din2(grp_fu_1477_p2),
    .ce(1'b1),
    .dout(grp_fu_1477_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1buf_018_q0),
    .din1(grp_fu_1484_p1),
    .din2(grp_fu_1484_p2),
    .ce(1'b1),
    .dout(grp_fu_1484_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_30_fu_212),
    .din1(grp_fu_1491_p1),
    .din2(ap_phi_mux_psum_2_phi_fu_730_p4),
    .ce(1'b1),
    .dout(grp_fu_1491_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_34_fu_228),
    .din1(grp_fu_1498_p1),
    .din2(ap_phi_mux_psum_6_phi_fu_694_p4),
    .ce(1'b1),
    .dout(grp_fu_1498_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_38_fu_244),
    .din1(grp_fu_1505_p1),
    .din2(ap_phi_mux_psum_10_phi_fu_658_p4),
    .ce(1'b1),
    .dout(grp_fu_1505_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln142_fu_969_p3),
    .din1(grp_fu_1512_p1),
    .din2(ap_phi_mux_psum_14_phi_fu_622_p4),
    .ce(1'b1),
    .dout(grp_fu_1512_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_29_fu_208),
    .din1(grp_fu_1519_p1),
    .din2(ap_phi_mux_psum_1_phi_fu_742_p4),
    .ce(1'b1),
    .dout(grp_fu_1519_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_33_fu_224),
    .din1(grp_fu_1526_p1),
    .din2(ap_phi_mux_psum_5_phi_fu_706_p4),
    .ce(1'b1),
    .dout(grp_fu_1526_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_37_fu_240),
    .din1(grp_fu_1533_p1),
    .din2(ap_phi_mux_psum_9_phi_fu_670_p4),
    .ce(1'b1),
    .dout(grp_fu_1533_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln142_1_fu_1065_p3),
    .din1(grp_fu_1540_p1),
    .din2(ap_phi_mux_psum_13_phi_fu_634_p4),
    .ce(1'b1),
    .dout(grp_fu_1540_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1547_p0),
    .din1(empty_28_fu_204),
    .din2(ap_phi_mux_psum_phi_fu_754_p4),
    .ce(1'b1),
    .dout(grp_fu_1547_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1556_p0),
    .din1(empty_32_fu_220),
    .din2(ap_phi_mux_psum_4_phi_fu_718_p4),
    .ce(1'b1),
    .dout(grp_fu_1556_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1565_p0),
    .din1(empty_36_fu_236),
    .din2(ap_phi_mux_psum_8_phi_fu_682_p4),
    .ce(1'b1),
    .dout(grp_fu_1565_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1574_p0),
    .din1(select_ln142_2_fu_1328_p3),
    .din2(ap_phi_mux_psum_12_phi_fu_646_p4),
    .ce(1'b1),
    .dout(grp_fu_1574_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (icmp_ln128_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter4_state6)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (icmp_ln128_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state11) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (icmp_ln128_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_606 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln128_1_reg_1845 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_606 <= add_ln128_reg_1849;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln200_fu_1444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        wh_reg_762 <= add_ln200_fu_1449_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        wh_reg_762 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln128_reg_1849 <= add_ln128_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln180_10_reg_2091 <= grp_fu_1512_p3;
        add_ln180_1_reg_2076 <= grp_fu_1491_p3;
        add_ln180_4_reg_2081 <= grp_fu_1498_p3;
        add_ln180_7_reg_2086 <= grp_fu_1505_p3;
        psum_10_reg_654 <= add_ln180_8_reg_2066;
        psum_14_reg_618 <= add_ln180_11_reg_2071;
        psum_2_reg_726 <= add_ln180_2_reg_2056;
        psum_6_reg_690 <= add_ln180_5_reg_2061;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln180_11_reg_2071 <= grp_fu_1484_p3;
        add_ln180_2_reg_2056 <= grp_fu_1463_p3;
        add_ln180_5_reg_2061 <= grp_fu_1470_p3;
        add_ln180_8_reg_2066 <= grp_fu_1477_p3;
        empty_36_fu_236 <= select_ln142_2_fu_1328_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln180_3_reg_2101 <= grp_fu_1526_p3;
        add_ln180_6_reg_2106 <= grp_fu_1533_p3;
        add_ln180_9_reg_2111 <= grp_fu_1540_p3;
        add_ln180_reg_2096 <= grp_fu_1519_p3;
        psum_13_reg_630 <= add_ln180_10_reg_2091;
        psum_1_reg_738 <= add_ln180_1_reg_2076;
        psum_5_reg_702 <= add_ln180_4_reg_2081;
        psum_9_reg_666 <= add_ln180_7_reg_2086;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln128_1_reg_1845_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln188_1_reg_1994 <= add_ln188_1_fu_1231_p2;
        add_ln188_2_reg_2003 <= add_ln188_2_fu_1268_p2;
        add_ln188_reg_1985 <= add_ln188_fu_1189_p2;
        and_ln188_1_reg_1999 <= and_ln188_1_fu_1242_p2;
        and_ln188_2_reg_2008 <= and_ln188_2_fu_1279_p2;
        and_ln188_3_reg_2012 <= and_ln188_3_fu_1285_p2;
        and_ln188_reg_1990 <= and_ln188_fu_1200_p2;
        tmp_4_reg_1955 <= add_ln140_3_fu_1073_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln188_1_reg_1994_pp0_iter4_reg <= add_ln188_1_reg_1994;
        add_ln188_1_reg_1994_pp0_iter5_reg <= add_ln188_1_reg_1994_pp0_iter4_reg;
        add_ln188_1_reg_1994_pp0_iter6_reg <= add_ln188_1_reg_1994_pp0_iter5_reg;
        add_ln188_2_reg_2003_pp0_iter4_reg <= add_ln188_2_reg_2003;
        add_ln188_2_reg_2003_pp0_iter5_reg <= add_ln188_2_reg_2003_pp0_iter4_reg;
        add_ln188_2_reg_2003_pp0_iter6_reg <= add_ln188_2_reg_2003_pp0_iter5_reg;
        add_ln188_reg_1985_pp0_iter4_reg <= add_ln188_reg_1985;
        add_ln188_reg_1985_pp0_iter5_reg <= add_ln188_reg_1985_pp0_iter4_reg;
        add_ln188_reg_1985_pp0_iter6_reg <= add_ln188_reg_1985_pp0_iter5_reg;
        and_ln188_1_reg_1999_pp0_iter4_reg <= and_ln188_1_reg_1999;
        and_ln188_1_reg_1999_pp0_iter5_reg <= and_ln188_1_reg_1999_pp0_iter4_reg;
        and_ln188_1_reg_1999_pp0_iter6_reg <= and_ln188_1_reg_1999_pp0_iter5_reg;
        and_ln188_2_reg_2008_pp0_iter4_reg <= and_ln188_2_reg_2008;
        and_ln188_2_reg_2008_pp0_iter5_reg <= and_ln188_2_reg_2008_pp0_iter4_reg;
        and_ln188_2_reg_2008_pp0_iter6_reg <= and_ln188_2_reg_2008_pp0_iter5_reg;
        and_ln188_3_reg_2012_pp0_iter4_reg <= and_ln188_3_reg_2012;
        and_ln188_3_reg_2012_pp0_iter5_reg <= and_ln188_3_reg_2012_pp0_iter4_reg;
        and_ln188_3_reg_2012_pp0_iter6_reg <= and_ln188_3_reg_2012_pp0_iter5_reg;
        and_ln188_reg_1990_pp0_iter4_reg <= and_ln188_reg_1990;
        and_ln188_reg_1990_pp0_iter5_reg <= and_ln188_reg_1990_pp0_iter4_reg;
        and_ln188_reg_1990_pp0_iter6_reg <= and_ln188_reg_1990_pp0_iter5_reg;
        i_reg_606_pp0_iter2_reg <= i_reg_606_pp0_iter1_reg;
        icmp_ln128_1_reg_1845_pp0_iter2_reg <= icmp_ln128_1_reg_1845_pp0_iter1_reg;
        icmp_ln128_1_reg_1845_pp0_iter3_reg <= icmp_ln128_1_reg_1845_pp0_iter2_reg;
        icmp_ln128_1_reg_1845_pp0_iter4_reg <= icmp_ln128_1_reg_1845_pp0_iter3_reg;
        icmp_ln128_1_reg_1845_pp0_iter5_reg <= icmp_ln128_1_reg_1845_pp0_iter4_reg;
        icmp_ln128_1_reg_1845_pp0_iter6_reg <= icmp_ln128_1_reg_1845_pp0_iter5_reg;
        zext_ln143_3_reg_1904_pp0_iter3_reg[31 : 0] <= zext_ln143_3_reg_1904[31 : 0];
        zext_ln143_3_reg_1904_pp0_iter4_reg[31 : 0] <= zext_ln143_3_reg_1904_pp0_iter3_reg[31 : 0];
        zext_ln143_3_reg_1904_pp0_iter5_reg[31 : 0] <= zext_ln143_3_reg_1904_pp0_iter4_reg[31 : 0];
        zext_ln143_3_reg_1904_pp0_iter6_reg[31 : 0] <= zext_ln143_3_reg_1904_pp0_iter5_reg[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln286_reg_1672 <= add_ln286_fu_779_p2;
        icmp_ln365_reg_1677 <= icmp_ln365_fu_791_p2;
        mul_ln286_reg_1663 <= mul_ln286_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_28_fu_204 <= empty_32_fu_220;
        empty_32_fu_220 <= empty_36_fu_236;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_29_fu_208 <= empty_33_fu_224;
        empty_33_fu_224 <= empty_37_fu_240;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_30_fu_212 <= empty_34_fu_228;
        empty_34_fu_228 <= empty_38_fu_244;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_31_fu_216 <= empty_35_fu_232;
        empty_35_fu_232 <= empty_39_fu_248;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_37_fu_240 <= select_ln142_1_fu_1065_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_38_fu_244 <= select_ln142_fu_969_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln128_1_reg_1845 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_39_fu_248 <= data_l1buf_018_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_606_pp0_iter1_reg <= i_reg_606;
        icmp_ln128_1_reg_1845 <= icmp_ln128_1_fu_867_p2;
        icmp_ln128_1_reg_1845_pp0_iter1_reg <= icmp_ln128_1_reg_1845;
        zext_ln143_reg_1854_pp0_iter1_reg[31 : 0] <= zext_ln143_reg_1854[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln128_1_reg_1845_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln188_3_reg_1930 <= icmp_ln188_3_fu_1004_p2;
        zext_ln143_3_reg_1904[31 : 0] <= zext_ln143_3_fu_994_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln200_reg_2116 <= icmp_ln200_fu_1444_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        psum_12_reg_642 <= add_ln180_9_reg_2111;
        psum_4_reg_714 <= add_ln180_3_reg_2101;
        psum_8_reg_678 <= add_ln180_6_reg_2106;
        psum_reg_750 <= add_ln180_reg_2096;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln128_1_reg_1845 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln143_reg_1864 <= trunc_ln143_fu_905_p1;
        zext_ln143_1_reg_1869[9 : 0] <= zext_ln143_1_fu_915_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (icmp_ln128_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        weight_regfile14_load_cast_i_i_reg_1820 <= weight_regfile14_load_cast_i_i_fu_847_p1;
        weight_regfile15_load_cast_i_i_reg_1815 <= weight_regfile15_load_cast_i_i_fu_843_p1;
        weight_regfile16_load_cast_i_i_reg_1810 <= weight_regfile16_load_cast_i_i_fu_839_p1;
        weight_regfile17_load_cast_i_i_reg_1805 <= weight_regfile17_load_cast_i_i_fu_835_p1;
        weight_regfile1_load_cast_i_i_reg_1835 <= weight_regfile1_load_cast_i_i_fu_859_p1;
        weight_regfile210_load_cast_i_i_reg_1790 <= weight_regfile210_load_cast_i_i_fu_823_p1;
        weight_regfile211_load_cast_i_i_reg_1785 <= weight_regfile211_load_cast_i_i_fu_819_p1;
        weight_regfile28_load_cast_i_i_reg_1800 <= weight_regfile28_load_cast_i_i_fu_831_p1;
        weight_regfile29_load_cast_i_i_reg_1795 <= weight_regfile29_load_cast_i_i_fu_827_p1;
        weight_regfile2_load_cast_i_i_reg_1830 <= weight_regfile2_load_cast_i_i_fu_855_p1;
        weight_regfile312_load_cast_i_i_reg_1780 <= weight_regfile312_load_cast_i_i_fu_815_p1;
        weight_regfile313_load_cast_i_i_reg_1775 <= weight_regfile313_load_cast_i_i_fu_811_p1;
        weight_regfile314_load_cast_i_i_reg_1770 <= weight_regfile314_load_cast_i_i_fu_807_p1;
        weight_regfile315_load_cast_i_i_reg_1765 <= weight_regfile315_load_cast_i_i_fu_803_p1;
        weight_regfile3_load_cast_i_i_reg_1825 <= weight_regfile3_load_cast_i_i_fu_851_p1;
        weight_regfile_load_cast_i_i_reg_1840 <= weight_regfile_load_cast_i_i_fu_863_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_fu_1444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        wh_cast_i_i_reg_2125[31 : 0] <= wh_cast_i_i_fu_1455_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln128_1_fu_867_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln143_reg_1854[31 : 0] <= zext_ln143_fu_878_p1[31 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_condition_pp0_exit_iter4_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter4_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln128_1_fu_867_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln200_fu_1444_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln128_1_reg_1845 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_610_p4 = add_ln128_reg_1849;
    end else begin
        ap_phi_mux_i_phi_fu_610_p4 = i_reg_606;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_10_phi_fu_658_p4 = add_ln180_8_reg_2066;
    end else begin
        ap_phi_mux_psum_10_phi_fu_658_p4 = psum_10_reg_654;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_12_phi_fu_646_p4 = add_ln180_9_reg_2111;
    end else begin
        ap_phi_mux_psum_12_phi_fu_646_p4 = psum_12_reg_642;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_13_phi_fu_634_p4 = add_ln180_10_reg_2091;
    end else begin
        ap_phi_mux_psum_13_phi_fu_634_p4 = psum_13_reg_630;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_14_phi_fu_622_p4 = add_ln180_11_reg_2071;
    end else begin
        ap_phi_mux_psum_14_phi_fu_622_p4 = psum_14_reg_618;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_1_phi_fu_742_p4 = add_ln180_1_reg_2076;
    end else begin
        ap_phi_mux_psum_1_phi_fu_742_p4 = psum_1_reg_738;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_2_phi_fu_730_p4 = add_ln180_2_reg_2056;
    end else begin
        ap_phi_mux_psum_2_phi_fu_730_p4 = psum_2_reg_726;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_4_phi_fu_718_p4 = add_ln180_3_reg_2101;
    end else begin
        ap_phi_mux_psum_4_phi_fu_718_p4 = psum_4_reg_714;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_5_phi_fu_706_p4 = add_ln180_4_reg_2081;
    end else begin
        ap_phi_mux_psum_5_phi_fu_706_p4 = psum_5_reg_702;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_6_phi_fu_694_p4 = add_ln180_5_reg_2061;
    end else begin
        ap_phi_mux_psum_6_phi_fu_694_p4 = psum_6_reg_690;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_8_phi_fu_682_p4 = add_ln180_6_reg_2106;
    end else begin
        ap_phi_mux_psum_8_phi_fu_682_p4 = psum_8_reg_678;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_9_phi_fu_670_p4 = add_ln180_7_reg_2086;
    end else begin
        ap_phi_mux_psum_9_phi_fu_670_p4 = psum_9_reg_666;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln128_1_reg_1845_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_phi_fu_754_p4 = add_ln180_reg_2096;
    end else begin
        ap_phi_mux_psum_phi_fu_754_p4 = psum_reg_750;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_l1buf_018_ce0 = 1'b1;
    end else begin
        data_l1buf_018_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_l1buf_119_ce0 = 1'b1;
    end else begin
        data_l1buf_119_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_l1buf_220_ce0 = 1'b1;
    end else begin
        data_l1buf_220_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_l1buf_321_ce0 = 1'b1;
    end else begin
        data_l1buf_321_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_blk_n = empty_empty_n;
    end else begin
        empty_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_read = 1'b1;
    end else begin
        empty_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        output_l1_local_0_address0 = wh_cast_i_i_fu_1455_p1;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_l1_local_0_address0 = zext_ln143_3_reg_1904_pp0_iter6_reg;
    end else begin
        output_l1_local_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        output_l1_local_0_ce0 = 1'b1;
    end else begin
        output_l1_local_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_0_ce1 = 1'b1;
    end else begin
        output_l1_local_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln188_3_reg_2012_pp0_iter6_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_0_we0 = 1'b1;
    end else begin
        output_l1_local_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        output_l1_local_1_address0 = wh_cast_i_i_fu_1455_p1;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_l1_local_1_address0 = zext_ln193_2_fu_1380_p1;
    end else begin
        output_l1_local_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        output_l1_local_1_ce0 = 1'b1;
    end else begin
        output_l1_local_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_1_ce1 = 1'b1;
    end else begin
        output_l1_local_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln188_2_reg_2008_pp0_iter6_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_1_we0 = 1'b1;
    end else begin
        output_l1_local_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        output_l1_local_2_address0 = wh_cast_i_i_fu_1455_p1;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_l1_local_2_address0 = zext_ln193_1_fu_1376_p1;
    end else begin
        output_l1_local_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        output_l1_local_2_ce0 = 1'b1;
    end else begin
        output_l1_local_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_2_ce1 = 1'b1;
    end else begin
        output_l1_local_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln188_1_reg_1999_pp0_iter6_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_2_we0 = 1'b1;
    end else begin
        output_l1_local_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        output_l1_local_3_address0 = wh_cast_i_i_fu_1455_p1;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_l1_local_3_address0 = zext_ln193_fu_1372_p1;
    end else begin
        output_l1_local_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        output_l1_local_3_ce0 = 1'b1;
    end else begin
        output_l1_local_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_3_ce1 = 1'b1;
    end else begin
        output_l1_local_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln188_reg_1990_pp0_iter6_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_3_we0 = 1'b1;
    end else begin
        output_l1_local_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_l1_pass_0_ce0 = 1'b1;
    end else begin
        output_l1_pass_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln200_reg_2116 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_l1_pass_0_we0 = 1'b1;
    end else begin
        output_l1_pass_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_l1_pass_1_ce0 = 1'b1;
    end else begin
        output_l1_pass_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln200_reg_2116 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_l1_pass_1_we0 = 1'b1;
    end else begin
        output_l1_pass_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_l1_pass_2_ce0 = 1'b1;
    end else begin
        output_l1_pass_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln200_reg_2116 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_l1_pass_2_we0 = 1'b1;
    end else begin
        output_l1_pass_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_l1_pass_3_ce0 = 1'b1;
    end else begin
        output_l1_pass_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln200_reg_2116 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_l1_pass_3_we0 = 1'b1;
    end else begin
        output_l1_pass_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_blk_n = r_empty_n;
    end else begin
        r_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_read = 1'b1;
    end else begin
        r_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_blk_n = s_empty_n;
    end else begin
        s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_read = 1'b1;
    end else begin
        s_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (icmp_ln128_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0)) & (icmp_ln128_fu_797_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter7 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln200_fu_1444_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln200_fu_1444_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln128_fu_872_p2 = (ap_phi_mux_i_phi_fu_610_p4 + 32'd1);

assign add_ln140_1_fu_1051_p2 = ($signed(33'd8589934590) + $signed(zext_ln128_fu_1047_p1));

assign add_ln140_2_fu_977_p2 = ($signed(10'd1022) + $signed(trunc_ln143_reg_1864));

assign add_ln140_3_fu_1073_p2 = ($signed(33'd8589934589) + $signed(zext_ln128_fu_1047_p1));

assign add_ln140_4_fu_988_p2 = ($signed(32'd4294967293) + $signed(i_reg_606_pp0_iter1_reg));

assign add_ln140_fu_909_p2 = ($signed(10'd1023) + $signed(trunc_ln143_fu_905_p1));

assign add_ln150_fu_1135_p2 = ($signed(33'd8589934591) + $signed(zext_ln128_fu_1047_p1));

assign add_ln187_1_fu_1211_p2 = ($signed(zext_ln128_fu_1047_p1) + $signed(33'd8589934587));

assign add_ln187_2_fu_1248_p2 = ($signed(zext_ln128_fu_1047_p1) + $signed(33'd8589934588));

assign add_ln187_fu_1169_p2 = ($signed(33'd8589934586) + $signed(zext_ln128_fu_1047_p1));

assign add_ln188_1_fu_1231_p2 = ($signed(i_reg_606_pp0_iter2_reg) + $signed(32'd4294967291));

assign add_ln188_2_fu_1268_p2 = ($signed(i_reg_606_pp0_iter2_reg) + $signed(32'd4294967292));

assign add_ln188_fu_1189_p2 = ($signed(32'd4294967290) + $signed(i_reg_606_pp0_iter2_reg));

assign add_ln200_fu_1449_p2 = (wh_reg_762 + 32'd1);

assign add_ln286_fu_779_p2 = (mul_ln286_fu_773_p2 + 32'd6);

assign and_ln188_1_fu_1242_p2 = (xor_ln187_1_fu_1225_p2 & icmp_ln188_1_fu_1237_p2);

assign and_ln188_2_fu_1279_p2 = (xor_ln187_2_fu_1262_p2 & icmp_ln188_2_fu_1274_p2);

assign and_ln188_3_fu_1285_p2 = (xor_ln142_fu_1087_p2 & icmp_ln188_3_reg_1930);

assign and_ln188_fu_1200_p2 = (xor_ln187_fu_1183_p2 & icmp_ln188_fu_1195_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1 = ((ap_ST_fsm_pp1_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp1_stage0_subdone));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((empty_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (r_empty_n == 1'b0) | (s_empty_n == 1'b0));
end

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_131 = (icmp_ln128_1_reg_1845_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_133 = (icmp_ln128_1_reg_1845_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_135 = (icmp_ln128_1_reg_1845_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_137 = (ap_predicate_op137_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_170 = (icmp_ln128_1_reg_1845_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_174 = (icmp_ln128_1_reg_1845_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_179 = (icmp_ln128_1_reg_1845_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_181 = (ap_predicate_op181_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_330 = (1'd1 == and_ln188_reg_1990_pp0_iter6_reg);
end

always @ (*) begin
    ap_enable_operation_334 = (1'd1 == and_ln188_1_reg_1999_pp0_iter6_reg);
end

always @ (*) begin
    ap_enable_operation_338 = (1'd1 == and_ln188_2_reg_2008_pp0_iter6_reg);
end

always @ (*) begin
    ap_enable_operation_341 = (1'd1 == and_ln188_3_reg_2012_pp0_iter6_reg);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state9_pp0_iter7_stage0 = ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op137_load_state4 = ((icmp_ln128_1_reg_1845_pp0_iter1_reg == 1'd0) & (icmp_ln365_reg_1677 == 1'd0));
end

always @ (*) begin
    ap_predicate_op181_load_state5 = ((icmp_ln128_1_reg_1845_pp0_iter2_reg == 1'd0) & (icmp_ln365_reg_1677 == 1'd0));
end

assign data_l1buf_018_address0 = zext_ln143_fu_878_p1;

assign data_l1buf_119_address0 = zext_ln143_1_fu_915_p1;

assign data_l1buf_220_address0 = zext_ln143_2_fu_982_p1;

assign data_l1buf_321_address0 = zext_ln143_3_reg_1904;

assign grp_fu_1463_p1 = weight_regfile312_load_cast_i_i_reg_1780;

assign grp_fu_1463_p2 = ((or_ln152_fu_1101_p2[0:0] === 1'b1) ? 32'd0 : output_l1_local_3_q1);

assign grp_fu_1470_p1 = weight_regfile28_load_cast_i_i_reg_1800;

assign grp_fu_1470_p2 = ((or_ln152_1_fu_1122_p2[0:0] === 1'b1) ? 32'd0 : output_l1_local_2_q1);

assign grp_fu_1477_p1 = weight_regfile14_load_cast_i_i_reg_1820;

assign grp_fu_1477_p2 = ((or_ln152_2_fu_1149_p2[0:0] === 1'b1) ? 32'd0 : output_l1_local_1_q1);

assign grp_fu_1484_p1 = weight_regfile_load_cast_i_i_reg_1840;

assign grp_fu_1484_p2 = ((icmp_ln365_reg_1677[0:0] === 1'b1) ? 32'd0 : output_l1_local_0_q1);

assign grp_fu_1491_p1 = weight_regfile313_load_cast_i_i_reg_1775;

assign grp_fu_1498_p1 = weight_regfile29_load_cast_i_i_reg_1795;

assign grp_fu_1505_p1 = weight_regfile15_load_cast_i_i_reg_1815;

assign grp_fu_1512_p1 = weight_regfile1_load_cast_i_i_reg_1835;

assign grp_fu_1519_p1 = weight_regfile314_load_cast_i_i_reg_1770;

assign grp_fu_1526_p1 = weight_regfile210_load_cast_i_i_reg_1790;

assign grp_fu_1533_p1 = weight_regfile16_load_cast_i_i_reg_1810;

assign grp_fu_1540_p1 = weight_regfile2_load_cast_i_i_reg_1830;

assign grp_fu_1547_p0 = weight_regfile315_load_cast_i_i_reg_1765;

assign grp_fu_1556_p0 = weight_regfile211_load_cast_i_i_reg_1785;

assign grp_fu_1565_p0 = weight_regfile17_load_cast_i_i_reg_1805;

assign grp_fu_1574_p0 = weight_regfile3_load_cast_i_i_reg_1825;

assign icmp_ln128_1_fu_867_p2 = ((ap_phi_mux_i_phi_fu_610_p4 == add_ln286_reg_1672) ? 1'b1 : 1'b0);

assign icmp_ln128_fu_797_p2 = ((add_ln286_fu_779_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln142_fu_963_p2 = ((i_reg_606_pp0_iter1_reg == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln188_1_fu_1237_p2 = ((add_ln188_1_fu_1231_p2 < mul_ln286_reg_1663) ? 1'b1 : 1'b0);

assign icmp_ln188_2_fu_1274_p2 = ((add_ln188_2_fu_1268_p2 < mul_ln286_reg_1663) ? 1'b1 : 1'b0);

assign icmp_ln188_3_fu_1004_p2 = ((add_ln140_4_fu_988_p2 < mul_ln286_reg_1663) ? 1'b1 : 1'b0);

assign icmp_ln188_fu_1195_p2 = ((add_ln188_fu_1189_p2 < mul_ln286_reg_1663) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_1444_p2 = ((wh_reg_762 == mul_ln286_reg_1663) ? 1'b1 : 1'b0);

assign icmp_ln365_fu_791_p2 = ((or_ln365_fu_785_p2 == 32'd0) ? 1'b1 : 1'b0);

assign or_ln152_1_fu_1122_p2 = (tmp_6_fu_1114_p3 | icmp_ln365_reg_1677);

assign or_ln152_2_fu_1149_p2 = (tmp_7_fu_1141_p3 | icmp_ln365_reg_1677);

assign or_ln152_fu_1101_p2 = (tmp_5_fu_1093_p3 | icmp_ln365_reg_1677);

assign or_ln365_fu_785_p2 = (s_dout | r_dout);

assign output_l1_local_0_address1 = zext_ln143_reg_1854_pp0_iter1_reg;

assign output_l1_local_1_address1 = zext_ln143_1_reg_1869;

assign output_l1_local_2_address1 = zext_ln143_2_fu_982_p1;

assign output_l1_local_3_address1 = zext_ln143_3_fu_994_p1;

assign output_l1_pass_0_address0 = wh_cast_i_i_reg_2125;

assign output_l1_pass_0_d0 = output_l1_local_0_q0;

assign output_l1_pass_1_address0 = wh_cast_i_i_reg_2125;

assign output_l1_pass_1_d0 = output_l1_local_1_q0;

assign output_l1_pass_2_address0 = wh_cast_i_i_reg_2125;

assign output_l1_pass_2_d0 = output_l1_local_2_q0;

assign output_l1_pass_3_address0 = wh_cast_i_i_reg_2125;

assign output_l1_pass_3_d0 = output_l1_local_3_q0;

assign select_ln142_1_fu_1065_p3 = ((tmp_3_fu_1057_p3[0:0] === 1'b1) ? 8'd0 : data_l1buf_220_q0);

assign select_ln142_2_fu_1328_p3 = ((tmp_4_reg_1955[0:0] === 1'b1) ? 8'd0 : data_l1buf_321_q0);

assign select_ln142_fu_969_p3 = ((icmp_ln142_fu_963_p2[0:0] === 1'b1) ? 8'd0 : data_l1buf_119_q0);

assign tmp_10_fu_1254_p3 = add_ln187_2_fu_1248_p2[32'd32];

assign tmp_3_fu_1057_p3 = add_ln140_1_fu_1051_p2[32'd32];

assign tmp_4_fu_1079_p3 = add_ln140_3_fu_1073_p2[32'd32];

assign tmp_5_fu_1093_p3 = add_ln140_3_fu_1073_p2[32'd32];

assign tmp_6_fu_1114_p3 = add_ln140_1_fu_1051_p2[32'd32];

assign tmp_7_fu_1141_p3 = add_ln150_fu_1135_p2[32'd32];

assign tmp_8_fu_1175_p3 = add_ln187_fu_1169_p2[32'd32];

assign tmp_9_fu_1217_p3 = add_ln187_1_fu_1211_p2[32'd32];

assign trunc_ln143_fu_905_p1 = i_reg_606[9:0];

assign weight_regfile14_load_cast_i_i_fu_847_p1 = $signed(p_read4);

assign weight_regfile15_load_cast_i_i_fu_843_p1 = $signed(p_read5);

assign weight_regfile16_load_cast_i_i_fu_839_p1 = $signed(p_read6);

assign weight_regfile17_load_cast_i_i_fu_835_p1 = $signed(p_read7);

assign weight_regfile1_load_cast_i_i_fu_859_p1 = $signed(p_read1);

assign weight_regfile210_load_cast_i_i_fu_823_p1 = $signed(p_read10);

assign weight_regfile211_load_cast_i_i_fu_819_p1 = $signed(p_read11);

assign weight_regfile28_load_cast_i_i_fu_831_p1 = $signed(p_read8);

assign weight_regfile29_load_cast_i_i_fu_827_p1 = $signed(p_read9);

assign weight_regfile2_load_cast_i_i_fu_855_p1 = $signed(p_read2);

assign weight_regfile312_load_cast_i_i_fu_815_p1 = $signed(p_read12);

assign weight_regfile313_load_cast_i_i_fu_811_p1 = $signed(p_read13);

assign weight_regfile314_load_cast_i_i_fu_807_p1 = $signed(p_read14);

assign weight_regfile315_load_cast_i_i_fu_803_p1 = $signed(p_read15);

assign weight_regfile3_load_cast_i_i_fu_851_p1 = $signed(p_read3);

assign weight_regfile_load_cast_i_i_fu_863_p1 = $signed(p_read);

assign wh_cast_i_i_fu_1455_p1 = wh_reg_762;

assign xor_ln142_fu_1087_p2 = (tmp_4_fu_1079_p3 ^ 1'd1);

assign xor_ln187_1_fu_1225_p2 = (tmp_9_fu_1217_p3 ^ 1'd1);

assign xor_ln187_2_fu_1262_p2 = (tmp_10_fu_1254_p3 ^ 1'd1);

assign xor_ln187_fu_1183_p2 = (tmp_8_fu_1175_p3 ^ 1'd1);

assign zext_ln128_fu_1047_p1 = i_reg_606_pp0_iter2_reg;

assign zext_ln143_1_fu_915_p1 = add_ln140_fu_909_p2;

assign zext_ln143_2_fu_982_p1 = add_ln140_2_fu_977_p2;

assign zext_ln143_3_fu_994_p1 = add_ln140_4_fu_988_p2;

assign zext_ln143_fu_878_p1 = ap_phi_mux_i_phi_fu_610_p4;

assign zext_ln193_1_fu_1376_p1 = add_ln188_1_reg_1994_pp0_iter6_reg;

assign zext_ln193_2_fu_1380_p1 = add_ln188_2_reg_2003_pp0_iter6_reg;

assign zext_ln193_fu_1372_p1 = add_ln188_reg_1985_pp0_iter6_reg;

always @ (posedge ap_clk) begin
    zext_ln143_reg_1854[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln143_reg_1854_pp0_iter1_reg[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln143_1_reg_1869[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln143_3_reg_1904[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln143_3_reg_1904_pp0_iter3_reg[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln143_3_reg_1904_pp0_iter4_reg[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln143_3_reg_1904_pp0_iter5_reg[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln143_3_reg_1904_pp0_iter6_reg[63:32] <= 32'b00000000000000000000000000000000;
    wh_cast_i_i_reg_2125[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //Conv_sysarr_dbbuf_runSysArr
