-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv_sysarr_dbbuf_dataflow_in_loop_LOOP_S_entry17 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (10 downto 0);
    ko_1 : IN STD_LOGIC_VECTOR (8 downto 0);
    co_2 : IN STD_LOGIC_VECTOR (9 downto 0);
    r : IN STD_LOGIC_VECTOR (10 downto 0);
    s : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    p_c_full_n : IN STD_LOGIC;
    p_c_write : OUT STD_LOGIC;
    p_c1_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    p_c1_full_n : IN STD_LOGIC;
    p_c1_write : OUT STD_LOGIC;
    ko_1_c_din : OUT STD_LOGIC_VECTOR (8 downto 0);
    ko_1_c_full_n : IN STD_LOGIC;
    ko_1_c_write : OUT STD_LOGIC;
    co_2_c_din : OUT STD_LOGIC_VECTOR (8 downto 0);
    co_2_c_full_n : IN STD_LOGIC;
    co_2_c_write : OUT STD_LOGIC;
    co_2_c2_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    co_2_c2_full_n : IN STD_LOGIC;
    co_2_c2_write : OUT STD_LOGIC;
    r_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    r_c_full_n : IN STD_LOGIC;
    r_c_write : OUT STD_LOGIC;
    r_c3_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    r_c3_full_n : IN STD_LOGIC;
    r_c3_write : OUT STD_LOGIC;
    s_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    s_c_full_n : IN STD_LOGIC;
    s_c_write : OUT STD_LOGIC;
    s_c4_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    s_c4_full_n : IN STD_LOGIC;
    s_c4_write : OUT STD_LOGIC;
    p_c5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_c5_full_n : IN STD_LOGIC;
    p_c5_write : OUT STD_LOGIC;
    p_c6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_c6_full_n : IN STD_LOGIC;
    p_c6_write : OUT STD_LOGIC;
    p_c7_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_c7_full_n : IN STD_LOGIC;
    p_c7_write : OUT STD_LOGIC );
end;


architecture behav of Conv_sysarr_dbbuf_dataflow_in_loop_LOOP_S_entry17 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_c_blk_n : STD_LOGIC;
    signal p_c1_blk_n : STD_LOGIC;
    signal ko_1_c_blk_n : STD_LOGIC;
    signal co_2_c_blk_n : STD_LOGIC;
    signal co_2_c2_blk_n : STD_LOGIC;
    signal r_c_blk_n : STD_LOGIC;
    signal r_c3_blk_n : STD_LOGIC;
    signal s_c_blk_n : STD_LOGIC;
    signal s_c4_blk_n : STD_LOGIC;
    signal p_c5_blk_n : STD_LOGIC;
    signal p_c6_blk_n : STD_LOGIC;
    signal p_c7_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
                ap_block_state1 <= ((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    co_2_c2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, co_2_c2_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_2_c2_blk_n <= co_2_c2_full_n;
        else 
            co_2_c2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    co_2_c2_din <= co_2;

    co_2_c2_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_2_c2_write <= ap_const_logic_1;
        else 
            co_2_c2_write <= ap_const_logic_0;
        end if; 
    end process;


    co_2_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, co_2_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_2_c_blk_n <= co_2_c_full_n;
        else 
            co_2_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    co_2_c_din <= co_2(9 - 1 downto 0);

    co_2_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            co_2_c_write <= ap_const_logic_1;
        else 
            co_2_c_write <= ap_const_logic_0;
        end if; 
    end process;


    ko_1_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ko_1_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ko_1_c_blk_n <= ko_1_c_full_n;
        else 
            ko_1_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ko_1_c_din <= ko_1;

    ko_1_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ko_1_c_write <= ap_const_logic_1;
        else 
            ko_1_c_write <= ap_const_logic_0;
        end if; 
    end process;


    p_c1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c1_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c1_blk_n <= p_c1_full_n;
        else 
            p_c1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_c1_din <= p_read1;

    p_c1_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c1_write <= ap_const_logic_1;
        else 
            p_c1_write <= ap_const_logic_0;
        end if; 
    end process;


    p_c5_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c5_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c5_blk_n <= p_c5_full_n;
        else 
            p_c5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_c5_din <= p_read2;

    p_c5_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c5_write <= ap_const_logic_1;
        else 
            p_c5_write <= ap_const_logic_0;
        end if; 
    end process;


    p_c6_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c6_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c6_blk_n <= p_c6_full_n;
        else 
            p_c6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_c6_din <= p_read2;

    p_c6_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c6_write <= ap_const_logic_1;
        else 
            p_c6_write <= ap_const_logic_0;
        end if; 
    end process;


    p_c7_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c7_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c7_blk_n <= p_c7_full_n;
        else 
            p_c7_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_c7_din <= p_read3;

    p_c7_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c7_write <= ap_const_logic_1;
        else 
            p_c7_write <= ap_const_logic_0;
        end if; 
    end process;


    p_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c_blk_n <= p_c_full_n;
        else 
            p_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_c_din <= p_read;

    p_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c_write <= ap_const_logic_1;
        else 
            p_c_write <= ap_const_logic_0;
        end if; 
    end process;


    r_c3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, r_c3_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            r_c3_blk_n <= r_c3_full_n;
        else 
            r_c3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    r_c3_din <= r(10 - 1 downto 0);

    r_c3_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            r_c3_write <= ap_const_logic_1;
        else 
            r_c3_write <= ap_const_logic_0;
        end if; 
    end process;


    r_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, r_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            r_c_blk_n <= r_c_full_n;
        else 
            r_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    r_c_din <= r;

    r_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            r_c_write <= ap_const_logic_1;
        else 
            r_c_write <= ap_const_logic_0;
        end if; 
    end process;


    s_c4_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, s_c4_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            s_c4_blk_n <= s_c4_full_n;
        else 
            s_c4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_c4_din <= s(10 - 1 downto 0);

    s_c4_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            s_c4_write <= ap_const_logic_1;
        else 
            s_c4_write <= ap_const_logic_0;
        end if; 
    end process;


    s_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, s_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            s_c_blk_n <= s_c_full_n;
        else 
            s_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_c_din <= s(11 - 1 downto 0);

    s_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_full_n, p_c1_full_n, ko_1_c_full_n, co_2_c_full_n, co_2_c2_full_n, r_c_full_n, r_c3_full_n, s_c_full_n, s_c4_full_n, p_c5_full_n, p_c6_full_n, p_c7_full_n)
    begin
        if ((not(((p_c7_full_n = ap_const_logic_0) or (p_c6_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_c5_full_n = ap_const_logic_0) or (s_c4_full_n = ap_const_logic_0) or (s_c_full_n = ap_const_logic_0) or (r_c3_full_n = ap_const_logic_0) or (r_c_full_n = ap_const_logic_0) or (co_2_c2_full_n = ap_const_logic_0) or (co_2_c_full_n = ap_const_logic_0) or (ko_1_c_full_n = ap_const_logic_0) or (p_c1_full_n = ap_const_logic_0) or (p_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            s_c_write <= ap_const_logic_1;
        else 
            s_c_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
