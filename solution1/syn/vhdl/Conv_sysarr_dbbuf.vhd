-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv_sysarr_dbbuf is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bias_in_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    bias_in_V_empty_n : IN STD_LOGIC;
    bias_in_V_read : OUT STD_LOGIC;
    weight_in_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    weight_in_V_empty_n : IN STD_LOGIC;
    weight_in_V_read : OUT STD_LOGIC;
    data_in_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_V_empty_n : IN STD_LOGIC;
    data_in_V_read : OUT STD_LOGIC;
    conv_out_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    conv_out_V_full_n : IN STD_LOGIC;
    conv_out_V_write : OUT STD_LOGIC );
end;


architecture behav of Conv_sysarr_dbbuf is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Conv_sysarr_dbbuf_Conv_sysarr_dbbuf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.803000,HLS_SYN_LAT=4358,HLS_SYN_TPT=none,HLS_SYN_MEM=28,HLS_SYN_DSP=0,HLS_SYN_FF=8403,HLS_SYN_LUT=8651,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv35_0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000000";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv35_1 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000001";
    constant ap_const_lv60_1 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal output_l1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_l1_0_ce0 : STD_LOGIC;
    signal output_l1_0_we0 : STD_LOGIC;
    signal output_l1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_0_ce1 : STD_LOGIC;
    signal output_l1_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_l1_1_ce0 : STD_LOGIC;
    signal output_l1_1_we0 : STD_LOGIC;
    signal output_l1_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_1_ce1 : STD_LOGIC;
    signal output_l1_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_l1_2_ce0 : STD_LOGIC;
    signal output_l1_2_we0 : STD_LOGIC;
    signal output_l1_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_2_ce1 : STD_LOGIC;
    signal output_l1_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_l1_3_ce0 : STD_LOGIC;
    signal output_l1_3_we0 : STD_LOGIC;
    signal output_l1_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_l1_3_ce1 : STD_LOGIC;
    signal output_l1_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_l2_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal weight_l2_0_ce0 : STD_LOGIC;
    signal weight_l2_0_we0 : STD_LOGIC;
    signal weight_l2_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal weight_l2_1_ce0 : STD_LOGIC;
    signal weight_l2_1_we0 : STD_LOGIC;
    signal weight_l2_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal weight_l2_2_ce0 : STD_LOGIC;
    signal weight_l2_2_we0 : STD_LOGIC;
    signal weight_l2_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_l2_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal weight_l2_3_ce0 : STD_LOGIC;
    signal weight_l2_3_we0 : STD_LOGIC;
    signal weight_l2_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal data_l2_0_ce0 : STD_LOGIC;
    signal data_l2_0_we0 : STD_LOGIC;
    signal data_l2_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal data_l2_1_ce0 : STD_LOGIC;
    signal data_l2_1_we0 : STD_LOGIC;
    signal data_l2_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal data_l2_2_ce0 : STD_LOGIC;
    signal data_l2_2_we0 : STD_LOGIC;
    signal data_l2_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_l2_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal data_l2_3_ce0 : STD_LOGIC;
    signal data_l2_3_we0 : STD_LOGIC;
    signal data_l2_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bias_l1_0_ce0 : STD_LOGIC;
    signal bias_l1_0_we0 : STD_LOGIC;
    signal bias_l1_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bias_l1_1_ce0 : STD_LOGIC;
    signal bias_l1_1_we0 : STD_LOGIC;
    signal bias_l1_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bias_l1_2_ce0 : STD_LOGIC;
    signal bias_l1_2_we0 : STD_LOGIC;
    signal bias_l1_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_l1_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bias_l1_3_ce0 : STD_LOGIC;
    signal bias_l1_3_we0 : STD_LOGIC;
    signal bias_l1_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_in_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln240_reg_1517 : STD_LOGIC_VECTOR (0 downto 0);
    signal weight_in_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal data_in_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal icmp_ln253_reg_1595 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln253_reg_1595_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_out_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp4_iter4 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal icmp_ln332_reg_1802 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln332_reg_1802_pp4_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_451 : STD_LOGIC_VECTOR (31 downto 0);
    signal ko_reg_462 : STD_LOGIC_VECTOR (29 downto 0);
    signal ki_reg_473 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten24_reg_495 : STD_LOGIC_VECTOR (63 downto 0);
    signal co_reg_506 : STD_LOGIC_VECTOR (29 downto 0);
    signal indvar_flatten10_reg_517 : STD_LOGIC_VECTOR (34 downto 0);
    signal ci_reg_528 : STD_LOGIC_VECTOR (2 downto 0);
    signal wh_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten31_reg_584 : STD_LOGIC_VECTOR (63 downto 0);
    signal hi_reg_595 : STD_LOGIC_VECTOR (31 downto 0);
    signal wi_reg_606 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten63_reg_617 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_1_reg_628 : STD_LOGIC_VECTOR (29 downto 0);
    signal indvar_flatten49_reg_639 : STD_LOGIC_VECTOR (34 downto 0);
    signal ki_1_reg_650 : STD_LOGIC_VECTOR (2 downto 0);
    signal wh_1_reg_661 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_1_fu_707_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_1_reg_1447 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal div29_cast_reg_1452 : STD_LOGIC_VECTOR (29 downto 0);
    signal bias_in_V_read_1_reg_1459 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_2_fu_721_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_2_reg_1465 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_in_V_read_2_reg_1470 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln521_fu_725_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln521_reg_1475 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_data_V_3_fu_729_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_3_reg_1481 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_in_V_read_3_reg_1489 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_4_fu_733_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_4_reg_1494 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_in_V_read_4_reg_1500 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_5_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_5_reg_1505 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_741_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1512 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln240_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln240_fu_753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln240_1_fu_779_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln240_1_reg_1526 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln244_fu_787_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln244_reg_1532 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln242_fu_791_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul41_fu_820_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul41_reg_1541 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln247_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal add_ln247_fu_831_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal lshr_ln_reg_1555 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln250_fu_847_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln250_reg_1560 : STD_LOGIC_VECTOR (1 downto 0);
    signal div52_cast_fu_866_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal div52_cast_reg_1564 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal mul55_fu_875_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul55_reg_1570 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_879_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_reg_1575 : STD_LOGIC_VECTOR (9 downto 0);
    signal bound8_fu_891_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal bound8_reg_1580 : STD_LOGIC_VECTOR (34 downto 0);
    signal bound15_fu_903_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound15_reg_1585 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln257_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln257_reg_1590 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln253_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state12_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state14_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state15_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln253_reg_1595_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln253_fu_920_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln253_1_fu_945_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln253_1_reg_1604 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln255_1_fu_1005_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln255_1_reg_1614 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln255_1_reg_1614_pp2_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln255_1_reg_1614_pp2_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln255_2_fu_1013_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln261_2_fu_1021_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln261_2_reg_1623 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln261_2_reg_1623_pp2_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln257_fu_1025_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln255_3_fu_1037_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln266_fu_1063_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln266_reg_1638 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal mul_ln266_1_fu_1075_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal mul_ln266_1_reg_1643 : STD_LOGIC_VECTOR (59 downto 0);
    signal icmp_ln266_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal add_ln266_fu_1086_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln266_reg_1652 : STD_LOGIC_VECTOR (59 downto 0);
    signal icmp_ln269_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln269_reg_1657 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln266_1_fu_1103_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln266_1_reg_1662 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln266_fu_1111_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln266_reg_1667 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul118_fu_1123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul118_reg_1693 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln332_fu_1127_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln332_reg_1698 : STD_LOGIC_VECTOR (8 downto 0);
    signal bound47_fu_1139_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal bound47_reg_1703 : STD_LOGIC_VECTOR (34 downto 0);
    signal bound54_fu_1150_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound54_reg_1708 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln336_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln336_reg_1713 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln266_fu_1162_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln266_reg_1718 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal mul_ln266_2_fu_1169_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln266_2_reg_1723 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln269_fu_1173_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln269_reg_1728 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv88_fu_1177_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv88_reg_1733 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv88_1_fu_1181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv88_1_reg_1738 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv88_2_fu_1185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv88_2_reg_1743 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv88_3_fu_1189_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv88_3_reg_1748 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln277_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln277_reg_1753 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state19_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state20_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state21_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state22_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln277_reg_1753_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln277_reg_1753_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln277_1_fu_1198_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal select_ln277_1_fu_1223_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln277_1_reg_1762 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_74_fu_1235_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_74_reg_1767 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_74_reg_1767_pp3_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln280_fu_1239_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_75_fu_1252_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_75_reg_1777 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal empty_76_fu_1256_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_76_reg_1782 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_77_fu_1260_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_77_reg_1787 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_78_fu_1264_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_78_reg_1792 : STD_LOGIC_VECTOR (9 downto 0);
    signal co_2_fu_1268_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal co_2_reg_1797 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln332_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state25_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state26_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state27_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_state28_pp4_stage0_iter3 : BOOLEAN;
    signal ap_block_state29_pp4_stage0_iter4 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal icmp_ln332_reg_1802_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln332_reg_1802_pp4_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln332_fu_1278_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal icmp_ln334_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln334_reg_1811 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln334_reg_1811_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln332_1_fu_1295_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln332_1_reg_1819 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln334_3_fu_1313_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal select_ln334_1_fu_1373_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln334_1_reg_1834 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln334_1_reg_1834_pp4_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln334_2_fu_1381_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal add_ln336_fu_1393_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state6 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state9 : STD_LOGIC;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state19 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp4_exit_iter2_state27 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_ap_start : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_ap_done : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_ap_ready : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_ap_idle : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc13_fu_672_ap_continue : STD_LOGIC;
    signal ap_phi_mux_ko_phi_fu_466_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_mux_co_phi_fu_510_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal indvar_flatten42_reg_550 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_sync_grp_dataflow_parent_loop_proc13_fu_672_ap_ready : STD_LOGIC;
    signal ap_sync_grp_dataflow_parent_loop_proc13_fu_672_ap_done : STD_LOGIC;
    signal ap_block_state24_on_subcall_done : BOOLEAN;
    signal ko_1_reg_561 : STD_LOGIC_VECTOR (29 downto 0);
    signal co_1_reg_572 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_mux_hi_phi_fu_599_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_phi_mux_k_1_phi_fu_632_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_dataflow_parent_loop_proc13_fu_672_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_done : STD_LOGIC := '0';
    signal zext_ln240_fu_797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln250_fu_859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln261_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln266_3_fu_1115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom94_fu_1245_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln338_fu_1399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage0_01001 : BOOLEAN;
    signal trunc_ln708_fu_804_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_1_fu_851_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_2_fu_1045_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln242_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln240_1_fu_773_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln240_fu_765_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp1_fu_816_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_812_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_883_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal bound15_fu_903_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound15_fu_903_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal icmp_ln255_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln253_1_fu_939_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln261_fu_957_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln257_1_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln253_fu_931_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln253_3_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln255_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln255_fu_981_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln261_1_fu_1001_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln253_2_fu_961_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln255_fu_993_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln255_1_fu_1031_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1424_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln266_fu_1063_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln266_fu_1060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln266_fu_1063_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln266_1_fu_1075_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln266_1_fu_1075_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln266_1_fu_1097_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_fu_1131_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal bound54_fu_1150_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound54_fu_1150_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal icmp_ln280_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln277_2_fu_1217_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln277_fu_1209_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1431_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln332_1_fu_1289_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln334_1_fu_1307_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal trunc_ln338_fu_1328_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln336_1_fu_1339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln332_fu_1321_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln332_3_fu_1344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln334_fu_1356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln334_fu_1350_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln338_1_fu_1369_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln332_2_fu_1332_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln334_fu_1361_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1439_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Repl2_s_fu_1406_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1424_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1431_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1439_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1439_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1424_ce : STD_LOGIC;
    signal grp_fu_1439_ce : STD_LOGIC;
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal bound15_fu_903_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound15_fu_903_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound54_fu_1150_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound54_fu_1150_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln266_1_fu_1075_p00 : STD_LOGIC_VECTOR (59 downto 0);
    signal mul_ln266_1_fu_1075_p10 : STD_LOGIC_VECTOR (59 downto 0);

    component Conv_sysarr_dbbuf_dataflow_parent_loop_proc13 IS
    port (
        tmp_data_V_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ko_1 : IN STD_LOGIC_VECTOR (8 downto 0);
        co_2 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (9 downto 0);
        weight_l2_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_0_ce0 : OUT STD_LOGIC;
        weight_l2_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_0_we0 : OUT STD_LOGIC;
        weight_l2_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_0_ce1 : OUT STD_LOGIC;
        weight_l2_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_0_we1 : OUT STD_LOGIC;
        weight_l2_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_1_ce0 : OUT STD_LOGIC;
        weight_l2_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_1_we0 : OUT STD_LOGIC;
        weight_l2_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_1_ce1 : OUT STD_LOGIC;
        weight_l2_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_1_we1 : OUT STD_LOGIC;
        weight_l2_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_2_ce0 : OUT STD_LOGIC;
        weight_l2_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_2_we0 : OUT STD_LOGIC;
        weight_l2_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_2_ce1 : OUT STD_LOGIC;
        weight_l2_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_2_we1 : OUT STD_LOGIC;
        weight_l2_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_3_ce0 : OUT STD_LOGIC;
        weight_l2_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_3_we0 : OUT STD_LOGIC;
        weight_l2_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        weight_l2_3_ce1 : OUT STD_LOGIC;
        weight_l2_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weight_l2_3_we1 : OUT STD_LOGIC;
        data_l2_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_0_ce0 : OUT STD_LOGIC;
        data_l2_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_0_we0 : OUT STD_LOGIC;
        data_l2_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_0_ce1 : OUT STD_LOGIC;
        data_l2_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_0_we1 : OUT STD_LOGIC;
        data_l2_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_1_ce0 : OUT STD_LOGIC;
        data_l2_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_1_we0 : OUT STD_LOGIC;
        data_l2_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_1_ce1 : OUT STD_LOGIC;
        data_l2_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_1_we1 : OUT STD_LOGIC;
        data_l2_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_2_ce0 : OUT STD_LOGIC;
        data_l2_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_2_we0 : OUT STD_LOGIC;
        data_l2_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_2_ce1 : OUT STD_LOGIC;
        data_l2_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_2_we1 : OUT STD_LOGIC;
        data_l2_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_3_ce0 : OUT STD_LOGIC;
        data_l2_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_3_we0 : OUT STD_LOGIC;
        data_l2_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_l2_3_ce1 : OUT STD_LOGIC;
        data_l2_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_l2_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_l2_3_we1 : OUT STD_LOGIC;
        output_l1_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_3_ce0 : OUT STD_LOGIC;
        output_l1_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3_we0 : OUT STD_LOGIC;
        output_l1_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_3_ce1 : OUT STD_LOGIC;
        output_l1_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_3_we1 : OUT STD_LOGIC;
        output_l1_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_2_ce0 : OUT STD_LOGIC;
        output_l1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2_we0 : OUT STD_LOGIC;
        output_l1_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_2_ce1 : OUT STD_LOGIC;
        output_l1_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_2_we1 : OUT STD_LOGIC;
        output_l1_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_1_ce0 : OUT STD_LOGIC;
        output_l1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1_we0 : OUT STD_LOGIC;
        output_l1_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_1_ce1 : OUT STD_LOGIC;
        output_l1_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_1_we1 : OUT STD_LOGIC;
        output_l1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_0_ce0 : OUT STD_LOGIC;
        output_l1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_0_we0 : OUT STD_LOGIC;
        output_l1_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_l1_0_ce1 : OUT STD_LOGIC;
        output_l1_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_l1_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_l1_0_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        tmp_data_V_5_ap_vld : IN STD_LOGIC;
        p_read_ap_vld : IN STD_LOGIC;
        p_read1_ap_vld : IN STD_LOGIC;
        ko_1_ap_vld : IN STD_LOGIC;
        co_2_ap_vld : IN STD_LOGIC;
        p_read2_ap_vld : IN STD_LOGIC;
        p_read3_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component Conv_sysarr_dbbuf_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_mul_30ns_34ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_mul_30ns_30ns_60_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_mul_9s_9s_9_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_mac_muladd_10s_10s_10ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_ama_addmuladd_9ns_9ns_9s_9ns_9_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        din3 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_mac_muladd_9s_9s_9ns_9_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_output_l1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_weight_l2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Conv_sysarr_dbbuf_data_l2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    output_l1_0_U : component Conv_sysarr_dbbuf_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l1_0_address0,
        ce0 => output_l1_0_ce0,
        we0 => output_l1_0_we0,
        d0 => output_l1_0_d0,
        q0 => output_l1_0_q0,
        address1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_address1,
        ce1 => output_l1_0_ce1,
        q1 => output_l1_0_q1);

    output_l1_1_U : component Conv_sysarr_dbbuf_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l1_1_address0,
        ce0 => output_l1_1_ce0,
        we0 => output_l1_1_we0,
        d0 => output_l1_1_d0,
        q0 => output_l1_1_q0,
        address1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_address1,
        ce1 => output_l1_1_ce1,
        q1 => output_l1_1_q1);

    output_l1_2_U : component Conv_sysarr_dbbuf_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l1_2_address0,
        ce0 => output_l1_2_ce0,
        we0 => output_l1_2_we0,
        d0 => output_l1_2_d0,
        q0 => output_l1_2_q0,
        address1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_address1,
        ce1 => output_l1_2_ce1,
        q1 => output_l1_2_q1);

    output_l1_3_U : component Conv_sysarr_dbbuf_output_l1_0
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_l1_3_address0,
        ce0 => output_l1_3_ce0,
        we0 => output_l1_3_we0,
        d0 => output_l1_3_d0,
        q0 => output_l1_3_q0,
        address1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_address1,
        ce1 => output_l1_3_ce1,
        q1 => output_l1_3_q1);

    weight_l2_0_U : component Conv_sysarr_dbbuf_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_l2_0_address0,
        ce0 => weight_l2_0_ce0,
        we0 => weight_l2_0_we0,
        d0 => trunc_ln708_1_fu_851_p1,
        q0 => weight_l2_0_q0);

    weight_l2_1_U : component Conv_sysarr_dbbuf_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_l2_1_address0,
        ce0 => weight_l2_1_ce0,
        we0 => weight_l2_1_we0,
        d0 => trunc_ln708_1_fu_851_p1,
        q0 => weight_l2_1_q0);

    weight_l2_2_U : component Conv_sysarr_dbbuf_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_l2_2_address0,
        ce0 => weight_l2_2_ce0,
        we0 => weight_l2_2_we0,
        d0 => trunc_ln708_1_fu_851_p1,
        q0 => weight_l2_2_q0);

    weight_l2_3_U : component Conv_sysarr_dbbuf_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_l2_3_address0,
        ce0 => weight_l2_3_ce0,
        we0 => weight_l2_3_we0,
        d0 => trunc_ln708_1_fu_851_p1,
        q0 => weight_l2_3_q0);

    data_l2_0_U : component Conv_sysarr_dbbuf_data_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_l2_0_address0,
        ce0 => data_l2_0_ce0,
        we0 => data_l2_0_we0,
        d0 => trunc_ln708_2_fu_1045_p1,
        q0 => data_l2_0_q0);

    data_l2_1_U : component Conv_sysarr_dbbuf_data_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_l2_1_address0,
        ce0 => data_l2_1_ce0,
        we0 => data_l2_1_we0,
        d0 => trunc_ln708_2_fu_1045_p1,
        q0 => data_l2_1_q0);

    data_l2_2_U : component Conv_sysarr_dbbuf_data_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_l2_2_address0,
        ce0 => data_l2_2_ce0,
        we0 => data_l2_2_we0,
        d0 => trunc_ln708_2_fu_1045_p1,
        q0 => data_l2_2_q0);

    data_l2_3_U : component Conv_sysarr_dbbuf_data_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_l2_3_address0,
        ce0 => data_l2_3_ce0,
        we0 => data_l2_3_we0,
        d0 => trunc_ln708_2_fu_1045_p1,
        q0 => data_l2_3_q0);

    bias_l1_0_U : component Conv_sysarr_dbbuf_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_l1_0_address0,
        ce0 => bias_l1_0_ce0,
        we0 => bias_l1_0_we0,
        d0 => trunc_ln708_fu_804_p1,
        q0 => bias_l1_0_q0);

    bias_l1_1_U : component Conv_sysarr_dbbuf_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_l1_1_address0,
        ce0 => bias_l1_1_ce0,
        we0 => bias_l1_1_we0,
        d0 => trunc_ln708_fu_804_p1,
        q0 => bias_l1_1_q0);

    bias_l1_2_U : component Conv_sysarr_dbbuf_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_l1_2_address0,
        ce0 => bias_l1_2_ce0,
        we0 => bias_l1_2_we0,
        d0 => trunc_ln708_fu_804_p1,
        q0 => bias_l1_2_q0);

    bias_l1_3_U : component Conv_sysarr_dbbuf_weight_l2_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_l1_3_address0,
        ce0 => bias_l1_3_ce0,
        we0 => bias_l1_3_we0,
        d0 => trunc_ln708_fu_804_p1,
        q0 => bias_l1_3_q0);

    grp_dataflow_parent_loop_proc13_fu_672 : component Conv_sysarr_dbbuf_dataflow_parent_loop_proc13
    port map (
        tmp_data_V_5 => tmp_data_V_5_reg_1505,
        p_read => empty_75_reg_1777,
        p_read1 => empty_76_reg_1782,
        ko_1 => trunc_ln266_reg_1667,
        co_2 => trunc_ln269_reg_1728,
        p_read2 => empty_77_reg_1787,
        p_read3 => empty_78_reg_1792,
        weight_l2_0_address0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_address0,
        weight_l2_0_ce0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_ce0,
        weight_l2_0_d0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_d0,
        weight_l2_0_q0 => weight_l2_0_q0,
        weight_l2_0_we0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_we0,
        weight_l2_0_address1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_address1,
        weight_l2_0_ce1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_ce1,
        weight_l2_0_d1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_d1,
        weight_l2_0_q1 => ap_const_lv8_0,
        weight_l2_0_we1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_we1,
        weight_l2_1_address0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_address0,
        weight_l2_1_ce0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_ce0,
        weight_l2_1_d0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_d0,
        weight_l2_1_q0 => weight_l2_1_q0,
        weight_l2_1_we0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_we0,
        weight_l2_1_address1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_address1,
        weight_l2_1_ce1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_ce1,
        weight_l2_1_d1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_d1,
        weight_l2_1_q1 => ap_const_lv8_0,
        weight_l2_1_we1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_we1,
        weight_l2_2_address0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_address0,
        weight_l2_2_ce0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_ce0,
        weight_l2_2_d0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_d0,
        weight_l2_2_q0 => weight_l2_2_q0,
        weight_l2_2_we0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_we0,
        weight_l2_2_address1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_address1,
        weight_l2_2_ce1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_ce1,
        weight_l2_2_d1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_d1,
        weight_l2_2_q1 => ap_const_lv8_0,
        weight_l2_2_we1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_we1,
        weight_l2_3_address0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_address0,
        weight_l2_3_ce0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_ce0,
        weight_l2_3_d0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_d0,
        weight_l2_3_q0 => weight_l2_3_q0,
        weight_l2_3_we0 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_we0,
        weight_l2_3_address1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_address1,
        weight_l2_3_ce1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_ce1,
        weight_l2_3_d1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_d1,
        weight_l2_3_q1 => ap_const_lv8_0,
        weight_l2_3_we1 => grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_we1,
        data_l2_0_address0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_address0,
        data_l2_0_ce0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_ce0,
        data_l2_0_d0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_d0,
        data_l2_0_q0 => data_l2_0_q0,
        data_l2_0_we0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_we0,
        data_l2_0_address1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_address1,
        data_l2_0_ce1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_ce1,
        data_l2_0_d1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_d1,
        data_l2_0_q1 => ap_const_lv8_0,
        data_l2_0_we1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_we1,
        data_l2_1_address0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_address0,
        data_l2_1_ce0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_ce0,
        data_l2_1_d0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_d0,
        data_l2_1_q0 => data_l2_1_q0,
        data_l2_1_we0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_we0,
        data_l2_1_address1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_address1,
        data_l2_1_ce1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_ce1,
        data_l2_1_d1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_d1,
        data_l2_1_q1 => ap_const_lv8_0,
        data_l2_1_we1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_we1,
        data_l2_2_address0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_address0,
        data_l2_2_ce0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_ce0,
        data_l2_2_d0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_d0,
        data_l2_2_q0 => data_l2_2_q0,
        data_l2_2_we0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_we0,
        data_l2_2_address1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_address1,
        data_l2_2_ce1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_ce1,
        data_l2_2_d1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_d1,
        data_l2_2_q1 => ap_const_lv8_0,
        data_l2_2_we1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_we1,
        data_l2_3_address0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_address0,
        data_l2_3_ce0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_ce0,
        data_l2_3_d0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_d0,
        data_l2_3_q0 => data_l2_3_q0,
        data_l2_3_we0 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_we0,
        data_l2_3_address1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_address1,
        data_l2_3_ce1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_ce1,
        data_l2_3_d1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_d1,
        data_l2_3_q1 => ap_const_lv8_0,
        data_l2_3_we1 => grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_we1,
        output_l1_3_address0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_address0,
        output_l1_3_ce0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_ce0,
        output_l1_3_d0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_d0,
        output_l1_3_q0 => ap_const_lv32_0,
        output_l1_3_we0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_we0,
        output_l1_3_address1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_address1,
        output_l1_3_ce1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_ce1,
        output_l1_3_d1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_d1,
        output_l1_3_q1 => output_l1_3_q1,
        output_l1_3_we1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_we1,
        output_l1_2_address0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_address0,
        output_l1_2_ce0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_ce0,
        output_l1_2_d0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_d0,
        output_l1_2_q0 => ap_const_lv32_0,
        output_l1_2_we0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_we0,
        output_l1_2_address1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_address1,
        output_l1_2_ce1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_ce1,
        output_l1_2_d1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_d1,
        output_l1_2_q1 => output_l1_2_q1,
        output_l1_2_we1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_we1,
        output_l1_1_address0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_address0,
        output_l1_1_ce0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_ce0,
        output_l1_1_d0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_d0,
        output_l1_1_q0 => ap_const_lv32_0,
        output_l1_1_we0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_we0,
        output_l1_1_address1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_address1,
        output_l1_1_ce1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_ce1,
        output_l1_1_d1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_d1,
        output_l1_1_q1 => output_l1_1_q1,
        output_l1_1_we1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_we1,
        output_l1_0_address0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_address0,
        output_l1_0_ce0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_ce0,
        output_l1_0_d0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_d0,
        output_l1_0_q0 => ap_const_lv32_0,
        output_l1_0_we0 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_we0,
        output_l1_0_address1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_address1,
        output_l1_0_ce1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_ce1,
        output_l1_0_d1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_d1,
        output_l1_0_q1 => output_l1_0_q1,
        output_l1_0_we1 => grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        tmp_data_V_5_ap_vld => ap_const_logic_1,
        p_read_ap_vld => ap_const_logic_1,
        p_read1_ap_vld => ap_const_logic_1,
        ko_1_ap_vld => ap_const_logic_1,
        co_2_ap_vld => ap_const_logic_1,
        p_read2_ap_vld => ap_const_logic_1,
        p_read3_ap_vld => ap_const_logic_1,
        ap_start => grp_dataflow_parent_loop_proc13_fu_672_ap_start,
        ap_done => grp_dataflow_parent_loop_proc13_fu_672_ap_done,
        ap_ready => grp_dataflow_parent_loop_proc13_fu_672_ap_ready,
        ap_idle => grp_dataflow_parent_loop_proc13_fu_672_ap_idle,
        ap_continue => grp_dataflow_parent_loop_proc13_fu_672_ap_continue);

    mul_32s_32s_32_1_1_U234 : component Conv_sysarr_dbbuf_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_data_V_2_reg_1465,
        din1 => tmp_data_V_1_reg_1447,
        dout => tmp_fu_812_p2);

    mul_32s_32s_32_1_1_U235 : component Conv_sysarr_dbbuf_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_data_V_5_reg_1505,
        din1 => tmp_data_V_5_reg_1505,
        dout => tmp1_fu_816_p2);

    mul_32s_32s_32_1_1_U236 : component Conv_sysarr_dbbuf_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp1_fu_816_p2,
        din1 => tmp_fu_812_p2,
        dout => mul41_fu_820_p2);

    mul_32s_32s_32_1_1_U237 : component Conv_sysarr_dbbuf_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_data_V_4_reg_1494,
        din1 => tmp_data_V_4_reg_1494,
        dout => mul55_fu_875_p2);

    mul_30ns_34ns_64_1_1_U238 : component Conv_sysarr_dbbuf_mul_30ns_34ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 34,
        dout_WIDTH => 64)
    port map (
        din0 => bound15_fu_903_p0,
        din1 => bound15_fu_903_p1,
        dout => bound15_fu_903_p2);

    mul_32ns_32ns_64_1_1_U239 : component Conv_sysarr_dbbuf_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln266_fu_1063_p0,
        din1 => mul_ln266_fu_1063_p1,
        dout => mul_ln266_fu_1063_p2);

    mul_30ns_30ns_60_1_1_U240 : component Conv_sysarr_dbbuf_mul_30ns_30ns_60_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 30,
        dout_WIDTH => 60)
    port map (
        din0 => mul_ln266_1_fu_1075_p0,
        din1 => mul_ln266_1_fu_1075_p1,
        dout => mul_ln266_1_fu_1075_p2);

    mul_32s_32s_32_1_1_U241 : component Conv_sysarr_dbbuf_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_data_V_3_reg_1481,
        din1 => tmp_data_V_3_reg_1481,
        dout => mul118_fu_1123_p2);

    mul_30ns_34ns_64_1_1_U242 : component Conv_sysarr_dbbuf_mul_30ns_34ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 34,
        dout_WIDTH => 64)
    port map (
        din0 => bound54_fu_1150_p0,
        din1 => bound54_fu_1150_p1,
        dout => bound54_fu_1150_p2);

    mul_9s_9s_9_1_1_U243 : component Conv_sysarr_dbbuf_mul_9s_9s_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 9)
    port map (
        din0 => trunc_ln521_reg_1475,
        din1 => trunc_ln266_reg_1667,
        dout => mul_ln266_2_fu_1169_p2);

    mux_42_32_1_1_U244 : component Conv_sysarr_dbbuf_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => output_l1_0_q0,
        din1 => output_l1_1_q0,
        din2 => output_l1_2_q0,
        din3 => output_l1_3_q0,
        din4 => select_ln334_1_reg_1834_pp4_iter3_reg,
        dout => p_Repl2_s_fu_1406_p6);

    mac_muladd_10s_10s_10ns_10_4_1_U245 : component Conv_sysarr_dbbuf_mac_muladd_10s_10s_10ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1424_p0,
        din1 => empty_reg_1575,
        din2 => trunc_ln261_2_reg_1623_pp2_iter1_reg,
        ce => grp_fu_1424_ce,
        dout => grp_fu_1424_p3);

    ama_addmuladd_9ns_9ns_9s_9ns_9_4_1_U246 : component Conv_sysarr_dbbuf_ama_addmuladd_9ns_9ns_9s_9ns_9_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        din3_WIDTH => 9,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1431_p0,
        din1 => mul_ln266_2_reg_1723,
        din2 => trunc_ln521_reg_1475,
        din3 => empty_74_reg_1767_pp3_iter1_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_1431_p4);

    mac_muladd_9s_9s_9ns_9_4_1_U247 : component Conv_sysarr_dbbuf_mac_muladd_9s_9s_9ns_9_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln332_reg_1698,
        din1 => grp_fu_1439_p1,
        din2 => grp_fu_1439_p2,
        ce => grp_fu_1439_ce,
        dout => grp_fu_1439_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state6);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state9);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state12)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state12);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state19) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state19)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state19);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp4_flush_enable)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln266_fu_1081_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp4_exit_iter2_state27)) then 
                        ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
                elsif (((icmp_ln266_fu_1081_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    ap_enable_reg_pp4_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_done <= ap_const_logic_0;
                elsif ((grp_dataflow_parent_loop_proc13_fu_672_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_ready <= ap_const_logic_0;
                elsif ((grp_dataflow_parent_loop_proc13_fu_672_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_parent_loop_proc13_fu_672_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_parent_loop_proc13_fu_672_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_sync_grp_dataflow_parent_loop_proc13_fu_672_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
                    grp_dataflow_parent_loop_proc13_fu_672_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_parent_loop_proc13_fu_672_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_parent_loop_proc13_fu_672_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ci_reg_528_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln253_fu_915_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                ci_reg_528 <= select_ln255_2_fu_1013_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                ci_reg_528 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    co_1_reg_572_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                co_1_reg_572 <= co_2_reg_1797;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                co_1_reg_572 <= ap_const_lv30_0;
            end if; 
        end if;
    end process;

    co_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln253_reg_1595 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                co_reg_506 <= select_ln253_1_reg_1604;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                co_reg_506 <= ap_const_lv30_0;
            end if; 
        end if;
    end process;

    hi_reg_595_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln277_reg_1753 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                hi_reg_595 <= select_ln277_1_reg_1762;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                hi_reg_595 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten10_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln253_fu_915_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                indvar_flatten10_reg_517 <= select_ln255_3_fu_1037_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                indvar_flatten10_reg_517 <= ap_const_lv35_0;
            end if; 
        end if;
    end process;

    indvar_flatten24_reg_495_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln253_fu_915_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                indvar_flatten24_reg_495 <= add_ln253_fu_920_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                indvar_flatten24_reg_495 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    indvar_flatten31_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln277_fu_1193_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                indvar_flatten31_reg_584 <= add_ln277_1_fu_1198_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                indvar_flatten31_reg_584 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    indvar_flatten42_reg_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                indvar_flatten42_reg_550 <= add_ln266_reg_1652;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                indvar_flatten42_reg_550 <= ap_const_lv60_0;
            end if; 
        end if;
    end process;

    indvar_flatten49_reg_639_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln332_fu_1273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                indvar_flatten49_reg_639 <= select_ln334_3_fu_1313_p3;
            elsif (((icmp_ln266_fu_1081_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                indvar_flatten49_reg_639 <= ap_const_lv35_0;
            end if; 
        end if;
    end process;

    indvar_flatten63_reg_617_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln332_fu_1273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                indvar_flatten63_reg_617 <= add_ln332_fu_1278_p2;
            elsif (((icmp_ln266_fu_1081_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                indvar_flatten63_reg_617 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln240_fu_748_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_451 <= add_ln240_fu_753_p2;
            elsif (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                indvar_flatten_reg_451 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    k_1_reg_628_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln332_reg_1802 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                k_1_reg_628 <= select_ln332_1_reg_1819;
            elsif (((icmp_ln266_fu_1081_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                k_1_reg_628 <= ap_const_lv30_0;
            end if; 
        end if;
    end process;

    k_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                k_reg_484 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln247_fu_826_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                k_reg_484 <= add_ln247_fu_831_p2;
            end if; 
        end if;
    end process;

    ki_1_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (icmp_ln332_reg_1802_pp4_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                ki_1_reg_650 <= select_ln334_2_fu_1381_p3;
            elsif (((icmp_ln266_fu_1081_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                ki_1_reg_650 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    ki_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln240_fu_748_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ki_reg_473 <= add_ln242_fu_791_p2;
            elsif (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ki_reg_473 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    ko_1_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                ko_1_reg_561 <= select_ln266_1_reg_1662;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                ko_1_reg_561 <= ap_const_lv30_0;
            end if; 
        end if;
    end process;

    ko_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln240_reg_1517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ko_reg_462 <= select_ln240_1_reg_1526;
            elsif (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ko_reg_462 <= ap_const_lv30_0;
            end if; 
        end if;
    end process;

    wh_1_reg_661_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (icmp_ln332_reg_1802_pp4_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                wh_1_reg_661 <= add_ln336_fu_1393_p2;
            elsif (((icmp_ln266_fu_1081_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                wh_1_reg_661 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    wh_reg_539_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln253_fu_915_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                wh_reg_539 <= add_ln257_fu_1025_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                wh_reg_539 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    wi_reg_606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln277_fu_1193_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                wi_reg_606 <= add_ln280_fu_1239_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                wi_reg_606 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                add_ln266_reg_1652 <= add_ln266_fu_1086_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                bias_in_V_read_1_reg_1459 <= bias_in_V_dout;
                tmp_data_V_2_reg_1465 <= tmp_data_V_2_fu_721_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                bias_in_V_read_2_reg_1470 <= bias_in_V_dout;
                tmp_data_V_3_reg_1481 <= tmp_data_V_3_fu_729_p1;
                trunc_ln521_reg_1475 <= trunc_ln521_fu_725_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                bias_in_V_read_3_reg_1489 <= bias_in_V_dout;
                tmp_data_V_4_reg_1494 <= tmp_data_V_4_fu_733_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                bias_in_V_read_4_reg_1500 <= bias_in_V_dout;
                    tmp_2_reg_1512(31 downto 2) <= tmp_2_fu_741_p3(31 downto 2);
                tmp_data_V_5_reg_1505 <= tmp_data_V_5_fu_737_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                bound15_reg_1585 <= bound15_fu_903_p2;
                    bound8_reg_1580(33 downto 2) <= bound8_fu_891_p1(33 downto 2);
                div52_cast_reg_1564 <= bias_in_V_read_1_reg_1459(31 downto 2);
                empty_reg_1575 <= empty_fu_879_p1;
                icmp_ln257_reg_1590 <= icmp_ln257_fu_909_p2;
                mul55_reg_1570 <= mul55_fu_875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln266_fu_1081_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    bound47_reg_1703(33 downto 2) <= bound47_fu_1139_p1(33 downto 2);
                bound54_reg_1708 <= bound54_fu_1150_p2;
                icmp_ln336_reg_1713 <= icmp_ln336_fu_1156_p2;
                mul118_reg_1693 <= mul118_fu_1123_p2;
                trunc_ln332_reg_1698 <= trunc_ln332_fu_1127_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                co_2_reg_1797 <= co_2_fu_1268_p2;
                empty_75_reg_1777 <= empty_75_fu_1252_p1;
                empty_76_reg_1782 <= empty_76_fu_1256_p1;
                empty_77_reg_1787 <= empty_77_fu_1260_p1;
                empty_78_reg_1792 <= empty_78_fu_1264_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                conv88_1_reg_1738 <= conv88_1_fu_1181_p1;
                conv88_2_reg_1743 <= conv88_2_fu_1185_p1;
                conv88_3_reg_1748 <= conv88_3_fu_1189_p1;
                conv88_reg_1733 <= conv88_fu_1177_p1;
                mul_ln266_2_reg_1723 <= mul_ln266_2_fu_1169_p2;
                select_ln266_reg_1718 <= select_ln266_fu_1162_p3;
                trunc_ln269_reg_1728 <= trunc_ln269_fu_1173_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((bias_in_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                div29_cast_reg_1452 <= bias_in_V_dout(31 downto 2);
                tmp_data_V_1_reg_1447 <= tmp_data_V_1_fu_707_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln277_fu_1193_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                empty_74_reg_1767 <= empty_74_fu_1235_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                empty_74_reg_1767_pp3_iter1_reg <= empty_74_reg_1767;
                icmp_ln277_reg_1753 <= icmp_ln277_fu_1193_p2;
                icmp_ln277_reg_1753_pp3_iter1_reg <= icmp_ln277_reg_1753;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln240_reg_1517 <= icmp_ln240_fu_748_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln253_reg_1595 <= icmp_ln253_fu_915_p2;
                icmp_ln253_reg_1595_pp2_iter1_reg <= icmp_ln253_reg_1595;
                select_ln255_1_reg_1614_pp2_iter1_reg <= select_ln255_1_reg_1614;
                trunc_ln261_2_reg_1623_pp2_iter1_reg <= trunc_ln261_2_reg_1623;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                icmp_ln253_reg_1595_pp2_iter2_reg <= icmp_ln253_reg_1595_pp2_iter1_reg;
                select_ln255_1_reg_1614_pp2_iter2_reg <= select_ln255_1_reg_1614_pp2_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln266_fu_1081_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                icmp_ln269_reg_1657 <= icmp_ln269_fu_1092_p2;
                select_ln266_1_reg_1662 <= select_ln266_1_fu_1103_p3;
                trunc_ln266_reg_1667 <= trunc_ln266_fu_1111_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln277_reg_1753_pp3_iter2_reg <= icmp_ln277_reg_1753_pp3_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                icmp_ln332_reg_1802 <= icmp_ln332_fu_1273_p2;
                icmp_ln332_reg_1802_pp4_iter1_reg <= icmp_ln332_reg_1802;
                icmp_ln334_reg_1811_pp4_iter1_reg <= icmp_ln334_reg_1811;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp4_stage0_11001)) then
                icmp_ln332_reg_1802_pp4_iter2_reg <= icmp_ln332_reg_1802_pp4_iter1_reg;
                icmp_ln332_reg_1802_pp4_iter3_reg <= icmp_ln332_reg_1802_pp4_iter2_reg;
                select_ln334_1_reg_1834_pp4_iter3_reg <= select_ln334_1_reg_1834;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln332_fu_1273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                icmp_ln334_reg_1811 <= icmp_ln334_fu_1284_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln247_fu_826_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                lshr_ln_reg_1555 <= k_reg_484(10 downto 2);
                trunc_ln250_reg_1560 <= trunc_ln250_fu_847_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                mul41_reg_1541 <= mul41_fu_820_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                mul_ln266_1_reg_1643 <= mul_ln266_1_fu_1075_p2;
                mul_ln266_reg_1638 <= mul_ln266_fu_1063_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln240_fu_748_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln240_1_reg_1526 <= select_ln240_1_fu_779_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln253_fu_915_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln253_1_reg_1604 <= select_ln253_1_fu_945_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln253_fu_915_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln255_1_reg_1614 <= select_ln255_1_fu_1005_p3;
                trunc_ln261_2_reg_1623 <= trunc_ln261_2_fu_1021_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln277_fu_1193_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                select_ln277_1_reg_1762 <= select_ln277_1_fu_1223_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln332_fu_1273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                select_ln332_1_reg_1819 <= select_ln332_1_fu_1295_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln332_reg_1802_pp4_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                select_ln334_1_reg_1834 <= select_ln334_1_fu_1373_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln240_fu_748_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln244_reg_1532 <= trunc_ln244_fu_787_p1;
            end if;
        end if;
    end process;
    tmp_2_reg_1512(1 downto 0) <= "00";
    bound8_reg_1580(1 downto 0) <= "00";
    bound8_reg_1580(34) <= '0';
    bound47_reg_1703(1 downto 0) <= "00";
    bound47_reg_1703(34) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, bias_in_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_enable_reg_pp2_iter3, ap_enable_reg_pp4_iter4, icmp_ln240_fu_748_p2, ap_enable_reg_pp0_iter0, icmp_ln247_fu_826_p2, ap_enable_reg_pp1_iter0, icmp_ln253_fu_915_p2, ap_enable_reg_pp2_iter0, icmp_ln266_fu_1081_p2, ap_CS_fsm_state17, icmp_ln277_fu_1193_p2, ap_enable_reg_pp3_iter0, ap_enable_reg_pp4_iter2, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter3, ap_CS_fsm_state24, ap_block_state24_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((bias_in_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln240_fu_748_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln240_fu_748_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln247_fu_826_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln247_fu_826_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln253_fu_915_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) and not(((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln253_fu_915_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln266_fu_1081_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln277_fu_1193_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) and not(((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln277_fu_1193_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) and not(((ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((((ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) or ((ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln240_1_fu_773_p2 <= std_logic_vector(unsigned(ap_const_lv30_1) + unsigned(ap_phi_mux_ko_phi_fu_466_p4));
    add_ln240_fu_753_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_451) + unsigned(ap_const_lv32_1));
    add_ln242_fu_791_p2 <= std_logic_vector(unsigned(select_ln240_fu_765_p3) + unsigned(ap_const_lv3_1));
    add_ln247_fu_831_p2 <= std_logic_vector(unsigned(k_reg_484) + unsigned(ap_const_lv32_1));
    add_ln253_1_fu_939_p2 <= std_logic_vector(unsigned(ap_const_lv30_1) + unsigned(ap_phi_mux_co_phi_fu_510_p4));
    add_ln253_fu_920_p2 <= std_logic_vector(unsigned(indvar_flatten24_reg_495) + unsigned(ap_const_lv64_1));
    add_ln255_1_fu_1031_p2 <= std_logic_vector(unsigned(indvar_flatten10_reg_517) + unsigned(ap_const_lv35_1));
    add_ln255_fu_981_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(select_ln253_fu_931_p3));
    add_ln257_fu_1025_p2 <= std_logic_vector(unsigned(select_ln255_fu_993_p3) + unsigned(ap_const_lv32_1));
    add_ln266_1_fu_1097_p2 <= std_logic_vector(unsigned(ap_const_lv30_1) + unsigned(ko_1_reg_561));
    add_ln266_fu_1086_p2 <= std_logic_vector(unsigned(indvar_flatten42_reg_550) + unsigned(ap_const_lv60_1));
    add_ln277_1_fu_1198_p2 <= std_logic_vector(unsigned(indvar_flatten31_reg_584) + unsigned(ap_const_lv64_1));
    add_ln277_2_fu_1217_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_hi_phi_fu_599_p4));
    add_ln280_fu_1239_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(select_ln277_fu_1209_p3));
    add_ln332_1_fu_1289_p2 <= std_logic_vector(unsigned(ap_const_lv30_1) + unsigned(ap_phi_mux_k_1_phi_fu_632_p4));
    add_ln332_fu_1278_p2 <= std_logic_vector(unsigned(indvar_flatten63_reg_617) + unsigned(ap_const_lv64_1));
    add_ln334_1_fu_1307_p2 <= std_logic_vector(unsigned(ap_const_lv35_1) + unsigned(indvar_flatten49_reg_639));
    add_ln334_fu_1350_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(select_ln332_fu_1321_p3));
    add_ln336_fu_1393_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(select_ln334_fu_1361_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state16 <= ap_CS_fsm(10);
    ap_CS_fsm_state17 <= ap_CS_fsm(11);
    ap_CS_fsm_state18 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(14);
    ap_CS_fsm_state24 <= ap_CS_fsm(15);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(17);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(bias_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln240_reg_1517)
    begin
                ap_block_pp0_stage0_11001 <= ((bias_in_V_empty_n = ap_const_logic_0) and (icmp_ln240_reg_1517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(bias_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln240_reg_1517)
    begin
                ap_block_pp0_stage0_subdone <= ((bias_in_V_empty_n = ap_const_logic_0) and (icmp_ln240_reg_1517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(weight_in_V_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_11001 <= ((weight_in_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(weight_in_V_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_subdone <= ((weight_in_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(data_in_V_empty_n, ap_enable_reg_pp2_iter3, icmp_ln253_reg_1595_pp2_iter2_reg)
    begin
                ap_block_pp2_stage0_11001 <= ((data_in_V_empty_n = ap_const_logic_0) and (icmp_ln253_reg_1595_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(data_in_V_empty_n, ap_enable_reg_pp2_iter3, icmp_ln253_reg_1595_pp2_iter2_reg)
    begin
                ap_block_pp2_stage0_subdone <= ((data_in_V_empty_n = ap_const_logic_0) and (icmp_ln253_reg_1595_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp4_stage0_01001_assign_proc : process(conv_out_V_full_n, ap_enable_reg_pp4_iter4, icmp_ln332_reg_1802_pp4_iter3_reg)
    begin
                ap_block_pp4_stage0_01001 <= ((conv_out_V_full_n = ap_const_logic_0) and (icmp_ln332_reg_1802_pp4_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp4_stage0_11001_assign_proc : process(conv_out_V_full_n, ap_enable_reg_pp4_iter4, icmp_ln332_reg_1802_pp4_iter3_reg)
    begin
                ap_block_pp4_stage0_11001 <= ((conv_out_V_full_n = ap_const_logic_0) and (icmp_ln332_reg_1802_pp4_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp4_stage0_subdone_assign_proc : process(conv_out_V_full_n, ap_enable_reg_pp4_iter4, icmp_ln332_reg_1802_pp4_iter3_reg)
    begin
                ap_block_pp4_stage0_subdone <= ((conv_out_V_full_n = ap_const_logic_0) and (icmp_ln332_reg_1802_pp4_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, bias_in_V_empty_n)
    begin
                ap_block_state1 <= ((bias_in_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state10_pp1_stage0_iter1_assign_proc : process(weight_in_V_empty_n)
    begin
                ap_block_state10_pp1_stage0_iter1 <= (weight_in_V_empty_n = ap_const_logic_0);
    end process;

        ap_block_state12_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp2_stage0_iter3_assign_proc : process(data_in_V_empty_n, icmp_ln253_reg_1595_pp2_iter2_reg)
    begin
                ap_block_state15_pp2_stage0_iter3 <= ((data_in_V_empty_n = ap_const_logic_0) and (icmp_ln253_reg_1595_pp2_iter2_reg = ap_const_lv1_0));
    end process;

        ap_block_state19_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state24_on_subcall_done_assign_proc : process(ap_sync_grp_dataflow_parent_loop_proc13_fu_672_ap_ready, ap_sync_grp_dataflow_parent_loop_proc13_fu_672_ap_done)
    begin
                ap_block_state24_on_subcall_done <= ((ap_sync_grp_dataflow_parent_loop_proc13_fu_672_ap_ready and ap_sync_grp_dataflow_parent_loop_proc13_fu_672_ap_done) = ap_const_logic_0);
    end process;

        ap_block_state25_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp4_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state29_pp4_stage0_iter4_assign_proc : process(conv_out_V_full_n, icmp_ln332_reg_1802_pp4_iter3_reg)
    begin
                ap_block_state29_pp4_stage0_iter4 <= ((conv_out_V_full_n = ap_const_logic_0) and (icmp_ln332_reg_1802_pp4_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter1_assign_proc : process(bias_in_V_empty_n, icmp_ln240_reg_1517)
    begin
                ap_block_state7_pp0_stage0_iter1 <= ((bias_in_V_empty_n = ap_const_logic_0) and (icmp_ln240_reg_1517 = ap_const_lv1_0));
    end process;

        ap_block_state9_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state6_assign_proc : process(icmp_ln240_fu_748_p2)
    begin
        if ((icmp_ln240_fu_748_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state9_assign_proc : process(icmp_ln247_fu_826_p2)
    begin
        if ((icmp_ln247_fu_826_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state12_assign_proc : process(icmp_ln253_fu_915_p2)
    begin
        if ((icmp_ln253_fu_915_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state19_assign_proc : process(icmp_ln277_fu_1193_p2)
    begin
        if ((icmp_ln277_fu_1193_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state19 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter2_state27_assign_proc : process(ap_enable_reg_pp4_iter2, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            ap_condition_pp4_exit_iter2_state27 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter2_state27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_flush_enable_assign_proc : process(icmp_ln332_fu_1273_p2, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_subdone)
    begin
        if (((icmp_ln332_fu_1273_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_condition_pp4_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp4_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter4, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter3)
    begin
        if (((ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_co_phi_fu_510_p4_assign_proc : process(ap_block_pp2_stage0, icmp_ln253_reg_1595, co_reg_506, ap_CS_fsm_pp2_stage0, select_ln253_1_reg_1604, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln253_reg_1595 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_co_phi_fu_510_p4 <= select_ln253_1_reg_1604;
        else 
            ap_phi_mux_co_phi_fu_510_p4 <= co_reg_506;
        end if; 
    end process;


    ap_phi_mux_hi_phi_fu_599_p4_assign_proc : process(hi_reg_595, icmp_ln277_reg_1753, ap_CS_fsm_pp3_stage0, select_ln277_1_reg_1762, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln277_reg_1753 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_hi_phi_fu_599_p4 <= select_ln277_1_reg_1762;
        else 
            ap_phi_mux_hi_phi_fu_599_p4 <= hi_reg_595;
        end if; 
    end process;


    ap_phi_mux_k_1_phi_fu_632_p4_assign_proc : process(ap_block_pp4_stage0, icmp_ln332_reg_1802, k_1_reg_628, ap_CS_fsm_pp4_stage0, select_ln332_1_reg_1819, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln332_reg_1802 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_phi_mux_k_1_phi_fu_632_p4 <= select_ln332_1_reg_1819;
        else 
            ap_phi_mux_k_1_phi_fu_632_p4 <= k_1_reg_628;
        end if; 
    end process;


    ap_phi_mux_ko_phi_fu_466_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln240_reg_1517, ko_reg_462, select_ln240_1_reg_1526)
    begin
        if (((icmp_ln240_reg_1517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_ko_phi_fu_466_p4 <= select_ln240_1_reg_1526;
        else 
            ap_phi_mux_ko_phi_fu_466_p4 <= ko_reg_462;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_dataflow_parent_loop_proc13_fu_672_ap_done <= (grp_dataflow_parent_loop_proc13_fu_672_ap_done or ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_done);
    ap_sync_grp_dataflow_parent_loop_proc13_fu_672_ap_ready <= (grp_dataflow_parent_loop_proc13_fu_672_ap_ready or ap_sync_reg_grp_dataflow_parent_loop_proc13_fu_672_ap_ready);

    bias_in_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, bias_in_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln240_reg_1517)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln240_reg_1517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            bias_in_V_blk_n <= bias_in_V_empty_n;
        else 
            bias_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bias_in_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, bias_in_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln240_reg_1517, ap_block_pp0_stage0_11001)
    begin
        if ((((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((bias_in_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((bias_in_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln240_reg_1517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_in_V_read <= ap_const_logic_1;
        else 
            bias_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state17, zext_ln240_fu_797_p1, zext_ln266_3_fu_1115_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            bias_l1_0_address0 <= zext_ln266_3_fu_1115_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_0_address0 <= zext_ln240_fu_797_p1(9 - 1 downto 0);
        else 
            bias_l1_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    bias_l1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_l1_0_ce0 <= ap_const_logic_1;
        else 
            bias_l1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln244_reg_1532)
    begin
        if (((trunc_ln244_reg_1532 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_0_we0 <= ap_const_logic_1;
        else 
            bias_l1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state17, zext_ln240_fu_797_p1, zext_ln266_3_fu_1115_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            bias_l1_1_address0 <= zext_ln266_3_fu_1115_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_1_address0 <= zext_ln240_fu_797_p1(9 - 1 downto 0);
        else 
            bias_l1_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    bias_l1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_l1_1_ce0 <= ap_const_logic_1;
        else 
            bias_l1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln244_reg_1532)
    begin
        if (((trunc_ln244_reg_1532 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_1_we0 <= ap_const_logic_1;
        else 
            bias_l1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state17, zext_ln240_fu_797_p1, zext_ln266_3_fu_1115_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            bias_l1_2_address0 <= zext_ln266_3_fu_1115_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_2_address0 <= zext_ln240_fu_797_p1(9 - 1 downto 0);
        else 
            bias_l1_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    bias_l1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_l1_2_ce0 <= ap_const_logic_1;
        else 
            bias_l1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln244_reg_1532)
    begin
        if (((trunc_ln244_reg_1532 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_2_we0 <= ap_const_logic_1;
        else 
            bias_l1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state17, zext_ln240_fu_797_p1, zext_ln266_3_fu_1115_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            bias_l1_3_address0 <= zext_ln266_3_fu_1115_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_3_address0 <= zext_ln240_fu_797_p1(9 - 1 downto 0);
        else 
            bias_l1_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    bias_l1_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_l1_3_ce0 <= ap_const_logic_1;
        else 
            bias_l1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_l1_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln244_reg_1532)
    begin
        if (((trunc_ln244_reg_1532 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_l1_3_we0 <= ap_const_logic_1;
        else 
            bias_l1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bound15_fu_903_p0 <= bound15_fu_903_p00(30 - 1 downto 0);
    bound15_fu_903_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div52_cast_fu_866_p4),64));
    bound15_fu_903_p1 <= bound15_fu_903_p10(34 - 1 downto 0);
    bound15_fu_903_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_883_p3),64));
    bound47_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1131_p3),35));
    bound54_fu_1150_p0 <= bound54_fu_1150_p00(30 - 1 downto 0);
    bound54_fu_1150_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div29_cast_reg_1452),64));
    bound54_fu_1150_p1 <= bound54_fu_1150_p10(34 - 1 downto 0);
    bound54_fu_1150_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1131_p3),64));
    bound8_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_883_p3),35));
    co_2_fu_1268_p2 <= std_logic_vector(unsigned(ap_const_lv30_1) + unsigned(select_ln266_reg_1718));
        conv88_1_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_l1_1_q0),32));

        conv88_2_fu_1185_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_l1_2_q0),32));

        conv88_3_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_l1_3_q0),32));

        conv88_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_l1_0_q0),32));


    conv_out_V_blk_n_assign_proc : process(conv_out_V_full_n, ap_enable_reg_pp4_iter4, ap_block_pp4_stage0, icmp_ln332_reg_1802_pp4_iter3_reg)
    begin
        if (((icmp_ln332_reg_1802_pp4_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv_out_V_blk_n <= conv_out_V_full_n;
        else 
            conv_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    conv_out_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Repl2_s_fu_1406_p6),64));

    conv_out_V_write_assign_proc : process(ap_enable_reg_pp4_iter4, icmp_ln332_reg_1802_pp4_iter3_reg, ap_block_pp4_stage0_11001)
    begin
        if (((icmp_ln332_reg_1802_pp4_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
            conv_out_V_write <= ap_const_logic_1;
        else 
            conv_out_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_in_V_blk_n_assign_proc : process(data_in_V_empty_n, ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, icmp_ln253_reg_1595_pp2_iter2_reg)
    begin
        if (((icmp_ln253_reg_1595_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            data_in_V_blk_n <= data_in_V_empty_n;
        else 
            data_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_in_V_read_assign_proc : process(ap_enable_reg_pp2_iter3, icmp_ln253_reg_1595_pp2_iter2_reg, ap_block_pp2_stage0_11001)
    begin
        if (((icmp_ln253_reg_1595_pp2_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            data_in_V_read <= ap_const_logic_1;
        else 
            data_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_0_address0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_address0, ap_CS_fsm_state24, zext_ln261_fu_1053_p1)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            data_l2_0_address0 <= zext_ln261_fu_1053_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_l2_0_address0 <= grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_address0;
        else 
            data_l2_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    data_l2_0_ce0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            data_l2_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_l2_0_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_data_l2_0_ce0;
        else 
            data_l2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_0_we0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, select_ln255_1_reg_1614_pp2_iter2_reg)
    begin
        if (((select_ln255_1_reg_1614_pp2_iter2_reg = ap_const_lv2_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            data_l2_0_we0 <= ap_const_logic_1;
        else 
            data_l2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_1_address0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_address0, ap_CS_fsm_state24, zext_ln261_fu_1053_p1)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            data_l2_1_address0 <= zext_ln261_fu_1053_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_l2_1_address0 <= grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_address0;
        else 
            data_l2_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    data_l2_1_ce0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            data_l2_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_l2_1_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_data_l2_1_ce0;
        else 
            data_l2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_1_we0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, select_ln255_1_reg_1614_pp2_iter2_reg)
    begin
        if (((select_ln255_1_reg_1614_pp2_iter2_reg = ap_const_lv2_1) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            data_l2_1_we0 <= ap_const_logic_1;
        else 
            data_l2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_2_address0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_address0, ap_CS_fsm_state24, zext_ln261_fu_1053_p1)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            data_l2_2_address0 <= zext_ln261_fu_1053_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_l2_2_address0 <= grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_address0;
        else 
            data_l2_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    data_l2_2_ce0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            data_l2_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_l2_2_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_data_l2_2_ce0;
        else 
            data_l2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_2_we0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, select_ln255_1_reg_1614_pp2_iter2_reg)
    begin
        if (((select_ln255_1_reg_1614_pp2_iter2_reg = ap_const_lv2_2) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            data_l2_2_we0 <= ap_const_logic_1;
        else 
            data_l2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_3_address0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_address0, ap_CS_fsm_state24, zext_ln261_fu_1053_p1)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            data_l2_3_address0 <= zext_ln261_fu_1053_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_l2_3_address0 <= grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_address0;
        else 
            data_l2_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    data_l2_3_ce0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            data_l2_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_l2_3_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_data_l2_3_ce0;
        else 
            data_l2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_l2_3_we0_assign_proc : process(ap_enable_reg_pp2_iter3, ap_block_pp2_stage0_11001, select_ln255_1_reg_1614_pp2_iter2_reg)
    begin
        if (((select_ln255_1_reg_1614_pp2_iter2_reg = ap_const_lv2_3) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            data_l2_3_we0 <= ap_const_logic_1;
        else 
            data_l2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    div52_cast_fu_866_p4 <= bias_in_V_read_1_reg_1459(31 downto 2);
    empty_74_fu_1235_p1 <= select_ln277_fu_1209_p3(9 - 1 downto 0);
    empty_75_fu_1252_p1 <= bias_in_V_read_1_reg_1459(11 - 1 downto 0);
    empty_76_fu_1256_p1 <= bias_in_V_read_4_reg_1500(11 - 1 downto 0);
    empty_77_fu_1260_p1 <= bias_in_V_read_2_reg_1470(32 - 1 downto 0);
    empty_78_fu_1264_p1 <= bias_in_V_read_3_reg_1489(10 - 1 downto 0);
    empty_fu_879_p1 <= mul55_fu_875_p2(10 - 1 downto 0);

    grp_dataflow_parent_loop_proc13_fu_672_ap_continue_assign_proc : process(ap_CS_fsm_state24, ap_block_state24_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            grp_dataflow_parent_loop_proc13_fu_672_ap_continue <= ap_const_logic_1;
        else 
            grp_dataflow_parent_loop_proc13_fu_672_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_dataflow_parent_loop_proc13_fu_672_ap_start <= grp_dataflow_parent_loop_proc13_fu_672_ap_start_reg;

    grp_fu_1424_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1424_ce <= ap_const_logic_1;
        else 
            grp_fu_1424_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1424_p0 <= select_ln253_1_fu_945_p3(10 - 1 downto 0);
    grp_fu_1431_p0 <= select_ln277_1_fu_1223_p3(9 - 1 downto 0);

    grp_fu_1439_ce_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            grp_fu_1439_ce <= ap_const_logic_1;
        else 
            grp_fu_1439_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1439_p1 <= select_ln332_1_fu_1295_p3(9 - 1 downto 0);
    grp_fu_1439_p2 <= select_ln334_fu_1361_p3(9 - 1 downto 0);
    icmp_ln240_fu_748_p2 <= "1" when (indvar_flatten_reg_451 = tmp_2_reg_1512) else "0";
    icmp_ln242_fu_759_p2 <= "1" when (ki_reg_473 = ap_const_lv3_4) else "0";
    icmp_ln247_fu_826_p2 <= "1" when (k_reg_484 = mul41_reg_1541) else "0";
    icmp_ln253_fu_915_p2 <= "1" when (indvar_flatten24_reg_495 = bound15_reg_1585) else "0";
    icmp_ln255_fu_926_p2 <= "1" when (indvar_flatten10_reg_517 = bound8_reg_1580) else "0";
    icmp_ln257_1_fu_969_p2 <= "1" when (wh_reg_539 = mul55_reg_1570) else "0";
    icmp_ln257_fu_909_p2 <= "1" when (mul55_fu_875_p2 = ap_const_lv32_0) else "0";
    icmp_ln266_fu_1081_p2 <= "1" when (indvar_flatten42_reg_550 = mul_ln266_1_reg_1643) else "0";
    icmp_ln269_fu_1092_p2 <= "1" when (co_1_reg_572 = div52_cast_reg_1564) else "0";
    icmp_ln277_fu_1193_p2 <= "1" when (indvar_flatten31_reg_584 = mul_ln266_reg_1638) else "0";
    icmp_ln280_fu_1204_p2 <= "1" when (wi_reg_606 = tmp_data_V_3_reg_1481) else "0";
    icmp_ln332_fu_1273_p2 <= "1" when (indvar_flatten63_reg_617 = bound54_reg_1708) else "0";
    icmp_ln334_fu_1284_p2 <= "1" when (indvar_flatten49_reg_639 = bound47_reg_1703) else "0";
    icmp_ln336_1_fu_1339_p2 <= "1" when (wh_1_reg_661 = mul118_reg_1693) else "0";
    icmp_ln336_fu_1156_p2 <= "1" when (mul118_fu_1123_p2 = ap_const_lv32_0) else "0";
    idxprom94_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1431_p4),64));
    mul_ln266_1_fu_1075_p0 <= mul_ln266_1_fu_1075_p00(30 - 1 downto 0);
    mul_ln266_1_fu_1075_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div52_cast_reg_1564),60));
    mul_ln266_1_fu_1075_p1 <= mul_ln266_1_fu_1075_p10(30 - 1 downto 0);
    mul_ln266_1_fu_1075_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div29_cast_reg_1452),60));
    mul_ln266_fu_1063_p0 <= zext_ln266_fu_1060_p1(32 - 1 downto 0);
    mul_ln266_fu_1063_p1 <= zext_ln266_fu_1060_p1(32 - 1 downto 0);
    or_ln255_fu_987_p2 <= (select_ln253_3_fu_974_p3 or icmp_ln255_fu_926_p2);
    or_ln334_fu_1356_p2 <= (select_ln332_3_fu_1344_p3 or icmp_ln334_reg_1811_pp4_iter1_reg);

    output_l1_0_address0_assign_proc : process(ap_block_pp4_stage0, ap_enable_reg_pp3_iter3, ap_enable_reg_pp4_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_address0, ap_CS_fsm_state24, ap_block_pp3_stage0, idxprom94_fu_1245_p1, zext_ln338_fu_1399_p1)
    begin
        if (((ap_enable_reg_pp4_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            output_l1_0_address0 <= zext_ln338_fu_1399_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            output_l1_0_address0 <= idxprom94_fu_1245_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_0_address0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_address0;
        else 
            output_l1_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    output_l1_0_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_block_pp4_stage0_11001, ap_enable_reg_pp3_iter3, ap_enable_reg_pp4_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_ce0, ap_CS_fsm_state24)
    begin
        if ((((ap_enable_reg_pp4_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            output_l1_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_0_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_ce0;
        else 
            output_l1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_0_ce1_assign_proc : process(grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_0_ce1 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_ce1;
        else 
            output_l1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_0_d0_assign_proc : process(conv88_reg_1733, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_d0, ap_CS_fsm_state24, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            output_l1_0_d0 <= conv88_reg_1733;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_0_d0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_d0;
        else 
            output_l1_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l1_0_we0_assign_proc : process(ap_block_pp3_stage0_11001, icmp_ln277_reg_1753_pp3_iter2_reg, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_we0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (icmp_ln277_reg_1753_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            output_l1_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_0_we0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_0_we0;
        else 
            output_l1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_1_address0_assign_proc : process(ap_block_pp4_stage0, ap_enable_reg_pp3_iter3, ap_enable_reg_pp4_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_address0, ap_CS_fsm_state24, ap_block_pp3_stage0, idxprom94_fu_1245_p1, zext_ln338_fu_1399_p1)
    begin
        if (((ap_enable_reg_pp4_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            output_l1_1_address0 <= zext_ln338_fu_1399_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            output_l1_1_address0 <= idxprom94_fu_1245_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_1_address0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_address0;
        else 
            output_l1_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    output_l1_1_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_block_pp4_stage0_11001, ap_enable_reg_pp3_iter3, ap_enable_reg_pp4_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_ce0, ap_CS_fsm_state24)
    begin
        if ((((ap_enable_reg_pp4_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            output_l1_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_1_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_ce0;
        else 
            output_l1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_1_ce1_assign_proc : process(grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_1_ce1 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_ce1;
        else 
            output_l1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_1_d0_assign_proc : process(conv88_1_reg_1738, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_d0, ap_CS_fsm_state24, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            output_l1_1_d0 <= conv88_1_reg_1738;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_1_d0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_d0;
        else 
            output_l1_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l1_1_we0_assign_proc : process(ap_block_pp3_stage0_11001, icmp_ln277_reg_1753_pp3_iter2_reg, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_we0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (icmp_ln277_reg_1753_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            output_l1_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_1_we0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_1_we0;
        else 
            output_l1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_2_address0_assign_proc : process(ap_block_pp4_stage0, ap_enable_reg_pp3_iter3, ap_enable_reg_pp4_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_address0, ap_CS_fsm_state24, ap_block_pp3_stage0, idxprom94_fu_1245_p1, zext_ln338_fu_1399_p1)
    begin
        if (((ap_enable_reg_pp4_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            output_l1_2_address0 <= zext_ln338_fu_1399_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            output_l1_2_address0 <= idxprom94_fu_1245_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_2_address0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_address0;
        else 
            output_l1_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    output_l1_2_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_block_pp4_stage0_11001, ap_enable_reg_pp3_iter3, ap_enable_reg_pp4_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_ce0, ap_CS_fsm_state24)
    begin
        if ((((ap_enable_reg_pp4_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            output_l1_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_2_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_ce0;
        else 
            output_l1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_2_ce1_assign_proc : process(grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_2_ce1 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_ce1;
        else 
            output_l1_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_2_d0_assign_proc : process(conv88_2_reg_1743, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_d0, ap_CS_fsm_state24, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            output_l1_2_d0 <= conv88_2_reg_1743;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_2_d0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_d0;
        else 
            output_l1_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l1_2_we0_assign_proc : process(ap_block_pp3_stage0_11001, icmp_ln277_reg_1753_pp3_iter2_reg, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_we0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (icmp_ln277_reg_1753_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            output_l1_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_2_we0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_2_we0;
        else 
            output_l1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_3_address0_assign_proc : process(ap_block_pp4_stage0, ap_enable_reg_pp3_iter3, ap_enable_reg_pp4_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_address0, ap_CS_fsm_state24, ap_block_pp3_stage0, idxprom94_fu_1245_p1, zext_ln338_fu_1399_p1)
    begin
        if (((ap_enable_reg_pp4_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            output_l1_3_address0 <= zext_ln338_fu_1399_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            output_l1_3_address0 <= idxprom94_fu_1245_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_3_address0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_address0;
        else 
            output_l1_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    output_l1_3_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_block_pp4_stage0_11001, ap_enable_reg_pp3_iter3, ap_enable_reg_pp4_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_ce0, ap_CS_fsm_state24)
    begin
        if ((((ap_enable_reg_pp4_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            output_l1_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_3_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_ce0;
        else 
            output_l1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_3_ce1_assign_proc : process(grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_3_ce1 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_ce1;
        else 
            output_l1_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_l1_3_d0_assign_proc : process(conv88_3_reg_1748, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_d0, ap_CS_fsm_state24, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            output_l1_3_d0 <= conv88_3_reg_1748;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_3_d0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_d0;
        else 
            output_l1_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_l1_3_we0_assign_proc : process(ap_block_pp3_stage0_11001, icmp_ln277_reg_1753_pp3_iter2_reg, ap_enable_reg_pp3_iter3, grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_we0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (icmp_ln277_reg_1753_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            output_l1_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_l1_3_we0 <= grp_dataflow_parent_loop_proc13_fu_672_output_l1_3_we0;
        else 
            output_l1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln240_1_fu_779_p3 <= 
        add_ln240_1_fu_773_p2 when (icmp_ln242_fu_759_p2(0) = '1') else 
        ap_phi_mux_ko_phi_fu_466_p4;
    select_ln240_fu_765_p3 <= 
        ap_const_lv3_0 when (icmp_ln242_fu_759_p2(0) = '1') else 
        ki_reg_473;
    select_ln253_1_fu_945_p3 <= 
        add_ln253_1_fu_939_p2 when (icmp_ln255_fu_926_p2(0) = '1') else 
        ap_phi_mux_co_phi_fu_510_p4;
    select_ln253_2_fu_961_p3 <= 
        ap_const_lv2_0 when (icmp_ln255_fu_926_p2(0) = '1') else 
        trunc_ln261_fu_957_p1;
    select_ln253_3_fu_974_p3 <= 
        icmp_ln257_reg_1590 when (icmp_ln255_fu_926_p2(0) = '1') else 
        icmp_ln257_1_fu_969_p2;
    select_ln253_fu_931_p3 <= 
        ap_const_lv3_0 when (icmp_ln255_fu_926_p2(0) = '1') else 
        ci_reg_528;
    select_ln255_1_fu_1005_p3 <= 
        trunc_ln261_1_fu_1001_p1 when (select_ln253_3_fu_974_p3(0) = '1') else 
        select_ln253_2_fu_961_p3;
    select_ln255_2_fu_1013_p3 <= 
        add_ln255_fu_981_p2 when (select_ln253_3_fu_974_p3(0) = '1') else 
        select_ln253_fu_931_p3;
    select_ln255_3_fu_1037_p3 <= 
        ap_const_lv35_1 when (icmp_ln255_fu_926_p2(0) = '1') else 
        add_ln255_1_fu_1031_p2;
    select_ln255_fu_993_p3 <= 
        ap_const_lv32_0 when (or_ln255_fu_987_p2(0) = '1') else 
        wh_reg_539;
    select_ln266_1_fu_1103_p3 <= 
        add_ln266_1_fu_1097_p2 when (icmp_ln269_fu_1092_p2(0) = '1') else 
        ko_1_reg_561;
    select_ln266_fu_1162_p3 <= 
        ap_const_lv30_0 when (icmp_ln269_reg_1657(0) = '1') else 
        co_1_reg_572;
    select_ln277_1_fu_1223_p3 <= 
        add_ln277_2_fu_1217_p2 when (icmp_ln280_fu_1204_p2(0) = '1') else 
        ap_phi_mux_hi_phi_fu_599_p4;
    select_ln277_fu_1209_p3 <= 
        ap_const_lv32_0 when (icmp_ln280_fu_1204_p2(0) = '1') else 
        wi_reg_606;
    select_ln332_1_fu_1295_p3 <= 
        add_ln332_1_fu_1289_p2 when (icmp_ln334_fu_1284_p2(0) = '1') else 
        ap_phi_mux_k_1_phi_fu_632_p4;
    select_ln332_2_fu_1332_p3 <= 
        ap_const_lv2_0 when (icmp_ln334_reg_1811_pp4_iter1_reg(0) = '1') else 
        trunc_ln338_fu_1328_p1;
    select_ln332_3_fu_1344_p3 <= 
        icmp_ln336_reg_1713 when (icmp_ln334_reg_1811_pp4_iter1_reg(0) = '1') else 
        icmp_ln336_1_fu_1339_p2;
    select_ln332_fu_1321_p3 <= 
        ap_const_lv3_0 when (icmp_ln334_reg_1811_pp4_iter1_reg(0) = '1') else 
        ki_1_reg_650;
    select_ln334_1_fu_1373_p3 <= 
        trunc_ln338_1_fu_1369_p1 when (select_ln332_3_fu_1344_p3(0) = '1') else 
        select_ln332_2_fu_1332_p3;
    select_ln334_2_fu_1381_p3 <= 
        add_ln334_fu_1350_p2 when (select_ln332_3_fu_1344_p3(0) = '1') else 
        select_ln332_fu_1321_p3;
    select_ln334_3_fu_1313_p3 <= 
        ap_const_lv35_1 when (icmp_ln334_fu_1284_p2(0) = '1') else 
        add_ln334_1_fu_1307_p2;
    select_ln334_fu_1361_p3 <= 
        ap_const_lv32_0 when (or_ln334_fu_1356_p2(0) = '1') else 
        wh_1_reg_661;
    tmp_2_fu_741_p3 <= (div29_cast_reg_1452 & ap_const_lv2_0);
    tmp_3_fu_883_p3 <= (mul55_fu_875_p2 & ap_const_lv2_0);
    tmp_4_fu_1131_p3 <= (mul118_fu_1123_p2 & ap_const_lv2_0);
    tmp_data_V_1_fu_707_p1 <= bias_in_V_dout(32 - 1 downto 0);
    tmp_data_V_2_fu_721_p1 <= bias_in_V_dout(32 - 1 downto 0);
    tmp_data_V_3_fu_729_p1 <= bias_in_V_dout(32 - 1 downto 0);
    tmp_data_V_4_fu_733_p1 <= bias_in_V_dout(32 - 1 downto 0);
    tmp_data_V_5_fu_737_p1 <= bias_in_V_dout(32 - 1 downto 0);
    trunc_ln244_fu_787_p1 <= select_ln240_fu_765_p3(2 - 1 downto 0);
    trunc_ln250_fu_847_p1 <= k_reg_484(2 - 1 downto 0);
    trunc_ln261_1_fu_1001_p1 <= add_ln255_fu_981_p2(2 - 1 downto 0);
    trunc_ln261_2_fu_1021_p1 <= select_ln255_fu_993_p3(10 - 1 downto 0);
    trunc_ln261_fu_957_p1 <= ci_reg_528(2 - 1 downto 0);
    trunc_ln266_fu_1111_p1 <= select_ln266_1_fu_1103_p3(9 - 1 downto 0);
    trunc_ln269_fu_1173_p1 <= select_ln266_fu_1162_p3(10 - 1 downto 0);
    trunc_ln332_fu_1127_p1 <= mul118_fu_1123_p2(9 - 1 downto 0);
    trunc_ln338_1_fu_1369_p1 <= add_ln334_fu_1350_p2(2 - 1 downto 0);
    trunc_ln338_fu_1328_p1 <= ki_1_reg_650(2 - 1 downto 0);
    trunc_ln521_fu_725_p1 <= bias_in_V_dout(9 - 1 downto 0);
    trunc_ln708_1_fu_851_p1 <= weight_in_V_dout(8 - 1 downto 0);
    trunc_ln708_2_fu_1045_p1 <= data_in_V_dout(8 - 1 downto 0);
    trunc_ln708_fu_804_p1 <= bias_in_V_dout(8 - 1 downto 0);

    weight_in_V_blk_n_assign_proc : process(weight_in_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_in_V_blk_n <= weight_in_V_empty_n;
        else 
            weight_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    weight_in_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_in_V_read <= ap_const_logic_1;
        else 
            weight_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_0_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_address0, ap_CS_fsm_state24, zext_ln250_fu_859_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_0_address0 <= zext_ln250_fu_859_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            weight_l2_0_address0 <= grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_address0;
        else 
            weight_l2_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weight_l2_0_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            weight_l2_0_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_weight_l2_0_ce0;
        else 
            weight_l2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_0_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, trunc_ln250_reg_1560)
    begin
        if (((trunc_ln250_reg_1560 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_0_we0 <= ap_const_logic_1;
        else 
            weight_l2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_1_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_address0, ap_CS_fsm_state24, zext_ln250_fu_859_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_1_address0 <= zext_ln250_fu_859_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            weight_l2_1_address0 <= grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_address0;
        else 
            weight_l2_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weight_l2_1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            weight_l2_1_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_weight_l2_1_ce0;
        else 
            weight_l2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_1_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, trunc_ln250_reg_1560)
    begin
        if (((trunc_ln250_reg_1560 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_1_we0 <= ap_const_logic_1;
        else 
            weight_l2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_2_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_address0, ap_CS_fsm_state24, zext_ln250_fu_859_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_2_address0 <= zext_ln250_fu_859_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            weight_l2_2_address0 <= grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_address0;
        else 
            weight_l2_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weight_l2_2_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            weight_l2_2_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_weight_l2_2_ce0;
        else 
            weight_l2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_2_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, trunc_ln250_reg_1560)
    begin
        if (((trunc_ln250_reg_1560 = ap_const_lv2_2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_2_we0 <= ap_const_logic_1;
        else 
            weight_l2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_3_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_address0, ap_CS_fsm_state24, zext_ln250_fu_859_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_3_address0 <= zext_ln250_fu_859_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            weight_l2_3_address0 <= grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_address0;
        else 
            weight_l2_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    weight_l2_3_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            weight_l2_3_ce0 <= grp_dataflow_parent_loop_proc13_fu_672_weight_l2_3_ce0;
        else 
            weight_l2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_l2_3_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, trunc_ln250_reg_1560)
    begin
        if (((trunc_ln250_reg_1560 = ap_const_lv2_3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            weight_l2_3_we0 <= ap_const_logic_1;
        else 
            weight_l2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln240_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln240_1_reg_1526),64));
    zext_ln250_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_1555),64));
    zext_ln261_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1424_p3),64));
    zext_ln266_3_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln266_1_fu_1103_p3),64));
    zext_ln266_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_V_3_reg_1481),64));
    zext_ln338_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1439_p3),64));
end behav;
