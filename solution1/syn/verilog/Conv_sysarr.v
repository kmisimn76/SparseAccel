// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_Conv_sysarr,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.803000,HLS_SYN_LAT=3247,HLS_SYN_TPT=none,HLS_SYN_MEM=32,HLS_SYN_DSP=0,HLS_SYN_FF=6690,HLS_SYN_LUT=8135,HLS_VERSION=2020_1}" *)

module Conv_sysarr (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_pp0_stage0 = 15'd32;
parameter    ap_ST_fsm_state8 = 15'd64;
parameter    ap_ST_fsm_state9 = 15'd128;
parameter    ap_ST_fsm_pp1_stage0 = 15'd256;
parameter    ap_ST_fsm_state14 = 15'd512;
parameter    ap_ST_fsm_pp2_stage0 = 15'd1024;
parameter    ap_ST_fsm_state19 = 15'd2048;
parameter    ap_ST_fsm_state20 = 15'd4096;
parameter    ap_ST_fsm_pp3_stage0 = 15'd8192;
parameter    ap_ST_fsm_state26 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [255:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [255:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [255:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [255:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln150_reg_1122;
reg    weight_in_V_blk_n;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln159_reg_1151;
reg   [0:0] icmp_ln159_reg_1151_pp1_iter2_reg;
reg    data_in_V_blk_n;
reg    ap_enable_reg_pp2_iter3;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln172_reg_1196;
reg   [0:0] icmp_ln172_reg_1196_pp2_iter2_reg;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp3_iter4;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln218_reg_1235;
reg   [0:0] icmp_ln218_reg_1235_pp3_iter3_reg;
reg   [29:0] ko_reg_411;
reg   [61:0] indvar_flatten_reg_423;
reg   [31:0] crs_reg_434;
reg   [29:0] ko_1_reg_445;
reg   [61:0] indvar_flatten6_reg_456;
reg   [31:0] wh_reg_467;
reg   [29:0] co_reg_478;
reg   [61:0] indvar_flatten13_reg_489;
reg   [29:0] ko_2_reg_500;
reg   [31:0] wh_1_reg_511;
reg   [29:0] div30_cast_reg_1058;
reg    ap_block_state1;
reg   [255:0] bias_in_V_read_1_reg_1067;
wire  signed [31:0] C_fu_563_p1;
reg  signed [31:0] C_reg_1072;
wire   [8:0] trunc_ln135_fu_567_p1;
reg   [8:0] trunc_ln135_reg_1077;
wire  signed [31:0] WH_fu_571_p1;
reg   [31:0] WH_reg_1082;
reg   [255:0] bias_in_V_read_3_reg_1089;
wire  signed [31:0] WH_in_fu_575_p1;
reg  signed [31:0] WH_in_reg_1094;
wire   [31:0] mul_ln147_fu_579_p2;
reg   [31:0] mul_ln147_reg_1100;
wire  signed [8:0] trunc_ln147_fu_583_p1;
reg  signed [8:0] trunc_ln147_reg_1105;
wire  signed [31:0] RS_fu_587_p1;
reg   [31:0] RS_reg_1110;
wire   [8:0] trunc_ln145_fu_591_p1;
reg   [8:0] trunc_ln145_reg_1117;
wire   [0:0] icmp_ln150_fu_595_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [29:0] add_ln150_fu_600_p2;
reg   [29:0] add_ln150_reg_1126;
reg    ap_enable_reg_pp0_iter0;
wire  signed [31:0] tmp_fu_652_p2;
reg  signed [31:0] tmp_reg_1131;
wire    ap_CS_fsm_state8;
wire  signed [8:0] trunc_ln159_fu_660_p1;
reg  signed [8:0] trunc_ln159_reg_1136;
wire    ap_CS_fsm_state9;
wire   [61:0] cast1_fu_668_p1;
reg   [61:0] cast1_reg_1141;
wire   [61:0] bound_fu_671_p2;
reg   [61:0] bound_reg_1146;
wire   [0:0] icmp_ln159_fu_677_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
reg    ap_block_state13_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln159_reg_1151_pp1_iter1_reg;
wire   [61:0] add_ln159_fu_682_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] select_ln159_1_fu_707_p3;
reg   [31:0] select_ln159_1_reg_1160;
wire   [8:0] trunc_ln159_1_fu_715_p1;
reg   [8:0] trunc_ln159_1_reg_1165;
reg   [8:0] trunc_ln159_1_reg_1165_pp1_iter1_reg;
wire   [29:0] add_ln161_fu_723_p2;
wire  signed [9:0] empty_69_fu_778_p1;
reg  signed [9:0] empty_69_reg_1180;
wire    ap_CS_fsm_state14;
wire   [29:0] div76_cast_fu_782_p4;
reg   [29:0] div76_cast_reg_1185;
wire   [61:0] bound4_fu_799_p2;
reg   [61:0] bound4_reg_1191;
wire   [0:0] icmp_ln172_fu_805_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state15_pp2_stage0_iter0;
wire    ap_block_state16_pp2_stage0_iter1;
wire    ap_block_state17_pp2_stage0_iter2;
reg    ap_block_state18_pp2_stage0_iter3;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln172_reg_1196_pp2_iter1_reg;
wire   [61:0] add_ln172_fu_810_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] select_ln172_1_fu_835_p3;
reg   [31:0] select_ln172_1_reg_1205;
wire   [9:0] trunc_ln172_fu_843_p1;
reg   [9:0] trunc_ln172_reg_1210;
reg   [9:0] trunc_ln172_reg_1210_pp2_iter1_reg;
wire   [29:0] add_ln174_fu_851_p2;
wire   [9:0] empty_71_fu_902_p1;
reg   [9:0] empty_71_reg_1225;
wire    ap_CS_fsm_state19;
wire   [61:0] bound11_fu_909_p2;
reg   [61:0] bound11_reg_1230;
wire   [0:0] icmp_ln218_fu_914_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state21_pp3_stage0_iter0;
wire    ap_block_state22_pp3_stage0_iter1;
wire    ap_block_state23_pp3_stage0_iter2;
wire    ap_block_state24_pp3_stage0_iter3;
reg    ap_block_state25_pp3_stage0_iter4;
reg    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln218_reg_1235_pp3_iter1_reg;
reg   [0:0] icmp_ln218_reg_1235_pp3_iter2_reg;
wire   [61:0] add_ln218_fu_919_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln220_fu_925_p2;
reg   [0:0] icmp_ln220_reg_1244;
reg   [0:0] icmp_ln220_reg_1244_pp3_iter1_reg;
wire   [29:0] select_ln218_fu_930_p3;
reg   [29:0] select_ln218_reg_1249;
reg   [29:0] select_ln218_reg_1249_pp3_iter1_reg;
reg   [29:0] select_ln218_reg_1249_pp3_iter2_reg;
wire   [29:0] add_ln220_fu_942_p2;
wire   [31:0] select_ln218_1_fu_954_p3;
reg   [31:0] select_ln218_1_reg_1264;
reg    ap_enable_reg_pp3_iter2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state15;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state20;
wire    grp_dataflow_parent_loop_proc16_fu_522_ap_ready;
wire    grp_dataflow_parent_loop_proc16_fu_522_ap_done;
wire    ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_ready;
wire    ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_done;
reg    ap_block_state20_on_subcall_done;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_flush_enable;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter3;
reg    ap_condition_pp3_exit_iter2_state23;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_d0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_d0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_d0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_d0;
wire   [7:0] weight_l2_3_q0;
reg   [9:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_d0;
wire   [7:0] data_l2_0_q0;
reg   [9:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_d0;
wire   [7:0] data_l2_1_q0;
reg   [9:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_d0;
wire   [7:0] data_l2_2_q0;
reg   [9:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_d0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] bias_l1_0_address0;
reg    bias_l1_0_ce0;
reg    bias_l1_0_we0;
wire   [7:0] bias_l1_0_d0;
wire   [7:0] bias_l1_0_q0;
reg   [8:0] bias_l1_1_address0;
reg    bias_l1_1_ce0;
reg    bias_l1_1_we0;
wire   [7:0] bias_l1_1_d0;
wire   [7:0] bias_l1_1_q0;
reg   [8:0] bias_l1_2_address0;
reg    bias_l1_2_ce0;
reg    bias_l1_2_we0;
wire   [7:0] bias_l1_2_d0;
wire   [7:0] bias_l1_2_q0;
reg   [8:0] bias_l1_3_address0;
reg    bias_l1_3_ce0;
reg    bias_l1_3_we0;
wire   [7:0] bias_l1_3_d0;
wire   [7:0] bias_l1_3_q0;
reg   [8:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
wire   [31:0] output_l1_0_q0;
reg   [8:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
wire   [31:0] output_l1_1_q0;
reg   [8:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
wire   [31:0] output_l1_2_q0;
reg   [8:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
wire   [31:0] output_l1_3_q0;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_we0;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_we1;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_we0;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_we1;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_we0;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_we1;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_we0;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_we1;
wire   [9:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_we0;
wire   [9:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_we1;
wire   [9:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_we0;
wire   [9:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_we1;
wire   [9:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_we0;
wire   [9:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_we1;
wire   [9:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce0;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_we0;
wire   [9:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce1;
wire   [7:0] grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_we1;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce0;
wire   [31:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we0;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce1;
wire   [31:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we1;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce0;
wire   [31:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we0;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce1;
wire   [31:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we1;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce0;
wire   [31:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we0;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce1;
wire   [31:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we1;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address0;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce0;
wire   [31:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d0;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we0;
wire   [8:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address1;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce1;
wire   [31:0] grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d1;
wire    grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we1;
wire    grp_dataflow_parent_loop_proc16_fu_522_ap_start;
wire    grp_dataflow_parent_loop_proc16_fu_522_ap_idle;
reg    grp_dataflow_parent_loop_proc16_fu_522_ap_continue;
reg   [29:0] ap_phi_mux_ko_phi_fu_415_p4;
reg   [31:0] ap_phi_mux_crs_phi_fu_438_p4;
reg   [31:0] ap_phi_mux_wh_phi_fu_471_p4;
reg   [31:0] ap_phi_mux_wh_1_phi_fu_515_p4;
reg    grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done;
wire   [63:0] ko_cast_fu_606_p1;
wire   [63:0] idxprom67_fu_729_p1;
wire   [63:0] idxprom93_fu_857_p1;
wire   [63:0] idxprom136_fu_972_p1;
wire   [63:0] ko_4_cast126_fu_965_p1;
reg    ap_block_pp3_stage0_01001;
wire   [31:0] mul45_fu_656_p2;
wire   [29:0] bound_fu_671_p0;
wire   [31:0] bound_fu_671_p1;
wire   [0:0] icmp_ln161_fu_688_p2;
wire   [31:0] add_ln159_1_fu_701_p2;
wire   [29:0] select_ln159_fu_693_p3;
wire  signed [8:0] grp_fu_1036_p3;
wire   [31:0] mul74_fu_774_p2;
wire   [29:0] bound4_fu_799_p0;
wire   [31:0] bound4_fu_799_p1;
wire   [0:0] icmp_ln174_fu_816_p2;
wire   [31:0] add_ln172_1_fu_829_p2;
wire   [29:0] select_ln172_fu_821_p3;
wire  signed [9:0] grp_fu_1043_p3;
wire   [29:0] bound11_fu_909_p0;
wire   [31:0] bound11_fu_909_p1;
wire   [31:0] add_ln218_1_fu_948_p2;
wire  signed [8:0] grp_fu_1050_p3;
wire  signed [31:0] sext_ln226_fu_979_p1;
wire  signed [31:0] sext_ln226_1_fu_989_p1;
wire  signed [31:0] sext_ln226_2_fu_999_p1;
wire  signed [31:0] sext_ln226_3_fu_1009_p1;
wire   [31:0] add_ln226_3_fu_1013_p2;
wire   [31:0] add_ln226_2_fu_1003_p2;
wire   [31:0] add_ln226_1_fu_993_p2;
wire   [31:0] add_ln226_fu_983_p2;
wire   [127:0] p_Result_8_3_fu_1019_p5;
wire  signed [8:0] grp_fu_1036_p0;
wire  signed [9:0] grp_fu_1043_p0;
wire  signed [8:0] grp_fu_1050_p0;
wire   [8:0] grp_fu_1050_p2;
reg    grp_fu_1036_ce;
reg    grp_fu_1043_ce;
reg    grp_fu_1050_ce;
wire    ap_CS_fsm_state26;
reg   [14:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [61:0] bound11_fu_909_p10;
wire   [61:0] bound4_fu_799_p00;
wire   [61:0] bound4_fu_799_p10;
wire   [61:0] bound_fu_671_p00;
wire   [61:0] bound_fu_671_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done = 1'b0;
end

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(weight_l2_0_d0),
    .q0(weight_l2_0_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(weight_l2_1_d0),
    .q0(weight_l2_1_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(weight_l2_2_d0),
    .q0(weight_l2_2_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(weight_l2_3_d0),
    .q0(weight_l2_3_q0)
);

Conv_sysarr_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(data_l2_0_d0),
    .q0(data_l2_0_q0)
);

Conv_sysarr_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(data_l2_1_d0),
    .q0(data_l2_1_q0)
);

Conv_sysarr_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(data_l2_2_d0),
    .q0(data_l2_2_q0)
);

Conv_sysarr_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(data_l2_3_d0),
    .q0(data_l2_3_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l1_0_address0),
    .ce0(bias_l1_0_ce0),
    .we0(bias_l1_0_we0),
    .d0(bias_l1_0_d0),
    .q0(bias_l1_0_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l1_1_address0),
    .ce0(bias_l1_1_ce0),
    .we0(bias_l1_1_we0),
    .d0(bias_l1_1_d0),
    .q0(bias_l1_1_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l1_2_address0),
    .ce0(bias_l1_2_ce0),
    .we0(bias_l1_2_we0),
    .d0(bias_l1_2_d0),
    .q0(bias_l1_2_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l1_3_address0),
    .ce0(bias_l1_3_ce0),
    .we0(bias_l1_3_we0),
    .d0(bias_l1_3_d0),
    .q0(bias_l1_3_q0)
);

Conv_sysarr_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d0),
    .q0(output_l1_0_q0)
);

Conv_sysarr_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d0),
    .q0(output_l1_1_q0)
);

Conv_sysarr_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d0),
    .q0(output_l1_2_q0)
);

Conv_sysarr_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d0),
    .q0(output_l1_3_q0)
);

Conv_sysarr_dataflow_parent_loop_proc16 grp_dataflow_parent_loop_proc16_fu_522(
    .div30_cast124(div30_cast_reg_1058),
    .div76_cast125(div76_cast_reg_1185),
    .RS(RS_reg_1110),
    .weight_l2_0_address0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address0),
    .weight_l2_0_ce0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce0),
    .weight_l2_0_d0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_d0),
    .weight_l2_0_q0(weight_l2_0_q0),
    .weight_l2_0_we0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_we0),
    .weight_l2_0_address1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address1),
    .weight_l2_0_ce1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce1),
    .weight_l2_0_d1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_d1),
    .weight_l2_0_q1(8'd0),
    .weight_l2_0_we1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_we1),
    .weight_l2_1_address0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address0),
    .weight_l2_1_ce0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce0),
    .weight_l2_1_d0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_d0),
    .weight_l2_1_q0(weight_l2_1_q0),
    .weight_l2_1_we0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_we0),
    .weight_l2_1_address1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address1),
    .weight_l2_1_ce1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce1),
    .weight_l2_1_d1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_d1),
    .weight_l2_1_q1(8'd0),
    .weight_l2_1_we1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_we1),
    .weight_l2_2_address0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address0),
    .weight_l2_2_ce0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce0),
    .weight_l2_2_d0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_d0),
    .weight_l2_2_q0(weight_l2_2_q0),
    .weight_l2_2_we0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_we0),
    .weight_l2_2_address1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address1),
    .weight_l2_2_ce1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce1),
    .weight_l2_2_d1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_d1),
    .weight_l2_2_q1(8'd0),
    .weight_l2_2_we1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_we1),
    .weight_l2_3_address0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address0),
    .weight_l2_3_ce0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce0),
    .weight_l2_3_d0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_d0),
    .weight_l2_3_q0(weight_l2_3_q0),
    .weight_l2_3_we0(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_we0),
    .weight_l2_3_address1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address1),
    .weight_l2_3_ce1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce1),
    .weight_l2_3_d1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_d1),
    .weight_l2_3_q1(8'd0),
    .weight_l2_3_we1(grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_we1),
    .p_read(trunc_ln135_reg_1077),
    .p_read1(trunc_ln145_reg_1117),
    .data_l2_0_address0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address0),
    .data_l2_0_ce0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce0),
    .data_l2_0_d0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_d0),
    .data_l2_0_q0(data_l2_0_q0),
    .data_l2_0_we0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_we0),
    .data_l2_0_address1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address1),
    .data_l2_0_ce1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce1),
    .data_l2_0_d1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_d1),
    .data_l2_0_q1(8'd0),
    .data_l2_0_we1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_we1),
    .data_l2_1_address0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address0),
    .data_l2_1_ce0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce0),
    .data_l2_1_d0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_d0),
    .data_l2_1_q0(data_l2_1_q0),
    .data_l2_1_we0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_we0),
    .data_l2_1_address1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address1),
    .data_l2_1_ce1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce1),
    .data_l2_1_d1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_d1),
    .data_l2_1_q1(8'd0),
    .data_l2_1_we1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_we1),
    .data_l2_2_address0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address0),
    .data_l2_2_ce0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce0),
    .data_l2_2_d0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_d0),
    .data_l2_2_q0(data_l2_2_q0),
    .data_l2_2_we0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_we0),
    .data_l2_2_address1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address1),
    .data_l2_2_ce1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce1),
    .data_l2_2_d1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_d1),
    .data_l2_2_q1(8'd0),
    .data_l2_2_we1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_we1),
    .data_l2_3_address0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address0),
    .data_l2_3_ce0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce0),
    .data_l2_3_d0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_d0),
    .data_l2_3_q0(data_l2_3_q0),
    .data_l2_3_we0(grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_we0),
    .data_l2_3_address1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address1),
    .data_l2_3_ce1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce1),
    .data_l2_3_d1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_d1),
    .data_l2_3_q1(8'd0),
    .data_l2_3_we1(grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_we1),
    .p_read2(WH_reg_1082),
    .p_read3(empty_71_reg_1225),
    .output_l1_0_address0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address0),
    .output_l1_0_ce0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce0),
    .output_l1_0_d0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d0),
    .output_l1_0_q0(32'd0),
    .output_l1_0_we0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we0),
    .output_l1_0_address1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address1),
    .output_l1_0_ce1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce1),
    .output_l1_0_d1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_d1),
    .output_l1_0_q1(32'd0),
    .output_l1_0_we1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we1),
    .output_l1_1_address0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address0),
    .output_l1_1_ce0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce0),
    .output_l1_1_d0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d0),
    .output_l1_1_q0(32'd0),
    .output_l1_1_we0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we0),
    .output_l1_1_address1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address1),
    .output_l1_1_ce1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce1),
    .output_l1_1_d1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_d1),
    .output_l1_1_q1(32'd0),
    .output_l1_1_we1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we1),
    .output_l1_2_address0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address0),
    .output_l1_2_ce0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce0),
    .output_l1_2_d0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d0),
    .output_l1_2_q0(32'd0),
    .output_l1_2_we0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we0),
    .output_l1_2_address1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address1),
    .output_l1_2_ce1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce1),
    .output_l1_2_d1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_d1),
    .output_l1_2_q1(32'd0),
    .output_l1_2_we1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we1),
    .output_l1_3_address0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address0),
    .output_l1_3_ce0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce0),
    .output_l1_3_d0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d0),
    .output_l1_3_q0(32'd0),
    .output_l1_3_we0(grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we0),
    .output_l1_3_address1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address1),
    .output_l1_3_ce1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce1),
    .output_l1_3_d1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_d1),
    .output_l1_3_q1(32'd0),
    .output_l1_3_we1(grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .div76_cast125_ap_vld(1'b1),
    .RS_ap_vld(1'b1),
    .p_read_ap_vld(1'b1),
    .p_read1_ap_vld(1'b1),
    .p_read2_ap_vld(1'b1),
    .p_read3_ap_vld(1'b1),
    .ap_start(grp_dataflow_parent_loop_proc16_fu_522_ap_start),
    .ap_done(grp_dataflow_parent_loop_proc16_fu_522_ap_done),
    .ap_ready(grp_dataflow_parent_loop_proc16_fu_522_ap_ready),
    .ap_idle(grp_dataflow_parent_loop_proc16_fu_522_ap_idle),
    .ap_continue(grp_dataflow_parent_loop_proc16_fu_522_ap_continue)
);

Conv_sysarr_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U282(
    .din0(WH_reg_1082),
    .din1(WH_reg_1082),
    .dout(mul_ln147_fu_579_p2)
);

Conv_sysarr_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U283(
    .din0(C_reg_1072),
    .din1(RS_reg_1110),
    .dout(tmp_fu_652_p2)
);

Conv_sysarr_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U284(
    .din0(tmp_reg_1131),
    .din1(RS_reg_1110),
    .dout(mul45_fu_656_p2)
);

Conv_sysarr_mul_30ns_32ns_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_30ns_32ns_62_1_1_U285(
    .din0(bound_fu_671_p0),
    .din1(bound_fu_671_p1),
    .dout(bound_fu_671_p2)
);

Conv_sysarr_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U286(
    .din0(WH_in_reg_1094),
    .din1(WH_in_reg_1094),
    .dout(mul74_fu_774_p2)
);

Conv_sysarr_mul_30ns_32ns_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_30ns_32ns_62_1_1_U287(
    .din0(bound4_fu_799_p0),
    .din1(bound4_fu_799_p1),
    .dout(bound4_fu_799_p2)
);

Conv_sysarr_mul_30ns_32ns_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_30ns_32ns_62_1_1_U288(
    .din0(bound11_fu_909_p0),
    .din1(bound11_fu_909_p1),
    .dout(bound11_fu_909_p2)
);

Conv_sysarr_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U289(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1036_p0),
    .din1(trunc_ln159_reg_1136),
    .din2(trunc_ln159_1_reg_1165_pp1_iter1_reg),
    .ce(grp_fu_1036_ce),
    .dout(grp_fu_1036_p3)
);

Conv_sysarr_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U290(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1043_p0),
    .din1(empty_69_reg_1180),
    .din2(trunc_ln172_reg_1210_pp2_iter1_reg),
    .ce(grp_fu_1043_ce),
    .dout(grp_fu_1043_p3)
);

Conv_sysarr_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U291(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1050_p0),
    .din1(trunc_ln147_reg_1105),
    .din2(grp_fu_1050_p2),
    .ce(grp_fu_1050_ce),
    .dout(grp_fu_1050_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state6))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state10)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state15)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state15);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter2_state23)) begin
                ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc16_fu_522_ap_done == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc16_fu_522_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state19) | ((ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state20)))) begin
            grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg <= 1'b1;
        end else if ((grp_dataflow_parent_loop_proc16_fu_522_ap_ready == 1'b1)) begin
            grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln172_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        co_reg_478 <= add_ln174_fu_851_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        co_reg_478 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln159_reg_1151 == 1'd0))) begin
        crs_reg_434 <= select_ln159_1_reg_1160;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        crs_reg_434 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln218_fu_914_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten13_reg_489 <= add_ln218_fu_919_p2;
    end else if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
        indvar_flatten13_reg_489 <= 62'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln172_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten6_reg_456 <= add_ln172_fu_810_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        indvar_flatten6_reg_456 <= 62'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln159_fu_677_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_423 <= add_ln159_fu_682_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten_reg_423 <= 62'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln159_fu_677_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ko_1_reg_445 <= add_ln161_fu_723_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ko_1_reg_445 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln218_fu_914_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ko_2_reg_500 <= add_ln220_fu_942_p2;
    end else if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
        ko_2_reg_500 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ko_reg_411 <= 30'd0;
    end else if (((icmp_ln150_reg_1122 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ko_reg_411 <= add_ln150_reg_1126;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln218_reg_1235_pp3_iter2_reg == 1'd0))) begin
        wh_1_reg_511 <= select_ln218_1_reg_1264;
    end else if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
        wh_1_reg_511 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln172_reg_1196 == 1'd0))) begin
        wh_reg_467 <= select_ln172_1_reg_1205;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        wh_reg_467 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        C_reg_1072 <= C_fu_563_p1;
        bias_in_V_read_1_reg_1067 <= bias_in_V_dout;
        trunc_ln135_reg_1077 <= trunc_ln135_fu_567_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        RS_reg_1110 <= RS_fu_587_p1;
        mul_ln147_reg_1100 <= mul_ln147_fu_579_p2;
        trunc_ln145_reg_1117 <= trunc_ln145_fu_591_p1;
        trunc_ln147_reg_1105 <= trunc_ln147_fu_583_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        WH_in_reg_1094 <= WH_in_fu_575_p1;
        bias_in_V_read_3_reg_1089 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        WH_reg_1082 <= WH_fu_571_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln150_reg_1126 <= add_ln150_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bound11_reg_1230 <= bound11_fu_909_p2;
        empty_71_reg_1225 <= empty_71_fu_902_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        bound4_reg_1191 <= bound4_fu_799_p2;
        div76_cast_reg_1185 <= {{bias_in_V_read_1_reg_1067[31:2]}};
        empty_69_reg_1180 <= empty_69_fu_778_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        bound_reg_1146 <= bound_fu_671_p2;
        cast1_reg_1141[29 : 0] <= cast1_fu_668_p1[29 : 0];
        trunc_ln159_reg_1136 <= trunc_ln159_fu_660_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        div30_cast_reg_1058 <= {{bias_in_V_dout[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln150_reg_1122 <= icmp_ln150_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln159_reg_1151 <= icmp_ln159_fu_677_p2;
        icmp_ln159_reg_1151_pp1_iter1_reg <= icmp_ln159_reg_1151;
        trunc_ln159_1_reg_1165_pp1_iter1_reg <= trunc_ln159_1_reg_1165;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln159_reg_1151_pp1_iter2_reg <= icmp_ln159_reg_1151_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln172_reg_1196 <= icmp_ln172_fu_805_p2;
        icmp_ln172_reg_1196_pp2_iter1_reg <= icmp_ln172_reg_1196;
        trunc_ln172_reg_1210_pp2_iter1_reg <= trunc_ln172_reg_1210;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln172_reg_1196_pp2_iter2_reg <= icmp_ln172_reg_1196_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln218_reg_1235 <= icmp_ln218_fu_914_p2;
        icmp_ln218_reg_1235_pp3_iter1_reg <= icmp_ln218_reg_1235;
        icmp_ln220_reg_1244_pp3_iter1_reg <= icmp_ln220_reg_1244;
        select_ln218_reg_1249_pp3_iter1_reg <= select_ln218_reg_1249;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln218_reg_1235_pp3_iter2_reg <= icmp_ln218_reg_1235_pp3_iter1_reg;
        icmp_ln218_reg_1235_pp3_iter3_reg <= icmp_ln218_reg_1235_pp3_iter2_reg;
        select_ln218_reg_1249_pp3_iter2_reg <= select_ln218_reg_1249_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln218_fu_914_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln220_reg_1244 <= icmp_ln220_fu_925_p2;
        select_ln218_reg_1249 <= select_ln218_fu_930_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln159_fu_677_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln159_1_reg_1160 <= select_ln159_1_fu_707_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln172_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln172_1_reg_1205 <= select_ln172_1_fu_835_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln218_reg_1235_pp3_iter1_reg == 1'd0))) begin
        select_ln218_1_reg_1264 <= select_ln218_1_fu_954_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_reg_1131 <= tmp_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln159_fu_677_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln159_1_reg_1165 <= trunc_ln159_1_fu_715_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln172_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln172_reg_1210 <= trunc_ln172_fu_843_p1;
    end
end

always @ (*) begin
    if ((icmp_ln150_fu_595_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln159_fu_677_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln172_fu_805_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        ap_condition_pp3_exit_iter2_state23 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter2_state23 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln218_fu_914_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln159_reg_1151 == 1'd0))) begin
        ap_phi_mux_crs_phi_fu_438_p4 = select_ln159_1_reg_1160;
    end else begin
        ap_phi_mux_crs_phi_fu_438_p4 = crs_reg_434;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1122 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_ko_phi_fu_415_p4 = add_ln150_reg_1126;
    end else begin
        ap_phi_mux_ko_phi_fu_415_p4 = ko_reg_411;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln218_reg_1235_pp3_iter2_reg == 1'd0))) begin
        ap_phi_mux_wh_1_phi_fu_515_p4 = select_ln218_1_reg_1264;
    end else begin
        ap_phi_mux_wh_1_phi_fu_515_p4 = wh_1_reg_511;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln172_reg_1196 == 1'd0))) begin
        ap_phi_mux_wh_phi_fu_471_p4 = select_ln172_1_reg_1205;
    end else begin
        ap_phi_mux_wh_phi_fu_471_p4 = wh_reg_467;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln150_reg_1122 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln150_reg_1122 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | (~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        bias_l1_0_address0 = ko_4_cast126_fu_965_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l1_0_address0 = ko_cast_fu_606_p1;
    end else begin
        bias_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_l1_0_ce0 = 1'b1;
    end else begin
        bias_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1122 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l1_0_we0 = 1'b1;
    end else begin
        bias_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        bias_l1_1_address0 = ko_4_cast126_fu_965_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l1_1_address0 = ko_cast_fu_606_p1;
    end else begin
        bias_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_l1_1_ce0 = 1'b1;
    end else begin
        bias_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1122 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l1_1_we0 = 1'b1;
    end else begin
        bias_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        bias_l1_2_address0 = ko_4_cast126_fu_965_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l1_2_address0 = ko_cast_fu_606_p1;
    end else begin
        bias_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_l1_2_ce0 = 1'b1;
    end else begin
        bias_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1122 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l1_2_we0 = 1'b1;
    end else begin
        bias_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        bias_l1_3_address0 = ko_4_cast126_fu_965_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l1_3_address0 = ko_cast_fu_606_p1;
    end else begin
        bias_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_l1_3_ce0 = 1'b1;
    end else begin
        bias_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1122 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l1_3_we0 = 1'b1;
    end else begin
        bias_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (icmp_ln218_reg_1235_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln218_reg_1235_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln172_reg_1196_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln172_reg_1196_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_0_address0 = idxprom93_fu_857_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_l2_0_address0 = grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_address0;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_l2_0_ce0 = grp_dataflow_parent_loop_proc16_fu_522_data_l2_0_ce0;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln172_reg_1196_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_1_address0 = idxprom93_fu_857_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_l2_1_address0 = grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_address0;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_l2_1_ce0 = grp_dataflow_parent_loop_proc16_fu_522_data_l2_1_ce0;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln172_reg_1196_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_2_address0 = idxprom93_fu_857_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_l2_2_address0 = grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_address0;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_l2_2_ce0 = grp_dataflow_parent_loop_proc16_fu_522_data_l2_2_ce0;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln172_reg_1196_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_3_address0 = idxprom93_fu_857_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_l2_3_address0 = grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_address0;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_l2_3_ce0 = grp_dataflow_parent_loop_proc16_fu_522_data_l2_3_ce0;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln172_reg_1196_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
        grp_dataflow_parent_loop_proc16_fu_522_ap_continue = 1'b1;
    end else begin
        grp_dataflow_parent_loop_proc16_fu_522_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1036_ce = 1'b1;
    end else begin
        grp_fu_1036_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1043_ce = 1'b1;
    end else begin
        grp_fu_1043_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_1050_ce = 1'b1;
    end else begin
        grp_fu_1050_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_0_address0 = idxprom136_fu_972_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_0_address0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_address0;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_0_ce0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_ce0;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_0_we0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_0_we0;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_1_address0 = idxprom136_fu_972_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_1_address0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_address0;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_1_ce0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_ce0;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_1_we0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_1_we0;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_2_address0 = idxprom136_fu_972_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_2_address0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_address0;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_2_ce0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_ce0;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_2_we0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_2_we0;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_3_address0 = idxprom136_fu_972_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_3_address0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_address0;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        output_l1_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_3_ce0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_ce0;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        output_l1_3_we0 = grp_dataflow_parent_loop_proc16_fu_522_output_l1_3_we0;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln159_reg_1151_pp1_iter2_reg == 1'd0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln159_reg_1151_pp1_iter2_reg == 1'd0))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = idxprom67_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_l2_0_address0 = grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_address0;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_l2_0_ce0 = grp_dataflow_parent_loop_proc16_fu_522_weight_l2_0_ce0;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln159_reg_1151_pp1_iter2_reg == 1'd0))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = idxprom67_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_l2_1_address0 = grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_address0;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_l2_1_ce0 = grp_dataflow_parent_loop_proc16_fu_522_weight_l2_1_ce0;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln159_reg_1151_pp1_iter2_reg == 1'd0))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = idxprom67_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_l2_2_address0 = grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_address0;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_l2_2_ce0 = grp_dataflow_parent_loop_proc16_fu_522_weight_l2_2_ce0;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln159_reg_1151_pp1_iter2_reg == 1'd0))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = idxprom67_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_l2_3_address0 = grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_address0;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_l2_3_ce0 = grp_dataflow_parent_loop_proc16_fu_522_weight_l2_3_ce0;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln159_reg_1151_pp1_iter2_reg == 1'd0))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln150_fu_595_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln150_fu_595_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln159_fu_677_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln159_fu_677_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln172_fu_805_p2 == 1'd1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln172_fu_805_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_fu_563_p1 = bias_in_V_dout[31:0];

assign RS_fu_587_p1 = bias_in_V_dout[31:0];

assign WH_fu_571_p1 = bias_in_V_dout[31:0];

assign WH_in_fu_575_p1 = bias_in_V_dout[31:0];

assign add_ln150_fu_600_p2 = (ap_phi_mux_ko_phi_fu_415_p4 + 30'd1);

assign add_ln159_1_fu_701_p2 = (32'd1 + ap_phi_mux_crs_phi_fu_438_p4);

assign add_ln159_fu_682_p2 = (indvar_flatten_reg_423 + 62'd1);

assign add_ln161_fu_723_p2 = (30'd1 + select_ln159_fu_693_p3);

assign add_ln172_1_fu_829_p2 = (32'd1 + ap_phi_mux_wh_phi_fu_471_p4);

assign add_ln172_fu_810_p2 = (indvar_flatten6_reg_456 + 62'd1);

assign add_ln174_fu_851_p2 = (30'd1 + select_ln172_fu_821_p3);

assign add_ln218_1_fu_948_p2 = (32'd1 + ap_phi_mux_wh_1_phi_fu_515_p4);

assign add_ln218_fu_919_p2 = (indvar_flatten13_reg_489 + 62'd1);

assign add_ln220_fu_942_p2 = (30'd1 + select_ln218_fu_930_p3);

assign add_ln226_1_fu_993_p2 = ($signed(output_l1_1_q0) + $signed(sext_ln226_1_fu_989_p1));

assign add_ln226_2_fu_1003_p2 = ($signed(output_l1_2_q0) + $signed(sext_ln226_2_fu_999_p1));

assign add_ln226_3_fu_1013_p2 = ($signed(output_l1_3_q0) + $signed(sext_ln226_3_fu_1009_p1));

assign add_ln226_fu_983_p2 = ($signed(output_l1_0_q0) + $signed(sext_ln226_fu_979_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln150_reg_1122 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (bias_in_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln150_reg_1122 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (bias_in_V_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter3 == 1'b1) & (weight_in_V_empty_n == 1'b0) & (icmp_ln159_reg_1151_pp1_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter3 == 1'b1) & (weight_in_V_empty_n == 1'b0) & (icmp_ln159_reg_1151_pp1_iter2_reg == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (icmp_ln172_reg_1196_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (icmp_ln172_reg_1196_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln218_reg_1235_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln218_reg_1235_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln218_reg_1235_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp1_stage0_iter3 = ((weight_in_V_empty_n == 1'b0) & (icmp_ln159_reg_1151_pp1_iter2_reg == 1'd0));
end

assign ap_block_state15_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp2_stage0_iter3 = ((data_in_V_empty_n == 1'b0) & (icmp_ln172_reg_1196_pp2_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_state20_on_subcall_done = ((ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_ready & ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_done) == 1'b0);
end

assign ap_block_state21_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_pp3_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln218_reg_1235_pp3_iter3_reg == 1'd0));
end

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = ((icmp_ln150_reg_1122 == 1'd0) & (bias_in_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_done = (grp_dataflow_parent_loop_proc16_fu_522_ap_done | ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_done);

assign ap_sync_grp_dataflow_parent_loop_proc16_fu_522_ap_ready = (grp_dataflow_parent_loop_proc16_fu_522_ap_ready | ap_sync_reg_grp_dataflow_parent_loop_proc16_fu_522_ap_ready);

assign bias_l1_0_d0 = bias_in_V_dout[7:0];

assign bias_l1_1_d0 = {{bias_in_V_dout[15:8]}};

assign bias_l1_2_d0 = {{bias_in_V_dout[23:16]}};

assign bias_l1_3_d0 = {{bias_in_V_dout[31:24]}};

assign bound11_fu_909_p0 = cast1_reg_1141;

assign bound11_fu_909_p1 = bound11_fu_909_p10;

assign bound11_fu_909_p10 = mul_ln147_reg_1100;

assign bound4_fu_799_p0 = bound4_fu_799_p00;

assign bound4_fu_799_p00 = div76_cast_fu_782_p4;

assign bound4_fu_799_p1 = bound4_fu_799_p10;

assign bound4_fu_799_p10 = mul74_fu_774_p2;

assign bound_fu_671_p0 = bound_fu_671_p00;

assign bound_fu_671_p00 = div30_cast_reg_1058;

assign bound_fu_671_p1 = bound_fu_671_p10;

assign bound_fu_671_p10 = mul45_fu_656_p2;

assign cast1_fu_668_p1 = div30_cast_reg_1058;

assign conv_out_V_din = p_Result_8_3_fu_1019_p5;

assign data_l2_0_d0 = data_in_V_dout[7:0];

assign data_l2_1_d0 = {{data_in_V_dout[15:8]}};

assign data_l2_2_d0 = {{data_in_V_dout[23:16]}};

assign data_l2_3_d0 = {{data_in_V_dout[31:24]}};

assign div76_cast_fu_782_p4 = {{bias_in_V_read_1_reg_1067[31:2]}};

assign empty_69_fu_778_p1 = mul74_fu_774_p2[9:0];

assign empty_71_fu_902_p1 = bias_in_V_read_3_reg_1089[9:0];

assign grp_dataflow_parent_loop_proc16_fu_522_ap_start = grp_dataflow_parent_loop_proc16_fu_522_ap_start_reg;

assign grp_fu_1036_p0 = select_ln159_fu_693_p3[8:0];

assign grp_fu_1043_p0 = select_ln172_fu_821_p3[9:0];

assign grp_fu_1050_p0 = select_ln218_fu_930_p3[8:0];

assign grp_fu_1050_p2 = select_ln218_1_fu_954_p3[8:0];

assign icmp_ln150_fu_595_p2 = ((ap_phi_mux_ko_phi_fu_415_p4 == div30_cast_reg_1058) ? 1'b1 : 1'b0);

assign icmp_ln159_fu_677_p2 = ((indvar_flatten_reg_423 == bound_reg_1146) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_688_p2 = ((ko_1_reg_445 == div30_cast_reg_1058) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_805_p2 = ((indvar_flatten6_reg_456 == bound4_reg_1191) ? 1'b1 : 1'b0);

assign icmp_ln174_fu_816_p2 = ((co_reg_478 == div76_cast_reg_1185) ? 1'b1 : 1'b0);

assign icmp_ln218_fu_914_p2 = ((indvar_flatten13_reg_489 == bound11_reg_1230) ? 1'b1 : 1'b0);

assign icmp_ln220_fu_925_p2 = ((ko_2_reg_500 == div30_cast_reg_1058) ? 1'b1 : 1'b0);

assign idxprom136_fu_972_p1 = $unsigned(grp_fu_1050_p3);

assign idxprom67_fu_729_p1 = $unsigned(grp_fu_1036_p3);

assign idxprom93_fu_857_p1 = $unsigned(grp_fu_1043_p3);

assign ko_4_cast126_fu_965_p1 = select_ln218_reg_1249_pp3_iter2_reg;

assign ko_cast_fu_606_p1 = ko_reg_411;

assign p_Result_8_3_fu_1019_p5 = {{{{add_ln226_3_fu_1013_p2}, {add_ln226_2_fu_1003_p2}}, {add_ln226_1_fu_993_p2}}, {add_ln226_fu_983_p2}};

assign select_ln159_1_fu_707_p3 = ((icmp_ln161_fu_688_p2[0:0] === 1'b1) ? add_ln159_1_fu_701_p2 : ap_phi_mux_crs_phi_fu_438_p4);

assign select_ln159_fu_693_p3 = ((icmp_ln161_fu_688_p2[0:0] === 1'b1) ? 30'd0 : ko_1_reg_445);

assign select_ln172_1_fu_835_p3 = ((icmp_ln174_fu_816_p2[0:0] === 1'b1) ? add_ln172_1_fu_829_p2 : ap_phi_mux_wh_phi_fu_471_p4);

assign select_ln172_fu_821_p3 = ((icmp_ln174_fu_816_p2[0:0] === 1'b1) ? 30'd0 : co_reg_478);

assign select_ln218_1_fu_954_p3 = ((icmp_ln220_reg_1244_pp3_iter1_reg[0:0] === 1'b1) ? add_ln218_1_fu_948_p2 : ap_phi_mux_wh_1_phi_fu_515_p4);

assign select_ln218_fu_930_p3 = ((icmp_ln220_fu_925_p2[0:0] === 1'b1) ? 30'd0 : ko_2_reg_500);

assign sext_ln226_1_fu_989_p1 = $signed(bias_l1_1_q0);

assign sext_ln226_2_fu_999_p1 = $signed(bias_l1_2_q0);

assign sext_ln226_3_fu_1009_p1 = $signed(bias_l1_3_q0);

assign sext_ln226_fu_979_p1 = $signed(bias_l1_0_q0);

assign trunc_ln135_fu_567_p1 = bias_in_V_dout[8:0];

assign trunc_ln145_fu_591_p1 = bias_in_V_dout[8:0];

assign trunc_ln147_fu_583_p1 = mul_ln147_fu_579_p2[8:0];

assign trunc_ln159_1_fu_715_p1 = select_ln159_1_fu_707_p3[8:0];

assign trunc_ln159_fu_660_p1 = mul45_fu_656_p2[8:0];

assign trunc_ln172_fu_843_p1 = select_ln172_1_fu_835_p3[9:0];

assign weight_l2_0_d0 = weight_in_V_dout[7:0];

assign weight_l2_1_d0 = {{weight_in_V_dout[15:8]}};

assign weight_l2_2_d0 = {{weight_in_V_dout[23:16]}};

assign weight_l2_3_d0 = {{weight_in_V_dout[31:24]}};

always @ (posedge ap_clk) begin
    cast1_reg_1141[61:30] <= 32'b00000000000000000000000000000000;
end

endmodule //Conv_sysarr
