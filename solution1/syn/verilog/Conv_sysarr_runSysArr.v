// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_sysarr_runSysArr (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        data_l1buf_017_address0,
        data_l1buf_017_ce0,
        data_l1buf_017_q0,
        data_l1buf_118_address0,
        data_l1buf_118_ce0,
        data_l1buf_118_q0,
        data_l1buf_219_address0,
        data_l1buf_219_ce0,
        data_l1buf_219_q0,
        data_l1buf_320_address0,
        data_l1buf_320_ce0,
        data_l1buf_320_q0,
        output_l1_pass_0_address0,
        output_l1_pass_0_ce0,
        output_l1_pass_0_we0,
        output_l1_pass_0_d0,
        output_l1_pass_1_address0,
        output_l1_pass_1_ce0,
        output_l1_pass_1_we0,
        output_l1_pass_1_d0,
        output_l1_pass_2_address0,
        output_l1_pass_2_ce0,
        output_l1_pass_2_we0,
        output_l1_pass_2_d0,
        output_l1_pass_3_address0,
        output_l1_pass_3_ce0,
        output_l1_pass_3_we0,
        output_l1_pass_3_d0,
        empty_dout,
        empty_empty_n,
        empty_read,
        s_dout,
        s_empty_n,
        s_read,
        r_dout,
        r_empty_n,
        r_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state10 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
output  [8:0] data_l1buf_017_address0;
output   data_l1buf_017_ce0;
input  [7:0] data_l1buf_017_q0;
output  [8:0] data_l1buf_118_address0;
output   data_l1buf_118_ce0;
input  [7:0] data_l1buf_118_q0;
output  [8:0] data_l1buf_219_address0;
output   data_l1buf_219_ce0;
input  [7:0] data_l1buf_219_q0;
output  [8:0] data_l1buf_320_address0;
output   data_l1buf_320_ce0;
input  [7:0] data_l1buf_320_q0;
output  [9:0] output_l1_pass_0_address0;
output   output_l1_pass_0_ce0;
output   output_l1_pass_0_we0;
output  [31:0] output_l1_pass_0_d0;
output  [9:0] output_l1_pass_1_address0;
output   output_l1_pass_1_ce0;
output   output_l1_pass_1_we0;
output  [31:0] output_l1_pass_1_d0;
output  [9:0] output_l1_pass_2_address0;
output   output_l1_pass_2_ce0;
output   output_l1_pass_2_we0;
output  [31:0] output_l1_pass_2_d0;
output  [9:0] output_l1_pass_3_address0;
output   output_l1_pass_3_ce0;
output   output_l1_pass_3_we0;
output  [31:0] output_l1_pass_3_d0;
input  [31:0] empty_dout;
input   empty_empty_n;
output   empty_read;
input  [31:0] s_dout;
input   s_empty_n;
output   s_read;
input  [31:0] r_dout;
input   r_empty_n;
output   r_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_l1buf_017_ce0;
reg data_l1buf_118_ce0;
reg data_l1buf_219_ce0;
reg data_l1buf_320_ce0;
reg output_l1_pass_0_ce0;
reg output_l1_pass_0_we0;
reg output_l1_pass_1_ce0;
reg output_l1_pass_1_we0;
reg output_l1_pass_2_ce0;
reg output_l1_pass_2_we0;
reg output_l1_pass_3_ce0;
reg output_l1_pass_3_we0;
reg empty_read;
reg s_read;
reg r_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] output_l1_local_3_address0;
reg    output_l1_local_3_ce0;
reg    output_l1_local_3_we0;
wire   [9:0] output_l1_local_3_address1;
reg    output_l1_local_3_ce1;
wire   [31:0] output_l1_local_3_q1;
wire   [9:0] output_l1_local_2_address0;
reg    output_l1_local_2_ce0;
reg    output_l1_local_2_we0;
wire   [9:0] output_l1_local_2_address1;
reg    output_l1_local_2_ce1;
wire   [31:0] output_l1_local_2_q1;
wire   [9:0] output_l1_local_1_address0;
reg    output_l1_local_1_ce0;
reg    output_l1_local_1_we0;
wire   [9:0] output_l1_local_1_address1;
reg    output_l1_local_1_ce1;
wire   [31:0] output_l1_local_1_q1;
wire   [9:0] output_l1_local_0_address0;
reg    output_l1_local_0_ce0;
reg    output_l1_local_0_we0;
wire   [9:0] output_l1_local_0_address1;
reg    output_l1_local_0_ce1;
wire   [31:0] output_l1_local_0_q1;
reg    empty_blk_n;
reg    s_blk_n;
reg    r_blk_n;
reg   [31:0] i_reg_566;
reg   [31:0] i_reg_566_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] psum_14_reg_578;
reg   [31:0] psum_13_reg_590;
reg   [31:0] psum_12_reg_602;
reg   [31:0] psum_10_reg_614;
reg   [31:0] psum_9_reg_626;
reg   [31:0] psum_8_reg_638;
reg   [31:0] psum_6_reg_650;
reg   [31:0] psum_5_reg_662;
reg   [31:0] psum_4_reg_674;
reg   [31:0] psum_2_reg_686;
reg   [31:0] psum_1_reg_698;
reg   [31:0] psum_reg_710;
wire   [31:0] mul_ln153_fu_722_p2;
reg   [31:0] mul_ln153_reg_1599;
reg    ap_block_state1;
wire   [31:0] add_ln153_fu_728_p2;
reg   [31:0] add_ln153_reg_1607;
wire   [0:0] icmp_ln216_fu_740_p2;
reg   [0:0] icmp_ln216_reg_1612;
wire   [0:0] icmp_ln54_fu_746_p2;
wire  signed [15:0] weight_regfile315_load_cast_i_i_fu_752_p1;
reg  signed [15:0] weight_regfile315_load_cast_i_i_reg_1700;
wire  signed [15:0] weight_regfile314_load_cast_i_i_fu_756_p1;
reg  signed [15:0] weight_regfile314_load_cast_i_i_reg_1705;
wire  signed [15:0] weight_regfile313_load_cast_i_i_fu_760_p1;
reg  signed [15:0] weight_regfile313_load_cast_i_i_reg_1710;
wire  signed [15:0] weight_regfile312_load_cast_i_i_fu_764_p1;
reg  signed [15:0] weight_regfile312_load_cast_i_i_reg_1715;
wire  signed [15:0] weight_regfile211_load_cast_i_i_fu_768_p1;
reg  signed [15:0] weight_regfile211_load_cast_i_i_reg_1720;
wire  signed [15:0] weight_regfile210_load_cast_i_i_fu_772_p1;
reg  signed [15:0] weight_regfile210_load_cast_i_i_reg_1725;
wire  signed [15:0] weight_regfile29_load_cast_i_i_fu_776_p1;
reg  signed [15:0] weight_regfile29_load_cast_i_i_reg_1730;
wire  signed [15:0] weight_regfile28_load_cast_i_i_fu_780_p1;
reg  signed [15:0] weight_regfile28_load_cast_i_i_reg_1735;
wire  signed [15:0] weight_regfile17_load_cast_i_i_fu_784_p1;
reg  signed [15:0] weight_regfile17_load_cast_i_i_reg_1740;
wire  signed [15:0] weight_regfile16_load_cast_i_i_fu_788_p1;
reg  signed [15:0] weight_regfile16_load_cast_i_i_reg_1745;
wire  signed [15:0] weight_regfile15_load_cast_i_i_fu_792_p1;
reg  signed [15:0] weight_regfile15_load_cast_i_i_reg_1750;
wire  signed [15:0] weight_regfile14_load_cast_i_i_fu_796_p1;
reg  signed [15:0] weight_regfile14_load_cast_i_i_reg_1755;
wire  signed [15:0] weight_regfile3_load_cast_i_i_fu_800_p1;
reg  signed [15:0] weight_regfile3_load_cast_i_i_reg_1760;
wire  signed [15:0] weight_regfile2_load_cast_i_i_fu_804_p1;
reg  signed [15:0] weight_regfile2_load_cast_i_i_reg_1765;
wire  signed [15:0] weight_regfile1_load_cast_i_i_fu_808_p1;
reg  signed [15:0] weight_regfile1_load_cast_i_i_reg_1770;
wire  signed [15:0] weight_regfile_load_cast_i_i_fu_812_p1;
reg  signed [15:0] weight_regfile_load_cast_i_i_reg_1775;
wire   [0:0] icmp_ln54_1_fu_816_p2;
reg   [0:0] icmp_ln54_1_reg_1780;
reg   [0:0] icmp_ln54_1_reg_1780_pp0_iter1_reg;
reg   [0:0] icmp_ln54_1_reg_1780_pp0_iter2_reg;
reg   [0:0] icmp_ln54_1_reg_1780_pp0_iter3_reg;
reg   [0:0] icmp_ln54_1_reg_1780_pp0_iter4_reg;
reg   [0:0] icmp_ln54_1_reg_1780_pp0_iter5_reg;
reg   [0:0] icmp_ln54_1_reg_1780_pp0_iter6_reg;
wire   [31:0] add_ln54_fu_821_p2;
reg   [31:0] add_ln54_reg_1784;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln66_fu_827_p1;
reg   [63:0] zext_ln66_reg_1789;
reg   [63:0] zext_ln66_reg_1789_pp0_iter1_reg;
wire   [9:0] trunc_ln66_fu_854_p1;
reg   [9:0] trunc_ln66_reg_1799;
wire   [63:0] zext_ln66_1_fu_864_p1;
reg   [63:0] zext_ln66_1_reg_1804;
wire   [32:0] zext_ln54_fu_912_p1;
reg   [32:0] zext_ln54_reg_1834;
reg   [32:0] zext_ln54_reg_1834_pp0_iter3_reg;
reg   [32:0] zext_ln54_reg_1834_pp0_iter4_reg;
reg   [32:0] zext_ln54_reg_1834_pp0_iter5_reg;
reg   [32:0] zext_ln54_reg_1834_pp0_iter6_reg;
wire   [63:0] zext_ln66_3_fu_947_p1;
reg   [63:0] zext_ln66_3_reg_1849;
wire   [0:0] icmp_ln98_fu_958_p2;
reg   [0:0] icmp_ln98_reg_1874;
reg   [0:0] icmp_ln98_reg_1874_pp0_iter3_reg;
reg   [0:0] icmp_ln98_reg_1874_pp0_iter4_reg;
reg   [0:0] icmp_ln98_reg_1874_pp0_iter5_reg;
reg   [0:0] icmp_ln98_reg_1874_pp0_iter6_reg;
wire   [0:0] icmp_ln98_1_fu_974_p2;
reg   [0:0] icmp_ln98_1_reg_1879;
reg   [0:0] icmp_ln98_1_reg_1879_pp0_iter3_reg;
reg   [0:0] icmp_ln98_1_reg_1879_pp0_iter4_reg;
reg   [0:0] icmp_ln98_1_reg_1879_pp0_iter5_reg;
reg   [0:0] icmp_ln98_1_reg_1879_pp0_iter6_reg;
wire   [0:0] icmp_ln98_2_fu_985_p2;
reg   [0:0] icmp_ln98_2_reg_1884;
reg   [0:0] icmp_ln98_2_reg_1884_pp0_iter3_reg;
reg   [0:0] icmp_ln98_2_reg_1884_pp0_iter4_reg;
reg   [0:0] icmp_ln98_2_reg_1884_pp0_iter5_reg;
reg   [0:0] icmp_ln98_2_reg_1884_pp0_iter6_reg;
wire   [0:0] icmp_ln98_3_fu_990_p2;
reg   [0:0] icmp_ln98_3_reg_1889;
wire   [32:0] add_ln63_3_fu_1054_p2;
reg   [32:0] add_ln63_3_reg_1914;
reg   [32:0] add_ln63_3_reg_1914_pp0_iter4_reg;
reg   [32:0] add_ln63_3_reg_1914_pp0_iter5_reg;
reg   [32:0] add_ln63_3_reg_1914_pp0_iter6_reg;
wire   [0:0] tmp_3_fu_1059_p3;
reg   [0:0] tmp_3_reg_1919;
wire   [0:0] and_ln98_3_fu_1153_p2;
reg   [0:0] and_ln98_3_reg_1949;
reg   [0:0] and_ln98_3_reg_1949_pp0_iter4_reg;
reg   [0:0] and_ln98_3_reg_1949_pp0_iter5_reg;
reg   [0:0] and_ln98_3_reg_1949_pp0_iter6_reg;
wire  signed [31:0] grp_fu_1395_p3;
reg  signed [31:0] add_ln92_2_reg_1993;
reg    ap_enable_reg_pp0_iter4;
wire  signed [31:0] grp_fu_1402_p3;
reg  signed [31:0] add_ln92_5_reg_1998;
wire  signed [31:0] grp_fu_1409_p3;
reg  signed [31:0] add_ln92_8_reg_2003;
wire  signed [31:0] grp_fu_1416_p3;
reg  signed [31:0] add_ln92_11_reg_2008;
wire  signed [31:0] grp_fu_1423_p3;
reg  signed [31:0] add_ln92_1_reg_2013;
reg    ap_enable_reg_pp0_iter5;
wire  signed [31:0] grp_fu_1430_p3;
reg  signed [31:0] add_ln92_4_reg_2018;
wire  signed [31:0] grp_fu_1437_p3;
reg  signed [31:0] add_ln92_7_reg_2023;
wire  signed [31:0] grp_fu_1444_p3;
reg  signed [31:0] add_ln92_10_reg_2028;
wire  signed [31:0] grp_fu_1451_p3;
reg  signed [31:0] add_ln92_reg_2033;
reg    ap_enable_reg_pp0_iter6;
wire  signed [31:0] grp_fu_1458_p3;
reg  signed [31:0] add_ln92_3_reg_2038;
wire  signed [31:0] grp_fu_1465_p3;
reg  signed [31:0] add_ln92_6_reg_2043;
wire  signed [31:0] grp_fu_1472_p3;
reg  signed [31:0] add_ln92_9_reg_2048;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter4_state6;
reg    ap_enable_reg_pp0_iter7;
reg   [31:0] ap_phi_mux_i_phi_fu_570_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_psum_14_phi_fu_582_p4;
reg   [31:0] ap_phi_mux_psum_13_phi_fu_594_p4;
reg   [31:0] ap_phi_mux_psum_12_phi_fu_606_p4;
reg   [31:0] ap_phi_mux_psum_10_phi_fu_618_p4;
reg   [31:0] ap_phi_mux_psum_9_phi_fu_630_p4;
reg   [31:0] ap_phi_mux_psum_8_phi_fu_642_p4;
reg   [31:0] ap_phi_mux_psum_6_phi_fu_654_p4;
reg   [31:0] ap_phi_mux_psum_5_phi_fu_666_p4;
reg   [31:0] ap_phi_mux_psum_4_phi_fu_678_p4;
reg   [31:0] ap_phi_mux_psum_2_phi_fu_690_p4;
reg   [31:0] ap_phi_mux_psum_1_phi_fu_702_p4;
reg   [31:0] ap_phi_mux_psum_phi_fu_714_p4;
wire   [63:0] zext_ln66_2_fu_935_p1;
wire   [63:0] zext_ln98_fu_1250_p1;
wire   [0:0] and_ln98_fu_1270_p2;
wire   [63:0] zext_ln98_1_fu_1280_p1;
wire   [0:0] and_ln98_1_fu_1300_p2;
wire   [63:0] zext_ln98_2_fu_1310_p1;
wire   [0:0] and_ln98_2_fu_1330_p2;
wire   [63:0] zext_ln63_fu_1224_p1;
wire    ap_CS_fsm_state10;
wire   [31:0] grp_fu_1509_p3;
wire   [31:0] grp_fu_1499_p3;
wire   [31:0] grp_fu_1489_p3;
wire   [31:0] grp_fu_1479_p3;
reg  signed [7:0] empty_27_fu_200;
reg  signed [7:0] empty_28_fu_204;
reg  signed [7:0] empty_29_fu_208;
reg  signed [7:0] empty_30_fu_212;
reg  signed [7:0] empty_31_fu_216;
reg  signed [7:0] empty_32_fu_220;
reg  signed [7:0] empty_33_fu_224;
reg  signed [7:0] empty_34_fu_228;
reg  signed [7:0] empty_35_fu_232;
wire  signed [7:0] select_ln65_2_fu_1196_p3;
reg  signed [7:0] empty_36_fu_236;
wire  signed [7:0] select_ln65_1_fu_1046_p3;
reg  signed [7:0] empty_37_fu_240;
wire  signed [7:0] select_ln65_fu_922_p3;
reg  signed [7:0] empty_38_fu_244;
wire   [31:0] or_ln216_fu_734_p2;
wire   [9:0] add_ln63_fu_858_p2;
wire   [0:0] icmp_ln65_fu_916_p2;
wire   [9:0] add_ln63_2_fu_930_p2;
wire   [31:0] add_ln63_4_fu_941_p2;
wire   [31:0] add_ln98_1_fu_952_p2;
wire   [31:0] add_ln98_3_fu_968_p2;
wire   [31:0] add_ln98_5_fu_979_p2;
wire   [32:0] add_ln63_1_fu_1033_p2;
wire   [0:0] tmp_2_fu_1038_p3;
wire   [0:0] tmp_4_fu_1073_p3;
wire   [0:0] or_ln74_fu_1081_p2;
wire   [0:0] tmp_5_fu_1094_p3;
wire   [0:0] or_ln74_1_fu_1102_p2;
wire   [32:0] add_ln72_fu_1115_p2;
wire   [0:0] tmp_6_fu_1120_p3;
wire   [0:0] or_ln74_2_fu_1128_p2;
wire   [0:0] xor_ln65_fu_1067_p2;
wire   [32:0] add_ln98_fu_1245_p2;
wire   [0:0] tmp_7_fu_1256_p3;
wire   [0:0] xor_ln98_fu_1264_p2;
wire   [32:0] add_ln98_2_fu_1275_p2;
wire   [0:0] tmp_8_fu_1286_p3;
wire   [0:0] xor_ln98_1_fu_1294_p2;
wire   [32:0] add_ln98_4_fu_1305_p2;
wire   [0:0] tmp_9_fu_1316_p3;
wire   [0:0] xor_ln98_2_fu_1324_p2;
wire  signed [7:0] grp_fu_1395_p1;
wire   [31:0] grp_fu_1395_p2;
wire  signed [7:0] grp_fu_1402_p1;
wire   [31:0] grp_fu_1402_p2;
wire  signed [7:0] grp_fu_1409_p1;
wire   [31:0] grp_fu_1409_p2;
wire  signed [7:0] grp_fu_1416_p1;
wire   [31:0] grp_fu_1416_p2;
wire  signed [7:0] grp_fu_1423_p1;
wire  signed [7:0] grp_fu_1430_p1;
wire  signed [7:0] grp_fu_1437_p1;
wire  signed [7:0] grp_fu_1444_p1;
wire  signed [7:0] grp_fu_1451_p1;
wire  signed [7:0] grp_fu_1458_p1;
wire  signed [7:0] grp_fu_1465_p1;
wire  signed [7:0] grp_fu_1472_p1;
wire  signed [7:0] grp_fu_1479_p0;
wire  signed [7:0] grp_fu_1489_p0;
wire  signed [7:0] grp_fu_1499_p0;
wire  signed [7:0] grp_fu_1509_p0;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

Conv_sysarr_runSysArr_output_l1_local_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_l1_local_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_local_3_address0),
    .ce0(output_l1_local_3_ce0),
    .we0(output_l1_local_3_we0),
    .d0(grp_fu_1479_p3),
    .address1(output_l1_local_3_address1),
    .ce1(output_l1_local_3_ce1),
    .q1(output_l1_local_3_q1)
);

Conv_sysarr_runSysArr_output_l1_local_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_l1_local_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_local_2_address0),
    .ce0(output_l1_local_2_ce0),
    .we0(output_l1_local_2_we0),
    .d0(grp_fu_1489_p3),
    .address1(output_l1_local_2_address1),
    .ce1(output_l1_local_2_ce1),
    .q1(output_l1_local_2_q1)
);

Conv_sysarr_runSysArr_output_l1_local_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_l1_local_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_local_1_address0),
    .ce0(output_l1_local_1_ce0),
    .we0(output_l1_local_1_we0),
    .d0(grp_fu_1499_p3),
    .address1(output_l1_local_1_address1),
    .ce1(output_l1_local_1_ce1),
    .q1(output_l1_local_1_q1)
);

Conv_sysarr_runSysArr_output_l1_local_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_l1_local_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_local_0_address0),
    .ce0(output_l1_local_0_ce0),
    .we0(output_l1_local_0_we0),
    .d0(grp_fu_1509_p3),
    .address1(output_l1_local_0_address1),
    .ce1(output_l1_local_0_ce1),
    .q1(output_l1_local_0_q1)
);

Conv_sysarr_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U97(
    .din0(empty_dout),
    .din1(empty_dout),
    .dout(mul_ln153_fu_722_p2)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_30_fu_212),
    .din1(grp_fu_1395_p1),
    .din2(grp_fu_1395_p2),
    .ce(1'b1),
    .dout(grp_fu_1395_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_34_fu_228),
    .din1(grp_fu_1402_p1),
    .din2(grp_fu_1402_p2),
    .ce(1'b1),
    .dout(grp_fu_1402_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_38_fu_244),
    .din1(grp_fu_1409_p1),
    .din2(grp_fu_1409_p2),
    .ce(1'b1),
    .dout(grp_fu_1409_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1buf_017_q0),
    .din1(grp_fu_1416_p1),
    .din2(grp_fu_1416_p2),
    .ce(1'b1),
    .dout(grp_fu_1416_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_29_fu_208),
    .din1(grp_fu_1423_p1),
    .din2(ap_phi_mux_psum_2_phi_fu_690_p4),
    .ce(1'b1),
    .dout(grp_fu_1423_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_33_fu_224),
    .din1(grp_fu_1430_p1),
    .din2(ap_phi_mux_psum_6_phi_fu_654_p4),
    .ce(1'b1),
    .dout(grp_fu_1430_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_37_fu_240),
    .din1(grp_fu_1437_p1),
    .din2(ap_phi_mux_psum_10_phi_fu_618_p4),
    .ce(1'b1),
    .dout(grp_fu_1437_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln65_fu_922_p3),
    .din1(grp_fu_1444_p1),
    .din2(ap_phi_mux_psum_14_phi_fu_582_p4),
    .ce(1'b1),
    .dout(grp_fu_1444_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_28_fu_204),
    .din1(grp_fu_1451_p1),
    .din2(ap_phi_mux_psum_1_phi_fu_702_p4),
    .ce(1'b1),
    .dout(grp_fu_1451_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_32_fu_220),
    .din1(grp_fu_1458_p1),
    .din2(ap_phi_mux_psum_5_phi_fu_666_p4),
    .ce(1'b1),
    .dout(grp_fu_1458_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_36_fu_236),
    .din1(grp_fu_1465_p1),
    .din2(ap_phi_mux_psum_9_phi_fu_630_p4),
    .ce(1'b1),
    .dout(grp_fu_1465_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln65_1_fu_1046_p3),
    .din1(grp_fu_1472_p1),
    .din2(ap_phi_mux_psum_13_phi_fu_594_p4),
    .ce(1'b1),
    .dout(grp_fu_1472_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1479_p0),
    .din1(empty_27_fu_200),
    .din2(ap_phi_mux_psum_phi_fu_714_p4),
    .ce(1'b1),
    .dout(grp_fu_1479_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1489_p0),
    .din1(empty_31_fu_216),
    .din2(ap_phi_mux_psum_4_phi_fu_678_p4),
    .ce(1'b1),
    .dout(grp_fu_1489_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1499_p0),
    .din1(empty_35_fu_232),
    .din2(ap_phi_mux_psum_8_phi_fu_642_p4),
    .ce(1'b1),
    .dout(grp_fu_1499_p3)
);

Conv_sysarr_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1509_p0),
    .din1(select_ln65_2_fu_1196_p3),
    .din2(ap_phi_mux_psum_12_phi_fu_606_p4),
    .ce(1'b1),
    .dout(grp_fu_1509_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (icmp_ln54_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter4_state6)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (icmp_ln54_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (icmp_ln54_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_566 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln54_1_reg_1780 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_566 <= add_ln54_reg_1784;
    end
end

always @ (posedge ap_clk) begin
    if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln153_reg_1607 <= add_ln153_fu_728_p2;
        icmp_ln216_reg_1612 <= icmp_ln216_fu_740_p2;
        mul_ln153_reg_1599 <= mul_ln153_fu_722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln54_reg_1784 <= add_ln54_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_1_reg_1780_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln63_3_reg_1914 <= add_ln63_3_fu_1054_p2;
        and_ln98_3_reg_1949 <= and_ln98_3_fu_1153_p2;
        tmp_3_reg_1919 <= add_ln63_3_fu_1054_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln63_3_reg_1914_pp0_iter4_reg <= add_ln63_3_reg_1914;
        add_ln63_3_reg_1914_pp0_iter5_reg <= add_ln63_3_reg_1914_pp0_iter4_reg;
        add_ln63_3_reg_1914_pp0_iter6_reg <= add_ln63_3_reg_1914_pp0_iter5_reg;
        and_ln98_3_reg_1949_pp0_iter4_reg <= and_ln98_3_reg_1949;
        and_ln98_3_reg_1949_pp0_iter5_reg <= and_ln98_3_reg_1949_pp0_iter4_reg;
        and_ln98_3_reg_1949_pp0_iter6_reg <= and_ln98_3_reg_1949_pp0_iter5_reg;
        icmp_ln54_1_reg_1780_pp0_iter2_reg <= icmp_ln54_1_reg_1780_pp0_iter1_reg;
        icmp_ln54_1_reg_1780_pp0_iter3_reg <= icmp_ln54_1_reg_1780_pp0_iter2_reg;
        icmp_ln54_1_reg_1780_pp0_iter4_reg <= icmp_ln54_1_reg_1780_pp0_iter3_reg;
        icmp_ln54_1_reg_1780_pp0_iter5_reg <= icmp_ln54_1_reg_1780_pp0_iter4_reg;
        icmp_ln54_1_reg_1780_pp0_iter6_reg <= icmp_ln54_1_reg_1780_pp0_iter5_reg;
        icmp_ln98_1_reg_1879_pp0_iter3_reg <= icmp_ln98_1_reg_1879;
        icmp_ln98_1_reg_1879_pp0_iter4_reg <= icmp_ln98_1_reg_1879_pp0_iter3_reg;
        icmp_ln98_1_reg_1879_pp0_iter5_reg <= icmp_ln98_1_reg_1879_pp0_iter4_reg;
        icmp_ln98_1_reg_1879_pp0_iter6_reg <= icmp_ln98_1_reg_1879_pp0_iter5_reg;
        icmp_ln98_2_reg_1884_pp0_iter3_reg <= icmp_ln98_2_reg_1884;
        icmp_ln98_2_reg_1884_pp0_iter4_reg <= icmp_ln98_2_reg_1884_pp0_iter3_reg;
        icmp_ln98_2_reg_1884_pp0_iter5_reg <= icmp_ln98_2_reg_1884_pp0_iter4_reg;
        icmp_ln98_2_reg_1884_pp0_iter6_reg <= icmp_ln98_2_reg_1884_pp0_iter5_reg;
        icmp_ln98_reg_1874_pp0_iter3_reg <= icmp_ln98_reg_1874;
        icmp_ln98_reg_1874_pp0_iter4_reg <= icmp_ln98_reg_1874_pp0_iter3_reg;
        icmp_ln98_reg_1874_pp0_iter5_reg <= icmp_ln98_reg_1874_pp0_iter4_reg;
        icmp_ln98_reg_1874_pp0_iter6_reg <= icmp_ln98_reg_1874_pp0_iter5_reg;
        zext_ln54_reg_1834_pp0_iter3_reg[31 : 0] <= zext_ln54_reg_1834[31 : 0];
        zext_ln54_reg_1834_pp0_iter4_reg[31 : 0] <= zext_ln54_reg_1834_pp0_iter3_reg[31 : 0];
        zext_ln54_reg_1834_pp0_iter5_reg[31 : 0] <= zext_ln54_reg_1834_pp0_iter4_reg[31 : 0];
        zext_ln54_reg_1834_pp0_iter6_reg[31 : 0] <= zext_ln54_reg_1834_pp0_iter5_reg[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln92_10_reg_2028 <= grp_fu_1444_p3;
        add_ln92_1_reg_2013 <= grp_fu_1423_p3;
        add_ln92_4_reg_2018 <= grp_fu_1430_p3;
        add_ln92_7_reg_2023 <= grp_fu_1437_p3;
        psum_10_reg_614 <= add_ln92_8_reg_2003;
        psum_14_reg_578 <= add_ln92_11_reg_2008;
        psum_2_reg_686 <= add_ln92_2_reg_1993;
        psum_6_reg_650 <= add_ln92_5_reg_1998;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln92_11_reg_2008 <= grp_fu_1416_p3;
        add_ln92_2_reg_1993 <= grp_fu_1395_p3;
        add_ln92_5_reg_1998 <= grp_fu_1402_p3;
        add_ln92_8_reg_2003 <= grp_fu_1409_p3;
        empty_35_fu_232 <= select_ln65_2_fu_1196_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln92_3_reg_2038 <= grp_fu_1458_p3;
        add_ln92_6_reg_2043 <= grp_fu_1465_p3;
        add_ln92_9_reg_2048 <= grp_fu_1472_p3;
        add_ln92_reg_2033 <= grp_fu_1451_p3;
        psum_13_reg_590 <= add_ln92_10_reg_2028;
        psum_1_reg_698 <= add_ln92_1_reg_2013;
        psum_5_reg_662 <= add_ln92_4_reg_2018;
        psum_9_reg_626 <= add_ln92_7_reg_2023;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_27_fu_200 <= empty_31_fu_216;
        empty_31_fu_216 <= empty_35_fu_232;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_28_fu_204 <= empty_32_fu_220;
        empty_32_fu_220 <= empty_36_fu_236;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_29_fu_208 <= empty_33_fu_224;
        empty_33_fu_224 <= empty_37_fu_240;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_30_fu_212 <= empty_34_fu_228;
        empty_34_fu_228 <= empty_38_fu_244;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_36_fu_236 <= select_ln65_1_fu_1046_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_37_fu_240 <= select_ln65_fu_922_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln54_1_reg_1780 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_38_fu_244 <= data_l1buf_017_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_566_pp0_iter1_reg <= i_reg_566;
        icmp_ln54_1_reg_1780 <= icmp_ln54_1_fu_816_p2;
        icmp_ln54_1_reg_1780_pp0_iter1_reg <= icmp_ln54_1_reg_1780;
        zext_ln66_reg_1789_pp0_iter1_reg[31 : 0] <= zext_ln66_reg_1789[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_1_reg_1780_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln98_1_reg_1879 <= icmp_ln98_1_fu_974_p2;
        icmp_ln98_2_reg_1884 <= icmp_ln98_2_fu_985_p2;
        icmp_ln98_3_reg_1889 <= icmp_ln98_3_fu_990_p2;
        icmp_ln98_reg_1874 <= icmp_ln98_fu_958_p2;
        zext_ln54_reg_1834[31 : 0] <= zext_ln54_fu_912_p1[31 : 0];
        zext_ln66_3_reg_1849[31 : 0] <= zext_ln66_3_fu_947_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        psum_12_reg_602 <= add_ln92_9_reg_2048;
        psum_4_reg_674 <= add_ln92_3_reg_2038;
        psum_8_reg_638 <= add_ln92_6_reg_2043;
        psum_reg_710 <= add_ln92_reg_2033;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_1_reg_1780 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln66_reg_1799 <= trunc_ln66_fu_854_p1;
        zext_ln66_1_reg_1804[9 : 0] <= zext_ln66_1_fu_864_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (icmp_ln54_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        weight_regfile14_load_cast_i_i_reg_1755 <= weight_regfile14_load_cast_i_i_fu_796_p1;
        weight_regfile15_load_cast_i_i_reg_1750 <= weight_regfile15_load_cast_i_i_fu_792_p1;
        weight_regfile16_load_cast_i_i_reg_1745 <= weight_regfile16_load_cast_i_i_fu_788_p1;
        weight_regfile17_load_cast_i_i_reg_1740 <= weight_regfile17_load_cast_i_i_fu_784_p1;
        weight_regfile1_load_cast_i_i_reg_1770 <= weight_regfile1_load_cast_i_i_fu_808_p1;
        weight_regfile210_load_cast_i_i_reg_1725 <= weight_regfile210_load_cast_i_i_fu_772_p1;
        weight_regfile211_load_cast_i_i_reg_1720 <= weight_regfile211_load_cast_i_i_fu_768_p1;
        weight_regfile28_load_cast_i_i_reg_1735 <= weight_regfile28_load_cast_i_i_fu_780_p1;
        weight_regfile29_load_cast_i_i_reg_1730 <= weight_regfile29_load_cast_i_i_fu_776_p1;
        weight_regfile2_load_cast_i_i_reg_1765 <= weight_regfile2_load_cast_i_i_fu_804_p1;
        weight_regfile312_load_cast_i_i_reg_1715 <= weight_regfile312_load_cast_i_i_fu_764_p1;
        weight_regfile313_load_cast_i_i_reg_1710 <= weight_regfile313_load_cast_i_i_fu_760_p1;
        weight_regfile314_load_cast_i_i_reg_1705 <= weight_regfile314_load_cast_i_i_fu_756_p1;
        weight_regfile315_load_cast_i_i_reg_1700 <= weight_regfile315_load_cast_i_i_fu_752_p1;
        weight_regfile3_load_cast_i_i_reg_1760 <= weight_regfile3_load_cast_i_i_fu_800_p1;
        weight_regfile_load_cast_i_i_reg_1775 <= weight_regfile_load_cast_i_i_fu_812_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_1_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln66_reg_1789[31 : 0] <= zext_ln66_fu_827_p1[31 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_condition_pp0_exit_iter4_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter4_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_1_fu_816_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln54_1_reg_1780 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_570_p4 = add_ln54_reg_1784;
    end else begin
        ap_phi_mux_i_phi_fu_570_p4 = i_reg_566;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_10_phi_fu_618_p4 = add_ln92_8_reg_2003;
    end else begin
        ap_phi_mux_psum_10_phi_fu_618_p4 = psum_10_reg_614;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_12_phi_fu_606_p4 = add_ln92_9_reg_2048;
    end else begin
        ap_phi_mux_psum_12_phi_fu_606_p4 = psum_12_reg_602;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_13_phi_fu_594_p4 = add_ln92_10_reg_2028;
    end else begin
        ap_phi_mux_psum_13_phi_fu_594_p4 = psum_13_reg_590;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_14_phi_fu_582_p4 = add_ln92_11_reg_2008;
    end else begin
        ap_phi_mux_psum_14_phi_fu_582_p4 = psum_14_reg_578;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_1_phi_fu_702_p4 = add_ln92_1_reg_2013;
    end else begin
        ap_phi_mux_psum_1_phi_fu_702_p4 = psum_1_reg_698;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_2_phi_fu_690_p4 = add_ln92_2_reg_1993;
    end else begin
        ap_phi_mux_psum_2_phi_fu_690_p4 = psum_2_reg_686;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_4_phi_fu_678_p4 = add_ln92_3_reg_2038;
    end else begin
        ap_phi_mux_psum_4_phi_fu_678_p4 = psum_4_reg_674;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_5_phi_fu_666_p4 = add_ln92_4_reg_2018;
    end else begin
        ap_phi_mux_psum_5_phi_fu_666_p4 = psum_5_reg_662;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_6_phi_fu_654_p4 = add_ln92_5_reg_1998;
    end else begin
        ap_phi_mux_psum_6_phi_fu_654_p4 = psum_6_reg_650;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_8_phi_fu_642_p4 = add_ln92_6_reg_2043;
    end else begin
        ap_phi_mux_psum_8_phi_fu_642_p4 = psum_8_reg_638;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_9_phi_fu_630_p4 = add_ln92_7_reg_2023;
    end else begin
        ap_phi_mux_psum_9_phi_fu_630_p4 = psum_9_reg_626;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln54_1_reg_1780_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_psum_phi_fu_714_p4 = add_ln92_reg_2033;
    end else begin
        ap_phi_mux_psum_phi_fu_714_p4 = psum_reg_710;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_l1buf_017_ce0 = 1'b1;
    end else begin
        data_l1buf_017_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_l1buf_118_ce0 = 1'b1;
    end else begin
        data_l1buf_118_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_l1buf_219_ce0 = 1'b1;
    end else begin
        data_l1buf_219_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_l1buf_320_ce0 = 1'b1;
    end else begin
        data_l1buf_320_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_blk_n = empty_empty_n;
    end else begin
        empty_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_read = 1'b1;
    end else begin
        empty_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_0_ce0 = 1'b1;
    end else begin
        output_l1_local_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_0_ce1 = 1'b1;
    end else begin
        output_l1_local_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln98_3_reg_1949_pp0_iter6_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_0_we0 = 1'b1;
    end else begin
        output_l1_local_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_1_ce0 = 1'b1;
    end else begin
        output_l1_local_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_1_ce1 = 1'b1;
    end else begin
        output_l1_local_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln98_2_fu_1330_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_1_we0 = 1'b1;
    end else begin
        output_l1_local_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_2_ce0 = 1'b1;
    end else begin
        output_l1_local_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_2_ce1 = 1'b1;
    end else begin
        output_l1_local_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln98_1_fu_1300_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_2_we0 = 1'b1;
    end else begin
        output_l1_local_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_3_ce0 = 1'b1;
    end else begin
        output_l1_local_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_3_ce1 = 1'b1;
    end else begin
        output_l1_local_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln98_fu_1270_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_local_3_we0 = 1'b1;
    end else begin
        output_l1_local_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_pass_0_ce0 = 1'b1;
    end else begin
        output_l1_pass_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln98_3_reg_1949_pp0_iter6_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_pass_0_we0 = 1'b1;
    end else begin
        output_l1_pass_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_pass_1_ce0 = 1'b1;
    end else begin
        output_l1_pass_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln98_2_fu_1330_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_pass_1_we0 = 1'b1;
    end else begin
        output_l1_pass_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_pass_2_ce0 = 1'b1;
    end else begin
        output_l1_pass_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln98_1_fu_1300_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_pass_2_we0 = 1'b1;
    end else begin
        output_l1_pass_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_pass_3_ce0 = 1'b1;
    end else begin
        output_l1_pass_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'd1 == and_ln98_fu_1270_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_l1_pass_3_we0 = 1'b1;
    end else begin
        output_l1_pass_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_blk_n = r_empty_n;
    end else begin
        r_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_read = 1'b1;
    end else begin
        r_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_blk_n = s_empty_n;
    end else begin
        s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_read = 1'b1;
    end else begin
        s_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (icmp_ln54_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0)) & (icmp_ln54_fu_746_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter7 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln153_fu_728_p2 = (mul_ln153_fu_722_p2 + 32'd6);

assign add_ln54_fu_821_p2 = (ap_phi_mux_i_phi_fu_570_p4 + 32'd1);

assign add_ln63_1_fu_1033_p2 = ($signed(33'd8589934590) + $signed(zext_ln54_reg_1834));

assign add_ln63_2_fu_930_p2 = ($signed(10'd1022) + $signed(trunc_ln66_reg_1799));

assign add_ln63_3_fu_1054_p2 = ($signed(33'd8589934589) + $signed(zext_ln54_reg_1834));

assign add_ln63_4_fu_941_p2 = ($signed(32'd4294967293) + $signed(i_reg_566_pp0_iter1_reg));

assign add_ln63_fu_858_p2 = ($signed(10'd1023) + $signed(trunc_ln66_fu_854_p1));

assign add_ln72_fu_1115_p2 = ($signed(33'd8589934591) + $signed(zext_ln54_reg_1834));

assign add_ln98_1_fu_952_p2 = ($signed(32'd4294967290) + $signed(i_reg_566_pp0_iter1_reg));

assign add_ln98_2_fu_1275_p2 = ($signed(zext_ln54_reg_1834_pp0_iter6_reg) + $signed(33'd8589934587));

assign add_ln98_3_fu_968_p2 = ($signed(i_reg_566_pp0_iter1_reg) + $signed(32'd4294967291));

assign add_ln98_4_fu_1305_p2 = ($signed(zext_ln54_reg_1834_pp0_iter6_reg) + $signed(33'd8589934588));

assign add_ln98_5_fu_979_p2 = ($signed(i_reg_566_pp0_iter1_reg) + $signed(32'd4294967292));

assign add_ln98_fu_1245_p2 = ($signed(33'd8589934586) + $signed(zext_ln54_reg_1834_pp0_iter6_reg));

assign and_ln98_1_fu_1300_p2 = (xor_ln98_1_fu_1294_p2 & icmp_ln98_1_reg_1879_pp0_iter6_reg);

assign and_ln98_2_fu_1330_p2 = (xor_ln98_2_fu_1324_p2 & icmp_ln98_2_reg_1884_pp0_iter6_reg);

assign and_ln98_3_fu_1153_p2 = (xor_ln65_fu_1067_p2 & icmp_ln98_3_reg_1889);

assign and_ln98_fu_1270_p2 = (xor_ln98_fu_1264_p2 & icmp_ln98_reg_1874_pp0_iter6_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((s_empty_n == 1'b0) | (empty_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1) | (r_empty_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign data_l1buf_017_address0 = zext_ln66_fu_827_p1;

assign data_l1buf_118_address0 = zext_ln66_1_fu_864_p1;

assign data_l1buf_219_address0 = zext_ln66_2_fu_935_p1;

assign data_l1buf_320_address0 = zext_ln66_3_reg_1849;

assign grp_fu_1395_p1 = weight_regfile312_load_cast_i_i_reg_1715;

assign grp_fu_1395_p2 = ((or_ln74_fu_1081_p2[0:0] === 1'b1) ? 32'd0 : output_l1_local_3_q1);

assign grp_fu_1402_p1 = weight_regfile28_load_cast_i_i_reg_1735;

assign grp_fu_1402_p2 = ((or_ln74_1_fu_1102_p2[0:0] === 1'b1) ? 32'd0 : output_l1_local_2_q1);

assign grp_fu_1409_p1 = weight_regfile14_load_cast_i_i_reg_1755;

assign grp_fu_1409_p2 = ((or_ln74_2_fu_1128_p2[0:0] === 1'b1) ? 32'd0 : output_l1_local_1_q1);

assign grp_fu_1416_p1 = weight_regfile_load_cast_i_i_reg_1775;

assign grp_fu_1416_p2 = ((icmp_ln216_reg_1612[0:0] === 1'b1) ? 32'd0 : output_l1_local_0_q1);

assign grp_fu_1423_p1 = weight_regfile313_load_cast_i_i_reg_1710;

assign grp_fu_1430_p1 = weight_regfile29_load_cast_i_i_reg_1730;

assign grp_fu_1437_p1 = weight_regfile15_load_cast_i_i_reg_1750;

assign grp_fu_1444_p1 = weight_regfile1_load_cast_i_i_reg_1770;

assign grp_fu_1451_p1 = weight_regfile314_load_cast_i_i_reg_1705;

assign grp_fu_1458_p1 = weight_regfile210_load_cast_i_i_reg_1725;

assign grp_fu_1465_p1 = weight_regfile16_load_cast_i_i_reg_1745;

assign grp_fu_1472_p1 = weight_regfile2_load_cast_i_i_reg_1765;

assign grp_fu_1479_p0 = weight_regfile315_load_cast_i_i_reg_1700;

assign grp_fu_1489_p0 = weight_regfile211_load_cast_i_i_reg_1720;

assign grp_fu_1499_p0 = weight_regfile17_load_cast_i_i_reg_1740;

assign grp_fu_1509_p0 = weight_regfile3_load_cast_i_i_reg_1760;

assign icmp_ln216_fu_740_p2 = ((or_ln216_fu_734_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln54_1_fu_816_p2 = ((ap_phi_mux_i_phi_fu_570_p4 == add_ln153_reg_1607) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_746_p2 = ((add_ln153_fu_728_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_916_p2 = ((i_reg_566_pp0_iter1_reg == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln98_1_fu_974_p2 = ((add_ln98_3_fu_968_p2 < mul_ln153_reg_1599) ? 1'b1 : 1'b0);

assign icmp_ln98_2_fu_985_p2 = ((add_ln98_5_fu_979_p2 < mul_ln153_reg_1599) ? 1'b1 : 1'b0);

assign icmp_ln98_3_fu_990_p2 = ((add_ln63_4_fu_941_p2 < mul_ln153_reg_1599) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_958_p2 = ((add_ln98_1_fu_952_p2 < mul_ln153_reg_1599) ? 1'b1 : 1'b0);

assign or_ln216_fu_734_p2 = (s_dout | r_dout);

assign or_ln74_1_fu_1102_p2 = (tmp_5_fu_1094_p3 | icmp_ln216_reg_1612);

assign or_ln74_2_fu_1128_p2 = (tmp_6_fu_1120_p3 | icmp_ln216_reg_1612);

assign or_ln74_fu_1081_p2 = (tmp_4_fu_1073_p3 | icmp_ln216_reg_1612);

assign output_l1_local_0_address0 = zext_ln63_fu_1224_p1;

assign output_l1_local_0_address1 = zext_ln66_reg_1789_pp0_iter1_reg;

assign output_l1_local_1_address0 = zext_ln98_2_fu_1310_p1;

assign output_l1_local_1_address1 = zext_ln66_1_reg_1804;

assign output_l1_local_2_address0 = zext_ln98_1_fu_1280_p1;

assign output_l1_local_2_address1 = zext_ln66_2_fu_935_p1;

assign output_l1_local_3_address0 = zext_ln98_fu_1250_p1;

assign output_l1_local_3_address1 = zext_ln66_3_fu_947_p1;

assign output_l1_pass_0_address0 = zext_ln63_fu_1224_p1;

assign output_l1_pass_0_d0 = grp_fu_1509_p3;

assign output_l1_pass_1_address0 = zext_ln98_2_fu_1310_p1;

assign output_l1_pass_1_d0 = grp_fu_1499_p3;

assign output_l1_pass_2_address0 = zext_ln98_1_fu_1280_p1;

assign output_l1_pass_2_d0 = grp_fu_1489_p3;

assign output_l1_pass_3_address0 = zext_ln98_fu_1250_p1;

assign output_l1_pass_3_d0 = grp_fu_1479_p3;

assign select_ln65_1_fu_1046_p3 = ((tmp_2_fu_1038_p3[0:0] === 1'b1) ? 8'd0 : data_l1buf_219_q0);

assign select_ln65_2_fu_1196_p3 = ((tmp_3_reg_1919[0:0] === 1'b1) ? 8'd0 : data_l1buf_320_q0);

assign select_ln65_fu_922_p3 = ((icmp_ln65_fu_916_p2[0:0] === 1'b1) ? 8'd0 : data_l1buf_118_q0);

assign tmp_2_fu_1038_p3 = add_ln63_1_fu_1033_p2[32'd32];

assign tmp_3_fu_1059_p3 = add_ln63_3_fu_1054_p2[32'd32];

assign tmp_4_fu_1073_p3 = add_ln63_3_fu_1054_p2[32'd32];

assign tmp_5_fu_1094_p3 = add_ln63_1_fu_1033_p2[32'd32];

assign tmp_6_fu_1120_p3 = add_ln72_fu_1115_p2[32'd32];

assign tmp_7_fu_1256_p3 = add_ln98_fu_1245_p2[32'd32];

assign tmp_8_fu_1286_p3 = add_ln98_2_fu_1275_p2[32'd32];

assign tmp_9_fu_1316_p3 = add_ln98_4_fu_1305_p2[32'd32];

assign trunc_ln66_fu_854_p1 = i_reg_566[9:0];

assign weight_regfile14_load_cast_i_i_fu_796_p1 = $signed(p_read4);

assign weight_regfile15_load_cast_i_i_fu_792_p1 = $signed(p_read5);

assign weight_regfile16_load_cast_i_i_fu_788_p1 = $signed(p_read6);

assign weight_regfile17_load_cast_i_i_fu_784_p1 = $signed(p_read7);

assign weight_regfile1_load_cast_i_i_fu_808_p1 = $signed(p_read1);

assign weight_regfile210_load_cast_i_i_fu_772_p1 = $signed(p_read10);

assign weight_regfile211_load_cast_i_i_fu_768_p1 = $signed(p_read11);

assign weight_regfile28_load_cast_i_i_fu_780_p1 = $signed(p_read8);

assign weight_regfile29_load_cast_i_i_fu_776_p1 = $signed(p_read9);

assign weight_regfile2_load_cast_i_i_fu_804_p1 = $signed(p_read2);

assign weight_regfile312_load_cast_i_i_fu_764_p1 = $signed(p_read12);

assign weight_regfile313_load_cast_i_i_fu_760_p1 = $signed(p_read13);

assign weight_regfile314_load_cast_i_i_fu_756_p1 = $signed(p_read14);

assign weight_regfile315_load_cast_i_i_fu_752_p1 = $signed(p_read15);

assign weight_regfile3_load_cast_i_i_fu_800_p1 = $signed(p_read3);

assign weight_regfile_load_cast_i_i_fu_812_p1 = $signed(p_read);

assign xor_ln65_fu_1067_p2 = (tmp_3_fu_1059_p3 ^ 1'd1);

assign xor_ln98_1_fu_1294_p2 = (tmp_8_fu_1286_p3 ^ 1'd1);

assign xor_ln98_2_fu_1324_p2 = (tmp_9_fu_1316_p3 ^ 1'd1);

assign xor_ln98_fu_1264_p2 = (tmp_7_fu_1256_p3 ^ 1'd1);

assign zext_ln54_fu_912_p1 = i_reg_566_pp0_iter1_reg;

assign zext_ln63_fu_1224_p1 = add_ln63_3_reg_1914_pp0_iter6_reg;

assign zext_ln66_1_fu_864_p1 = add_ln63_fu_858_p2;

assign zext_ln66_2_fu_935_p1 = add_ln63_2_fu_930_p2;

assign zext_ln66_3_fu_947_p1 = add_ln63_4_fu_941_p2;

assign zext_ln66_fu_827_p1 = ap_phi_mux_i_phi_fu_570_p4;

assign zext_ln98_1_fu_1280_p1 = add_ln98_2_fu_1275_p2;

assign zext_ln98_2_fu_1310_p1 = add_ln98_4_fu_1305_p2;

assign zext_ln98_fu_1250_p1 = add_ln98_fu_1245_p2;

always @ (posedge ap_clk) begin
    zext_ln66_reg_1789[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln66_reg_1789_pp0_iter1_reg[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln66_1_reg_1804[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln54_reg_1834[32] <= 1'b0;
    zext_ln54_reg_1834_pp0_iter3_reg[32] <= 1'b0;
    zext_ln54_reg_1834_pp0_iter4_reg[32] <= 1'b0;
    zext_ln54_reg_1834_pp0_iter5_reg[32] <= 1'b0;
    zext_ln54_reg_1834_pp0_iter6_reg[32] <= 1'b0;
    zext_ln66_3_reg_1849[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //Conv_sysarr_runSysArr
