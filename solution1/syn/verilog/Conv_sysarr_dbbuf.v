// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_dbbuf_Conv_sysarr_dbbuf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.186000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=23,HLS_SYN_DSP=0,HLS_SYN_FF=3861,HLS_SYN_LUT=5658,HLS_VERSION=2020_1}" *)

module Conv_sysarr_dbbuf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_in_V_dout,
        bias_in_V_empty_n,
        bias_in_V_read,
        weight_in_V_dout,
        weight_in_V_empty_n,
        weight_in_V_read,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        conv_out_V_din,
        conv_out_V_full_n,
        conv_out_V_write
);

parameter    ap_ST_fsm_state1 = 46'd1;
parameter    ap_ST_fsm_state2 = 46'd2;
parameter    ap_ST_fsm_state3 = 46'd4;
parameter    ap_ST_fsm_state4 = 46'd8;
parameter    ap_ST_fsm_state5 = 46'd16;
parameter    ap_ST_fsm_pp0_stage0 = 46'd32;
parameter    ap_ST_fsm_state8 = 46'd64;
parameter    ap_ST_fsm_state9 = 46'd128;
parameter    ap_ST_fsm_state10 = 46'd256;
parameter    ap_ST_fsm_state11 = 46'd512;
parameter    ap_ST_fsm_pp1_stage0 = 46'd1024;
parameter    ap_ST_fsm_state14 = 46'd2048;
parameter    ap_ST_fsm_state15 = 46'd4096;
parameter    ap_ST_fsm_state16 = 46'd8192;
parameter    ap_ST_fsm_state17 = 46'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 46'd32768;
parameter    ap_ST_fsm_state20 = 46'd65536;
parameter    ap_ST_fsm_state21 = 46'd131072;
parameter    ap_ST_fsm_state22 = 46'd262144;
parameter    ap_ST_fsm_state23 = 46'd524288;
parameter    ap_ST_fsm_pp3_stage0 = 46'd1048576;
parameter    ap_ST_fsm_state28 = 46'd2097152;
parameter    ap_ST_fsm_state29 = 46'd4194304;
parameter    ap_ST_fsm_state30 = 46'd8388608;
parameter    ap_ST_fsm_state31 = 46'd16777216;
parameter    ap_ST_fsm_state32 = 46'd33554432;
parameter    ap_ST_fsm_state33 = 46'd67108864;
parameter    ap_ST_fsm_state34 = 46'd134217728;
parameter    ap_ST_fsm_state35 = 46'd268435456;
parameter    ap_ST_fsm_state36 = 46'd536870912;
parameter    ap_ST_fsm_state37 = 46'd1073741824;
parameter    ap_ST_fsm_state38 = 46'd2147483648;
parameter    ap_ST_fsm_state39 = 46'd4294967296;
parameter    ap_ST_fsm_state40 = 46'd8589934592;
parameter    ap_ST_fsm_pp4_stage0 = 46'd17179869184;
parameter    ap_ST_fsm_state47 = 46'd34359738368;
parameter    ap_ST_fsm_pp5_stage0 = 46'd68719476736;
parameter    ap_ST_fsm_pp5_stage1 = 46'd137438953472;
parameter    ap_ST_fsm_pp5_stage2 = 46'd274877906944;
parameter    ap_ST_fsm_pp5_stage3 = 46'd549755813888;
parameter    ap_ST_fsm_state96 = 46'd1099511627776;
parameter    ap_ST_fsm_state97 = 46'd2199023255552;
parameter    ap_ST_fsm_state98 = 46'd4398046511104;
parameter    ap_ST_fsm_state99 = 46'd8796093022208;
parameter    ap_ST_fsm_pp6_stage0 = 46'd17592186044416;
parameter    ap_ST_fsm_state105 = 46'd35184372088832;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] bias_in_V_dout;
input   bias_in_V_empty_n;
output   bias_in_V_read;
input  [63:0] weight_in_V_dout;
input   weight_in_V_empty_n;
output   weight_in_V_read;
input  [63:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [63:0] conv_out_V_din;
input   conv_out_V_full_n;
output   conv_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bias_in_V_read;
reg weight_in_V_read;
reg data_in_V_read;
reg conv_out_V_write;

(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bias_in_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    weight_in_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg    conv_out_V_blk_n;
reg    ap_enable_reg_pp6_iter4;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln201_reg_6698;
reg   [0:0] icmp_ln201_reg_6698_pp6_iter3_reg;
reg   [7:0] k_reg_1365;
reg   [31:0] k_1_reg_1376;
reg   [23:0] k_2_reg_1387;
reg   [15:0] indvar_flatten_reg_1442;
reg   [7:0] hi_reg_1453;
reg   [7:0] wi_reg_1464;
reg   [17:0] indvar_flatten47_reg_1508;
reg   [2:0] ci_reg_1519;
reg   [15:0] indvar_flatten15_reg_1530;
reg   [7:0] wi_1_reg_1541;
reg   [7:0] hi_1_reg_1552;
reg   [15:0] i_reg_1563;
reg   [15:0] i_reg_1563_pp5_iter1_reg;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state48_pp5_stage0_iter0;
wire    ap_block_state52_pp5_stage0_iter1;
wire    ap_block_state56_pp5_stage0_iter2;
wire    ap_block_state60_pp5_stage0_iter3;
wire    ap_block_state64_pp5_stage0_iter4;
wire    ap_block_state68_pp5_stage0_iter5;
wire    ap_block_state72_pp5_stage0_iter6;
wire    ap_block_state76_pp5_stage0_iter7;
wire    ap_block_state80_pp5_stage0_iter8;
wire    ap_block_state84_pp5_stage0_iter9;
wire    ap_block_state88_pp5_stage0_iter10;
wire    ap_block_state92_pp5_stage0_iter11;
wire    ap_block_pp5_stage0_11001;
reg   [15:0] i_reg_1563_pp5_iter2_reg;
reg   [15:0] i_reg_1563_pp5_iter3_reg;
reg   [15:0] i_reg_1563_pp5_iter4_reg;
reg   [15:0] i_reg_1563_pp5_iter5_reg;
reg   [15:0] i_reg_1563_pp5_iter6_reg;
reg   [15:0] i_reg_1563_pp5_iter7_reg;
reg   [15:0] i_reg_1563_pp5_iter8_reg;
reg   [15:0] i_reg_1563_pp5_iter9_reg;
reg   [23:0] indvar_flatten163_reg_1575;
reg   [5:0] k_3_reg_1586;
reg   [18:0] indvar_flatten149_reg_1597;
reg   [2:0] ki_reg_1608;
reg   [15:0] wh_reg_1619;
reg   [63:0] bias_in_V_read_reg_4695;
reg    ap_block_state1;
wire   [7:0] K_fu_1646_p1;
reg   [7:0] K_reg_4700;
reg   [63:0] bias_in_V_read_1_reg_4706;
wire   [7:0] C_fu_1650_p1;
reg   [7:0] C_reg_4711;
wire   [7:0] WH_fu_1654_p1;
reg   [7:0] WH_reg_4718;
wire   [7:0] WH_in_fu_1658_p1;
reg   [7:0] WH_in_reg_4728;
wire   [15:0] zext_ln53_fu_1662_p1;
reg   [15:0] zext_ln53_reg_4735;
wire   [8:0] zext_ln55_fu_1665_p1;
reg   [8:0] zext_ln55_reg_4740;
wire   [15:0] zext_ln55_1_fu_1668_p1;
reg   [15:0] zext_ln55_1_reg_4745;
wire   [31:0] zext_ln57_fu_1671_p1;
reg   [31:0] zext_ln57_reg_4751;
wire   [15:0] zext_ln57_1_fu_1674_p1;
reg   [15:0] zext_ln57_1_reg_4761;
wire   [23:0] zext_ln61_fu_1677_p1;
reg   [23:0] zext_ln61_reg_4767;
wire   [15:0] zext_ln61_1_fu_1680_p1;
reg   [15:0] zext_ln61_1_reg_4772;
wire   [7:0] RS_fu_1683_p1;
reg   [7:0] RS_reg_4777;
wire   [15:0] zext_ln65_fu_1687_p1;
reg   [15:0] zext_ln65_reg_4783;
wire   [0:0] icmp_ln68_fu_1691_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln68_fu_1696_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln70_fu_1702_p1;
reg   [1:0] trunc_ln70_reg_4798;
reg   [5:0] lshr_ln_reg_4802;
wire    ap_CS_fsm_state8;
wire   [15:0] tmp1_fu_1739_p2;
reg   [15:0] tmp1_reg_4812;
wire   [31:0] grp_fu_4375_p2;
reg   [31:0] mul42_reg_4823;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln72_fu_1747_p2;
wire    ap_block_state12_pp1_stage0_iter0;
reg    ap_block_state13_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [31:0] add_ln72_fu_1752_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln74_fu_1758_p1;
reg   [1:0] trunc_ln74_reg_4837;
reg   [8:0] lshr_ln1_reg_4841;
wire    ap_CS_fsm_state14;
wire   [23:0] grp_fu_4381_p2;
reg   [23:0] mul55_reg_4851;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln76_fu_1795_p2;
wire    ap_block_state18_pp2_stage0_iter0;
reg    ap_block_state19_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [23:0] add_ln76_fu_1800_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] trunc_ln78_fu_1806_p1;
reg   [1:0] trunc_ln78_reg_4865;
reg   [8:0] lshr_ln2_reg_4869;
wire   [15:0] mul152_fu_1835_p2;
reg   [15:0] mul152_reg_5018;
wire    ap_CS_fsm_state20;
wire   [16:0] zext_ln81_fu_1839_p1;
reg   [16:0] zext_ln81_reg_5026;
wire  signed [8:0] trunc_ln202_fu_1843_p1;
reg  signed [8:0] trunc_ln202_reg_5034;
wire   [10:0] trunc_ln3_cast48_fu_1847_p1;
reg   [10:0] trunc_ln3_cast48_reg_5039;
wire   [15:0] add_ln81_1_fu_1859_p2;
reg   [15:0] add_ln81_1_reg_5046;
wire   [10:0] trunc_ln4_cast21_fu_1865_p1;
reg   [10:0] trunc_ln4_cast21_reg_5051;
wire   [5:0] div68_cast_fu_1868_p4;
reg   [5:0] div68_cast_reg_5056;
wire   [5:0] div66_cast_fu_1877_p4;
reg   [5:0] div66_cast_reg_5061;
wire   [8:0] WH_cast_fu_1886_p1;
reg   [8:0] WH_cast_reg_5066;
wire   [10:0] C_cast_fu_1889_p1;
reg   [10:0] C_cast_reg_5081;
wire  signed [10:0] empty_41_fu_1892_p1;
reg  signed [10:0] empty_41_reg_5089;
wire  signed [10:0] tmp5_cast_fu_1895_p2;
reg  signed [10:0] tmp5_cast_reg_5109;
wire   [17:0] tmp_2_fu_1901_p3;
reg   [17:0] tmp_2_reg_5115;
wire   [18:0] bound20_fu_1909_p1;
reg   [18:0] bound20_reg_5121;
wire   [11:0] bound110_fu_1921_p2;
reg   [11:0] bound110_reg_5126;
wire   [0:0] icmp_ln123_fu_1927_p2;
reg   [0:0] icmp_ln123_reg_5131;
wire   [11:0] add_ln81_2_fu_1937_p2;
reg   [11:0] add_ln81_2_reg_5139;
wire    ap_CS_fsm_state21;
wire   [5:0] select_ln81_fu_1948_p3;
reg   [5:0] select_ln81_reg_5144;
wire   [0:0] icmp_ln81_fu_1932_p2;
wire   [5:0] select_ln81_1_fu_1962_p3;
reg   [5:0] select_ln81_1_reg_5151;
wire   [7:0] p_mid_fu_1970_p3;
reg   [7:0] p_mid_reg_5156;
wire  signed [8:0] mul_ln81_fu_1982_p2;
reg  signed [8:0] mul_ln81_reg_5161;
wire   [8:0] mul_ln81_1_fu_1987_p2;
reg   [8:0] mul_ln81_1_reg_5168;
wire   [10:0] mul_ln81_2_fu_1996_p2;
reg   [10:0] mul_ln81_2_reg_5179;
wire   [10:0] mul_ln81_3_fu_2011_p2;
reg   [10:0] mul_ln81_3_reg_5187;
wire   [10:0] mul_ln81_4_fu_2026_p2;
reg   [10:0] mul_ln81_4_reg_5195;
wire   [10:0] mul_ln81_5_fu_2041_p2;
reg   [10:0] mul_ln81_5_reg_5203;
wire   [7:0] tmp_20_fu_2046_p3;
reg   [7:0] tmp_20_reg_5211;
wire   [10:0] p_cast16_fu_2054_p1;
reg   [10:0] p_cast16_reg_5217;
wire   [10:0] zext_ln88_fu_2064_p1;
reg   [10:0] zext_ln88_reg_5225;
wire   [2:0] add_ln88_fu_2080_p2;
reg   [2:0] add_ln88_reg_5246;
wire    ap_CS_fsm_state22;
wire   [1:0] empty_43_fu_2090_p1;
reg   [1:0] empty_43_reg_5251;
wire   [0:0] icmp_ln88_fu_2074_p2;
wire  signed [31:0] conv79_fu_2224_p1;
reg  signed [31:0] conv79_reg_5356;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln89_fu_2228_p2;
reg   [0:0] icmp_ln89_reg_5364;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state24_pp3_stage0_iter0;
wire    ap_block_state25_pp3_stage0_iter1;
wire    ap_block_state26_pp3_stage0_iter2;
wire    ap_block_state27_pp3_stage0_iter3;
wire    ap_block_pp3_stage0_11001;
wire   [15:0] add_ln89_fu_2233_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [7:0] select_ln89_fu_2244_p3;
reg   [7:0] select_ln89_reg_5373;
reg   [7:0] select_ln89_reg_5373_pp3_iter1_reg;
wire   [7:0] select_ln89_1_fu_2258_p3;
reg   [7:0] select_ln89_1_reg_5378;
wire   [7:0] add_ln90_fu_2270_p2;
wire  signed [10:0] grp_fu_4392_p2;
reg  signed [10:0] add107_2_cast_reg_5398;
wire    ap_CS_fsm_state31;
wire  signed [10:0] grp_fu_4397_p2;
reg  signed [10:0] add107_1_cast_reg_5403;
wire  signed [10:0] grp_fu_4402_p2;
reg  signed [10:0] add107_3_cast_reg_5408;
wire  signed [10:0] grp_fu_4407_p2;
reg  signed [10:0] add107_1_2_cast_reg_5413;
wire  signed [10:0] grp_fu_4412_p2;
reg  signed [10:0] add107_2_2_cast_reg_5418;
wire  signed [10:0] grp_fu_4417_p2;
reg  signed [10:0] add107_3_2_cast_reg_5423;
wire  signed [10:0] grp_fu_4422_p2;
reg  signed [10:0] add107_cast_reg_5428;
wire  signed [10:0] grp_fu_4427_p2;
reg  signed [10:0] add107_1325_cast_reg_5433;
wire  signed [10:0] grp_fu_4432_p2;
reg  signed [10:0] add107_2333_cast_reg_5438;
wire  signed [10:0] grp_fu_4437_p2;
reg  signed [10:0] add107_3341_cast_reg_5443;
wire  signed [10:0] grp_fu_4442_p2;
reg  signed [10:0] add107_1_1_cast_reg_5448;
wire  signed [10:0] grp_fu_4447_p2;
reg  signed [10:0] add107_1_3_cast_reg_5453;
wire  signed [10:0] grp_fu_4452_p2;
reg  signed [10:0] add107_2_1_cast_reg_5458;
wire  signed [10:0] grp_fu_4457_p2;
reg  signed [10:0] add107_2_3_cast_reg_5463;
wire  signed [10:0] grp_fu_4462_p2;
reg  signed [10:0] add107_3_1_cast_reg_5468;
wire  signed [10:0] grp_fu_4467_p2;
reg  signed [10:0] add107_3_3_cast_reg_5473;
wire   [15:0] add_ln100_fu_2296_p2;
reg   [15:0] add_ln100_reg_5481;
wire    ap_CS_fsm_state32;
wire   [7:0] select_ln100_fu_2307_p3;
reg   [7:0] select_ln100_reg_5486;
wire   [0:0] icmp_ln100_fu_2291_p2;
wire   [7:0] select_ln100_1_fu_2321_p3;
reg   [7:0] select_ln100_1_reg_5491;
wire   [10:0] zext_ln100_1_fu_2329_p1;
reg   [10:0] zext_ln100_1_reg_5497;
wire   [1:0] trunc_ln100_fu_2343_p1;
reg   [1:0] trunc_ln100_reg_5502;
wire   [1:0] trunc_ln100_1_fu_2352_p1;
reg   [1:0] trunc_ln100_1_reg_5507;
wire   [1:0] trunc_ln100_2_fu_2361_p1;
reg   [1:0] trunc_ln100_2_reg_5512;
wire   [1:0] trunc_ln100_3_fu_2370_p1;
reg   [1:0] trunc_ln100_3_reg_5517;
wire   [1:0] trunc_ln100_4_fu_2379_p1;
reg   [1:0] trunc_ln100_4_reg_5522;
wire   [1:0] trunc_ln100_5_fu_2388_p1;
reg   [1:0] trunc_ln100_5_reg_5527;
wire   [1:0] trunc_ln100_6_fu_2397_p1;
reg   [1:0] trunc_ln100_6_reg_5532;
wire   [1:0] trunc_ln100_7_fu_2406_p1;
reg   [1:0] trunc_ln100_7_reg_5537;
wire   [1:0] trunc_ln100_8_fu_2415_p1;
reg   [1:0] trunc_ln100_8_reg_5542;
wire   [1:0] trunc_ln100_9_fu_2424_p1;
reg   [1:0] trunc_ln100_9_reg_5547;
wire   [1:0] trunc_ln100_10_fu_2433_p1;
reg   [1:0] trunc_ln100_10_reg_5552;
wire   [1:0] trunc_ln100_11_fu_2442_p1;
reg   [1:0] trunc_ln100_11_reg_5557;
wire   [1:0] trunc_ln100_12_fu_2451_p1;
reg   [1:0] trunc_ln100_12_reg_5562;
wire   [1:0] trunc_ln100_13_fu_2460_p1;
reg   [1:0] trunc_ln100_13_reg_5567;
wire   [1:0] trunc_ln100_14_fu_2469_p1;
reg   [1:0] trunc_ln100_14_reg_5572;
wire   [1:0] trunc_ln100_15_fu_2478_p1;
reg   [1:0] trunc_ln100_15_reg_5577;
wire   [10:0] zext_ln102_fu_2482_p1;
reg   [10:0] zext_ln102_reg_5582;
wire   [1:0] trunc_ln117_fu_2486_p1;
reg   [1:0] trunc_ln117_reg_5587;
reg   [8:0] lshr_ln116_2_reg_5648;
reg   [8:0] lshr_ln116_3_reg_5653;
reg   [8:0] lshr_ln116_4_reg_5658;
reg   [8:0] lshr_ln116_5_reg_5663;
reg   [8:0] lshr_ln116_6_reg_5668;
reg   [8:0] lshr_ln116_7_reg_5673;
reg   [8:0] lshr_ln116_8_reg_5678;
reg   [8:0] lshr_ln116_9_reg_5683;
reg   [8:0] lshr_ln116_s_reg_5688;
reg   [8:0] lshr_ln116_10_reg_5693;
reg   [8:0] lshr_ln116_11_reg_5698;
reg   [8:0] lshr_ln116_12_reg_5703;
reg   [8:0] lshr_ln116_13_reg_5708;
reg   [8:0] lshr_ln116_14_reg_5713;
wire   [5:0] add_ln82_fu_2762_p2;
wire   [7:0] tmp_3_fu_2775_p6;
reg   [7:0] tmp_3_reg_5723;
wire    ap_CS_fsm_state33;
wire   [7:0] tmp_4_fu_2797_p6;
reg   [7:0] tmp_4_reg_5728;
wire   [7:0] tmp_5_fu_2833_p6;
reg   [7:0] tmp_5_reg_5773;
wire    ap_CS_fsm_state34;
wire   [7:0] tmp_6_fu_2855_p6;
reg   [7:0] tmp_6_reg_5778;
wire   [7:0] tmp_7_fu_2891_p6;
reg   [7:0] tmp_7_reg_5823;
wire    ap_CS_fsm_state35;
wire   [7:0] tmp_8_fu_2913_p6;
reg   [7:0] tmp_8_reg_5828;
wire   [7:0] tmp_9_fu_2949_p6;
reg   [7:0] tmp_9_reg_5873;
wire    ap_CS_fsm_state36;
wire   [7:0] tmp_s_fu_2971_p6;
reg   [7:0] tmp_s_reg_5878;
wire   [7:0] tmp_10_fu_3007_p6;
reg   [7:0] tmp_10_reg_5923;
wire    ap_CS_fsm_state37;
wire   [7:0] tmp_11_fu_3029_p6;
reg   [7:0] tmp_11_reg_5928;
wire   [7:0] tmp_12_fu_3065_p6;
reg   [7:0] tmp_12_reg_5973;
wire    ap_CS_fsm_state38;
wire   [7:0] tmp_13_fu_3087_p6;
reg   [7:0] tmp_13_reg_5978;
wire   [7:0] tmp_14_fu_3123_p6;
reg   [7:0] tmp_14_reg_6023;
wire    ap_CS_fsm_state39;
wire   [7:0] tmp_15_fu_3145_p6;
reg   [7:0] tmp_15_reg_6028;
wire   [8:0] zext_ln100_fu_3173_p1;
reg   [8:0] zext_ln100_reg_6073;
wire    ap_CS_fsm_state40;
wire   [7:0] tmp_16_fu_3184_p6;
reg   [7:0] tmp_16_reg_6079;
wire   [7:0] tmp_17_fu_3206_p6;
reg   [7:0] tmp_17_reg_6084;
wire   [10:0] p_mid131_fu_3220_p2;
reg   [10:0] p_mid131_reg_6089;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state41_pp4_stage0_iter0;
wire    ap_block_state42_pp4_stage0_iter1;
wire    ap_block_state43_pp4_stage0_iter2;
wire    ap_block_state44_pp4_stage0_iter3;
wire    ap_block_state45_pp4_stage0_iter4;
wire    ap_block_state46_pp4_stage0_iter5;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln121_fu_3239_p2;
reg   [0:0] icmp_ln121_reg_6099;
reg   [0:0] icmp_ln121_reg_6099_pp4_iter1_reg;
reg   [0:0] icmp_ln121_reg_6099_pp4_iter2_reg;
reg   [0:0] icmp_ln121_reg_6099_pp4_iter3_reg;
wire   [17:0] add_ln121_fu_3244_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln123_1_fu_3250_p2;
reg   [0:0] icmp_ln123_1_reg_6108;
reg   [0:0] icmp_ln123_1_reg_6108_pp4_iter1_reg;
reg   [0:0] icmp_ln123_1_reg_6108_pp4_iter2_reg;
reg   [0:0] icmp_ln123_1_reg_6108_pp4_iter3_reg;
wire   [1:0] select_ln121_1_fu_3265_p3;
reg   [1:0] select_ln121_1_reg_6116;
reg   [1:0] select_ln121_1_reg_6116_pp4_iter1_reg;
reg   [1:0] select_ln121_1_reg_6116_pp4_iter2_reg;
reg   [1:0] select_ln121_1_reg_6116_pp4_iter3_reg;
reg   [1:0] select_ln121_1_reg_6116_pp4_iter4_reg;
wire   [0:0] select_ln121_5_fu_3289_p3;
reg   [0:0] select_ln121_5_reg_6125;
reg   [0:0] select_ln121_5_reg_6125_pp4_iter1_reg;
reg   [0:0] select_ln121_5_reg_6125_pp4_iter2_reg;
reg   [0:0] select_ln121_5_reg_6125_pp4_iter3_reg;
wire   [2:0] select_ln121_6_fu_3296_p3;
wire   [7:0] select_ln123_fu_3310_p3;
reg   [7:0] select_ln123_reg_6137;
reg   [7:0] select_ln123_reg_6137_pp4_iter1_reg;
reg   [7:0] select_ln123_reg_6137_pp4_iter2_reg;
reg   [7:0] select_ln123_reg_6137_pp4_iter3_reg;
wire   [1:0] trunc_ln130_fu_3318_p1;
reg   [1:0] trunc_ln130_reg_6143;
reg   [1:0] trunc_ln130_reg_6143_pp4_iter1_reg;
reg   [1:0] trunc_ln130_reg_6143_pp4_iter2_reg;
reg   [1:0] trunc_ln130_reg_6143_pp4_iter3_reg;
wire   [7:0] add_ln124_fu_3322_p2;
wire   [15:0] select_ln123_4_fu_3334_p3;
wire   [7:0] select_ln123_3_fu_3387_p3;
reg    ap_enable_reg_pp4_iter1;
wire   [8:0] add_ln128_fu_3397_p2;
reg   [8:0] add_ln128_reg_6163;
reg   [8:0] add_ln128_reg_6163_pp4_iter2_reg;
reg   [8:0] add_ln128_reg_6163_pp4_iter3_reg;
reg   [8:0] add_ln128_reg_6163_pp4_iter4_reg;
wire  signed [10:0] grp_fu_4480_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln127_1_fu_3408_p2;
reg   [10:0] add_ln127_1_reg_6178;
wire   [1:0] add_ln129_fu_3446_p2;
reg   [1:0] add_ln129_reg_6183;
wire  signed [15:0] p_cast44_fu_3497_p1;
reg  signed [15:0] p_cast44_reg_6208;
wire    ap_CS_fsm_state47;
wire  signed [15:0] p_cast52_fu_3500_p1;
reg  signed [15:0] p_cast52_reg_6213;
wire  signed [15:0] p_cast54_fu_3503_p1;
reg  signed [15:0] p_cast54_reg_6218;
wire  signed [15:0] p_cast58_fu_3506_p1;
reg  signed [15:0] p_cast58_reg_6223;
wire  signed [15:0] p_cast60_fu_3509_p1;
reg  signed [15:0] p_cast60_reg_6228;
wire  signed [15:0] p_cast62_fu_3512_p1;
reg  signed [15:0] p_cast62_reg_6233;
wire  signed [15:0] p_cast64_fu_3515_p1;
reg  signed [15:0] p_cast64_reg_6238;
wire  signed [15:0] p_cast66_fu_3518_p1;
reg  signed [15:0] p_cast66_reg_6243;
wire  signed [15:0] p_cast68_fu_3521_p1;
reg  signed [15:0] p_cast68_reg_6248;
wire  signed [15:0] p_cast70_fu_3524_p1;
reg  signed [15:0] p_cast70_reg_6253;
wire  signed [15:0] p_cast72_fu_3527_p1;
reg  signed [15:0] p_cast72_reg_6258;
wire  signed [15:0] p_cast74_fu_3530_p1;
reg  signed [15:0] p_cast74_reg_6263;
wire  signed [15:0] p_cast78_fu_3533_p1;
reg  signed [15:0] p_cast78_reg_6268;
wire  signed [15:0] p_cast81_fu_3536_p1;
reg  signed [15:0] p_cast81_reg_6273;
wire  signed [15:0] p_cast84_fu_3539_p1;
reg  signed [15:0] p_cast84_reg_6278;
wire  signed [15:0] sext_ln139_fu_3542_p1;
reg  signed [15:0] sext_ln139_reg_6283;
wire   [0:0] icmp_ln139_fu_3545_p2;
reg   [0:0] icmp_ln139_reg_6288;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter1_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter2_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter3_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter4_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter5_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter6_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter7_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter8_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter9_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter10_reg;
reg   [0:0] icmp_ln139_reg_6288_pp5_iter11_reg;
wire   [16:0] i_cast_fu_3550_p1;
reg   [16:0] i_cast_reg_6292;
wire  signed [31:0] sext_ln143_1_fu_3560_p1;
reg  signed [31:0] sext_ln143_1_reg_6297;
reg   [0:0] tmp_21_reg_6303;
reg   [0:0] tmp_21_reg_6303_pp5_iter1_reg;
reg   [0:0] tmp_21_reg_6303_pp5_iter2_reg;
reg   [0:0] tmp_21_reg_6303_pp5_iter3_reg;
reg   [0:0] tmp_21_reg_6303_pp5_iter4_reg;
reg   [0:0] tmp_21_reg_6303_pp5_iter5_reg;
reg   [0:0] tmp_21_reg_6303_pp5_iter6_reg;
reg   [0:0] tmp_21_reg_6303_pp5_iter7_reg;
reg   [0:0] tmp_21_reg_6303_pp5_iter8_reg;
reg   [0:0] tmp_21_reg_6303_pp5_iter9_reg;
wire  signed [31:0] sext_ln143_2_fu_3583_p1;
reg  signed [31:0] sext_ln143_2_reg_6309;
wire   [0:0] tmp_22_fu_3592_p3;
reg   [0:0] tmp_22_reg_6315;
reg   [0:0] tmp_22_reg_6315_pp5_iter1_reg;
reg   [0:0] tmp_22_reg_6315_pp5_iter2_reg;
reg   [0:0] tmp_22_reg_6315_pp5_iter3_reg;
reg   [0:0] tmp_22_reg_6315_pp5_iter4_reg;
reg   [0:0] tmp_22_reg_6315_pp5_iter5_reg;
reg   [0:0] tmp_22_reg_6315_pp5_iter6_reg;
reg   [0:0] tmp_22_reg_6315_pp5_iter7_reg;
reg   [0:0] tmp_22_reg_6315_pp5_iter8_reg;
reg   [0:0] tmp_22_reg_6315_pp5_iter9_reg;
wire   [0:0] and_ln179_fu_3637_p2;
reg   [0:0] and_ln179_reg_6321;
reg   [0:0] and_ln179_reg_6321_pp5_iter1_reg;
reg   [0:0] and_ln179_reg_6321_pp5_iter2_reg;
reg   [0:0] and_ln179_reg_6321_pp5_iter3_reg;
reg   [0:0] and_ln179_reg_6321_pp5_iter4_reg;
reg   [0:0] and_ln179_reg_6321_pp5_iter5_reg;
reg   [0:0] and_ln179_reg_6321_pp5_iter6_reg;
reg   [0:0] and_ln179_reg_6321_pp5_iter7_reg;
reg   [0:0] and_ln179_reg_6321_pp5_iter8_reg;
reg   [0:0] and_ln179_reg_6321_pp5_iter9_reg;
wire   [0:0] and_ln179_1_fu_3668_p2;
reg   [0:0] and_ln179_1_reg_6325;
reg   [0:0] and_ln179_1_reg_6325_pp5_iter1_reg;
reg   [0:0] and_ln179_1_reg_6325_pp5_iter2_reg;
reg   [0:0] and_ln179_1_reg_6325_pp5_iter3_reg;
reg   [0:0] and_ln179_1_reg_6325_pp5_iter4_reg;
reg   [0:0] and_ln179_1_reg_6325_pp5_iter5_reg;
reg   [0:0] and_ln179_1_reg_6325_pp5_iter6_reg;
reg   [0:0] and_ln179_1_reg_6325_pp5_iter7_reg;
reg   [0:0] and_ln179_1_reg_6325_pp5_iter8_reg;
reg   [0:0] and_ln179_1_reg_6325_pp5_iter9_reg;
wire   [0:0] and_ln179_2_fu_3693_p2;
reg   [0:0] and_ln179_2_reg_6329;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter1_reg;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter2_reg;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter3_reg;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter4_reg;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter5_reg;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter6_reg;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter7_reg;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter8_reg;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter9_reg;
reg   [0:0] and_ln179_2_reg_6329_pp5_iter10_reg;
wire   [0:0] and_ln179_3_fu_3704_p2;
reg   [0:0] and_ln179_3_reg_6333;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter1_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter2_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter3_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter4_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter5_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter6_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter7_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter8_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter9_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter10_reg;
reg   [0:0] and_ln179_3_reg_6333_pp5_iter11_reg;
wire  signed [31:0] sext_ln143_fu_3715_p1;
reg  signed [31:0] sext_ln143_reg_6337;
wire    ap_CS_fsm_pp5_stage1;
wire    ap_block_state49_pp5_stage1_iter0;
wire    ap_block_state53_pp5_stage1_iter1;
wire    ap_block_state57_pp5_stage1_iter2;
wire    ap_block_state61_pp5_stage1_iter3;
wire    ap_block_state65_pp5_stage1_iter4;
wire    ap_block_state69_pp5_stage1_iter5;
wire    ap_block_state73_pp5_stage1_iter6;
wire    ap_block_state77_pp5_stage1_iter7;
wire    ap_block_state81_pp5_stage1_iter8;
wire    ap_block_state85_pp5_stage1_iter9;
wire    ap_block_state89_pp5_stage1_iter10;
wire    ap_block_state93_pp5_stage1_iter11;
wire    ap_block_pp5_stage1_11001;
wire   [15:0] i_1_fu_3736_p2;
reg   [15:0] i_1_reg_6343;
wire    ap_CS_fsm_pp5_stage3;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state51_pp5_stage3_iter0;
wire    ap_block_state55_pp5_stage3_iter1;
wire    ap_block_state59_pp5_stage3_iter2;
wire    ap_block_state63_pp5_stage3_iter3;
wire    ap_block_state67_pp5_stage3_iter4;
wire    ap_block_state71_pp5_stage3_iter5;
wire    ap_block_state75_pp5_stage3_iter6;
wire    ap_block_state79_pp5_stage3_iter7;
wire    ap_block_state83_pp5_stage3_iter8;
wire    ap_block_state87_pp5_stage3_iter9;
wire    ap_block_state91_pp5_stage3_iter10;
wire    ap_block_state95_pp5_stage3_iter11;
wire    ap_block_pp5_stage3_11001;
wire  signed [31:0] grp_fu_4511_p3;
reg   [31:0] add_ln175_reg_6368;
wire    ap_CS_fsm_pp5_stage2;
reg    ap_enable_reg_pp5_iter8;
wire    ap_block_state50_pp5_stage2_iter0;
wire    ap_block_state54_pp5_stage2_iter1;
wire    ap_block_state58_pp5_stage2_iter2;
wire    ap_block_state62_pp5_stage2_iter3;
wire    ap_block_state66_pp5_stage2_iter4;
wire    ap_block_state70_pp5_stage2_iter5;
wire    ap_block_state74_pp5_stage2_iter6;
wire    ap_block_state78_pp5_stage2_iter7;
wire    ap_block_state82_pp5_stage2_iter8;
wire    ap_block_state86_pp5_stage2_iter9;
wire    ap_block_state90_pp5_stage2_iter10;
wire    ap_block_state94_pp5_stage2_iter11;
wire    ap_block_pp5_stage2_11001;
wire   [8:0] empty_54_fu_3783_p1;
reg   [8:0] empty_54_reg_6379;
reg   [8:0] empty_54_reg_6379_pp5_iter9_reg;
reg   [8:0] empty_54_reg_6379_pp5_iter10_reg;
wire   [0:0] icmp_ln145_fu_3787_p2;
reg   [0:0] icmp_ln145_reg_6387;
reg   [0:0] icmp_ln145_reg_6387_pp5_iter9_reg;
wire  signed [8:0] trunc_ln143_1_fu_3793_p1;
wire  signed [8:0] trunc_ln143_2_fu_3797_p1;
wire   [8:0] add_ln178_2_fu_3801_p2;
reg   [8:0] add_ln178_2_reg_6403;
wire  signed [8:0] trunc_ln143_fu_3832_p1;
wire   [7:0] grp_fu_3724_p2;
reg   [7:0] wi_4_reg_6428;
wire  signed [31:0] grp_fu_4518_p3;
reg  signed [31:0] add_ln175_1_reg_6433;
reg    ap_enable_reg_pp5_iter9;
wire   [8:0] add_ln178_3_fu_3836_p2;
reg   [8:0] add_ln178_3_reg_6438;
wire   [7:0] grp_fu_3728_p2;
reg   [7:0] wi_2_reg_6458;
wire   [8:0] zext_ln144_1_fu_3884_p1;
wire   [8:0] zext_ln144_2_fu_3891_p1;
wire   [8:0] zext_ln144_fu_3934_p1;
wire  signed [8:0] grp_fu_4575_p4;
reg  signed [8:0] add_ln169_3_reg_6521;
wire   [7:0] data_l1_2_0_q0;
reg   [7:0] data_l1_2_0_load_reg_6536;
wire   [8:0] add_ln176_fu_3993_p2;
reg   [8:0] add_ln176_reg_6541;
wire   [31:0] grp_fu_4591_p3;
reg  signed [31:0] add_ln175_2_reg_6546;
wire  signed [8:0] grp_fu_4607_p4;
reg  signed [8:0] add_ln169_5_reg_6576;
wire   [7:0] data_l1_1_0_q0;
reg   [7:0] data_l1_1_0_load_reg_6586;
reg    ap_enable_reg_pp5_iter10;
wire   [7:0] data_l1_0_0_q0;
reg  signed [7:0] data_l1_0_0_load_reg_6601;
wire   [8:0] add_ln143_3_fu_4123_p2;
reg   [8:0] add_ln143_3_reg_6621;
wire  signed [31:0] grp_fu_4639_p3;
reg  signed [31:0] add_ln175_3_reg_6627;
wire   [8:0] add_ln169_6_fu_4183_p2;
reg   [8:0] add_ln169_6_reg_6658;
wire   [8:0] add_ln187_15_fu_4190_p2;
reg   [8:0] add_ln187_15_reg_6668;
wire   [31:0] output_l1_0_q1;
reg    ap_enable_reg_pp5_iter11;
wire   [7:0] add_ln102_fu_4214_p2;
wire    ap_CS_fsm_state96;
wire   [23:0] grp_fu_4386_p2;
reg   [23:0] mul_ln201_reg_6688;
wire    ap_CS_fsm_state99;
wire   [0:0] icmp_ln203_fu_4219_p2;
reg   [0:0] icmp_ln203_reg_6693;
wire   [0:0] icmp_ln201_fu_4224_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state100_pp6_stage0_iter0;
wire    ap_block_state101_pp6_stage0_iter1;
wire    ap_block_state102_pp6_stage0_iter2;
wire    ap_block_state103_pp6_stage0_iter3;
reg    ap_block_state104_pp6_stage0_iter4;
reg    ap_block_pp6_stage0_11001;
reg   [0:0] icmp_ln201_reg_6698_pp6_iter1_reg;
reg   [0:0] icmp_ln201_reg_6698_pp6_iter2_reg;
wire   [23:0] add_ln201_fu_4229_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln202_fu_4235_p2;
reg   [0:0] icmp_ln202_reg_6707;
reg   [0:0] icmp_ln202_reg_6707_pp6_iter1_reg;
wire   [5:0] select_ln201_1_fu_4246_p3;
reg   [5:0] select_ln201_1_reg_6715;
wire   [18:0] select_ln202_3_fu_4264_p3;
wire   [1:0] select_ln202_1_fu_4324_p3;
reg   [1:0] select_ln202_1_reg_6730;
reg   [1:0] select_ln202_1_reg_6730_pp6_iter3_reg;
wire   [2:0] select_ln202_2_fu_4332_p3;
reg    ap_enable_reg_pp6_iter2;
wire   [15:0] add_ln203_fu_4344_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state24;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_flush_enable;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_condition_pp4_exit_iter4_state45;
reg    ap_enable_reg_pp4_iter5;
wire    ap_block_pp5_stage3_subdone;
reg    ap_condition_pp5_flush_enable;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter3;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter5;
reg    ap_enable_reg_pp5_iter6;
reg    ap_enable_reg_pp5_iter7;
reg    ap_condition_pp5_exit_iter10_state89;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_flush_enable;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter3;
reg    ap_condition_pp6_exit_iter2_state102;
reg   [8:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_q0;
reg   [8:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_q0;
reg   [8:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_q0;
reg   [8:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_q0;
reg   [8:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_q0;
reg   [8:0] weight_l2_0_address1;
reg    weight_l2_0_ce1;
wire   [7:0] weight_l2_0_q1;
reg   [8:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_q0;
reg   [8:0] weight_l2_1_address1;
reg    weight_l2_1_ce1;
wire   [7:0] weight_l2_1_q1;
reg   [8:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_q0;
reg   [8:0] weight_l2_2_address1;
reg    weight_l2_2_ce1;
wire   [7:0] weight_l2_2_q1;
reg   [8:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_q0;
reg   [8:0] weight_l2_3_address1;
reg    weight_l2_3_ce1;
wire   [7:0] weight_l2_3_q1;
reg   [8:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_q0;
reg   [8:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_q0;
reg   [8:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_q0;
reg   [8:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_q0;
reg   [8:0] data_l1_0_0_address0;
reg    data_l1_0_0_ce0;
reg    data_l1_0_0_we0;
reg   [8:0] data_l1_1_0_address0;
reg    data_l1_1_0_ce0;
reg    data_l1_1_0_we0;
reg   [8:0] data_l1_2_0_address0;
reg    data_l1_2_0_ce0;
reg    data_l1_2_0_we0;
reg   [8:0] data_l1_3_0_address0;
reg    data_l1_3_0_ce0;
reg    data_l1_3_0_we0;
wire   [7:0] data_l1_3_0_q0;
reg   [8:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
reg   [31:0] output_l1_0_d0;
wire   [31:0] output_l1_0_q0;
reg   [8:0] output_l1_0_address1;
reg    output_l1_0_ce1;
reg    output_l1_0_we1;
reg   [31:0] output_l1_0_d1;
reg   [8:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
reg   [31:0] output_l1_1_d0;
reg   [8:0] output_l1_1_address1;
reg    output_l1_1_ce1;
reg    output_l1_1_we1;
wire   [31:0] output_l1_1_q1;
reg   [8:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
reg   [31:0] output_l1_2_d0;
reg   [8:0] output_l1_2_address1;
reg    output_l1_2_ce1;
wire   [31:0] output_l1_2_q1;
reg   [8:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
reg   [31:0] output_l1_3_d0;
reg   [8:0] output_l1_3_address1;
reg    output_l1_3_ce1;
reg    output_l1_3_we1;
wire   [31:0] output_l1_3_q1;
reg   [11:0] indvar_flatten142_reg_1398;
reg   [5:0] ko_reg_1409;
reg   [5:0] co_reg_1420;
reg   [2:0] ki_1_reg_1431;
wire    ap_CS_fsm_state28;
reg   [7:0] ap_phi_mux_hi_phi_fu_1457_p4;
wire    ap_block_pp3_stage0;
reg   [15:0] indvar_flatten105_reg_1475;
reg   [7:0] r_reg_1486;
reg   [7:0] s_reg_1497;
reg   [15:0] ap_phi_mux_i_phi_fu_1567_p4;
wire    ap_block_pp5_stage0;
reg   [5:0] ap_phi_mux_k_3_phi_fu_1590_p4;
wire   [63:0] zext_ln70_fu_1724_p1;
wire   [63:0] zext_ln74_fu_1780_p1;
wire   [63:0] zext_ln78_fu_1828_p1;
wire   [63:0] newIndex122_cast_fu_2109_p1;
wire   [63:0] zext_ln93_fu_2284_p1;
wire   [63:0] zext_ln116_16_fu_2506_p1;
wire   [63:0] zext_ln116_17_fu_2530_p1;
wire   [63:0] zext_ln116_18_fu_2811_p1;
wire   [63:0] zext_ln116_19_fu_2818_p1;
wire   [63:0] zext_ln116_20_fu_2869_p1;
wire   [63:0] zext_ln116_21_fu_2876_p1;
wire   [63:0] zext_ln116_22_fu_2927_p1;
wire   [63:0] zext_ln116_23_fu_2934_p1;
wire   [63:0] zext_ln116_24_fu_2985_p1;
wire   [63:0] zext_ln116_25_fu_2992_p1;
wire   [63:0] zext_ln116_26_fu_3043_p1;
wire   [63:0] zext_ln116_27_fu_3050_p1;
wire   [63:0] zext_ln116_28_fu_3101_p1;
wire   [63:0] zext_ln116_29_fu_3108_p1;
wire   [63:0] zext_ln116_30_fu_3159_p1;
wire   [63:0] zext_ln116_31_fu_3166_p1;
wire   [63:0] zext_ln129_1_fu_3461_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln128_fu_3490_p1;
wire   [63:0] zext_ln186_fu_3808_p1;
wire    ap_block_pp5_stage3;
wire   [63:0] zext_ln186_1_fu_3842_p1;
wire   [63:0] zext_ln186_4_fu_3851_p1;
wire   [63:0] zext_ln186_5_fu_3895_p1;
wire    ap_block_pp5_stage1;
wire   [63:0] zext_ln186_8_fu_3907_p1;
wire   [63:0] zext_ln146_2_fu_3938_p1;
wire    ap_block_pp5_stage2;
wire   [63:0] zext_ln146_3_fu_3942_p1;
wire   [63:0] zext_ln186_9_fu_3952_p1;
wire   [63:0] zext_ln167_fu_3957_p1;
wire   [63:0] zext_ln186_12_fu_3961_p1;
wire   [63:0] zext_ln146_1_fu_3982_p1;
wire   [63:0] zext_ln186_2_fu_3999_p1;
wire   [63:0] zext_ln167_1_fu_4022_p1;
wire   [63:0] zext_ln186_13_fu_4026_p1;
wire   [63:0] zext_ln146_fu_4045_p1;
wire   [63:0] zext_ln186_6_fu_4056_p1;
wire   [63:0] zext_ln186_10_fu_4094_p1;
wire   [63:0] zext_ln186_3_fu_4129_p1;
wire   [63:0] zext_ln167_2_fu_4141_p1;
wire   [63:0] zext_ln186_14_fu_4145_p1;
wire   [63:0] zext_ln186_7_fu_4159_p1;
wire   [63:0] zext_ln186_11_fu_4178_p1;
wire   [63:0] zext_ln167_3_fu_4198_p1;
wire   [63:0] zext_ln186_15_fu_4202_p1;
wire   [63:0] zext_ln204_fu_4350_p1;
reg  signed [7:0] arrayidx1922_promoted615_fu_272;
reg   [31:0] arrayidx2284_promoted622_fu_276;
wire  signed [31:0] grp_fu_4526_p3;
reg  signed [7:0] arrayidx1922_1347_promoted629_fu_280;
reg   [31:0] arrayidx2284_1349_promoted636_fu_284;
wire  signed [31:0] grp_fu_4534_p3;
reg  signed [7:0] arrayidx1922_2385_promoted643_fu_288;
wire  signed [7:0] select_ln145_2_fu_3986_p3;
reg   [31:0] arrayidx2284_2387_promoted650_fu_292;
wire  signed [31:0] grp_fu_4615_p3;
reg   [31:0] arrayidx2284_3425_promoted657_fu_296;
wire  signed [31:0] grp_fu_4655_p3;
reg  signed [7:0] arrayidx1922_1_promoted664_fu_300;
reg   [31:0] arrayidx2284_1_promoted671_fu_304;
wire  signed [31:0] grp_fu_4558_p3;
reg  signed [7:0] arrayidx1922_1_1_promoted678_fu_308;
reg   [31:0] arrayidx2284_1_1_promoted685_fu_312;
wire  signed [31:0] grp_fu_4599_p3;
reg  signed [7:0] arrayidx1922_1_2_promoted692_fu_316;
wire  signed [7:0] select_ln145_1_fu_4050_p3;
reg   [31:0] arrayidx2284_1_2_promoted699_fu_320;
wire  signed [31:0] grp_fu_4647_p3;
reg   [31:0] arrayidx2284_1_3_promoted706_fu_324;
wire  signed [31:0] grp_fu_4671_p3;
reg  signed [7:0] arrayidx1922_2_promoted713_fu_328;
reg   [31:0] arrayidx2284_2_promoted720_fu_332;
wire  signed [31:0] grp_fu_4623_p3;
reg  signed [7:0] arrayidx1922_2_1_promoted727_fu_336;
reg   [31:0] arrayidx2284_2_1_promoted734_fu_340;
wire  signed [31:0] grp_fu_4631_p3;
reg  signed [7:0] arrayidx1922_2_2_promoted741_fu_344;
wire  signed [7:0] select_ln145_fu_4117_p3;
reg   [31:0] arrayidx2284_2_2_promoted748_fu_348;
wire  signed [31:0] grp_fu_4663_p3;
reg   [31:0] arrayidx2284_2_3_promoted755_fu_352;
wire  signed [31:0] grp_fu_4679_p3;
reg  signed [7:0] arrayidx1922_3_promoted762_fu_356;
reg  signed [7:0] arrayidx1922_3_1_promoted769_fu_360;
reg  signed [7:0] arrayidx1922_3_2_promoted776_fu_364;
reg    ap_block_pp6_stage0_01001;
wire   [7:0] trunc_ln708_fu_1716_p1;
wire   [7:0] trunc_ln708_1_fu_1772_p1;
wire   [7:0] trunc_ln708_2_fu_1820_p1;
wire   [7:0] tmp_19_fu_3472_p6;
reg   [8:0] grp_fu_1630_p0;
reg   [8:0] grp_fu_1634_p0;
reg   [8:0] grp_fu_1638_p0;
reg   [8:0] grp_fu_1642_p0;
wire   [7:0] tmp_fu_1731_p0;
wire   [7:0] tmp_fu_1731_p1;
wire   [15:0] tmp_fu_1731_p2;
wire   [7:0] tmp1_fu_1739_p0;
wire   [7:0] tmp1_fu_1739_p1;
wire   [7:0] tmp2_fu_1787_p0;
wire   [7:0] tmp2_fu_1787_p1;
wire   [15:0] tmp2_fu_1787_p2;
wire   [7:0] mul152_fu_1835_p0;
wire   [7:0] mul152_fu_1835_p1;
wire   [8:0] add_ln81_fu_1850_p2;
wire   [15:0] zext_ln81_1_fu_1855_p1;
wire   [7:0] tmp5_cast_fu_1895_p0;
wire   [7:0] tmp5_cast_fu_1895_p1;
wire   [5:0] bound110_fu_1921_p0;
wire   [5:0] bound110_fu_1921_p1;
wire   [0:0] icmp_ln82_fu_1943_p2;
wire   [5:0] add_ln81_3_fu_1956_p2;
wire   [7:0] mul_ln81_fu_1982_p0;
wire   [5:0] mul_ln81_fu_1982_p1;
wire   [7:0] mul_ln81_1_fu_1987_p0;
wire   [7:0] mul_ln81_2_fu_1996_p0;
wire   [7:0] mul_ln81_2_fu_1996_p1;
wire   [7:0] or_ln81_fu_2001_p2;
wire   [7:0] mul_ln81_3_fu_2011_p0;
wire   [7:0] mul_ln81_3_fu_2011_p1;
wire   [7:0] or_ln81_1_fu_2016_p2;
wire   [7:0] mul_ln81_4_fu_2026_p0;
wire   [7:0] mul_ln81_4_fu_2026_p1;
wire   [7:0] or_ln81_2_fu_2031_p2;
wire   [7:0] mul_ln81_5_fu_2041_p0;
wire   [7:0] mul_ln81_5_fu_2041_p1;
wire   [7:0] empty_57_fu_2058_p2;
wire   [7:0] zext_ln88_1_fu_2086_p1;
wire   [7:0] empty_44_fu_2094_p2;
wire   [5:0] newIndex_fu_2099_p4;
wire   [7:0] empty_46_fu_2117_p2;
wire   [7:0] empty_47_fu_2126_p2;
wire   [10:0] p_cast17_fu_2131_p1;
wire   [10:0] p_cast18_fu_2122_p1;
wire   [63:0] tmp_1_fu_2210_p5;
wire   [7:0] tmp_1_fu_2210_p6;
wire   [0:0] icmp_ln90_fu_2239_p2;
wire   [7:0] add_ln89_1_fu_2252_p2;
wire   [8:0] wi_cast_fu_2276_p1;
wire   [8:0] grp_fu_4472_p3;
wire   [0:0] icmp_ln102_fu_2302_p2;
wire   [7:0] add_ln100_17_fu_2315_p2;
wire   [7:0] mul_ln100_fu_2333_p0;
wire   [7:0] mul_ln100_fu_2333_p1;
wire   [10:0] mul_ln100_fu_2333_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_1_fu_2338_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_2_fu_2347_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_3_fu_2356_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_4_fu_2365_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_5_fu_2374_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_6_fu_2383_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_7_fu_2392_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_8_fu_2401_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_9_fu_2410_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_10_fu_2419_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_11_fu_2428_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_12_fu_2437_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_13_fu_2446_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_14_fu_2455_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_15_fu_2464_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln100_16_fu_2473_p2;
wire   [10:0] add_ln117_fu_2490_p2;
wire   [8:0] lshr_ln3_fu_2496_p4;
wire   [10:0] add_ln117_1_fu_2514_p2;
wire   [8:0] lshr_ln116_1_fu_2520_p4;
wire   [10:0] add_ln117_2_fu_2538_p2;
wire   [10:0] add_ln117_3_fu_2554_p2;
wire   [10:0] add_ln117_4_fu_2570_p2;
wire   [10:0] add_ln117_5_fu_2586_p2;
wire   [10:0] add_ln117_6_fu_2602_p2;
wire   [10:0] add_ln117_7_fu_2618_p2;
wire   [10:0] add_ln117_8_fu_2634_p2;
wire   [10:0] add_ln117_9_fu_2650_p2;
wire   [10:0] add_ln117_10_fu_2666_p2;
wire   [10:0] add_ln117_11_fu_2682_p2;
wire   [10:0] add_ln117_12_fu_2698_p2;
wire   [10:0] add_ln117_13_fu_2714_p2;
wire   [10:0] add_ln117_14_fu_2730_p2;
wire   [10:0] add_ln117_15_fu_2746_p2;
wire   [1:0] add_ln116_fu_2767_p2;
wire   [63:0] tmp_3_fu_2775_p5;
wire   [1:0] add_ln116_1_fu_2789_p2;
wire   [63:0] tmp_4_fu_2797_p5;
wire   [1:0] add_ln116_2_fu_2825_p2;
wire   [63:0] tmp_5_fu_2833_p5;
wire   [1:0] add_ln116_3_fu_2847_p2;
wire   [63:0] tmp_6_fu_2855_p5;
wire   [1:0] add_ln116_4_fu_2883_p2;
wire   [63:0] tmp_7_fu_2891_p5;
wire   [1:0] add_ln116_5_fu_2905_p2;
wire   [63:0] tmp_8_fu_2913_p5;
wire   [1:0] add_ln116_6_fu_2941_p2;
wire   [63:0] tmp_9_fu_2949_p5;
wire   [1:0] add_ln116_7_fu_2963_p2;
wire   [63:0] tmp_s_fu_2971_p5;
wire   [1:0] add_ln116_8_fu_2999_p2;
wire   [63:0] tmp_10_fu_3007_p5;
wire   [1:0] add_ln116_9_fu_3021_p2;
wire   [63:0] tmp_11_fu_3029_p5;
wire   [1:0] add_ln116_10_fu_3057_p2;
wire   [63:0] tmp_12_fu_3065_p5;
wire   [1:0] add_ln116_11_fu_3079_p2;
wire   [63:0] tmp_13_fu_3087_p5;
wire   [1:0] add_ln116_12_fu_3115_p2;
wire   [63:0] tmp_14_fu_3123_p5;
wire   [1:0] add_ln116_13_fu_3137_p2;
wire   [63:0] tmp_15_fu_3145_p5;
wire   [1:0] add_ln116_14_fu_3176_p2;
wire   [63:0] tmp_16_fu_3184_p5;
wire   [1:0] add_ln116_15_fu_3198_p2;
wire   [63:0] tmp_17_fu_3206_p5;
wire   [7:0] p_mid131_fu_3220_p0;
wire   [7:0] p_mid131_fu_3220_p1;
wire   [1:0] empty_48_fu_3224_p1;
wire   [7:0] tmp_18_fu_3228_p3;
wire   [2:0] add_ln121_1_fu_3255_p2;
wire   [1:0] empty_52_fu_3261_p1;
wire   [7:0] tmp_19_mid1_fu_3273_p3;
wire   [0:0] icmp_ln124_fu_3284_p2;
wire   [0:0] or_ln123_fu_3304_p2;
wire   [15:0] add_ln123_3_fu_3328_p2;
wire   [7:0] mul_ln127_fu_3346_p0;
wire   [7:0] mul_ln127_fu_3346_p1;
wire   [8:0] zext_ln123_fu_3342_p1;
wire   [8:0] mul_ln127_fu_3346_p2;
wire   [7:0] select_ln121_fu_3351_p3;
wire   [7:0] add_ln123_fu_3365_p2;
wire   [7:0] mul_ln127_1_fu_3375_p0;
wire   [7:0] mul_ln127_1_fu_3375_p1;
wire   [8:0] zext_ln123_1_fu_3371_p1;
wire   [8:0] mul_ln127_1_fu_3375_p2;
wire   [8:0] select_ln121_3_fu_3358_p3;
wire   [8:0] select_ln123_1_fu_3380_p3;
wire   [8:0] wi_4_cast56_fu_3394_p1;
wire  signed [10:0] grp_fu_4486_p2;
wire  signed [10:0] grp_fu_4493_p4;
wire   [10:0] grp_fu_4502_p4;
wire   [10:0] select_ln121_4_fu_3412_p3;
wire   [10:0] select_ln123_2_fu_3417_p3;
wire   [1:0] trunc_ln123_fu_3428_p1;
wire   [10:0] wi_4_cast_fu_3437_p1;
wire   [10:0] add_ln123_1_fu_3423_p2;
wire   [1:0] add_ln123_2_fu_3432_p2;
wire   [10:0] add_ln130_fu_3440_p2;
wire   [8:0] lshr_ln4_fu_3451_p4;
wire   [63:0] tmp_19_fu_3472_p5;
wire  signed [16:0] add_ln143_1_fu_3554_p2;
wire  signed [31:0] grp_fu_3564_p0;
wire   [7:0] grp_fu_3564_p1;
wire  signed [16:0] add_ln143_2_fu_3577_p2;
wire  signed [31:0] grp_fu_3587_p0;
wire   [7:0] grp_fu_3587_p1;
wire   [16:0] add_ln178_fu_3612_p2;
wire   [0:0] tmp_23_fu_3618_p3;
wire   [0:0] icmp_ln180_fu_3632_p2;
wire   [0:0] xor_ln178_fu_3626_p2;
wire   [16:0] add_ln178_1_fu_3643_p2;
wire   [0:0] tmp_24_fu_3649_p3;
wire   [0:0] icmp_ln180_1_fu_3663_p2;
wire   [0:0] xor_ln178_1_fu_3657_p2;
wire   [16:0] sub250_fu_3606_p2;
wire   [0:0] tmp_25_fu_3674_p3;
wire   [0:0] icmp_ln180_2_fu_3688_p2;
wire   [0:0] xor_ln178_2_fu_3682_p2;
wire   [0:0] icmp_ln180_3_fu_3699_p2;
wire   [0:0] xor_ln145_fu_3600_p2;
wire   [16:0] add_ln143_fu_3710_p2;
wire  signed [31:0] grp_fu_3719_p0;
wire   [7:0] grp_fu_3719_p1;
wire   [7:0] grp_fu_3724_p1;
wire   [7:0] grp_fu_3728_p1;
wire   [7:0] grp_fu_3732_p1;
wire   [8:0] grp_fu_3564_p2;
wire   [8:0] grp_fu_3587_p2;
wire   [8:0] grp_fu_1630_p2;
wire   [8:0] grp_fu_3719_p2;
wire   [8:0] grp_fu_1634_p2;
wire   [7:0] grp_fu_3732_p2;
wire   [7:0] trunc_ln144_1_fu_3880_p1;
wire   [7:0] trunc_ln144_2_fu_3888_p1;
wire   [7:0] trunc_ln144_fu_3931_p1;
wire  signed [8:0] grp_fu_4542_p3;
wire  signed [8:0] grp_fu_4550_p3;
wire  signed [8:0] grp_fu_4566_p4;
wire  signed [8:0] grp_fu_4583_p3;
wire   [8:0] grp_fu_1638_p2;
wire   [8:0] grp_fu_1642_p2;
wire   [5:0] add_ln201_1_fu_4240_p2;
wire   [18:0] add_ln202_1_fu_4258_p2;
wire   [1:0] trunc_ln204_fu_4279_p1;
wire   [0:0] icmp_ln203_1_fu_4290_p2;
wire   [2:0] select_ln201_fu_4272_p3;
wire   [0:0] select_ln201_3_fu_4295_p3;
wire   [0:0] or_ln202_fu_4307_p2;
wire   [2:0] add_ln202_fu_4301_p2;
wire   [1:0] trunc_ln204_1_fu_4320_p1;
wire   [1:0] select_ln201_2_fu_4283_p3;
wire   [15:0] select_ln202_fu_4312_p3;
wire  signed [8:0] grp_fu_4687_p3;
wire   [31:0] p_Repl2_s_fu_4357_p6;
wire   [15:0] grp_fu_4375_p0;
wire   [15:0] grp_fu_4375_p1;
wire   [15:0] grp_fu_4381_p0;
wire   [7:0] grp_fu_4381_p1;
wire   [5:0] grp_fu_4386_p0;
wire   [17:0] grp_fu_4386_p1;
wire  signed [10:0] grp_fu_4392_p0;
wire  signed [10:0] grp_fu_4397_p0;
wire  signed [10:0] grp_fu_4402_p0;
wire  signed [10:0] grp_fu_4407_p0;
wire  signed [10:0] grp_fu_4412_p0;
wire  signed [10:0] grp_fu_4417_p0;
wire  signed [10:0] grp_fu_4422_p0;
wire  signed [10:0] grp_fu_4427_p0;
wire  signed [10:0] grp_fu_4432_p0;
wire  signed [10:0] grp_fu_4437_p0;
wire  signed [10:0] grp_fu_4442_p0;
wire  signed [10:0] grp_fu_4447_p0;
wire  signed [10:0] grp_fu_4452_p0;
wire  signed [10:0] grp_fu_4457_p0;
wire  signed [10:0] grp_fu_4462_p0;
wire  signed [10:0] grp_fu_4467_p0;
wire   [7:0] grp_fu_4472_p0;
wire   [7:0] grp_fu_4472_p1;
wire   [8:0] grp_fu_4472_p2;
wire   [7:0] grp_fu_4480_p1;
wire   [7:0] grp_fu_4486_p1;
wire   [7:0] grp_fu_4493_p0;
wire   [7:0] grp_fu_4493_p1;
wire   [7:0] grp_fu_4493_p2;
wire   [7:0] grp_fu_4502_p0;
wire   [7:0] grp_fu_4502_p1;
wire   [7:0] grp_fu_4502_p2;
wire   [10:0] grp_fu_4502_p3;
wire  signed [7:0] grp_fu_4511_p0;
wire  signed [7:0] grp_fu_4518_p0;
wire  signed [7:0] grp_fu_4526_p1;
wire  signed [7:0] grp_fu_4534_p1;
wire   [7:0] grp_fu_4542_p0;
wire   [7:0] grp_fu_4542_p2;
wire   [7:0] grp_fu_4550_p0;
wire   [7:0] grp_fu_4550_p2;
wire  signed [7:0] grp_fu_4558_p1;
wire   [7:0] grp_fu_4566_p2;
wire   [7:0] grp_fu_4566_p3;
wire   [7:0] grp_fu_4575_p2;
wire   [7:0] grp_fu_4575_p3;
wire   [7:0] grp_fu_4583_p0;
wire   [7:0] grp_fu_4583_p2;
wire  signed [7:0] grp_fu_4591_p1;
wire  signed [7:0] grp_fu_4599_p1;
wire   [7:0] grp_fu_4607_p2;
wire   [7:0] grp_fu_4607_p3;
wire  signed [7:0] grp_fu_4615_p1;
wire  signed [7:0] grp_fu_4623_p1;
wire   [31:0] grp_fu_4623_p2;
wire  signed [7:0] grp_fu_4631_p1;
wire   [31:0] grp_fu_4631_p2;
wire  signed [7:0] grp_fu_4639_p1;
wire  signed [7:0] grp_fu_4647_p1;
wire  signed [7:0] grp_fu_4655_p1;
wire  signed [7:0] grp_fu_4663_p1;
wire   [31:0] grp_fu_4663_p2;
wire  signed [7:0] grp_fu_4671_p1;
wire  signed [7:0] grp_fu_4679_p1;
wire   [5:0] grp_fu_4687_p0;
wire   [8:0] grp_fu_4687_p2;
reg    grp_fu_4687_ce;
wire    ap_CS_fsm_state105;
reg   [45:0] ap_NS_fsm;
wire    ap_block_pp5_stage0_subdone;
wire    ap_block_pp5_stage1_subdone;
wire    ap_block_pp5_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire   [11:0] bound110_fu_1921_p00;
wire   [11:0] bound110_fu_1921_p10;
wire   [31:0] grp_fu_4375_p00;
wire   [31:0] grp_fu_4375_p10;
wire   [23:0] grp_fu_4381_p00;
wire   [23:0] grp_fu_4386_p00;
wire   [23:0] grp_fu_4386_p10;
wire   [8:0] grp_fu_4472_p00;
wire   [10:0] grp_fu_4480_p10;
wire   [10:0] grp_fu_4486_p10;
wire   [8:0] grp_fu_4687_p00;
wire   [10:0] mul_ln100_fu_2333_p00;
wire   [10:0] mul_ln81_2_fu_1996_p10;
wire   [10:0] mul_ln81_3_fu_2011_p10;
wire   [10:0] mul_ln81_4_fu_2026_p10;
wire   [10:0] mul_ln81_5_fu_2041_p10;
wire   [8:0] mul_ln81_fu_1982_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 46'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter8 = 1'b0;
#0 ap_enable_reg_pp5_iter9 = 1'b0;
#0 ap_enable_reg_pp5_iter10 = 1'b0;
#0 ap_enable_reg_pp5_iter11 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
end

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(trunc_ln708_fu_1716_p1),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(trunc_ln708_fu_1716_p1),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(trunc_ln708_fu_1716_p1),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(trunc_ln708_fu_1716_p1),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(trunc_ln708_1_fu_1772_p1),
    .q0(weight_l2_0_q0),
    .address1(weight_l2_0_address1),
    .ce1(weight_l2_0_ce1),
    .q1(weight_l2_0_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(trunc_ln708_1_fu_1772_p1),
    .q0(weight_l2_1_q0),
    .address1(weight_l2_1_address1),
    .ce1(weight_l2_1_ce1),
    .q1(weight_l2_1_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(trunc_ln708_1_fu_1772_p1),
    .q0(weight_l2_2_q0),
    .address1(weight_l2_2_address1),
    .ce1(weight_l2_2_ce1),
    .q1(weight_l2_2_q1)
);

Conv_sysarr_dbbuf_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(trunc_ln708_1_fu_1772_p1),
    .q0(weight_l2_3_q0),
    .address1(weight_l2_3_address1),
    .ce1(weight_l2_3_ce1),
    .q1(weight_l2_3_q1)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(trunc_ln708_2_fu_1820_p1),
    .q0(data_l2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(trunc_ln708_2_fu_1820_p1),
    .q0(data_l2_1_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(trunc_ln708_2_fu_1820_p1),
    .q0(data_l2_2_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(trunc_ln708_2_fu_1820_p1),
    .q0(data_l2_3_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_0_0_address0),
    .ce0(data_l1_0_0_ce0),
    .we0(data_l1_0_0_we0),
    .d0(tmp_19_fu_3472_p6),
    .q0(data_l1_0_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_1_0_address0),
    .ce0(data_l1_1_0_ce0),
    .we0(data_l1_1_0_we0),
    .d0(tmp_19_fu_3472_p6),
    .q0(data_l1_1_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_2_0_address0),
    .ce0(data_l1_2_0_ce0),
    .we0(data_l1_2_0_we0),
    .d0(tmp_19_fu_3472_p6),
    .q0(data_l1_2_0_q0)
);

Conv_sysarr_dbbuf_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
data_l1_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_l1_3_0_address0),
    .ce0(data_l1_3_0_ce0),
    .we0(data_l1_3_0_we0),
    .d0(tmp_19_fu_3472_p6),
    .q0(data_l1_3_0_q0)
);

Conv_sysarr_dbbuf_output_l1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(output_l1_0_d0),
    .q0(output_l1_0_q0),
    .address1(output_l1_0_address1),
    .ce1(output_l1_0_ce1),
    .we1(output_l1_0_we1),
    .d1(output_l1_0_d1),
    .q1(output_l1_0_q1)
);

Conv_sysarr_dbbuf_output_l1_1 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(output_l1_1_d0),
    .address1(output_l1_1_address1),
    .ce1(output_l1_1_ce1),
    .we1(output_l1_1_we1),
    .d1(grp_fu_4591_p3),
    .q1(output_l1_1_q1)
);

Conv_sysarr_dbbuf_output_l1_2 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(output_l1_2_d0),
    .address1(output_l1_2_address1),
    .ce1(output_l1_2_ce1),
    .q1(output_l1_2_q1)
);

Conv_sysarr_dbbuf_output_l1_1 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(output_l1_3_d0),
    .address1(output_l1_3_address1),
    .ce1(output_l1_3_ce1),
    .we1(output_l1_3_we1),
    .d1(add_ln175_reg_6368),
    .q1(output_l1_3_q1)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(tmp_fu_1731_p0),
    .din1(tmp_fu_1731_p1),
    .dout(tmp_fu_1731_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U2(
    .din0(tmp1_fu_1739_p0),
    .din1(tmp1_fu_1739_p1),
    .dout(tmp1_fu_1739_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U3(
    .din0(tmp2_fu_1787_p0),
    .din1(tmp2_fu_1787_p1),
    .dout(tmp2_fu_1787_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U4(
    .din0(mul152_fu_1835_p0),
    .din1(mul152_fu_1835_p1),
    .dout(mul152_fu_1835_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U5(
    .din0(tmp5_cast_fu_1895_p0),
    .din1(tmp5_cast_fu_1895_p1),
    .dout(tmp5_cast_fu_1895_p2)
);

Conv_sysarr_dbbuf_mul_6ns_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6ns_6ns_12_1_1_U6(
    .din0(bound110_fu_1921_p0),
    .din1(bound110_fu_1921_p1),
    .dout(bound110_fu_1921_p2)
);

Conv_sysarr_dbbuf_mul_8ns_6ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_8ns_6ns_9_1_1_U7(
    .din0(mul_ln81_fu_1982_p0),
    .din1(mul_ln81_fu_1982_p1),
    .dout(mul_ln81_fu_1982_p2)
);

Conv_sysarr_dbbuf_mul_8ns_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_8ns_9s_9_1_1_U8(
    .din0(mul_ln81_1_fu_1987_p0),
    .din1(mul_ln81_fu_1982_p2),
    .dout(mul_ln81_1_fu_1987_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U9(
    .din0(mul_ln81_2_fu_1996_p0),
    .din1(mul_ln81_2_fu_1996_p1),
    .dout(mul_ln81_2_fu_1996_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U10(
    .din0(mul_ln81_3_fu_2011_p0),
    .din1(mul_ln81_3_fu_2011_p1),
    .dout(mul_ln81_3_fu_2011_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U11(
    .din0(mul_ln81_4_fu_2026_p0),
    .din1(mul_ln81_4_fu_2026_p1),
    .dout(mul_ln81_4_fu_2026_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U12(
    .din0(mul_ln81_5_fu_2041_p0),
    .din1(mul_ln81_5_fu_2041_p1),
    .dout(mul_ln81_5_fu_2041_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U13(
    .din0(bias_l2_0_q0),
    .din1(bias_l2_1_q0),
    .din2(bias_l2_2_q0),
    .din3(bias_l2_3_q0),
    .din4(tmp_1_fu_2210_p5),
    .dout(tmp_1_fu_2210_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U14(
    .din0(mul_ln100_fu_2333_p0),
    .din1(mul_ln100_fu_2333_p1),
    .dout(mul_ln100_fu_2333_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U15(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_3_fu_2775_p5),
    .dout(tmp_3_fu_2775_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U16(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_4_fu_2797_p5),
    .dout(tmp_4_fu_2797_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U17(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_5_fu_2833_p5),
    .dout(tmp_5_fu_2833_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U18(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_6_fu_2855_p5),
    .dout(tmp_6_fu_2855_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U19(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_7_fu_2891_p5),
    .dout(tmp_7_fu_2891_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U20(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_8_fu_2913_p5),
    .dout(tmp_8_fu_2913_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U21(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_9_fu_2949_p5),
    .dout(tmp_9_fu_2949_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U22(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_s_fu_2971_p5),
    .dout(tmp_s_fu_2971_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U23(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_10_fu_3007_p5),
    .dout(tmp_10_fu_3007_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U24(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_11_fu_3029_p5),
    .dout(tmp_11_fu_3029_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U25(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_12_fu_3065_p5),
    .dout(tmp_12_fu_3065_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U26(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_13_fu_3087_p5),
    .dout(tmp_13_fu_3087_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U27(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_14_fu_3123_p5),
    .dout(tmp_14_fu_3123_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U28(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_15_fu_3145_p5),
    .dout(tmp_15_fu_3145_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U29(
    .din0(weight_l2_0_q0),
    .din1(weight_l2_1_q0),
    .din2(weight_l2_2_q0),
    .din3(weight_l2_3_q0),
    .din4(tmp_16_fu_3184_p5),
    .dout(tmp_16_fu_3184_p6)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U30(
    .din0(weight_l2_0_q1),
    .din1(weight_l2_1_q1),
    .din2(weight_l2_2_q1),
    .din3(weight_l2_3_q1),
    .din4(tmp_17_fu_3206_p5),
    .dout(tmp_17_fu_3206_p6)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_8ns_8ns_11_1_1_U31(
    .din0(p_mid131_fu_3220_p0),
    .din1(p_mid131_fu_3220_p1),
    .dout(p_mid131_fu_3220_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U32(
    .din0(mul_ln127_fu_3346_p0),
    .din1(mul_ln127_fu_3346_p1),
    .dout(mul_ln127_fu_3346_p2)
);

Conv_sysarr_dbbuf_mul_8ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_8ns_8ns_9_1_1_U33(
    .din0(mul_ln127_1_fu_3375_p0),
    .din1(mul_ln127_1_fu_3375_p1),
    .dout(mul_ln127_1_fu_3375_p2)
);

Conv_sysarr_dbbuf_mux_464_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
mux_464_8_1_1_U34(
    .din0(data_l2_0_q0),
    .din1(data_l2_1_q0),
    .din2(data_l2_2_q0),
    .din3(data_l2_3_q0),
    .din4(tmp_19_fu_3472_p5),
    .dout(tmp_19_fu_3472_p6)
);

Conv_sysarr_dbbuf_udiv_32s_8ns_9_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
udiv_32s_8ns_9_36_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3564_p0),
    .din1(grp_fu_3564_p1),
    .ce(1'b1),
    .dout(grp_fu_3564_p2)
);

Conv_sysarr_dbbuf_udiv_32s_8ns_9_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
udiv_32s_8ns_9_36_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3587_p0),
    .din1(grp_fu_3587_p1),
    .ce(1'b1),
    .dout(grp_fu_3587_p2)
);

Conv_sysarr_dbbuf_udiv_32s_8ns_9_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
udiv_32s_8ns_9_36_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3719_p0),
    .din1(grp_fu_3719_p1),
    .ce(1'b1),
    .dout(grp_fu_3719_p2)
);

Conv_sysarr_dbbuf_urem_32s_8ns_8_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_32s_8ns_8_36_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln143_2_reg_6309),
    .din1(grp_fu_3724_p1),
    .ce(1'b1),
    .dout(grp_fu_3724_p2)
);

Conv_sysarr_dbbuf_urem_32s_8ns_8_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_32s_8ns_8_36_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln143_reg_6337),
    .din1(grp_fu_3728_p1),
    .ce(1'b1),
    .dout(grp_fu_3728_p2)
);

Conv_sysarr_dbbuf_urem_32s_8ns_8_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_32s_8ns_8_36_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln143_1_reg_6297),
    .din1(grp_fu_3732_p1),
    .ce(1'b1),
    .dout(grp_fu_3732_p2)
);

Conv_sysarr_dbbuf_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U41(
    .din0(output_l1_0_q0),
    .din1(output_l1_1_q1),
    .din2(output_l1_2_q1),
    .din3(output_l1_3_q1),
    .din4(select_ln202_1_reg_6730_pp6_iter3_reg),
    .dout(p_Repl2_s_fu_4357_p6)
);

Conv_sysarr_dbbuf_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4375_p0),
    .din1(grp_fu_4375_p1),
    .ce(1'b1),
    .dout(grp_fu_4375_p2)
);

Conv_sysarr_dbbuf_mul_mul_16ns_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16ns_8ns_24_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4381_p0),
    .din1(grp_fu_4381_p1),
    .ce(1'b1),
    .dout(grp_fu_4381_p2)
);

Conv_sysarr_dbbuf_mul_mul_6ns_18ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 24 ))
mul_mul_6ns_18ns_24_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4386_p0),
    .din1(grp_fu_4386_p1),
    .ce(1'b1),
    .dout(grp_fu_4386_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4392_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4392_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4397_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4397_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4402_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4402_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4407_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4407_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4412_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4412_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4417_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4417_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4422_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4422_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4427_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4427_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4432_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4432_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4437_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4437_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4442_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4442_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4447_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4447_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4452_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4452_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4457_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4457_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4462_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4462_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_11s_11_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4467_p0),
    .din1(empty_41_reg_5089),
    .ce(1'b1),
    .dout(grp_fu_4467_p2)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_8ns_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_8ns_9ns_9_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4472_p0),
    .din1(grp_fu_4472_p1),
    .din2(grp_fu_4472_p2),
    .ce(1'b1),
    .dout(grp_fu_4472_p3)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp5_cast_reg_5109),
    .din1(grp_fu_4480_p1),
    .ce(1'b1),
    .dout(grp_fu_4480_p2)
);

Conv_sysarr_dbbuf_mul_mul_11s_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_mul_11s_8ns_11_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp5_cast_reg_5109),
    .din1(grp_fu_4486_p1),
    .ce(1'b1),
    .dout(grp_fu_4486_p2)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11s_11_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4493_p0),
    .din1(grp_fu_4493_p1),
    .din2(grp_fu_4493_p2),
    .din3(grp_fu_4480_p2),
    .ce(1'b1),
    .dout(grp_fu_4493_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
ama_addmuladd_8ns_8ns_8ns_11ns_11_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4502_p0),
    .din1(grp_fu_4502_p1),
    .din2(grp_fu_4502_p2),
    .din3(grp_fu_4502_p3),
    .ce(1'b1),
    .dout(grp_fu_4502_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4511_p0),
    .din1(arrayidx1922_promoted615_fu_272),
    .din2(arrayidx2284_promoted622_fu_276),
    .ce(1'b1),
    .dout(grp_fu_4511_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4518_p0),
    .din1(arrayidx1922_1347_promoted629_fu_280),
    .din2(arrayidx2284_1349_promoted636_fu_284),
    .ce(1'b1),
    .dout(grp_fu_4518_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_1_promoted664_fu_300),
    .din1(grp_fu_4526_p1),
    .din2(arrayidx2284_1_promoted671_fu_304),
    .ce(1'b1),
    .dout(grp_fu_4526_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_1_1_promoted678_fu_308),
    .din1(grp_fu_4534_p1),
    .din2(arrayidx2284_1_1_promoted685_fu_312),
    .ce(1'b1),
    .dout(grp_fu_4534_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_9s_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_9s_8ns_9_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4542_p0),
    .din1(trunc_ln143_1_fu_3793_p1),
    .din2(grp_fu_4542_p2),
    .ce(1'b1),
    .dout(grp_fu_4542_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_9s_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_9s_8ns_9_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4550_p0),
    .din1(trunc_ln143_2_fu_3797_p1),
    .din2(grp_fu_4550_p2),
    .ce(1'b1),
    .dout(grp_fu_4550_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_2_promoted713_fu_328),
    .din1(grp_fu_4558_p1),
    .din2(arrayidx2284_2_promoted720_fu_332),
    .ce(1'b1),
    .dout(grp_fu_4558_p3)
);

Conv_sysarr_dbbuf_ama_addmuladd_9s_9s_8ns_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
ama_addmuladd_9s_9s_8ns_8ns_9_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln143_2_fu_3797_p1),
    .din1(mul_ln81_reg_5161),
    .din2(grp_fu_4566_p2),
    .din3(grp_fu_4566_p3),
    .ce(1'b1),
    .dout(grp_fu_4566_p4)
);

Conv_sysarr_dbbuf_ama_addmuladd_9s_9s_8ns_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
ama_addmuladd_9s_9s_8ns_8ns_9_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln143_1_fu_3793_p1),
    .din1(mul_ln81_reg_5161),
    .din2(grp_fu_4575_p2),
    .din3(grp_fu_4575_p3),
    .ce(1'b1),
    .dout(grp_fu_4575_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8ns_9s_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mac_muladd_8ns_9s_8ns_9_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4583_p0),
    .din1(trunc_ln143_fu_3832_p1),
    .din2(grp_fu_4583_p2),
    .ce(1'b1),
    .dout(grp_fu_4583_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_2385_promoted643_fu_288),
    .din1(grp_fu_4591_p1),
    .din2(arrayidx2284_2387_promoted650_fu_292),
    .ce(1'b1),
    .dout(grp_fu_4591_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_2_1_promoted727_fu_336),
    .din1(grp_fu_4599_p1),
    .din2(arrayidx2284_2_1_promoted734_fu_340),
    .ce(1'b1),
    .dout(grp_fu_4599_p3)
);

Conv_sysarr_dbbuf_ama_addmuladd_9s_9s_8ns_8ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
ama_addmuladd_9s_9s_8ns_8ns_9_4_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln143_fu_3832_p1),
    .din1(mul_ln81_reg_5161),
    .din2(grp_fu_4607_p2),
    .din3(grp_fu_4607_p3),
    .ce(1'b1),
    .dout(grp_fu_4607_p4)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_1_2_promoted692_fu_316),
    .din1(grp_fu_4615_p1),
    .din2(arrayidx2284_1_2_promoted699_fu_320),
    .ce(1'b1),
    .dout(grp_fu_4615_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_3_promoted762_fu_356),
    .din1(grp_fu_4623_p1),
    .din2(grp_fu_4623_p2),
    .ce(1'b1),
    .dout(grp_fu_4623_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_3_1_promoted769_fu_360),
    .din1(grp_fu_4631_p1),
    .din2(grp_fu_4631_p2),
    .ce(1'b1),
    .dout(grp_fu_4631_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln145_2_fu_3986_p3),
    .din1(grp_fu_4639_p1),
    .din2(arrayidx2284_3425_promoted657_fu_296),
    .ce(1'b1),
    .dout(grp_fu_4639_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_2_2_promoted741_fu_344),
    .din1(grp_fu_4647_p1),
    .din2(arrayidx2284_2_2_promoted748_fu_348),
    .ce(1'b1),
    .dout(grp_fu_4647_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln145_1_fu_4050_p3),
    .din1(grp_fu_4655_p1),
    .din2(arrayidx2284_1_3_promoted706_fu_324),
    .ce(1'b1),
    .dout(grp_fu_4655_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayidx1922_3_2_promoted776_fu_364),
    .din1(grp_fu_4663_p1),
    .din2(grp_fu_4663_p2),
    .ce(1'b1),
    .dout(grp_fu_4663_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln145_fu_4117_p3),
    .din1(grp_fu_4671_p1),
    .din2(arrayidx2284_2_3_promoted755_fu_352),
    .ce(1'b1),
    .dout(grp_fu_4671_p3)
);

Conv_sysarr_dbbuf_mac_muladd_8s_8s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_8s_32ns_32_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_l1_0_0_load_reg_6601),
    .din1(grp_fu_4679_p1),
    .din2(output_l1_0_q1),
    .ce(1'b1),
    .dout(grp_fu_4679_p3)
);

Conv_sysarr_dbbuf_mac_muladd_6ns_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_6ns_9s_9ns_9_4_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4687_p0),
    .din1(trunc_ln202_reg_5034),
    .din2(grp_fu_4687_p2),
    .ce(grp_fu_4687_ce),
    .dout(grp_fu_4687_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state18);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state24) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state24)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state24);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end else if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_condition_pp4_exit_iter4_state45) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
            ap_enable_reg_pp4_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter4_state45) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter3;
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp5_flush_enable)) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            if (((1'b1 == ap_condition_pp5_exit_iter10_state89) & (ap_enable_reg_pp5_iter9 == 1'b0))) begin
                ap_enable_reg_pp5_iter10 <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter10 <= ap_enable_reg_pp5_iter9;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter10_state89) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter11 <= ap_enable_reg_pp5_iter9;
        end else if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter11 <= ap_enable_reg_pp5_iter10;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp5_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter8 <= ap_enable_reg_pp5_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter9 <= ap_enable_reg_pp5_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp6_flush_enable)) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state99)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter2_state102)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end else if ((1'b1 == ap_CS_fsm_state99)) begin
            ap_enable_reg_pp6_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln121_fu_3239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        ci_reg_1519 <= select_ln121_6_fu_3296_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        ci_reg_1519 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_2291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        co_reg_1420 <= add_ln82_fu_2762_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        co_reg_1420 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln121_reg_6099 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        hi_1_reg_1552 <= select_ln123_3_fu_3387_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        hi_1_reg_1552 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_reg_5364 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        hi_reg_1453 <= select_ln89_1_reg_5378;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        hi_reg_1453 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_reg_6288 == 1'd0))) begin
        i_reg_1563 <= i_1_reg_6343;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        i_reg_1563 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        indvar_flatten105_reg_1475 <= add_ln100_reg_5481;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten105_reg_1475 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_2291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        indvar_flatten142_reg_1398 <= add_ln81_2_reg_5139;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        indvar_flatten142_reg_1398 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln201_fu_4224_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten149_reg_1597 <= select_ln202_3_fu_4264_p3;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        indvar_flatten149_reg_1597 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln121_fu_3239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten15_reg_1530 <= select_ln123_4_fu_3334_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten15_reg_1530 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln201_fu_4224_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten163_reg_1575 <= add_ln201_fu_4229_p2;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        indvar_flatten163_reg_1575 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln121_fu_3239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten47_reg_1508 <= add_ln121_fu_3244_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        indvar_flatten47_reg_1508 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2228_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten_reg_1442 <= add_ln89_fu_2233_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten_reg_1442 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_1_reg_1376 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln72_fu_1747_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_1_reg_1376 <= add_ln72_fu_1752_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_2_reg_1387 <= 24'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln76_fu_1795_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        k_2_reg_1387 <= add_ln76_fu_1800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln201_reg_6698 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        k_3_reg_1586 <= select_ln201_1_reg_6715;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        k_3_reg_1586 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        k_reg_1365 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln68_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_1365 <= add_ln68_fu_1696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_fu_1932_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ki_1_reg_1431 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        ki_1_reg_1431 <= add_ln88_reg_5246;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln201_reg_6698_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        ki_reg_1608 <= select_ln202_2_fu_4332_p3;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ki_reg_1608 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_2291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ko_reg_1409 <= select_ln81_1_reg_5151;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ko_reg_1409 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        r_reg_1486 <= select_ln100_1_reg_5491;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_reg_1486 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        s_reg_1497 <= add_ln102_fu_4214_p2;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        s_reg_1497 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln201_reg_6698_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        wh_reg_1619 <= add_ln203_fu_4344_p2;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        wh_reg_1619 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln121_fu_3239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        wi_1_reg_1541 <= add_ln124_fu_3322_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        wi_1_reg_1541 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2228_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        wi_reg_1464 <= add_ln90_fu_2270_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        wi_reg_1464 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        C_cast_reg_5081[7 : 0] <= C_cast_fu_1889_p1[7 : 0];
        WH_cast_reg_5066[7 : 0] <= WH_cast_fu_1886_p1[7 : 0];
        add_ln81_1_reg_5046 <= add_ln81_1_fu_1859_p2;
        bound110_reg_5126 <= bound110_fu_1921_p2;
        bound20_reg_5121[17 : 2] <= bound20_fu_1909_p1[17 : 2];
        div66_cast_reg_5061 <= {{bias_in_V_read_reg_4695[7:2]}};
        div68_cast_reg_5056 <= {{bias_in_V_read_1_reg_4706[7:2]}};
        empty_41_reg_5089 <= empty_41_fu_1892_p1;
        icmp_ln123_reg_5131 <= icmp_ln123_fu_1927_p2;
        mul152_reg_5018 <= mul152_fu_1835_p2;
        tmp5_cast_reg_5109 <= tmp5_cast_fu_1895_p2;
        tmp_2_reg_5115[17 : 2] <= tmp_2_fu_1901_p3[17 : 2];
        trunc_ln202_reg_5034 <= trunc_ln202_fu_1843_p1;
        trunc_ln3_cast48_reg_5039[7 : 0] <= trunc_ln3_cast48_fu_1847_p1[7 : 0];
        trunc_ln4_cast21_reg_5051[7 : 0] <= trunc_ln4_cast21_fu_1865_p1[7 : 0];
        zext_ln81_reg_5026[15 : 0] <= zext_ln81_fu_1839_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        C_reg_4711 <= C_fu_1650_p1;
        bias_in_V_read_1_reg_4706 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        K_reg_4700 <= K_fu_1646_p1;
        bias_in_V_read_reg_4695 <= bias_in_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        RS_reg_4777 <= RS_fu_1683_p1;
        zext_ln53_reg_4735[7 : 0] <= zext_ln53_fu_1662_p1[7 : 0];
        zext_ln55_1_reg_4745[7 : 0] <= zext_ln55_1_fu_1668_p1[7 : 0];
        zext_ln55_reg_4740[7 : 0] <= zext_ln55_fu_1665_p1[7 : 0];
        zext_ln57_1_reg_4761[7 : 0] <= zext_ln57_1_fu_1674_p1[7 : 0];
        zext_ln57_reg_4751[7 : 0] <= zext_ln57_fu_1671_p1[7 : 0];
        zext_ln61_1_reg_4772[7 : 0] <= zext_ln61_1_fu_1680_p1[7 : 0];
        zext_ln61_reg_4767[7 : 0] <= zext_ln61_fu_1677_p1[7 : 0];
        zext_ln65_reg_4783[7 : 0] <= zext_ln65_fu_1687_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        WH_in_reg_4728 <= WH_in_fu_1658_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        WH_reg_4718 <= WH_fu_1654_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add107_1325_cast_reg_5433 <= grp_fu_4427_p2;
        add107_1_1_cast_reg_5448 <= grp_fu_4442_p2;
        add107_1_2_cast_reg_5413 <= grp_fu_4407_p2;
        add107_1_3_cast_reg_5453 <= grp_fu_4447_p2;
        add107_1_cast_reg_5403 <= grp_fu_4397_p2;
        add107_2333_cast_reg_5438 <= grp_fu_4432_p2;
        add107_2_1_cast_reg_5458 <= grp_fu_4452_p2;
        add107_2_2_cast_reg_5418 <= grp_fu_4412_p2;
        add107_2_3_cast_reg_5463 <= grp_fu_4457_p2;
        add107_2_cast_reg_5398 <= grp_fu_4392_p2;
        add107_3341_cast_reg_5443 <= grp_fu_4437_p2;
        add107_3_1_cast_reg_5468 <= grp_fu_4462_p2;
        add107_3_2_cast_reg_5423 <= grp_fu_4417_p2;
        add107_3_3_cast_reg_5473 <= grp_fu_4467_p2;
        add107_3_cast_reg_5408 <= grp_fu_4402_p2;
        add107_cast_reg_5428 <= grp_fu_4422_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln100_reg_5481 <= add_ln100_fu_2296_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln121_5_reg_6125_pp4_iter2_reg == 1'd0) & (icmp_ln123_1_reg_6108_pp4_iter2_reg == 1'd1) & (icmp_ln121_reg_6099_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln127_1_reg_6178 <= add_ln127_1_fu_3408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln121_reg_6099 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln128_reg_6163 <= add_ln128_fu_3397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        add_ln128_reg_6163_pp4_iter2_reg <= add_ln128_reg_6163;
        add_ln128_reg_6163_pp4_iter3_reg <= add_ln128_reg_6163_pp4_iter2_reg;
        add_ln128_reg_6163_pp4_iter4_reg <= add_ln128_reg_6163_pp4_iter3_reg;
        icmp_ln121_reg_6099_pp4_iter2_reg <= icmp_ln121_reg_6099_pp4_iter1_reg;
        icmp_ln121_reg_6099_pp4_iter3_reg <= icmp_ln121_reg_6099_pp4_iter2_reg;
        icmp_ln123_1_reg_6108_pp4_iter2_reg <= icmp_ln123_1_reg_6108_pp4_iter1_reg;
        icmp_ln123_1_reg_6108_pp4_iter3_reg <= icmp_ln123_1_reg_6108_pp4_iter2_reg;
        select_ln121_1_reg_6116_pp4_iter2_reg <= select_ln121_1_reg_6116_pp4_iter1_reg;
        select_ln121_1_reg_6116_pp4_iter3_reg <= select_ln121_1_reg_6116_pp4_iter2_reg;
        select_ln121_1_reg_6116_pp4_iter4_reg <= select_ln121_1_reg_6116_pp4_iter3_reg;
        select_ln121_5_reg_6125_pp4_iter2_reg <= select_ln121_5_reg_6125_pp4_iter1_reg;
        select_ln121_5_reg_6125_pp4_iter3_reg <= select_ln121_5_reg_6125_pp4_iter2_reg;
        select_ln123_reg_6137_pp4_iter2_reg <= select_ln123_reg_6137_pp4_iter1_reg;
        select_ln123_reg_6137_pp4_iter3_reg <= select_ln123_reg_6137_pp4_iter2_reg;
        trunc_ln130_reg_6143_pp4_iter2_reg <= trunc_ln130_reg_6143_pp4_iter1_reg;
        trunc_ln130_reg_6143_pp4_iter3_reg <= trunc_ln130_reg_6143_pp4_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln121_reg_6099_pp4_iter3_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln129_reg_6183 <= add_ln129_fu_3446_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2_11001) & (icmp_ln139_reg_6288_pp5_iter10_reg == 1'd0))) begin
        add_ln143_3_reg_6621 <= add_ln143_3_fu_4123_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (tmp_21_reg_6303_pp5_iter9_reg == 1'd0) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        add_ln169_3_reg_6521 <= grp_fu_4575_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (icmp_ln145_reg_6387 == 1'd1) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        add_ln169_5_reg_6576 <= grp_fu_4607_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln169_6_reg_6658 <= add_ln169_6_fu_4183_p2;
        and_ln179_1_reg_6325_pp5_iter1_reg <= and_ln179_1_reg_6325;
        and_ln179_1_reg_6325_pp5_iter2_reg <= and_ln179_1_reg_6325_pp5_iter1_reg;
        and_ln179_1_reg_6325_pp5_iter3_reg <= and_ln179_1_reg_6325_pp5_iter2_reg;
        and_ln179_1_reg_6325_pp5_iter4_reg <= and_ln179_1_reg_6325_pp5_iter3_reg;
        and_ln179_1_reg_6325_pp5_iter5_reg <= and_ln179_1_reg_6325_pp5_iter4_reg;
        and_ln179_1_reg_6325_pp5_iter6_reg <= and_ln179_1_reg_6325_pp5_iter5_reg;
        and_ln179_1_reg_6325_pp5_iter7_reg <= and_ln179_1_reg_6325_pp5_iter6_reg;
        and_ln179_1_reg_6325_pp5_iter8_reg <= and_ln179_1_reg_6325_pp5_iter7_reg;
        and_ln179_1_reg_6325_pp5_iter9_reg <= and_ln179_1_reg_6325_pp5_iter8_reg;
        and_ln179_2_reg_6329_pp5_iter10_reg <= and_ln179_2_reg_6329_pp5_iter9_reg;
        and_ln179_2_reg_6329_pp5_iter1_reg <= and_ln179_2_reg_6329;
        and_ln179_2_reg_6329_pp5_iter2_reg <= and_ln179_2_reg_6329_pp5_iter1_reg;
        and_ln179_2_reg_6329_pp5_iter3_reg <= and_ln179_2_reg_6329_pp5_iter2_reg;
        and_ln179_2_reg_6329_pp5_iter4_reg <= and_ln179_2_reg_6329_pp5_iter3_reg;
        and_ln179_2_reg_6329_pp5_iter5_reg <= and_ln179_2_reg_6329_pp5_iter4_reg;
        and_ln179_2_reg_6329_pp5_iter6_reg <= and_ln179_2_reg_6329_pp5_iter5_reg;
        and_ln179_2_reg_6329_pp5_iter7_reg <= and_ln179_2_reg_6329_pp5_iter6_reg;
        and_ln179_2_reg_6329_pp5_iter8_reg <= and_ln179_2_reg_6329_pp5_iter7_reg;
        and_ln179_2_reg_6329_pp5_iter9_reg <= and_ln179_2_reg_6329_pp5_iter8_reg;
        and_ln179_3_reg_6333_pp5_iter10_reg <= and_ln179_3_reg_6333_pp5_iter9_reg;
        and_ln179_3_reg_6333_pp5_iter11_reg <= and_ln179_3_reg_6333_pp5_iter10_reg;
        and_ln179_3_reg_6333_pp5_iter1_reg <= and_ln179_3_reg_6333;
        and_ln179_3_reg_6333_pp5_iter2_reg <= and_ln179_3_reg_6333_pp5_iter1_reg;
        and_ln179_3_reg_6333_pp5_iter3_reg <= and_ln179_3_reg_6333_pp5_iter2_reg;
        and_ln179_3_reg_6333_pp5_iter4_reg <= and_ln179_3_reg_6333_pp5_iter3_reg;
        and_ln179_3_reg_6333_pp5_iter5_reg <= and_ln179_3_reg_6333_pp5_iter4_reg;
        and_ln179_3_reg_6333_pp5_iter6_reg <= and_ln179_3_reg_6333_pp5_iter5_reg;
        and_ln179_3_reg_6333_pp5_iter7_reg <= and_ln179_3_reg_6333_pp5_iter6_reg;
        and_ln179_3_reg_6333_pp5_iter8_reg <= and_ln179_3_reg_6333_pp5_iter7_reg;
        and_ln179_3_reg_6333_pp5_iter9_reg <= and_ln179_3_reg_6333_pp5_iter8_reg;
        and_ln179_reg_6321_pp5_iter1_reg <= and_ln179_reg_6321;
        and_ln179_reg_6321_pp5_iter2_reg <= and_ln179_reg_6321_pp5_iter1_reg;
        and_ln179_reg_6321_pp5_iter3_reg <= and_ln179_reg_6321_pp5_iter2_reg;
        and_ln179_reg_6321_pp5_iter4_reg <= and_ln179_reg_6321_pp5_iter3_reg;
        and_ln179_reg_6321_pp5_iter5_reg <= and_ln179_reg_6321_pp5_iter4_reg;
        and_ln179_reg_6321_pp5_iter6_reg <= and_ln179_reg_6321_pp5_iter5_reg;
        and_ln179_reg_6321_pp5_iter7_reg <= and_ln179_reg_6321_pp5_iter6_reg;
        and_ln179_reg_6321_pp5_iter8_reg <= and_ln179_reg_6321_pp5_iter7_reg;
        and_ln179_reg_6321_pp5_iter9_reg <= and_ln179_reg_6321_pp5_iter8_reg;
        i_reg_1563_pp5_iter1_reg <= i_reg_1563;
        i_reg_1563_pp5_iter2_reg <= i_reg_1563_pp5_iter1_reg;
        i_reg_1563_pp5_iter3_reg <= i_reg_1563_pp5_iter2_reg;
        i_reg_1563_pp5_iter4_reg <= i_reg_1563_pp5_iter3_reg;
        i_reg_1563_pp5_iter5_reg <= i_reg_1563_pp5_iter4_reg;
        i_reg_1563_pp5_iter6_reg <= i_reg_1563_pp5_iter5_reg;
        i_reg_1563_pp5_iter7_reg <= i_reg_1563_pp5_iter6_reg;
        i_reg_1563_pp5_iter8_reg <= i_reg_1563_pp5_iter7_reg;
        i_reg_1563_pp5_iter9_reg <= i_reg_1563_pp5_iter8_reg;
        icmp_ln139_reg_6288 <= icmp_ln139_fu_3545_p2;
        icmp_ln139_reg_6288_pp5_iter10_reg <= icmp_ln139_reg_6288_pp5_iter9_reg;
        icmp_ln139_reg_6288_pp5_iter11_reg <= icmp_ln139_reg_6288_pp5_iter10_reg;
        icmp_ln139_reg_6288_pp5_iter1_reg <= icmp_ln139_reg_6288;
        icmp_ln139_reg_6288_pp5_iter2_reg <= icmp_ln139_reg_6288_pp5_iter1_reg;
        icmp_ln139_reg_6288_pp5_iter3_reg <= icmp_ln139_reg_6288_pp5_iter2_reg;
        icmp_ln139_reg_6288_pp5_iter4_reg <= icmp_ln139_reg_6288_pp5_iter3_reg;
        icmp_ln139_reg_6288_pp5_iter5_reg <= icmp_ln139_reg_6288_pp5_iter4_reg;
        icmp_ln139_reg_6288_pp5_iter6_reg <= icmp_ln139_reg_6288_pp5_iter5_reg;
        icmp_ln139_reg_6288_pp5_iter7_reg <= icmp_ln139_reg_6288_pp5_iter6_reg;
        icmp_ln139_reg_6288_pp5_iter8_reg <= icmp_ln139_reg_6288_pp5_iter7_reg;
        icmp_ln139_reg_6288_pp5_iter9_reg <= icmp_ln139_reg_6288_pp5_iter8_reg;
        tmp_21_reg_6303_pp5_iter1_reg <= tmp_21_reg_6303;
        tmp_21_reg_6303_pp5_iter2_reg <= tmp_21_reg_6303_pp5_iter1_reg;
        tmp_21_reg_6303_pp5_iter3_reg <= tmp_21_reg_6303_pp5_iter2_reg;
        tmp_21_reg_6303_pp5_iter4_reg <= tmp_21_reg_6303_pp5_iter3_reg;
        tmp_21_reg_6303_pp5_iter5_reg <= tmp_21_reg_6303_pp5_iter4_reg;
        tmp_21_reg_6303_pp5_iter6_reg <= tmp_21_reg_6303_pp5_iter5_reg;
        tmp_21_reg_6303_pp5_iter7_reg <= tmp_21_reg_6303_pp5_iter6_reg;
        tmp_21_reg_6303_pp5_iter8_reg <= tmp_21_reg_6303_pp5_iter7_reg;
        tmp_21_reg_6303_pp5_iter9_reg <= tmp_21_reg_6303_pp5_iter8_reg;
        tmp_22_reg_6315_pp5_iter1_reg <= tmp_22_reg_6315;
        tmp_22_reg_6315_pp5_iter2_reg <= tmp_22_reg_6315_pp5_iter1_reg;
        tmp_22_reg_6315_pp5_iter3_reg <= tmp_22_reg_6315_pp5_iter2_reg;
        tmp_22_reg_6315_pp5_iter4_reg <= tmp_22_reg_6315_pp5_iter3_reg;
        tmp_22_reg_6315_pp5_iter5_reg <= tmp_22_reg_6315_pp5_iter4_reg;
        tmp_22_reg_6315_pp5_iter6_reg <= tmp_22_reg_6315_pp5_iter5_reg;
        tmp_22_reg_6315_pp5_iter7_reg <= tmp_22_reg_6315_pp5_iter6_reg;
        tmp_22_reg_6315_pp5_iter8_reg <= tmp_22_reg_6315_pp5_iter7_reg;
        tmp_22_reg_6315_pp5_iter9_reg <= tmp_22_reg_6315_pp5_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_reg_6288_pp5_iter8_reg == 1'd0))) begin
        add_ln175_1_reg_6433 <= grp_fu_4518_p3;
        arrayidx1922_1347_promoted629_fu_280 <= arrayidx1922_2385_promoted643_fu_288;
        arrayidx1922_2_promoted713_fu_328 <= arrayidx1922_2_1_promoted727_fu_336;
        arrayidx2284_promoted622_fu_276 <= grp_fu_4526_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        add_ln175_2_reg_6546 <= grp_fu_4591_p3;
        arrayidx1922_2385_promoted643_fu_288 <= select_ln145_2_fu_3986_p3;
        arrayidx1922_2_1_promoted727_fu_336 <= arrayidx1922_2_2_promoted741_fu_344;
        arrayidx2284_1_1_promoted685_fu_312 <= grp_fu_4599_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (icmp_ln139_reg_6288_pp5_iter10_reg == 1'd0))) begin
        add_ln175_3_reg_6627 <= grp_fu_4639_p3;
        arrayidx1922_2_2_promoted741_fu_344 <= select_ln145_fu_4117_p3;
        arrayidx2284_1_2_promoted699_fu_320 <= grp_fu_4647_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter8 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (icmp_ln139_reg_6288_pp5_iter8_reg == 1'd0))) begin
        add_ln175_reg_6368 <= grp_fu_4511_p3;
        arrayidx1922_1_promoted664_fu_300 <= arrayidx1922_1_1_promoted678_fu_308;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        add_ln176_reg_6541 <= add_ln176_fu_3993_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter8_reg == 1'd0))) begin
        add_ln178_2_reg_6403 <= add_ln178_2_fu_3801_p2;
        empty_54_reg_6379 <= empty_54_fu_3783_p1;
        icmp_ln145_reg_6387 <= icmp_ln145_fu_3787_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_reg_6288_pp5_iter8_reg == 1'd0))) begin
        add_ln178_3_reg_6438 <= add_ln178_3_fu_3836_p2;
        wi_4_reg_6428 <= grp_fu_3724_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln179_3_reg_6333_pp5_iter10_reg) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln187_15_reg_6668 <= add_ln187_15_fu_4190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln81_2_reg_5139 <= add_ln81_2_fu_1937_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln88_reg_5246 <= add_ln88_fu_2080_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_fu_3545_p2 == 1'd0))) begin
        and_ln179_1_reg_6325 <= and_ln179_1_fu_3668_p2;
        and_ln179_2_reg_6329 <= and_ln179_2_fu_3693_p2;
        and_ln179_3_reg_6333 <= and_ln179_3_fu_3704_p2;
        and_ln179_reg_6321 <= and_ln179_fu_3637_p2;
        i_cast_reg_6292[15 : 0] <= i_cast_fu_3550_p1[15 : 0];
        sext_ln143_1_reg_6297 <= sext_ln143_1_fu_3560_p1;
        sext_ln143_2_reg_6309 <= sext_ln143_2_fu_3583_p1;
        tmp_21_reg_6303 <= add_ln143_1_fu_3554_p2[32'd16];
        tmp_22_reg_6315 <= add_ln143_2_fu_3577_p2[32'd16];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        arrayidx1922_1_1_promoted678_fu_308 <= arrayidx1922_1_2_promoted692_fu_316;
        arrayidx2284_1349_promoted636_fu_284 <= grp_fu_4534_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        arrayidx1922_1_2_promoted692_fu_316 <= select_ln145_1_fu_4050_p3;
        arrayidx2284_2387_promoted650_fu_292 <= grp_fu_4615_p3;
        arrayidx2284_2_promoted720_fu_332 <= grp_fu_4623_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln139_reg_6288_pp5_iter10_reg == 1'd0))) begin
        arrayidx1922_3_1_promoted769_fu_360 <= arrayidx1922_3_2_promoted776_fu_364;
        arrayidx1922_3_2_promoted776_fu_364 <= data_l1_0_0_q0;
        arrayidx2284_2_1_promoted734_fu_340 <= grp_fu_4631_p3;
        data_l1_0_0_load_reg_6601 <= data_l1_0_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        arrayidx1922_3_promoted762_fu_356 <= arrayidx1922_3_1_promoted769_fu_360;
        arrayidx2284_1_promoted671_fu_304 <= grp_fu_4558_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter8 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln139_reg_6288_pp5_iter8_reg == 1'd0))) begin
        arrayidx1922_promoted615_fu_272 <= arrayidx1922_1347_promoted629_fu_280;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln139_reg_6288_pp5_iter11_reg == 1'd0))) begin
        arrayidx2284_1_3_promoted706_fu_324 <= grp_fu_4671_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_reg_6288_pp5_iter10_reg == 1'd0))) begin
        arrayidx2284_2_2_promoted748_fu_348 <= grp_fu_4663_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter11_reg == 1'd0))) begin
        arrayidx2284_2_3_promoted755_fu_352 <= grp_fu_4679_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter10_reg == 1'd0))) begin
        arrayidx2284_3425_promoted657_fu_296 <= grp_fu_4655_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv79_reg_5356 <= conv79_fu_2224_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (icmp_ln145_reg_6387_pp5_iter9_reg == 1'd1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        data_l1_1_0_load_reg_6586 <= data_l1_1_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001) & (tmp_21_reg_6303_pp5_iter9_reg == 1'd0) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        data_l1_2_0_load_reg_6536 <= data_l1_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_fu_2074_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        empty_43_reg_5251 <= empty_43_fu_2090_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_11001))) begin
        empty_54_reg_6379_pp5_iter10_reg <= empty_54_reg_6379_pp5_iter9_reg;
        empty_54_reg_6379_pp5_iter9_reg <= empty_54_reg_6379;
        icmp_ln145_reg_6387_pp5_iter9_reg <= icmp_ln145_reg_6387;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_11001) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        i_1_reg_6343 <= i_1_fu_3736_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln121_reg_6099 <= icmp_ln121_fu_3239_p2;
        icmp_ln121_reg_6099_pp4_iter1_reg <= icmp_ln121_reg_6099;
        icmp_ln123_1_reg_6108_pp4_iter1_reg <= icmp_ln123_1_reg_6108;
        select_ln121_1_reg_6116_pp4_iter1_reg <= select_ln121_1_reg_6116;
        select_ln121_5_reg_6125_pp4_iter1_reg <= select_ln121_5_reg_6125;
        select_ln123_reg_6137_pp4_iter1_reg <= select_ln123_reg_6137;
        trunc_ln130_reg_6143_pp4_iter1_reg <= trunc_ln130_reg_6143;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln121_fu_3239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln123_1_reg_6108 <= icmp_ln123_1_fu_3250_p2;
        select_ln121_1_reg_6116 <= select_ln121_1_fu_3265_p3;
        select_ln121_5_reg_6125 <= select_ln121_5_fu_3289_p3;
        select_ln123_reg_6137 <= select_ln123_fu_3310_p3;
        trunc_ln130_reg_6143 <= trunc_ln130_fu_3318_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln201_reg_6698 <= icmp_ln201_fu_4224_p2;
        icmp_ln201_reg_6698_pp6_iter1_reg <= icmp_ln201_reg_6698;
        icmp_ln202_reg_6707_pp6_iter1_reg <= icmp_ln202_reg_6707;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln201_reg_6698_pp6_iter2_reg <= icmp_ln201_reg_6698_pp6_iter1_reg;
        icmp_ln201_reg_6698_pp6_iter3_reg <= icmp_ln201_reg_6698_pp6_iter2_reg;
        select_ln202_1_reg_6730_pp6_iter3_reg <= select_ln202_1_reg_6730;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln201_fu_4224_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln202_reg_6707 <= icmp_ln202_fu_4235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        icmp_ln203_reg_6693 <= icmp_ln203_fu_4219_p2;
        mul_ln201_reg_6688 <= grp_fu_4386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln89_reg_5364 <= icmp_ln89_fu_2228_p2;
        select_ln89_reg_5373_pp3_iter1_reg <= select_ln89_reg_5373;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_2291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        lshr_ln116_10_reg_5693 <= {{add_ln117_11_fu_2682_p2[10:2]}};
        lshr_ln116_11_reg_5698 <= {{add_ln117_12_fu_2698_p2[10:2]}};
        lshr_ln116_12_reg_5703 <= {{add_ln117_13_fu_2714_p2[10:2]}};
        lshr_ln116_13_reg_5708 <= {{add_ln117_14_fu_2730_p2[10:2]}};
        lshr_ln116_14_reg_5713 <= {{add_ln117_15_fu_2746_p2[10:2]}};
        lshr_ln116_2_reg_5648 <= {{add_ln117_2_fu_2538_p2[10:2]}};
        lshr_ln116_3_reg_5653 <= {{add_ln117_3_fu_2554_p2[10:2]}};
        lshr_ln116_4_reg_5658 <= {{add_ln117_4_fu_2570_p2[10:2]}};
        lshr_ln116_5_reg_5663 <= {{add_ln117_5_fu_2586_p2[10:2]}};
        lshr_ln116_6_reg_5668 <= {{add_ln117_6_fu_2602_p2[10:2]}};
        lshr_ln116_7_reg_5673 <= {{add_ln117_7_fu_2618_p2[10:2]}};
        lshr_ln116_8_reg_5678 <= {{add_ln117_8_fu_2634_p2[10:2]}};
        lshr_ln116_9_reg_5683 <= {{add_ln117_9_fu_2650_p2[10:2]}};
        lshr_ln116_s_reg_5688 <= {{add_ln117_10_fu_2666_p2[10:2]}};
        select_ln100_1_reg_5491 <= select_ln100_1_fu_2321_p3;
        select_ln100_reg_5486 <= select_ln100_fu_2307_p3;
        trunc_ln100_10_reg_5552 <= trunc_ln100_10_fu_2433_p1;
        trunc_ln100_11_reg_5557 <= trunc_ln100_11_fu_2442_p1;
        trunc_ln100_12_reg_5562 <= trunc_ln100_12_fu_2451_p1;
        trunc_ln100_13_reg_5567 <= trunc_ln100_13_fu_2460_p1;
        trunc_ln100_14_reg_5572 <= trunc_ln100_14_fu_2469_p1;
        trunc_ln100_15_reg_5577 <= trunc_ln100_15_fu_2478_p1;
        trunc_ln100_1_reg_5507 <= trunc_ln100_1_fu_2352_p1;
        trunc_ln100_2_reg_5512 <= trunc_ln100_2_fu_2361_p1;
        trunc_ln100_3_reg_5517 <= trunc_ln100_3_fu_2370_p1;
        trunc_ln100_4_reg_5522 <= trunc_ln100_4_fu_2379_p1;
        trunc_ln100_5_reg_5527 <= trunc_ln100_5_fu_2388_p1;
        trunc_ln100_6_reg_5532 <= trunc_ln100_6_fu_2397_p1;
        trunc_ln100_7_reg_5537 <= trunc_ln100_7_fu_2406_p1;
        trunc_ln100_8_reg_5542 <= trunc_ln100_8_fu_2415_p1;
        trunc_ln100_9_reg_5547 <= trunc_ln100_9_fu_2424_p1;
        trunc_ln100_reg_5502 <= trunc_ln100_fu_2343_p1;
        trunc_ln117_reg_5587 <= trunc_ln117_fu_2486_p1;
        zext_ln100_1_reg_5497[7 : 0] <= zext_ln100_1_fu_2329_p1[7 : 0];
        zext_ln102_reg_5582[7 : 0] <= zext_ln102_fu_2482_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_1747_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln1_reg_4841 <= {{k_1_reg_1376[10:2]}};
        trunc_ln74_reg_4837 <= trunc_ln74_fu_1758_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln76_fu_1795_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lshr_ln2_reg_4869 <= {{k_2_reg_1387[10:2]}};
        trunc_ln78_reg_4865 <= trunc_ln78_fu_1806_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln_reg_4802 <= {{k_reg_1365[7:2]}};
        trunc_ln70_reg_4798 <= trunc_ln70_fu_1702_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul42_reg_4823 <= grp_fu_4375_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul55_reg_4851 <= grp_fu_4381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_fu_1932_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        mul_ln81_1_reg_5168 <= mul_ln81_1_fu_1987_p2;
        mul_ln81_2_reg_5179 <= mul_ln81_2_fu_1996_p2;
        mul_ln81_3_reg_5187 <= mul_ln81_3_fu_2011_p2;
        mul_ln81_4_reg_5195 <= mul_ln81_4_fu_2026_p2;
        mul_ln81_5_reg_5203 <= mul_ln81_5_fu_2041_p2;
        mul_ln81_reg_5161 <= mul_ln81_fu_1982_p2;
        p_cast16_reg_5217[7 : 2] <= p_cast16_fu_2054_p1[7 : 2];
        p_mid_reg_5156[7 : 2] <= p_mid_fu_1970_p3[7 : 2];
        select_ln81_1_reg_5151 <= select_ln81_1_fu_1962_p3;
        select_ln81_reg_5144 <= select_ln81_fu_1948_p3;
        tmp_20_reg_5211[7 : 2] <= tmp_20_fu_2046_p3[7 : 2];
        zext_ln88_reg_5225[7 : 2] <= zext_ln88_fu_2064_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        p_cast44_reg_6208 <= p_cast44_fu_3497_p1;
        p_cast52_reg_6213 <= p_cast52_fu_3500_p1;
        p_cast54_reg_6218 <= p_cast54_fu_3503_p1;
        p_cast58_reg_6223 <= p_cast58_fu_3506_p1;
        p_cast60_reg_6228 <= p_cast60_fu_3509_p1;
        p_cast62_reg_6233 <= p_cast62_fu_3512_p1;
        p_cast64_reg_6238 <= p_cast64_fu_3515_p1;
        p_cast66_reg_6243 <= p_cast66_fu_3518_p1;
        p_cast68_reg_6248 <= p_cast68_fu_3521_p1;
        p_cast70_reg_6253 <= p_cast70_fu_3524_p1;
        p_cast72_reg_6258 <= p_cast72_fu_3527_p1;
        p_cast74_reg_6263 <= p_cast74_fu_3530_p1;
        p_cast78_reg_6268 <= p_cast78_fu_3533_p1;
        p_cast81_reg_6273 <= p_cast81_fu_3536_p1;
        p_cast84_reg_6278 <= p_cast84_fu_3539_p1;
        sext_ln139_reg_6283 <= sext_ln139_fu_3542_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        p_mid131_reg_6089 <= p_mid131_fu_3220_p2;
        tmp_16_reg_6079 <= tmp_16_fu_3184_p6;
        tmp_17_reg_6084 <= tmp_17_fu_3206_p6;
        zext_ln100_reg_6073[7 : 0] <= zext_ln100_fu_3173_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln201_fu_4224_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln201_1_reg_6715 <= select_ln201_1_fu_4246_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln201_reg_6698_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln202_1_reg_6730 <= select_ln202_1_fu_4324_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2228_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln89_1_reg_5378 <= select_ln89_1_fu_2258_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_2228_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln89_reg_5373 <= select_ln89_fu_2244_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln139_reg_6288 == 1'd0))) begin
        sext_ln143_reg_6337 <= sext_ln143_fu_3715_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp1_reg_4812 <= tmp1_fu_1739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_10_reg_5923 <= tmp_10_fu_3007_p6;
        tmp_11_reg_5928 <= tmp_11_fu_3029_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_12_reg_5973 <= tmp_12_fu_3065_p6;
        tmp_13_reg_5978 <= tmp_13_fu_3087_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_14_reg_6023 <= tmp_14_fu_3123_p6;
        tmp_15_reg_6028 <= tmp_15_fu_3145_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_3_reg_5723 <= tmp_3_fu_2775_p6;
        tmp_4_reg_5728 <= tmp_4_fu_2797_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_5_reg_5773 <= tmp_5_fu_2833_p6;
        tmp_6_reg_5778 <= tmp_6_fu_2855_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_7_reg_5823 <= tmp_7_fu_2891_p6;
        tmp_8_reg_5828 <= tmp_8_fu_2913_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_9_reg_5873 <= tmp_9_fu_2949_p6;
        tmp_s_reg_5878 <= tmp_s_fu_2971_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        wi_2_reg_6458 <= grp_fu_3728_p2;
    end
end

always @ (*) begin
    if ((icmp_ln68_fu_1691_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln72_fu_1747_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln76_fu_1795_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln89_fu_2228_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0))) begin
        ap_condition_pp4_exit_iter4_state45 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter4_state45 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln121_fu_3239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter10 == 1'b1) & (ap_enable_reg_pp5_iter9 == 1'b0))) begin
        ap_condition_pp5_exit_iter10_state89 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter10_state89 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone) & (icmp_ln139_reg_6288 == 1'd1))) begin
        ap_condition_pp5_flush_enable = 1'b1;
    end else begin
        ap_condition_pp5_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        ap_condition_pp6_exit_iter2_state102 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter2_state102 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln201_fu_4224_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
        ap_condition_pp6_flush_enable = 1'b1;
    end else begin
        ap_condition_pp6_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter11 == 1'b0) & (ap_enable_reg_pp5_iter10 == 1'b0) & (ap_enable_reg_pp5_iter9 == 1'b0) & (ap_enable_reg_pp5_iter8 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_reg_5364 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_hi_phi_fu_1457_p4 = select_ln89_1_reg_5378;
    end else begin
        ap_phi_mux_hi_phi_fu_1457_p4 = hi_reg_1453;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln139_reg_6288 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_1567_p4 = i_1_reg_6343;
    end else begin
        ap_phi_mux_i_phi_fu_1567_p4 = i_reg_1563;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln201_reg_6698 == 1'd0) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_k_3_phi_fu_1590_p4 = select_ln201_1_reg_6715;
    end else begin
        ap_phi_mux_k_3_phi_fu_1590_p4 = k_3_reg_1586;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_blk_n = bias_in_V_empty_n;
    end else begin
        bias_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_in_V_read = 1'b1;
    end else begin
        bias_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_0_address0 = newIndex122_cast_fu_2109_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_address0 = zext_ln70_fu_1724_p1;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln70_reg_4798 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_1_address0 = newIndex122_cast_fu_2109_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_address0 = zext_ln70_fu_1724_p1;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln70_reg_4798 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_2_address0 = newIndex122_cast_fu_2109_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_address0 = zext_ln70_fu_1724_p1;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln70_reg_4798 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_l2_3_address0 = newIndex122_cast_fu_2109_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_address0 = zext_ln70_fu_1724_p1;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln70_reg_4798 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln201_reg_6698_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        conv_out_V_blk_n = conv_out_V_full_n;
    end else begin
        conv_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln201_reg_6698_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        conv_out_V_write = 1'b1;
    end else begin
        conv_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        data_l1_0_0_address0 = zext_ln146_fu_4045_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_0_0_address0 = zext_ln128_fu_3490_p1;
    end else begin
        data_l1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        data_l1_0_0_ce0 = 1'b1;
    end else begin
        data_l1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln121_1_reg_6116_pp4_iter4_reg == 2'd0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_0_0_we0 = 1'b1;
    end else begin
        data_l1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3))) begin
        data_l1_1_0_address0 = zext_ln146_1_fu_3982_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_1_0_address0 = zext_ln128_fu_3490_p1;
    end else begin
        data_l1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001)))) begin
        data_l1_1_0_ce0 = 1'b1;
    end else begin
        data_l1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln121_1_reg_6116_pp4_iter4_reg == 2'd1) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_1_0_we0 = 1'b1;
    end else begin
        data_l1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2))) begin
        data_l1_2_0_address0 = zext_ln146_2_fu_3938_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_2_0_address0 = zext_ln128_fu_3490_p1;
    end else begin
        data_l1_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001)))) begin
        data_l1_2_0_ce0 = 1'b1;
    end else begin
        data_l1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln121_1_reg_6116_pp4_iter4_reg == 2'd2) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_2_0_we0 = 1'b1;
    end else begin
        data_l1_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2))) begin
        data_l1_3_0_address0 = zext_ln146_3_fu_3942_p1;
    end else if (((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l1_3_0_address0 = zext_ln128_fu_3490_p1;
    end else begin
        data_l1_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001)))) begin
        data_l1_3_0_ce0 = 1'b1;
    end else begin
        data_l1_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln121_1_reg_6116_pp4_iter4_reg == 2'd3) & (ap_enable_reg_pp4_iter5 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        data_l1_3_0_we0 = 1'b1;
    end else begin
        data_l1_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_0_address0 = zext_ln129_1_fu_3461_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_0_address0 = zext_ln78_fu_1828_p1;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_0_ce0 = 1'b1;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4865 == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_0_we0 = 1'b1;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_1_address0 = zext_ln129_1_fu_3461_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_1_address0 = zext_ln78_fu_1828_p1;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_1_ce0 = 1'b1;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4865 == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_1_we0 = 1'b1;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_2_address0 = zext_ln129_1_fu_3461_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_2_address0 = zext_ln78_fu_1828_p1;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_2_ce0 = 1'b1;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4865 == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_2_we0 = 1'b1;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        data_l2_3_address0 = zext_ln129_1_fu_3461_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        data_l2_3_address0 = zext_ln78_fu_1828_p1;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        data_l2_3_ce0 = 1'b1;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln78_reg_4865 == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_l2_3_we0 = 1'b1;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1)))) begin
        grp_fu_1630_p0 = add_ln178_2_reg_6403;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter8 == 1'b1) & (1'b0 == ap_block_pp5_stage3))) begin
        grp_fu_1630_p0 = add_ln178_2_fu_3801_p2;
    end else begin
        grp_fu_1630_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1)))) begin
        grp_fu_1634_p0 = add_ln178_3_reg_6438;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_1634_p0 = add_ln178_3_fu_3836_p2;
    end else begin
        grp_fu_1634_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage1)))) begin
        grp_fu_1638_p0 = add_ln176_reg_6541;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3))) begin
        grp_fu_1638_p0 = add_ln176_fu_3993_p2;
    end else begin
        grp_fu_1638_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage3)))) begin
        grp_fu_1642_p0 = add_ln143_3_reg_6621;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2))) begin
        grp_fu_1642_p0 = add_ln143_3_fu_4123_p2;
    end else begin
        grp_fu_1642_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        grp_fu_4687_ce = 1'b1;
    end else begin
        grp_fu_4687_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_0_address0 = zext_ln204_fu_4350_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_0_address0 = zext_ln186_15_fu_4202_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_0_address0 = zext_ln186_11_fu_4178_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_0_address0 = zext_ln93_fu_2284_p1;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_0_address1 = zext_ln167_3_fu_4198_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage3))) begin
        output_l1_0_address1 = zext_ln186_7_fu_4159_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2))) begin
        output_l1_0_address1 = zext_ln186_3_fu_4129_p1;
    end else begin
        output_l1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_0_ce0 = 1'b1;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_0_ce1 = 1'b1;
    end else begin
        output_l1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage1)))) begin
        output_l1_0_d0 = add_ln175_3_reg_6627;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_0_d0 = conv79_reg_5356;
    end else begin
        output_l1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp5_iter10 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3))) begin
            output_l1_0_d1 = add_ln175_3_reg_6627;
        end else if (((1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2))) begin
            output_l1_0_d1 = grp_fu_4639_p3;
        end else begin
            output_l1_0_d1 = 'bx;
        end
    end else begin
        output_l1_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_43_reg_5251 == 2'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'd1 == and_ln179_3_reg_6333_pp5_iter11_reg) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)) | ((1'd1 == and_ln179_3_reg_6333_pp5_iter10_reg) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        output_l1_0_we0 = 1'b1;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln179_3_reg_6333_pp5_iter10_reg) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (icmp_ln139_reg_6288_pp5_iter10_reg == 1'd0)) | ((1'd1 == and_ln179_3_reg_6333_pp5_iter10_reg) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter10_reg == 1'd0)))) begin
        output_l1_0_we1 = 1'b1;
    end else begin
        output_l1_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2))) begin
        output_l1_1_address0 = zext_ln186_14_fu_4145_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_1_address0 = zext_ln186_10_fu_4094_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_1_address0 = zext_ln186_6_fu_4056_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_1_address0 = zext_ln93_fu_2284_p1;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_1_address1 = zext_ln204_fu_4350_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2))) begin
        output_l1_1_address1 = zext_ln167_2_fu_4141_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3))) begin
        output_l1_1_address1 = zext_ln186_2_fu_3999_p1;
    end else begin
        output_l1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_1_ce0 = 1'b1;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001)))) begin
        output_l1_1_ce1 = 1'b1;
    end else begin
        output_l1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage1)))) begin
        output_l1_1_d0 = add_ln175_2_reg_6546;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_1_d0 = conv79_reg_5356;
    end else begin
        output_l1_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_43_reg_5251 == 2'd1) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'd1 == and_ln179_2_reg_6329_pp5_iter10_reg) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (icmp_ln139_reg_6288_pp5_iter10_reg == 1'd0)) | ((1'd1 == and_ln179_2_reg_6329_pp5_iter10_reg) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln139_reg_6288_pp5_iter10_reg == 1'd0)) | ((1'd1 == and_ln179_2_reg_6329_pp5_iter9_reg) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0)))) begin
        output_l1_1_we0 = 1'b1;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln179_2_reg_6329_pp5_iter9_reg) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0))) begin
        output_l1_1_we1 = 1'b1;
    end else begin
        output_l1_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3))) begin
        output_l1_2_address0 = zext_ln186_13_fu_4026_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2))) begin
        output_l1_2_address0 = zext_ln186_9_fu_3952_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_2_address0 = zext_ln186_5_fu_3895_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_address0 = zext_ln186_1_fu_3842_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_2_address0 = zext_ln93_fu_2284_p1;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_2_address1 = zext_ln204_fu_4350_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3))) begin
        output_l1_2_address1 = zext_ln167_1_fu_4022_p1;
    end else begin
        output_l1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_2_ce0 = 1'b1;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001)))) begin
        output_l1_2_ce1 = 1'b1;
    end else begin
        output_l1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1)))) begin
        output_l1_2_d0 = add_ln175_1_reg_6433;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_2_d0 = grp_fu_4518_p3;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_2_d0 = conv79_reg_5356;
    end else begin
        output_l1_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_43_reg_5251 == 2'd2) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'd1 == and_ln179_1_reg_6325_pp5_iter9_reg) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0)) | ((1'd1 == and_ln179_1_reg_6325_pp5_iter9_reg) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0)) | ((1'd1 == and_ln179_1_reg_6325_pp5_iter9_reg) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0)) | ((1'd1 == and_ln179_1_reg_6325_pp5_iter8_reg) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_reg_6288_pp5_iter8_reg == 1'd0)))) begin
        output_l1_2_we0 = 1'b1;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2))) begin
        output_l1_3_address0 = zext_ln186_12_fu_3961_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        output_l1_3_address0 = zext_ln186_8_fu_3907_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        output_l1_3_address0 = zext_ln186_4_fu_3851_p1;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_3_address0 = zext_ln93_fu_2284_p1;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        output_l1_3_address1 = zext_ln204_fu_4350_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2))) begin
        output_l1_3_address1 = zext_ln167_fu_3957_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter8 == 1'b1) & (1'b0 == ap_block_pp5_stage3))) begin
        output_l1_3_address1 = zext_ln186_fu_3808_p1;
    end else begin
        output_l1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        output_l1_3_ce0 = 1'b1;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter8 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001)))) begin
        output_l1_3_ce1 = 1'b1;
    end else begin
        output_l1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1)))) begin
        output_l1_3_d0 = add_ln175_reg_6368;
    end else if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_l1_3_d0 = conv79_reg_5356;
    end else begin
        output_l1_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((empty_43_reg_5251 == 2'd3) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'd1 == and_ln179_reg_6321_pp5_iter9_reg) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0)) | ((1'd1 == and_ln179_reg_6321_pp5_iter9_reg) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (icmp_ln139_reg_6288_pp5_iter9_reg == 1'd0)) | ((1'd1 == and_ln179_reg_6321_pp5_iter8_reg) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter9 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln139_reg_6288_pp5_iter8_reg == 1'd0)))) begin
        output_l1_3_we0 = 1'b1;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln179_reg_6321_pp5_iter8_reg) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter8 == 1'b1) & (1'b0 == ap_block_pp5_stage3_11001) & (icmp_ln139_reg_6288_pp5_iter8_reg == 1'd0))) begin
        output_l1_3_we1 = 1'b1;
    end else begin
        output_l1_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_in_V_blk_n = weight_in_V_empty_n;
    end else begin
        weight_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_in_V_read = 1'b1;
    end else begin
        weight_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address0 = zext_ln116_30_fu_3159_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address0 = zext_ln116_28_fu_3101_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address0 = zext_ln116_26_fu_3043_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address0 = zext_ln116_24_fu_2985_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address0 = zext_ln116_22_fu_2927_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address0 = zext_ln116_20_fu_2869_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address0 = zext_ln116_18_fu_2811_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address0 = zext_ln116_17_fu_2530_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_0_address0 = zext_ln74_fu_1780_p1;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_0_address1 = zext_ln116_31_fu_3166_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_0_address1 = zext_ln116_29_fu_3108_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_0_address1 = zext_ln116_27_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_0_address1 = zext_ln116_25_fu_2992_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_0_address1 = zext_ln116_23_fu_2934_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_0_address1 = zext_ln116_21_fu_2876_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_0_address1 = zext_ln116_19_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_0_address1 = zext_ln116_16_fu_2506_p1;
    end else begin
        weight_l2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_0_ce0 = 1'b1;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_0_ce1 = 1'b1;
    end else begin
        weight_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4837 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_0_we0 = 1'b1;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address0 = zext_ln116_30_fu_3159_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address0 = zext_ln116_28_fu_3101_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address0 = zext_ln116_26_fu_3043_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address0 = zext_ln116_24_fu_2985_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address0 = zext_ln116_22_fu_2927_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address0 = zext_ln116_20_fu_2869_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address0 = zext_ln116_18_fu_2811_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address0 = zext_ln116_17_fu_2530_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_1_address0 = zext_ln74_fu_1780_p1;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_1_address1 = zext_ln116_31_fu_3166_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_1_address1 = zext_ln116_29_fu_3108_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_1_address1 = zext_ln116_27_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_1_address1 = zext_ln116_25_fu_2992_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_1_address1 = zext_ln116_23_fu_2934_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_1_address1 = zext_ln116_21_fu_2876_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_1_address1 = zext_ln116_19_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_1_address1 = zext_ln116_16_fu_2506_p1;
    end else begin
        weight_l2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_1_ce0 = 1'b1;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_1_ce1 = 1'b1;
    end else begin
        weight_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4837 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_1_we0 = 1'b1;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address0 = zext_ln116_30_fu_3159_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address0 = zext_ln116_28_fu_3101_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address0 = zext_ln116_26_fu_3043_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address0 = zext_ln116_24_fu_2985_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address0 = zext_ln116_22_fu_2927_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address0 = zext_ln116_20_fu_2869_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address0 = zext_ln116_18_fu_2811_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address0 = zext_ln116_17_fu_2530_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_2_address0 = zext_ln74_fu_1780_p1;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_2_address1 = zext_ln116_31_fu_3166_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_2_address1 = zext_ln116_29_fu_3108_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_2_address1 = zext_ln116_27_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_2_address1 = zext_ln116_25_fu_2992_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_2_address1 = zext_ln116_23_fu_2934_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_2_address1 = zext_ln116_21_fu_2876_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_2_address1 = zext_ln116_19_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_2_address1 = zext_ln116_16_fu_2506_p1;
    end else begin
        weight_l2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_2_ce0 = 1'b1;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_2_ce1 = 1'b1;
    end else begin
        weight_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4837 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_2_we0 = 1'b1;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address0 = zext_ln116_30_fu_3159_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address0 = zext_ln116_28_fu_3101_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address0 = zext_ln116_26_fu_3043_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address0 = zext_ln116_24_fu_2985_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address0 = zext_ln116_22_fu_2927_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address0 = zext_ln116_20_fu_2869_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address0 = zext_ln116_18_fu_2811_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address0 = zext_ln116_17_fu_2530_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        weight_l2_3_address0 = zext_ln74_fu_1780_p1;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weight_l2_3_address1 = zext_ln116_31_fu_3166_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weight_l2_3_address1 = zext_ln116_29_fu_3108_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_l2_3_address1 = zext_ln116_27_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        weight_l2_3_address1 = zext_ln116_25_fu_2992_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weight_l2_3_address1 = zext_ln116_23_fu_2934_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        weight_l2_3_address1 = zext_ln116_21_fu_2876_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_l2_3_address1 = zext_ln116_19_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        weight_l2_3_address1 = zext_ln116_16_fu_2506_p1;
    end else begin
        weight_l2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        weight_l2_3_ce0 = 1'b1;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_l2_3_ce1 = 1'b1;
    end else begin
        weight_l2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln74_reg_4837 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_l2_3_we0 = 1'b1;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((bias_in_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln68_fu_1691_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln68_fu_1691_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln72_fu_1747_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln72_fu_1747_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln76_fu_1795_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln76_fu_1795_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln81_fu_1932_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln88_fu_2074_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2228_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln89_fu_2228_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln100_fu_2291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter4 == 1'b1) & (ap_enable_reg_pp4_iter3 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if ((~((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter11 == 1'b0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (ap_enable_reg_pp5_iter9 == 1'b0) & (1'b0 == ap_block_pp5_stage1_subdone)) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter11 == 1'b0) & (ap_enable_reg_pp5_iter10 == 1'b1) & (ap_enable_reg_pp5_iter9 == 1'b0) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            if ((1'b0 == ap_block_pp5_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end
        end
        ap_ST_fsm_pp5_stage3 : begin
            if ((~((1'b1 == ap_condition_pp5_exit_iter10_state89) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone)) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((1'b1 == ap_condition_pp5_exit_iter10_state89) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_cast_fu_1889_p1 = C_reg_4711;

assign C_fu_1650_p1 = bias_in_V_dout[7:0];

assign K_fu_1646_p1 = bias_in_V_dout[7:0];

assign RS_fu_1683_p1 = bias_in_V_dout[7:0];

assign WH_cast_fu_1886_p1 = WH_reg_4718;

assign WH_fu_1654_p1 = bias_in_V_dout[7:0];

assign WH_in_fu_1658_p1 = bias_in_V_dout[7:0];

assign add_ln100_10_fu_2419_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_2_1_cast_reg_5458));

assign add_ln100_11_fu_2428_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_2_2_cast_reg_5418));

assign add_ln100_12_fu_2437_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_2_3_cast_reg_5463));

assign add_ln100_13_fu_2446_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_3_cast_reg_5408));

assign add_ln100_14_fu_2455_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_3_1_cast_reg_5468));

assign add_ln100_15_fu_2464_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_3_2_cast_reg_5423));

assign add_ln100_16_fu_2473_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_3_3_cast_reg_5473));

assign add_ln100_17_fu_2315_p2 = (8'd1 + r_reg_1486);

assign add_ln100_1_fu_2338_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_cast_reg_5428));

assign add_ln100_2_fu_2347_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_1325_cast_reg_5433));

assign add_ln100_3_fu_2356_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_2333_cast_reg_5438));

assign add_ln100_4_fu_2365_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_3341_cast_reg_5443));

assign add_ln100_5_fu_2374_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_1_cast_reg_5403));

assign add_ln100_6_fu_2383_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_1_1_cast_reg_5448));

assign add_ln100_7_fu_2392_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_1_2_cast_reg_5413));

assign add_ln100_8_fu_2401_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_1_3_cast_reg_5453));

assign add_ln100_9_fu_2410_p2 = ($signed(mul_ln100_fu_2333_p2) + $signed(add107_2_cast_reg_5398));

assign add_ln100_fu_2296_p2 = (indvar_flatten105_reg_1475 + 16'd1);

assign add_ln102_fu_4214_p2 = (select_ln100_reg_5486 + 8'd1);

assign add_ln116_10_fu_3057_p2 = (trunc_ln100_10_reg_5552 + trunc_ln117_reg_5587);

assign add_ln116_11_fu_3079_p2 = (trunc_ln100_11_reg_5557 + trunc_ln117_reg_5587);

assign add_ln116_12_fu_3115_p2 = (trunc_ln100_12_reg_5562 + trunc_ln117_reg_5587);

assign add_ln116_13_fu_3137_p2 = (trunc_ln100_13_reg_5567 + trunc_ln117_reg_5587);

assign add_ln116_14_fu_3176_p2 = (trunc_ln100_14_reg_5572 + trunc_ln117_reg_5587);

assign add_ln116_15_fu_3198_p2 = (trunc_ln100_15_reg_5577 + trunc_ln117_reg_5587);

assign add_ln116_1_fu_2789_p2 = (trunc_ln100_1_reg_5507 + trunc_ln117_reg_5587);

assign add_ln116_2_fu_2825_p2 = (trunc_ln100_2_reg_5512 + trunc_ln117_reg_5587);

assign add_ln116_3_fu_2847_p2 = (trunc_ln100_3_reg_5517 + trunc_ln117_reg_5587);

assign add_ln116_4_fu_2883_p2 = (trunc_ln100_4_reg_5522 + trunc_ln117_reg_5587);

assign add_ln116_5_fu_2905_p2 = (trunc_ln100_5_reg_5527 + trunc_ln117_reg_5587);

assign add_ln116_6_fu_2941_p2 = (trunc_ln100_6_reg_5532 + trunc_ln117_reg_5587);

assign add_ln116_7_fu_2963_p2 = (trunc_ln100_7_reg_5537 + trunc_ln117_reg_5587);

assign add_ln116_8_fu_2999_p2 = (trunc_ln100_8_reg_5542 + trunc_ln117_reg_5587);

assign add_ln116_9_fu_3021_p2 = (trunc_ln100_9_reg_5547 + trunc_ln117_reg_5587);

assign add_ln116_fu_2767_p2 = (trunc_ln100_reg_5502 + trunc_ln117_reg_5587);

assign add_ln117_10_fu_2666_p2 = (zext_ln102_fu_2482_p1 + add_ln100_11_fu_2428_p2);

assign add_ln117_11_fu_2682_p2 = (zext_ln102_fu_2482_p1 + add_ln100_12_fu_2437_p2);

assign add_ln117_12_fu_2698_p2 = (zext_ln102_fu_2482_p1 + add_ln100_13_fu_2446_p2);

assign add_ln117_13_fu_2714_p2 = (zext_ln102_fu_2482_p1 + add_ln100_14_fu_2455_p2);

assign add_ln117_14_fu_2730_p2 = (zext_ln102_fu_2482_p1 + add_ln100_15_fu_2464_p2);

assign add_ln117_15_fu_2746_p2 = (zext_ln102_fu_2482_p1 + add_ln100_16_fu_2473_p2);

assign add_ln117_1_fu_2514_p2 = (zext_ln102_fu_2482_p1 + add_ln100_2_fu_2347_p2);

assign add_ln117_2_fu_2538_p2 = (zext_ln102_fu_2482_p1 + add_ln100_3_fu_2356_p2);

assign add_ln117_3_fu_2554_p2 = (zext_ln102_fu_2482_p1 + add_ln100_4_fu_2365_p2);

assign add_ln117_4_fu_2570_p2 = (zext_ln102_fu_2482_p1 + add_ln100_5_fu_2374_p2);

assign add_ln117_5_fu_2586_p2 = (zext_ln102_fu_2482_p1 + add_ln100_6_fu_2383_p2);

assign add_ln117_6_fu_2602_p2 = (zext_ln102_fu_2482_p1 + add_ln100_7_fu_2392_p2);

assign add_ln117_7_fu_2618_p2 = (zext_ln102_fu_2482_p1 + add_ln100_8_fu_2401_p2);

assign add_ln117_8_fu_2634_p2 = (zext_ln102_fu_2482_p1 + add_ln100_9_fu_2410_p2);

assign add_ln117_9_fu_2650_p2 = (zext_ln102_fu_2482_p1 + add_ln100_10_fu_2419_p2);

assign add_ln117_fu_2490_p2 = (zext_ln102_fu_2482_p1 + add_ln100_1_fu_2338_p2);

assign add_ln121_1_fu_3255_p2 = (3'd1 + ci_reg_1519);

assign add_ln121_fu_3244_p2 = (18'd1 + indvar_flatten47_reg_1508);

assign add_ln123_1_fu_3423_p2 = (zext_ln102_reg_5582 + select_ln123_2_fu_3417_p3);

assign add_ln123_2_fu_3432_p2 = (trunc_ln123_fu_3428_p1 + trunc_ln117_reg_5587);

assign add_ln123_3_fu_3328_p2 = (indvar_flatten15_reg_1530 + 16'd1);

assign add_ln123_fu_3365_p2 = (8'd1 + select_ln121_fu_3351_p3);

assign add_ln124_fu_3322_p2 = (select_ln123_fu_3310_p3 + 8'd1);

assign add_ln127_1_fu_3408_p2 = ($signed(grp_fu_4486_p2) + $signed(p_mid131_reg_6089));

assign add_ln128_fu_3397_p2 = (select_ln123_1_fu_3380_p3 + wi_4_cast56_fu_3394_p1);

assign add_ln129_fu_3446_p2 = (add_ln123_2_fu_3432_p2 + trunc_ln130_reg_6143_pp4_iter3_reg);

assign add_ln130_fu_3440_p2 = (wi_4_cast_fu_3437_p1 + add_ln123_1_fu_3423_p2);

assign add_ln143_1_fu_3554_p2 = ($signed(17'd131070) + $signed(i_cast_fu_3550_p1));

assign add_ln143_2_fu_3577_p2 = ($signed(17'd131069) + $signed(i_cast_fu_3550_p1));

assign add_ln143_3_fu_4123_p2 = ($signed(9'd509) + $signed(empty_54_reg_6379_pp5_iter9_reg));

assign add_ln143_fu_3710_p2 = ($signed(17'd131071) + $signed(i_cast_reg_6292));

assign add_ln169_6_fu_4183_p2 = (empty_54_reg_6379_pp5_iter10_reg + mul_ln81_1_reg_5168);

assign add_ln176_fu_3993_p2 = ($signed(9'd508) + $signed(empty_54_reg_6379));

assign add_ln178_1_fu_3643_p2 = ($signed(i_cast_fu_3550_p1) + $signed(17'd131067));

assign add_ln178_2_fu_3801_p2 = ($signed(9'd506) + $signed(empty_54_fu_3783_p1));

assign add_ln178_3_fu_3836_p2 = ($signed(empty_54_reg_6379) + $signed(9'd507));

assign add_ln178_fu_3612_p2 = ($signed(17'd131066) + $signed(i_cast_fu_3550_p1));

assign add_ln187_15_fu_4190_p2 = (add_ln143_3_reg_6621 + mul_ln81_1_reg_5168);

assign add_ln201_1_fu_4240_p2 = (6'd1 + ap_phi_mux_k_3_phi_fu_1590_p4);

assign add_ln201_fu_4229_p2 = (indvar_flatten163_reg_1575 + 24'd1);

assign add_ln202_1_fu_4258_p2 = (19'd1 + indvar_flatten149_reg_1597);

assign add_ln202_fu_4301_p2 = (3'd1 + select_ln201_fu_4272_p3);

assign add_ln203_fu_4344_p2 = (16'd1 + select_ln202_fu_4312_p3);

assign add_ln68_fu_1696_p2 = (k_reg_1365 + 8'd1);

assign add_ln72_fu_1752_p2 = (k_1_reg_1376 + 32'd1);

assign add_ln76_fu_1800_p2 = (k_2_reg_1387 + 24'd1);

assign add_ln81_1_fu_1859_p2 = (zext_ln81_1_fu_1855_p1 + mul152_fu_1835_p2);

assign add_ln81_2_fu_1937_p2 = (indvar_flatten142_reg_1398 + 12'd1);

assign add_ln81_3_fu_1956_p2 = (ko_reg_1409 + 6'd1);

assign add_ln81_fu_1850_p2 = (9'd6 + zext_ln55_reg_4740);

assign add_ln82_fu_2762_p2 = (select_ln81_reg_5144 + 6'd1);

assign add_ln88_fu_2080_p2 = (ki_1_reg_1431 + 3'd1);

assign add_ln89_1_fu_2252_p2 = (ap_phi_mux_hi_phi_fu_1457_p4 + 8'd1);

assign add_ln89_fu_2233_p2 = (indvar_flatten_reg_1442 + 16'd1);

assign add_ln90_fu_2270_p2 = (select_ln89_fu_2244_p3 + 8'd1);

assign and_ln179_1_fu_3668_p2 = (xor_ln178_1_fu_3657_p2 & icmp_ln180_1_fu_3663_p2);

assign and_ln179_2_fu_3693_p2 = (xor_ln178_2_fu_3682_p2 & icmp_ln180_2_fu_3688_p2);

assign and_ln179_3_fu_3704_p2 = (xor_ln145_fu_3600_p2 & icmp_ln180_3_fu_3699_p2);

assign and_ln179_fu_3637_p2 = (xor_ln178_fu_3626_p2 & icmp_ln180_fu_3632_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd43];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((bias_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_01001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln201_reg_6698_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((conv_out_V_full_n == 1'b0) & (icmp_ln201_reg_6698_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((conv_out_V_full_n == 1'b0) & (icmp_ln201_reg_6698_pp6_iter3_reg == 1'd0) & (ap_enable_reg_pp6_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((bias_in_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state100_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state104_pp6_stage0_iter4 = ((conv_out_V_full_n == 1'b0) & (icmp_ln201_reg_6698_pp6_iter3_reg == 1'd0));
end

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp1_stage0_iter1 = (weight_in_V_empty_n == 1'b0);
end

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp2_stage0_iter1 = (data_in_V_empty_n == 1'b0);
end

assign ap_block_state24_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp5_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp5_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp5_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp5_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp5_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp5_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp5_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp5_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp5_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp5_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp5_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp5_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp5_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp5_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp5_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp5_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp5_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp5_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp5_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp5_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp5_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp5_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp5_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp5_stage3_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (bias_in_V_empty_n == 1'b0);
end

assign ap_block_state80_pp5_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp5_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp5_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp5_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp5_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp5_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp5_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp5_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp5_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp5_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp5_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp5_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp5_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp5_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp5_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp5_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign bound110_fu_1921_p0 = bound110_fu_1921_p00;

assign bound110_fu_1921_p00 = div68_cast_fu_1868_p4;

assign bound110_fu_1921_p1 = bound110_fu_1921_p10;

assign bound110_fu_1921_p10 = div66_cast_fu_1877_p4;

assign bound20_fu_1909_p1 = tmp_2_fu_1901_p3;

assign conv79_fu_2224_p1 = $signed(tmp_1_fu_2210_p6);

assign conv_out_V_din = p_Repl2_s_fu_4357_p6;

assign div66_cast_fu_1877_p4 = {{bias_in_V_read_reg_4695[7:2]}};

assign div68_cast_fu_1868_p4 = {{bias_in_V_read_1_reg_4706[7:2]}};

assign empty_41_fu_1892_p1 = tmp1_reg_4812[10:0];

assign empty_43_fu_2090_p1 = ki_1_reg_1431[1:0];

assign empty_44_fu_2094_p2 = (p_mid_reg_5156 + zext_ln88_1_fu_2086_p1);

assign empty_46_fu_2117_p2 = (tmp_20_reg_5211 | 8'd1);

assign empty_47_fu_2126_p2 = (tmp_20_reg_5211 | 8'd2);

assign empty_48_fu_3224_p1 = ci_reg_1519[1:0];

assign empty_52_fu_3261_p1 = add_ln121_1_fu_3255_p2[1:0];

assign empty_54_fu_3783_p1 = i_reg_1563_pp5_iter8_reg[8:0];

assign empty_57_fu_2058_p2 = (tmp_20_fu_2046_p3 | 8'd3);

assign grp_fu_1630_p2 = (grp_fu_1630_p0 + mul_ln81_1_reg_5168);

assign grp_fu_1634_p2 = (grp_fu_1634_p0 + mul_ln81_1_reg_5168);

assign grp_fu_1638_p2 = (grp_fu_1638_p0 + mul_ln81_1_reg_5168);

assign grp_fu_1642_p2 = (grp_fu_1642_p0 + mul_ln81_1_reg_5168);

assign grp_fu_3564_p0 = add_ln143_1_fu_3554_p2;

assign grp_fu_3564_p1 = zext_ln57_reg_4751;

assign grp_fu_3587_p0 = add_ln143_2_fu_3577_p2;

assign grp_fu_3587_p1 = zext_ln57_reg_4751;

assign grp_fu_3719_p0 = $signed(add_ln143_fu_3710_p2);

assign grp_fu_3719_p1 = zext_ln57_reg_4751;

assign grp_fu_3724_p1 = zext_ln57_reg_4751;

assign grp_fu_3728_p1 = zext_ln57_reg_4751;

assign grp_fu_3732_p1 = zext_ln57_reg_4751;

assign grp_fu_4375_p0 = grp_fu_4375_p00;

assign grp_fu_4375_p00 = tmp1_fu_1739_p2;

assign grp_fu_4375_p1 = grp_fu_4375_p10;

assign grp_fu_4375_p10 = tmp_fu_1731_p2;

assign grp_fu_4381_p0 = grp_fu_4381_p00;

assign grp_fu_4381_p00 = tmp2_fu_1787_p2;

assign grp_fu_4381_p1 = zext_ln61_reg_4767;

assign grp_fu_4386_p0 = grp_fu_4386_p00;

assign grp_fu_4386_p00 = div66_cast_reg_5061;

assign grp_fu_4386_p1 = grp_fu_4386_p10;

assign grp_fu_4386_p10 = tmp_2_reg_5115;

assign grp_fu_4392_p0 = (p_cast16_reg_5217 + mul_ln81_4_reg_5195);

assign grp_fu_4397_p0 = (p_cast16_reg_5217 + mul_ln81_3_reg_5187);

assign grp_fu_4402_p0 = (p_cast16_reg_5217 + mul_ln81_5_reg_5203);

assign grp_fu_4407_p0 = (p_cast17_fu_2131_p1 + mul_ln81_3_reg_5187);

assign grp_fu_4412_p0 = (p_cast17_fu_2131_p1 + mul_ln81_4_reg_5195);

assign grp_fu_4417_p0 = (p_cast17_fu_2131_p1 + mul_ln81_5_reg_5203);

assign grp_fu_4422_p0 = (p_cast16_reg_5217 + mul_ln81_2_reg_5179);

assign grp_fu_4427_p0 = (p_cast18_fu_2122_p1 + mul_ln81_2_reg_5179);

assign grp_fu_4432_p0 = (p_cast17_fu_2131_p1 + mul_ln81_2_reg_5179);

assign grp_fu_4437_p0 = (zext_ln88_reg_5225 + mul_ln81_2_reg_5179);

assign grp_fu_4442_p0 = (p_cast18_fu_2122_p1 + mul_ln81_3_reg_5187);

assign grp_fu_4447_p0 = (zext_ln88_reg_5225 + mul_ln81_3_reg_5187);

assign grp_fu_4452_p0 = (p_cast18_fu_2122_p1 + mul_ln81_4_reg_5195);

assign grp_fu_4457_p0 = (zext_ln88_reg_5225 + mul_ln81_4_reg_5195);

assign grp_fu_4462_p0 = (p_cast18_fu_2122_p1 + mul_ln81_5_reg_5203);

assign grp_fu_4467_p0 = (zext_ln88_reg_5225 + mul_ln81_5_reg_5203);

assign grp_fu_4472_p0 = grp_fu_4472_p00;

assign grp_fu_4472_p00 = select_ln89_1_fu_2258_p3;

assign grp_fu_4472_p1 = WH_cast_reg_5066;

assign grp_fu_4472_p2 = (wi_cast_fu_2276_p1 + mul_ln81_1_reg_5168);

assign grp_fu_4480_p1 = grp_fu_4480_p10;

assign grp_fu_4480_p10 = tmp_18_fu_3228_p3;

assign grp_fu_4486_p1 = grp_fu_4486_p10;

assign grp_fu_4486_p10 = tmp_19_mid1_fu_3273_p3;

assign grp_fu_4493_p0 = zext_ln100_reg_6073;

assign grp_fu_4493_p1 = zext_ln123_fu_3342_p1;

assign grp_fu_4493_p2 = trunc_ln3_cast48_reg_5039;

assign grp_fu_4502_p0 = zext_ln100_reg_6073;

assign grp_fu_4502_p1 = zext_ln123_1_fu_3371_p1;

assign grp_fu_4502_p2 = trunc_ln3_cast48_reg_5039;

assign grp_fu_4502_p3 = ((icmp_ln123_1_reg_6108_pp4_iter2_reg[0:0] === 1'b1) ? grp_fu_4486_p2 : grp_fu_4480_p2);

assign grp_fu_4511_p0 = p_cast44_reg_6208;

assign grp_fu_4518_p0 = p_cast52_reg_6213;

assign grp_fu_4526_p1 = p_cast60_reg_6228;

assign grp_fu_4534_p1 = p_cast62_reg_6233;

assign grp_fu_4542_p0 = WH_cast_reg_5066;

assign grp_fu_4542_p2 = zext_ln144_1_fu_3884_p1;

assign grp_fu_4550_p0 = WH_cast_reg_5066;

assign grp_fu_4550_p2 = zext_ln144_2_fu_3891_p1;

assign grp_fu_4558_p1 = p_cast68_reg_6248;

assign grp_fu_4566_p2 = WH_cast_reg_5066;

assign grp_fu_4566_p3 = zext_ln144_2_fu_3891_p1;

assign grp_fu_4575_p2 = WH_cast_reg_5066;

assign grp_fu_4575_p3 = zext_ln144_1_fu_3884_p1;

assign grp_fu_4583_p0 = WH_cast_reg_5066;

assign grp_fu_4583_p2 = zext_ln144_fu_3934_p1;

assign grp_fu_4591_p1 = p_cast54_reg_6218;

assign grp_fu_4599_p1 = p_cast70_reg_6253;

assign grp_fu_4607_p2 = WH_cast_reg_5066;

assign grp_fu_4607_p3 = zext_ln144_fu_3934_p1;

assign grp_fu_4615_p1 = p_cast64_reg_6238;

assign grp_fu_4623_p1 = p_cast78_reg_6268;

assign grp_fu_4623_p2 = ((tmp_22_reg_6315_pp5_iter9_reg[0:0] === 1'b1) ? 32'd0 : output_l1_3_q1);

assign grp_fu_4631_p1 = p_cast81_reg_6273;

assign grp_fu_4631_p2 = ((tmp_21_reg_6303_pp5_iter9_reg[0:0] === 1'b1) ? 32'd0 : output_l1_2_q1);

assign grp_fu_4639_p1 = p_cast58_reg_6223;

assign grp_fu_4647_p1 = p_cast72_reg_6258;

assign grp_fu_4655_p1 = p_cast66_reg_6243;

assign grp_fu_4663_p1 = p_cast84_reg_6278;

assign grp_fu_4663_p2 = ((icmp_ln145_reg_6387_pp5_iter9_reg[0:0] === 1'b1) ? output_l1_1_q1 : 32'd0);

assign grp_fu_4671_p1 = p_cast74_reg_6263;

assign grp_fu_4679_p1 = sext_ln139_reg_6283;

assign grp_fu_4687_p0 = grp_fu_4687_p00;

assign grp_fu_4687_p00 = select_ln201_1_fu_4246_p3;

assign grp_fu_4687_p2 = select_ln202_fu_4312_p3[8:0];

assign i_1_fu_3736_p2 = (i_reg_1563 + 16'd1);

assign i_cast_fu_3550_p1 = ap_phi_mux_i_phi_fu_1567_p4;

assign icmp_ln100_fu_2291_p2 = ((indvar_flatten105_reg_1475 == tmp1_reg_4812) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_2302_p2 = ((s_reg_1497 == RS_reg_4777) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_3239_p2 = ((indvar_flatten47_reg_1508 == tmp_2_reg_5115) ? 1'b1 : 1'b0);

assign icmp_ln123_1_fu_3250_p2 = ((indvar_flatten15_reg_1530 == mul152_reg_5018) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_1927_p2 = ((WH_reg_4718 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_3284_p2 = ((wi_1_reg_1541 == WH_reg_4718) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_3545_p2 = ((ap_phi_mux_i_phi_fu_1567_p4 == add_ln81_1_reg_5046) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_3787_p2 = ((i_reg_1563_pp5_iter8_reg != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln180_1_fu_3663_p2 = ((add_ln178_1_fu_3643_p2 < zext_ln81_reg_5026) ? 1'b1 : 1'b0);

assign icmp_ln180_2_fu_3688_p2 = ((sub250_fu_3606_p2 < zext_ln81_reg_5026) ? 1'b1 : 1'b0);

assign icmp_ln180_3_fu_3699_p2 = ((add_ln143_2_fu_3577_p2 < zext_ln81_reg_5026) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_3632_p2 = ((add_ln178_fu_3612_p2 < zext_ln81_reg_5026) ? 1'b1 : 1'b0);

assign icmp_ln201_fu_4224_p2 = ((indvar_flatten163_reg_1575 == mul_ln201_reg_6688) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_4235_p2 = ((indvar_flatten149_reg_1597 == bound20_reg_5121) ? 1'b1 : 1'b0);

assign icmp_ln203_1_fu_4290_p2 = ((wh_reg_1619 == mul152_reg_5018) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_4219_p2 = ((mul152_reg_5018 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_1691_p2 = ((k_reg_1365 == K_reg_4700) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_1747_p2 = ((k_1_reg_1376 == mul42_reg_4823) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_1795_p2 = ((k_2_reg_1387 == mul55_reg_4851) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_1932_p2 = ((indvar_flatten142_reg_1398 == bound110_reg_5126) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1943_p2 = ((co_reg_1420 == div68_cast_reg_5056) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_2074_p2 = ((ki_1_reg_1431 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_2228_p2 = ((indvar_flatten_reg_1442 == mul152_reg_5018) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_2239_p2 = ((wi_reg_1464 == WH_reg_4718) ? 1'b1 : 1'b0);

assign lshr_ln116_1_fu_2520_p4 = {{add_ln117_1_fu_2514_p2[10:2]}};

assign lshr_ln3_fu_2496_p4 = {{add_ln117_fu_2490_p2[10:2]}};

assign lshr_ln4_fu_3451_p4 = {{add_ln130_fu_3440_p2[10:2]}};

assign mul152_fu_1835_p0 = zext_ln57_1_reg_4761;

assign mul152_fu_1835_p1 = zext_ln57_1_reg_4761;

assign mul_ln100_fu_2333_p0 = mul_ln100_fu_2333_p00;

assign mul_ln100_fu_2333_p00 = select_ln100_1_fu_2321_p3;

assign mul_ln100_fu_2333_p1 = trunc_ln4_cast21_reg_5051;

assign mul_ln127_1_fu_3375_p0 = WH_cast_reg_5066;

assign mul_ln127_1_fu_3375_p1 = zext_ln123_1_fu_3371_p1;

assign mul_ln127_fu_3346_p0 = WH_cast_reg_5066;

assign mul_ln127_fu_3346_p1 = zext_ln123_fu_3342_p1;

assign mul_ln81_1_fu_1987_p0 = WH_cast_reg_5066;

assign mul_ln81_2_fu_1996_p0 = C_cast_reg_5081;

assign mul_ln81_2_fu_1996_p1 = mul_ln81_2_fu_1996_p10;

assign mul_ln81_2_fu_1996_p10 = p_mid_fu_1970_p3;

assign mul_ln81_3_fu_2011_p0 = C_cast_reg_5081;

assign mul_ln81_3_fu_2011_p1 = mul_ln81_3_fu_2011_p10;

assign mul_ln81_3_fu_2011_p10 = or_ln81_fu_2001_p2;

assign mul_ln81_4_fu_2026_p0 = C_cast_reg_5081;

assign mul_ln81_4_fu_2026_p1 = mul_ln81_4_fu_2026_p10;

assign mul_ln81_4_fu_2026_p10 = or_ln81_1_fu_2016_p2;

assign mul_ln81_5_fu_2041_p0 = C_cast_reg_5081;

assign mul_ln81_5_fu_2041_p1 = mul_ln81_5_fu_2041_p10;

assign mul_ln81_5_fu_2041_p10 = or_ln81_2_fu_2031_p2;

assign mul_ln81_fu_1982_p0 = WH_cast_reg_5066;

assign mul_ln81_fu_1982_p1 = mul_ln81_fu_1982_p10;

assign mul_ln81_fu_1982_p10 = select_ln81_1_fu_1962_p3;

assign newIndex122_cast_fu_2109_p1 = newIndex_fu_2099_p4;

assign newIndex_fu_2099_p4 = {{empty_44_fu_2094_p2[7:2]}};

assign or_ln123_fu_3304_p2 = (select_ln121_5_fu_3289_p3 | icmp_ln123_1_fu_3250_p2);

assign or_ln202_fu_4307_p2 = (select_ln201_3_fu_4295_p3 | icmp_ln202_reg_6707_pp6_iter1_reg);

assign or_ln81_1_fu_2016_p2 = (p_mid_fu_1970_p3 | 8'd2);

assign or_ln81_2_fu_2031_p2 = (p_mid_fu_1970_p3 | 8'd3);

assign or_ln81_fu_2001_p2 = (p_mid_fu_1970_p3 | 8'd1);

assign p_cast16_fu_2054_p1 = tmp_20_fu_2046_p3;

assign p_cast17_fu_2131_p1 = empty_47_fu_2126_p2;

assign p_cast18_fu_2122_p1 = empty_46_fu_2117_p2;

assign p_cast44_fu_3497_p1 = $signed(tmp_17_reg_6084);

assign p_cast52_fu_3500_p1 = $signed(tmp_13_reg_5978);

assign p_cast54_fu_3503_p1 = $signed(tmp_s_reg_5878);

assign p_cast58_fu_3506_p1 = $signed(tmp_6_reg_5778);

assign p_cast60_fu_3509_p1 = $signed(tmp_16_reg_6079);

assign p_cast62_fu_3512_p1 = $signed(tmp_12_reg_5973);

assign p_cast64_fu_3515_p1 = $signed(tmp_9_reg_5873);

assign p_cast66_fu_3518_p1 = $signed(tmp_5_reg_5773);

assign p_cast68_fu_3521_p1 = $signed(tmp_15_reg_6028);

assign p_cast70_fu_3524_p1 = $signed(tmp_11_reg_5928);

assign p_cast72_fu_3527_p1 = $signed(tmp_8_reg_5828);

assign p_cast74_fu_3530_p1 = $signed(tmp_4_reg_5728);

assign p_cast78_fu_3533_p1 = $signed(tmp_14_reg_6023);

assign p_cast81_fu_3536_p1 = $signed(tmp_10_reg_5923);

assign p_cast84_fu_3539_p1 = $signed(tmp_7_reg_5823);

assign p_mid131_fu_3220_p0 = trunc_ln3_cast48_reg_5039;

assign p_mid131_fu_3220_p1 = zext_ln100_1_reg_5497;

assign p_mid_fu_1970_p3 = {{select_ln81_1_fu_1962_p3}, {2'd0}};

assign select_ln100_1_fu_2321_p3 = ((icmp_ln102_fu_2302_p2[0:0] === 1'b1) ? add_ln100_17_fu_2315_p2 : r_reg_1486);

assign select_ln100_fu_2307_p3 = ((icmp_ln102_fu_2302_p2[0:0] === 1'b1) ? 8'd0 : s_reg_1497);

assign select_ln121_1_fu_3265_p3 = ((icmp_ln123_1_fu_3250_p2[0:0] === 1'b1) ? empty_52_fu_3261_p1 : empty_48_fu_3224_p1);

assign select_ln121_3_fu_3358_p3 = ((icmp_ln123_1_reg_6108[0:0] === 1'b1) ? 9'd0 : mul_ln127_fu_3346_p2);

assign select_ln121_4_fu_3412_p3 = ((icmp_ln123_1_reg_6108_pp4_iter3_reg[0:0] === 1'b1) ? add_ln127_1_reg_6178 : grp_fu_4493_p4);

assign select_ln121_5_fu_3289_p3 = ((icmp_ln123_1_fu_3250_p2[0:0] === 1'b1) ? icmp_ln123_reg_5131 : icmp_ln124_fu_3284_p2);

assign select_ln121_6_fu_3296_p3 = ((icmp_ln123_1_fu_3250_p2[0:0] === 1'b1) ? add_ln121_1_fu_3255_p2 : ci_reg_1519);

assign select_ln121_fu_3351_p3 = ((icmp_ln123_1_reg_6108[0:0] === 1'b1) ? 8'd0 : hi_1_reg_1552);

assign select_ln123_1_fu_3380_p3 = ((select_ln121_5_reg_6125[0:0] === 1'b1) ? mul_ln127_1_fu_3375_p2 : select_ln121_3_fu_3358_p3);

assign select_ln123_2_fu_3417_p3 = ((select_ln121_5_reg_6125_pp4_iter3_reg[0:0] === 1'b1) ? grp_fu_4502_p4 : select_ln121_4_fu_3412_p3);

assign select_ln123_3_fu_3387_p3 = ((select_ln121_5_reg_6125[0:0] === 1'b1) ? add_ln123_fu_3365_p2 : select_ln121_fu_3351_p3);

assign select_ln123_4_fu_3334_p3 = ((icmp_ln123_1_fu_3250_p2[0:0] === 1'b1) ? 16'd1 : add_ln123_3_fu_3328_p2);

assign select_ln123_fu_3310_p3 = ((or_ln123_fu_3304_p2[0:0] === 1'b1) ? 8'd0 : wi_1_reg_1541);

assign select_ln145_1_fu_4050_p3 = ((tmp_21_reg_6303_pp5_iter9_reg[0:0] === 1'b1) ? 8'd0 : data_l1_2_0_load_reg_6536);

assign select_ln145_2_fu_3986_p3 = ((tmp_22_reg_6315_pp5_iter9_reg[0:0] === 1'b1) ? 8'd0 : data_l1_3_0_q0);

assign select_ln145_fu_4117_p3 = ((icmp_ln145_reg_6387_pp5_iter9_reg[0:0] === 1'b1) ? data_l1_1_0_load_reg_6586 : 8'd0);

assign select_ln201_1_fu_4246_p3 = ((icmp_ln202_fu_4235_p2[0:0] === 1'b1) ? add_ln201_1_fu_4240_p2 : ap_phi_mux_k_3_phi_fu_1590_p4);

assign select_ln201_2_fu_4283_p3 = ((icmp_ln202_reg_6707_pp6_iter1_reg[0:0] === 1'b1) ? 2'd0 : trunc_ln204_fu_4279_p1);

assign select_ln201_3_fu_4295_p3 = ((icmp_ln202_reg_6707_pp6_iter1_reg[0:0] === 1'b1) ? icmp_ln203_reg_6693 : icmp_ln203_1_fu_4290_p2);

assign select_ln201_fu_4272_p3 = ((icmp_ln202_reg_6707_pp6_iter1_reg[0:0] === 1'b1) ? 3'd0 : ki_reg_1608);

assign select_ln202_1_fu_4324_p3 = ((select_ln201_3_fu_4295_p3[0:0] === 1'b1) ? trunc_ln204_1_fu_4320_p1 : select_ln201_2_fu_4283_p3);

assign select_ln202_2_fu_4332_p3 = ((select_ln201_3_fu_4295_p3[0:0] === 1'b1) ? add_ln202_fu_4301_p2 : select_ln201_fu_4272_p3);

assign select_ln202_3_fu_4264_p3 = ((icmp_ln202_fu_4235_p2[0:0] === 1'b1) ? 19'd1 : add_ln202_1_fu_4258_p2);

assign select_ln202_fu_4312_p3 = ((or_ln202_fu_4307_p2[0:0] === 1'b1) ? 16'd0 : wh_reg_1619);

assign select_ln81_1_fu_1962_p3 = ((icmp_ln82_fu_1943_p2[0:0] === 1'b1) ? add_ln81_3_fu_1956_p2 : ko_reg_1409);

assign select_ln81_fu_1948_p3 = ((icmp_ln82_fu_1943_p2[0:0] === 1'b1) ? 6'd0 : co_reg_1420);

assign select_ln89_1_fu_2258_p3 = ((icmp_ln90_fu_2239_p2[0:0] === 1'b1) ? add_ln89_1_fu_2252_p2 : ap_phi_mux_hi_phi_fu_1457_p4);

assign select_ln89_fu_2244_p3 = ((icmp_ln90_fu_2239_p2[0:0] === 1'b1) ? 8'd0 : wi_reg_1464);

assign sext_ln139_fu_3542_p1 = $signed(tmp_3_reg_5723);

assign sext_ln143_1_fu_3560_p1 = add_ln143_1_fu_3554_p2;

assign sext_ln143_2_fu_3583_p1 = add_ln143_2_fu_3577_p2;

assign sext_ln143_fu_3715_p1 = $signed(add_ln143_fu_3710_p2);

assign sub250_fu_3606_p2 = ($signed(17'd131068) + $signed(i_cast_fu_3550_p1));

assign tmp1_fu_1739_p0 = zext_ln65_reg_4783;

assign tmp1_fu_1739_p1 = zext_ln65_reg_4783;

assign tmp2_fu_1787_p0 = zext_ln55_1_reg_4745;

assign tmp2_fu_1787_p1 = zext_ln61_1_reg_4772;

assign tmp5_cast_fu_1895_p0 = trunc_ln3_cast48_fu_1847_p1;

assign tmp5_cast_fu_1895_p1 = trunc_ln3_cast48_fu_1847_p1;

assign tmp_10_fu_3007_p5 = add_ln116_8_fu_2999_p2;

assign tmp_11_fu_3029_p5 = add_ln116_9_fu_3021_p2;

assign tmp_12_fu_3065_p5 = add_ln116_10_fu_3057_p2;

assign tmp_13_fu_3087_p5 = add_ln116_11_fu_3079_p2;

assign tmp_14_fu_3123_p5 = add_ln116_12_fu_3115_p2;

assign tmp_15_fu_3145_p5 = add_ln116_13_fu_3137_p2;

assign tmp_16_fu_3184_p5 = add_ln116_14_fu_3176_p2;

assign tmp_17_fu_3206_p5 = add_ln116_15_fu_3198_p2;

assign tmp_18_fu_3228_p3 = {{select_ln81_reg_5144}, {empty_48_fu_3224_p1}};

assign tmp_19_fu_3472_p5 = add_ln129_reg_6183;

assign tmp_19_mid1_fu_3273_p3 = {{select_ln81_reg_5144}, {empty_52_fu_3261_p1}};

assign tmp_1_fu_2210_p5 = empty_43_reg_5251;

assign tmp_20_fu_2046_p3 = {{select_ln81_fu_1948_p3}, {2'd0}};

assign tmp_22_fu_3592_p3 = add_ln143_2_fu_3577_p2[32'd16];

assign tmp_23_fu_3618_p3 = add_ln178_fu_3612_p2[32'd16];

assign tmp_24_fu_3649_p3 = add_ln178_1_fu_3643_p2[32'd16];

assign tmp_25_fu_3674_p3 = sub250_fu_3606_p2[32'd16];

assign tmp_2_fu_1901_p3 = {{mul152_fu_1835_p2}, {2'd0}};

assign tmp_3_fu_2775_p5 = add_ln116_fu_2767_p2;

assign tmp_4_fu_2797_p5 = add_ln116_1_fu_2789_p2;

assign tmp_5_fu_2833_p5 = add_ln116_2_fu_2825_p2;

assign tmp_6_fu_2855_p5 = add_ln116_3_fu_2847_p2;

assign tmp_7_fu_2891_p5 = add_ln116_4_fu_2883_p2;

assign tmp_8_fu_2913_p5 = add_ln116_5_fu_2905_p2;

assign tmp_9_fu_2949_p5 = add_ln116_6_fu_2941_p2;

assign tmp_fu_1731_p0 = zext_ln55_1_reg_4745;

assign tmp_fu_1731_p1 = zext_ln53_reg_4735;

assign tmp_s_fu_2971_p5 = add_ln116_7_fu_2963_p2;

assign trunc_ln100_10_fu_2433_p1 = add_ln100_11_fu_2428_p2[1:0];

assign trunc_ln100_11_fu_2442_p1 = add_ln100_12_fu_2437_p2[1:0];

assign trunc_ln100_12_fu_2451_p1 = add_ln100_13_fu_2446_p2[1:0];

assign trunc_ln100_13_fu_2460_p1 = add_ln100_14_fu_2455_p2[1:0];

assign trunc_ln100_14_fu_2469_p1 = add_ln100_15_fu_2464_p2[1:0];

assign trunc_ln100_15_fu_2478_p1 = add_ln100_16_fu_2473_p2[1:0];

assign trunc_ln100_1_fu_2352_p1 = add_ln100_2_fu_2347_p2[1:0];

assign trunc_ln100_2_fu_2361_p1 = add_ln100_3_fu_2356_p2[1:0];

assign trunc_ln100_3_fu_2370_p1 = add_ln100_4_fu_2365_p2[1:0];

assign trunc_ln100_4_fu_2379_p1 = add_ln100_5_fu_2374_p2[1:0];

assign trunc_ln100_5_fu_2388_p1 = add_ln100_6_fu_2383_p2[1:0];

assign trunc_ln100_6_fu_2397_p1 = add_ln100_7_fu_2392_p2[1:0];

assign trunc_ln100_7_fu_2406_p1 = add_ln100_8_fu_2401_p2[1:0];

assign trunc_ln100_8_fu_2415_p1 = add_ln100_9_fu_2410_p2[1:0];

assign trunc_ln100_9_fu_2424_p1 = add_ln100_10_fu_2419_p2[1:0];

assign trunc_ln100_fu_2343_p1 = add_ln100_1_fu_2338_p2[1:0];

assign trunc_ln117_fu_2486_p1 = select_ln100_fu_2307_p3[1:0];

assign trunc_ln123_fu_3428_p1 = select_ln123_2_fu_3417_p3[1:0];

assign trunc_ln130_fu_3318_p1 = select_ln123_fu_3310_p3[1:0];

assign trunc_ln143_1_fu_3793_p1 = grp_fu_3564_p2[8:0];

assign trunc_ln143_2_fu_3797_p1 = grp_fu_3587_p2[8:0];

assign trunc_ln143_fu_3832_p1 = grp_fu_3719_p2[8:0];

assign trunc_ln144_1_fu_3880_p1 = grp_fu_3732_p2[7:0];

assign trunc_ln144_2_fu_3888_p1 = wi_4_reg_6428[7:0];

assign trunc_ln144_fu_3931_p1 = wi_2_reg_6458[7:0];

assign trunc_ln202_fu_1843_p1 = mul152_fu_1835_p2[8:0];

assign trunc_ln204_1_fu_4320_p1 = add_ln202_fu_4301_p2[1:0];

assign trunc_ln204_fu_4279_p1 = ki_reg_1608[1:0];

assign trunc_ln3_cast48_fu_1847_p1 = WH_in_reg_4728;

assign trunc_ln4_cast21_fu_1865_p1 = RS_reg_4777;

assign trunc_ln708_1_fu_1772_p1 = weight_in_V_dout[7:0];

assign trunc_ln708_2_fu_1820_p1 = data_in_V_dout[7:0];

assign trunc_ln708_fu_1716_p1 = bias_in_V_dout[7:0];

assign trunc_ln70_fu_1702_p1 = k_reg_1365[1:0];

assign trunc_ln74_fu_1758_p1 = k_1_reg_1376[1:0];

assign trunc_ln78_fu_1806_p1 = k_2_reg_1387[1:0];

assign wi_4_cast56_fu_3394_p1 = select_ln123_reg_6137;

assign wi_4_cast_fu_3437_p1 = select_ln123_reg_6137_pp4_iter3_reg;

assign wi_cast_fu_2276_p1 = select_ln89_reg_5373_pp3_iter1_reg;

assign xor_ln145_fu_3600_p2 = (tmp_22_fu_3592_p3 ^ 1'd1);

assign xor_ln178_1_fu_3657_p2 = (tmp_24_fu_3649_p3 ^ 1'd1);

assign xor_ln178_2_fu_3682_p2 = (tmp_25_fu_3674_p3 ^ 1'd1);

assign xor_ln178_fu_3626_p2 = (tmp_23_fu_3618_p3 ^ 1'd1);

assign zext_ln100_1_fu_2329_p1 = select_ln100_1_fu_2321_p3;

assign zext_ln100_fu_3173_p1 = select_ln100_1_reg_5491;

assign zext_ln102_fu_2482_p1 = select_ln100_fu_2307_p3;

assign zext_ln116_16_fu_2506_p1 = lshr_ln3_fu_2496_p4;

assign zext_ln116_17_fu_2530_p1 = lshr_ln116_1_fu_2520_p4;

assign zext_ln116_18_fu_2811_p1 = lshr_ln116_2_reg_5648;

assign zext_ln116_19_fu_2818_p1 = lshr_ln116_3_reg_5653;

assign zext_ln116_20_fu_2869_p1 = lshr_ln116_4_reg_5658;

assign zext_ln116_21_fu_2876_p1 = lshr_ln116_5_reg_5663;

assign zext_ln116_22_fu_2927_p1 = lshr_ln116_6_reg_5668;

assign zext_ln116_23_fu_2934_p1 = lshr_ln116_7_reg_5673;

assign zext_ln116_24_fu_2985_p1 = lshr_ln116_8_reg_5678;

assign zext_ln116_25_fu_2992_p1 = lshr_ln116_9_reg_5683;

assign zext_ln116_26_fu_3043_p1 = lshr_ln116_s_reg_5688;

assign zext_ln116_27_fu_3050_p1 = lshr_ln116_10_reg_5693;

assign zext_ln116_28_fu_3101_p1 = lshr_ln116_11_reg_5698;

assign zext_ln116_29_fu_3108_p1 = lshr_ln116_12_reg_5703;

assign zext_ln116_30_fu_3159_p1 = lshr_ln116_13_reg_5708;

assign zext_ln116_31_fu_3166_p1 = lshr_ln116_14_reg_5713;

assign zext_ln123_1_fu_3371_p1 = add_ln123_fu_3365_p2;

assign zext_ln123_fu_3342_p1 = hi_1_reg_1552;

assign zext_ln128_fu_3490_p1 = add_ln128_reg_6163_pp4_iter4_reg;

assign zext_ln129_1_fu_3461_p1 = lshr_ln4_fu_3451_p4;

assign zext_ln144_1_fu_3884_p1 = trunc_ln144_1_fu_3880_p1;

assign zext_ln144_2_fu_3891_p1 = trunc_ln144_2_fu_3888_p1;

assign zext_ln144_fu_3934_p1 = trunc_ln144_fu_3931_p1;

assign zext_ln146_1_fu_3982_p1 = $unsigned(grp_fu_4583_p3);

assign zext_ln146_2_fu_3938_p1 = $unsigned(grp_fu_4542_p3);

assign zext_ln146_3_fu_3942_p1 = $unsigned(grp_fu_4550_p3);

assign zext_ln146_fu_4045_p1 = i_reg_1563_pp5_iter9_reg;

assign zext_ln167_1_fu_4022_p1 = $unsigned(add_ln169_3_reg_6521);

assign zext_ln167_2_fu_4141_p1 = $unsigned(add_ln169_5_reg_6576);

assign zext_ln167_3_fu_4198_p1 = add_ln169_6_reg_6658;

assign zext_ln167_fu_3957_p1 = $unsigned(grp_fu_4566_p4);

assign zext_ln186_10_fu_4094_p1 = grp_fu_1638_p2;

assign zext_ln186_11_fu_4178_p1 = grp_fu_1642_p2;

assign zext_ln186_12_fu_3961_p1 = grp_fu_1630_p2;

assign zext_ln186_13_fu_4026_p1 = grp_fu_1634_p2;

assign zext_ln186_14_fu_4145_p1 = grp_fu_1638_p2;

assign zext_ln186_15_fu_4202_p1 = add_ln187_15_reg_6668;

assign zext_ln186_1_fu_3842_p1 = grp_fu_1634_p2;

assign zext_ln186_2_fu_3999_p1 = grp_fu_1638_p2;

assign zext_ln186_3_fu_4129_p1 = grp_fu_1642_p2;

assign zext_ln186_4_fu_3851_p1 = grp_fu_1630_p2;

assign zext_ln186_5_fu_3895_p1 = grp_fu_1634_p2;

assign zext_ln186_6_fu_4056_p1 = grp_fu_1638_p2;

assign zext_ln186_7_fu_4159_p1 = grp_fu_1642_p2;

assign zext_ln186_8_fu_3907_p1 = grp_fu_1630_p2;

assign zext_ln186_9_fu_3952_p1 = grp_fu_1634_p2;

assign zext_ln186_fu_3808_p1 = grp_fu_1630_p2;

assign zext_ln204_fu_4350_p1 = $unsigned(grp_fu_4687_p3);

assign zext_ln53_fu_1662_p1 = K_reg_4700;

assign zext_ln55_1_fu_1668_p1 = C_reg_4711;

assign zext_ln55_fu_1665_p1 = C_reg_4711;

assign zext_ln57_1_fu_1674_p1 = WH_reg_4718;

assign zext_ln57_fu_1671_p1 = WH_reg_4718;

assign zext_ln61_1_fu_1680_p1 = WH_in_reg_4728;

assign zext_ln61_fu_1677_p1 = WH_in_reg_4728;

assign zext_ln65_fu_1687_p1 = RS_fu_1683_p1;

assign zext_ln70_fu_1724_p1 = lshr_ln_reg_4802;

assign zext_ln74_fu_1780_p1 = lshr_ln1_reg_4841;

assign zext_ln78_fu_1828_p1 = lshr_ln2_reg_4869;

assign zext_ln81_1_fu_1855_p1 = add_ln81_fu_1850_p2;

assign zext_ln81_fu_1839_p1 = mul152_fu_1835_p2;

assign zext_ln88_1_fu_2086_p1 = ki_1_reg_1431;

assign zext_ln88_fu_2064_p1 = empty_57_fu_2058_p2;

assign zext_ln93_fu_2284_p1 = grp_fu_4472_p3;

always @ (posedge ap_clk) begin
    zext_ln53_reg_4735[15:8] <= 8'b00000000;
    zext_ln55_reg_4740[8] <= 1'b0;
    zext_ln55_1_reg_4745[15:8] <= 8'b00000000;
    zext_ln57_reg_4751[31:8] <= 24'b000000000000000000000000;
    zext_ln57_1_reg_4761[15:8] <= 8'b00000000;
    zext_ln61_reg_4767[23:8] <= 16'b0000000000000000;
    zext_ln61_1_reg_4772[15:8] <= 8'b00000000;
    zext_ln65_reg_4783[15:8] <= 8'b00000000;
    zext_ln81_reg_5026[16] <= 1'b0;
    trunc_ln3_cast48_reg_5039[10:8] <= 3'b000;
    trunc_ln4_cast21_reg_5051[10:8] <= 3'b000;
    WH_cast_reg_5066[8] <= 1'b0;
    C_cast_reg_5081[10:8] <= 3'b000;
    tmp_2_reg_5115[1:0] <= 2'b00;
    bound20_reg_5121[1:0] <= 2'b00;
    bound20_reg_5121[18] <= 1'b0;
    p_mid_reg_5156[1:0] <= 2'b00;
    tmp_20_reg_5211[1:0] <= 2'b00;
    p_cast16_reg_5217[1:0] <= 2'b00;
    p_cast16_reg_5217[10:8] <= 3'b000;
    zext_ln88_reg_5225[1:0] <= 2'b11;
    zext_ln88_reg_5225[10:8] <= 3'b000;
    zext_ln100_1_reg_5497[10:8] <= 3'b000;
    zext_ln102_reg_5582[10:8] <= 3'b000;
    zext_ln100_reg_6073[8] <= 1'b0;
    i_cast_reg_6292[16] <= 1'b0;
end

endmodule //Conv_sysarr_dbbuf
