

================================================================
== Vitis HLS Report for 'adder_tree_large'
================================================================
* Date:           Tue Mar  8 19:41:29 2022

* Version:        2020.1 (Build 2902540 on Wed May 27 20:16:15 MDT 2020)
* Project:        AdderTree_example
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.828 ns |   2.70 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       34|       34| 0.340 us | 0.340 us |   35|   35|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_15_1  |       32|       32|         2|          1|          1|    32|    yes   |
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %c_7"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %c_6"   --->   Operation 6 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %c_5"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %c_4"   --->   Operation 8 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %c_3"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %c_2"   --->   Operation 10 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %c_1"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %c_0"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %b_7"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %b_6"   --->   Operation 14 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %b_5"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %b_4"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %b_3"   --->   Operation 17 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %b_2"   --->   Operation 18 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %b_1"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %b_0"   --->   Operation 20 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %a_7"   --->   Operation 21 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %a_6"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %a_5"   --->   Operation 23 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %a_4"   --->   Operation 24 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %a_3"   --->   Operation 25 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %a_2"   --->   Operation 26 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %a_1"   --->   Operation 27 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %a_0"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_5"   --->   Operation 29 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %n"   --->   Operation 30 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %n, void @empty_1, i32, i32, void @empty_0, i32, i32, void @empty_2, void @empty_3, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %n, void @empty_4, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32, void @empty_1, i32, i32, void @empty_0, i32, i32, void @empty_2, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%n_read = read i32 @_ssdm_op_Read.s_axilite.i32, i32 %n" [AdderTree_example/example.cpp:7]   --->   Operation 34 'read' 'n_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 56 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (0.60ns)   --->   "%br_ln15 = br void %bb" [AdderTree_example/example.cpp:15]   --->   Operation 35 'br' 'br_ln15' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 1.15>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%it = phi i7 %add_ln15, void %bb0, i7, void %.lr.ph" [AdderTree_example/example.cpp:15]   --->   Operation 36 'phi' 'it' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln15_1 = zext i7 %it" [AdderTree_example/example.cpp:15]   --->   Operation 37 'zext' 'zext_ln15_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.85ns)   --->   "%icmp_ln15 = icmp_eq  i32 %zext_ln15_1, i32 %n_read" [AdderTree_example/example.cpp:15]   --->   Operation 38 'icmp' 'icmp_ln15' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.70ns)   --->   "%add_ln15 = add i7 %it, i7" [AdderTree_example/example.cpp:15]   --->   Operation 39 'add' 'add_ln15' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln15 = br i1 %icmp_ln15, void %bb0, void %._crit_edge.loopexit" [AdderTree_example/example.cpp:15]   --->   Operation 40 'br' 'br_ln15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i7 %it" [AdderTree_example/example.cpp:15]   --->   Operation 41 'zext' 'zext_ln15' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%rbegin = specregionbegin i32 @_ssdm_op_SpecRegionBegin, void @empty" [AdderTree_example/example.cpp:15]   --->   Operation 42 'specregionbegin' 'rbegin' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%a_0_addr = getelementptr i32 %a_0, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 43 'getelementptr' 'a_0_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (1.15ns)   --->   "%a_0_load = load i6 %a_0_addr" [AdderTree_example/example.cpp:22]   --->   Operation 44 'load' 'a_0_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%b_0_addr = getelementptr i32 %b_0, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 45 'getelementptr' 'b_0_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 46 [2/2] (1.15ns)   --->   "%b_0_load = load i6 %b_0_addr" [AdderTree_example/example.cpp:22]   --->   Operation 46 'load' 'b_0_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%a_1_addr = getelementptr i32 %a_1, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 47 'getelementptr' 'a_1_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 48 [2/2] (1.15ns)   --->   "%a_1_load = load i6 %a_1_addr" [AdderTree_example/example.cpp:22]   --->   Operation 48 'load' 'a_1_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%b_1_addr = getelementptr i32 %b_1, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 49 'getelementptr' 'b_1_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 50 [2/2] (1.15ns)   --->   "%b_1_load = load i6 %b_1_addr" [AdderTree_example/example.cpp:22]   --->   Operation 50 'load' 'b_1_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%a_2_addr = getelementptr i32 %a_2, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 51 'getelementptr' 'a_2_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 52 [2/2] (1.15ns)   --->   "%a_2_load = load i6 %a_2_addr" [AdderTree_example/example.cpp:22]   --->   Operation 52 'load' 'a_2_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%b_2_addr = getelementptr i32 %b_2, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 53 'getelementptr' 'b_2_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 54 [2/2] (1.15ns)   --->   "%b_2_load = load i6 %b_2_addr" [AdderTree_example/example.cpp:22]   --->   Operation 54 'load' 'b_2_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%a_3_addr = getelementptr i32 %a_3, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 55 'getelementptr' 'a_3_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 56 [2/2] (1.15ns)   --->   "%a_3_load = load i6 %a_3_addr" [AdderTree_example/example.cpp:22]   --->   Operation 56 'load' 'a_3_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%b_3_addr = getelementptr i32 %b_3, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 57 'getelementptr' 'b_3_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 58 [2/2] (1.15ns)   --->   "%b_3_load = load i6 %b_3_addr" [AdderTree_example/example.cpp:22]   --->   Operation 58 'load' 'b_3_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%a_4_addr = getelementptr i32 %a_4, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 59 'getelementptr' 'a_4_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 60 [2/2] (1.15ns)   --->   "%a_4_load = load i6 %a_4_addr" [AdderTree_example/example.cpp:22]   --->   Operation 60 'load' 'a_4_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%b_4_addr = getelementptr i32 %b_4, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 61 'getelementptr' 'b_4_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 62 [2/2] (1.15ns)   --->   "%b_4_load = load i6 %b_4_addr" [AdderTree_example/example.cpp:22]   --->   Operation 62 'load' 'b_4_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%a_5_addr = getelementptr i32 %a_5, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 63 'getelementptr' 'a_5_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 64 [2/2] (1.15ns)   --->   "%a_5_load = load i6 %a_5_addr" [AdderTree_example/example.cpp:22]   --->   Operation 64 'load' 'a_5_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%b_5_addr = getelementptr i32 %b_5, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 65 'getelementptr' 'b_5_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 66 [2/2] (1.15ns)   --->   "%b_5_load = load i6 %b_5_addr" [AdderTree_example/example.cpp:22]   --->   Operation 66 'load' 'b_5_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%a_6_addr = getelementptr i32 %a_6, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 67 'getelementptr' 'a_6_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 68 [2/2] (1.15ns)   --->   "%a_6_load = load i6 %a_6_addr" [AdderTree_example/example.cpp:22]   --->   Operation 68 'load' 'a_6_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%b_6_addr = getelementptr i32 %b_6, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 69 'getelementptr' 'b_6_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 70 [2/2] (1.15ns)   --->   "%b_6_load = load i6 %b_6_addr" [AdderTree_example/example.cpp:22]   --->   Operation 70 'load' 'b_6_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%a_7_addr = getelementptr i32 %a_7, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 71 'getelementptr' 'a_7_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 72 [2/2] (1.15ns)   --->   "%a_7_load = load i6 %a_7_addr" [AdderTree_example/example.cpp:22]   --->   Operation 72 'load' 'a_7_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%b_7_addr = getelementptr i32 %b_7, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:22]   --->   Operation 73 'getelementptr' 'b_7_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 74 [2/2] (1.15ns)   --->   "%b_7_load = load i6 %b_7_addr" [AdderTree_example/example.cpp:22]   --->   Operation 74 'load' 'b_7_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%speclatency_ln41 = speclatency void @_ssdm_op_SpecLatency, i64, i64, void @empty_0" [AdderTree_example/example.cpp:41]   --->   Operation 75 'speclatency' 'speclatency_ln41' <Predicate = (!icmp_ln15)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.82>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%specpipeline_ln12 = specpipeline void @_ssdm_op_SpecPipeline, i32, i32, i32, i32, void @empty_0" [AdderTree_example/example.cpp:12]   --->   Operation 76 'specpipeline' 'specpipeline_ln12' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%speclooptripcount_ln12 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64, i64, i64" [AdderTree_example/example.cpp:12]   --->   Operation 77 'speclooptripcount' 'speclooptripcount_ln12' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%specloopname_ln12 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [AdderTree_example/example.cpp:12]   --->   Operation 78 'specloopname' 'specloopname_ln12' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 79 [1/2] (1.15ns)   --->   "%a_0_load = load i6 %a_0_addr" [AdderTree_example/example.cpp:22]   --->   Operation 79 'load' 'a_0_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 80 [1/2] (1.15ns)   --->   "%b_0_load = load i6 %b_0_addr" [AdderTree_example/example.cpp:22]   --->   Operation 80 'load' 'b_0_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 81 [1/1] (3.17ns)   --->   "%mul_ln22 = mul i32 %b_0_load, i32 %a_0_load" [AdderTree_example/example.cpp:22]   --->   Operation 81 'mul' 'mul_ln22' <Predicate = (!icmp_ln15)> <Delay = 3.17> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 82 [1/2] (1.15ns)   --->   "%a_1_load = load i6 %a_1_addr" [AdderTree_example/example.cpp:22]   --->   Operation 82 'load' 'a_1_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 83 [1/2] (1.15ns)   --->   "%b_1_load = load i6 %b_1_addr" [AdderTree_example/example.cpp:22]   --->   Operation 83 'load' 'b_1_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 84 [1/1] (3.17ns)   --->   "%mul_ln22_1 = mul i32 %b_1_load, i32 %a_1_load" [AdderTree_example/example.cpp:22]   --->   Operation 84 'mul' 'mul_ln22_1' <Predicate = (!icmp_ln15)> <Delay = 3.17> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/2] (1.15ns)   --->   "%a_2_load = load i6 %a_2_addr" [AdderTree_example/example.cpp:22]   --->   Operation 85 'load' 'a_2_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 86 [1/2] (1.15ns)   --->   "%b_2_load = load i6 %b_2_addr" [AdderTree_example/example.cpp:22]   --->   Operation 86 'load' 'b_2_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 87 [1/1] (3.17ns)   --->   "%mul_ln22_2 = mul i32 %b_2_load, i32 %a_2_load" [AdderTree_example/example.cpp:22]   --->   Operation 87 'mul' 'mul_ln22_2' <Predicate = (!icmp_ln15)> <Delay = 3.17> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/2] (1.15ns)   --->   "%a_3_load = load i6 %a_3_addr" [AdderTree_example/example.cpp:22]   --->   Operation 88 'load' 'a_3_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 89 [1/2] (1.15ns)   --->   "%b_3_load = load i6 %b_3_addr" [AdderTree_example/example.cpp:22]   --->   Operation 89 'load' 'b_3_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 90 [1/1] (3.17ns)   --->   "%mul_ln22_3 = mul i32 %b_3_load, i32 %a_3_load" [AdderTree_example/example.cpp:22]   --->   Operation 90 'mul' 'mul_ln22_3' <Predicate = (!icmp_ln15)> <Delay = 3.17> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/2] (1.15ns)   --->   "%a_4_load = load i6 %a_4_addr" [AdderTree_example/example.cpp:22]   --->   Operation 91 'load' 'a_4_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 92 [1/2] (1.15ns)   --->   "%b_4_load = load i6 %b_4_addr" [AdderTree_example/example.cpp:22]   --->   Operation 92 'load' 'b_4_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 93 [1/1] (3.17ns)   --->   "%mul_ln22_4 = mul i32 %b_4_load, i32 %a_4_load" [AdderTree_example/example.cpp:22]   --->   Operation 93 'mul' 'mul_ln22_4' <Predicate = (!icmp_ln15)> <Delay = 3.17> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/2] (1.15ns)   --->   "%a_5_load = load i6 %a_5_addr" [AdderTree_example/example.cpp:22]   --->   Operation 94 'load' 'a_5_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 95 [1/2] (1.15ns)   --->   "%b_5_load = load i6 %b_5_addr" [AdderTree_example/example.cpp:22]   --->   Operation 95 'load' 'b_5_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 96 [1/1] (3.17ns)   --->   "%mul_ln22_5 = mul i32 %b_5_load, i32 %a_5_load" [AdderTree_example/example.cpp:22]   --->   Operation 96 'mul' 'mul_ln22_5' <Predicate = (!icmp_ln15)> <Delay = 3.17> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/2] (1.15ns)   --->   "%a_6_load = load i6 %a_6_addr" [AdderTree_example/example.cpp:22]   --->   Operation 97 'load' 'a_6_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 98 [1/2] (1.15ns)   --->   "%b_6_load = load i6 %b_6_addr" [AdderTree_example/example.cpp:22]   --->   Operation 98 'load' 'b_6_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 99 [1/1] (3.17ns)   --->   "%mul_ln22_6 = mul i32 %b_6_load, i32 %a_6_load" [AdderTree_example/example.cpp:22]   --->   Operation 99 'mul' 'mul_ln22_6' <Predicate = (!icmp_ln15)> <Delay = 3.17> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/2] (1.15ns)   --->   "%a_7_load = load i6 %a_7_addr" [AdderTree_example/example.cpp:22]   --->   Operation 100 'load' 'a_7_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 101 [1/2] (1.15ns)   --->   "%b_7_load = load i6 %b_7_addr" [AdderTree_example/example.cpp:22]   --->   Operation 101 'load' 'b_7_load' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 102 [1/1] (3.17ns)   --->   "%mul_ln22_7 = mul i32 %b_7_load, i32 %a_7_load" [AdderTree_example/example.cpp:22]   --->   Operation 102 'mul' 'mul_ln22_7' <Predicate = (!icmp_ln15)> <Delay = 3.17> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (0.88ns)   --->   "%add_ln29 = add i32 %mul_ln22_1, i32 %mul_ln22" [AdderTree_example/example.cpp:29]   --->   Operation 103 'add' 'add_ln29' <Predicate = (!icmp_ln15)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 104 [1/1] (0.88ns)   --->   "%add_ln29_1 = add i32 %mul_ln22_2, i32 %mul_ln22_3" [AdderTree_example/example.cpp:29]   --->   Operation 104 'add' 'add_ln29_1' <Predicate = (!icmp_ln15)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 105 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln29_2 = add i32 %add_ln29_1, i32 %add_ln29" [AdderTree_example/example.cpp:29]   --->   Operation 105 'add' 'add_ln29_2' <Predicate = (!icmp_ln15)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 106 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln29_3 = add i32 %mul_ln22_4, i32 %mul_ln22_5" [AdderTree_example/example.cpp:29]   --->   Operation 106 'add' 'add_ln29_3' <Predicate = (!icmp_ln15)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 107 [1/1] (0.88ns)   --->   "%add_ln29_4 = add i32 %mul_ln22_6, i32 %mul_ln22_7" [AdderTree_example/example.cpp:29]   --->   Operation 107 'add' 'add_ln29_4' <Predicate = (!icmp_ln15)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 108 [1/1] (0.73ns) (root node of TernaryAdder)   --->   "%add_ln29_5 = add i32 %add_ln29_4, i32 %add_ln29_3" [AdderTree_example/example.cpp:29]   --->   Operation 108 'add' 'add_ln29_5' <Predicate = (!icmp_ln15)> <Delay = 0.73> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 109 [1/1] (0.73ns) (root node of TernaryAdder)   --->   "%add_ln29_6 = add i32 %add_ln29_5, i32 %add_ln29_2" [AdderTree_example/example.cpp:29]   --->   Operation 109 'add' 'add_ln29_6' <Predicate = (!icmp_ln15)> <Delay = 0.73> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%c_0_addr = getelementptr i32 %c_0, i64, i64 %zext_ln15" [AdderTree_example/example.cpp:29]   --->   Operation 110 'getelementptr' 'c_0_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (1.15ns)   --->   "%store_ln29 = store i32 %add_ln29_6, i6 %c_0_addr" [AdderTree_example/example.cpp:29]   --->   Operation 111 'store' 'store_ln29' <Predicate = (!icmp_ln15)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%rend = specregionend i32 @_ssdm_op_SpecRegionEnd, void @empty, i32 %rbegin" [AdderTree_example/example.cpp:41]   --->   Operation 112 'specregionend' 'rend' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (0.00ns)   --->   "%br_ln0 = br void %bb"   --->   Operation 113 'br' 'br_ln0' <Predicate = (!icmp_ln15)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%ret_ln42 = ret" [AdderTree_example/example.cpp:42]   --->   Operation 114 'ret' 'ret_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'n' (AdderTree_example/example.cpp:7) [55]  (1 ns)

 <State 2>: 1.16ns
The critical path consists of the following:
	'phi' operation ('it', AdderTree_example/example.cpp:15) with incoming values : ('add_ln15', AdderTree_example/example.cpp:15) [58]  (0 ns)
	'getelementptr' operation ('a_0_addr', AdderTree_example/example.cpp:22) [69]  (0 ns)
	'load' operation ('a_0_load', AdderTree_example/example.cpp:22) on array 'a_0' [70]  (1.16 ns)

 <State 3>: 7.83ns
The critical path consists of the following:
	'load' operation ('a_6_load', AdderTree_example/example.cpp:22) on array 'a_6' [100]  (1.16 ns)
	'mul' operation ('mul_ln22_6', AdderTree_example/example.cpp:22) [103]  (3.17 ns)
	'add' operation ('add_ln29_4', AdderTree_example/example.cpp:29) [113]  (0.88 ns)
	'add' operation ('add_ln29_5', AdderTree_example/example.cpp:29) [114]  (0.731 ns)
	'add' operation ('add_ln29_6', AdderTree_example/example.cpp:29) [115]  (0.731 ns)
	'store' operation ('store_ln29', AdderTree_example/example.cpp:29) of variable 'add_ln29_6', AdderTree_example/example.cpp:29 on array 'c_0' [117]  (1.16 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
